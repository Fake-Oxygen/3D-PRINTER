ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32l4xx_hal_pwr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_PWR_DeInit,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_PWR_DeInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_PWR_DeInit:
  27              	.LFB321:
  28              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @file    stm32l4xx_hal_pwr.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief   PWR HAL module driver.
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *          functionalities of the Power Controller (PWR) peripheral:
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           + Initialization/de-initialization functions
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           + Peripheral Control functions
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   ******************************************************************************
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @attention
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * Copyright (c) 2019 STMicroelectronics.
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * All rights reserved.
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * This software is licensed under terms that can be found in the LICENSE file
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * in the root directory of this software component.
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   ******************************************************************************
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /* Includes ------------------------------------------------------------------*/
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** #include "stm32l4xx_hal.h"
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /** @addtogroup STM32L4xx_HAL_Driver
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @{
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 2


  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /** @defgroup PWR PWR
  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief PWR HAL module driver
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @{
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** #ifdef HAL_PWR_MODULE_ENABLED
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /* Private typedef -----------------------------------------------------------*/
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /* Private define ------------------------------------------------------------*/
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /** @defgroup PWR_Private_Defines PWR Private Defines
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @{
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /** @defgroup PWR_PVD_Mode_Mask PWR PVD Mode Mask
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @{
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** #define PVD_MODE_IT               ((uint32_t)0x00010000)  /*!< Mask for interruption yielded by PVD
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** #define PVD_MODE_EVT              ((uint32_t)0x00020000)  /*!< Mask for event yielded by PVD thresh
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** #define PVD_RISING_EDGE           ((uint32_t)0x00000001)  /*!< Mask for rising edge set as PVD trig
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** #define PVD_FALLING_EDGE          ((uint32_t)0x00000002)  /*!< Mask for falling edge set as PVD tri
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @}
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @}
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /* Private macro -------------------------------------------------------------*/
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /* Private variables ---------------------------------------------------------*/
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /* Private function prototypes -----------------------------------------------*/
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /* Exported functions --------------------------------------------------------*/
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions PWR Exported Functions
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @{
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group1 Initialization and de-initialization functions
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *  @brief    Initialization and de-initialization functions
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** @verbatim
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****  ===============================================================================
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****               ##### Initialization and de-initialization functions #####
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****  ===============================================================================
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     [..]
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** @endverbatim
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @{
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Deinitialize the HAL PWR peripheral registers to their default reset values.
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_DeInit(void)
  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 3


  29              		.loc 1 87 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   __HAL_RCC_PWR_FORCE_RESET();
  39              		.loc 1 88 3
  40 0004 084B     		ldr	r3, .L2
  41 0006 9B6B     		ldr	r3, [r3, #56]
  42 0008 074A     		ldr	r2, .L2
  43 000a 43F08053 		orr	r3, r3, #268435456
  44 000e 9363     		str	r3, [r2, #56]
  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   __HAL_RCC_PWR_RELEASE_RESET();
  45              		.loc 1 89 3
  46 0010 054B     		ldr	r3, .L2
  47 0012 9B6B     		ldr	r3, [r3, #56]
  48 0014 044A     		ldr	r2, .L2
  49 0016 23F08053 		bic	r3, r3, #268435456
  50 001a 9363     		str	r3, [r2, #56]
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
  51              		.loc 1 90 1
  52 001c 00BF     		nop
  53 001e BD46     		mov	sp, r7
  54              		.cfi_def_cfa_register 13
  55              		@ sp needed
  56 0020 5DF8047B 		ldr	r7, [sp], #4
  57              		.cfi_restore 7
  58              		.cfi_def_cfa_offset 0
  59 0024 7047     		bx	lr
  60              	.L3:
  61 0026 00BF     		.align	2
  62              	.L2:
  63 0028 00100240 		.word	1073876992
  64              		.cfi_endproc
  65              	.LFE321:
  67              		.section	.text.HAL_PWR_EnableBkUpAccess,"ax",%progbits
  68              		.align	1
  69              		.global	HAL_PWR_EnableBkUpAccess
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	HAL_PWR_EnableBkUpAccess:
  75              	.LFB322:
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Enable access to the backup domain
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        (RTC registers, RTC backup data registers).
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  After reset, the backup domain is protected against
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        possible unwanted write accesses.
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  RTCSEL that sets the RTC clock source selection is in the RTC back-up domain.
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        In order to set or modify the RTC clock, the backup domain access must be
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        disabled.
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 4


 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  LSEON bit that switches on and off the LSE crystal belongs as well to the
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        back-up domain.
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_EnableBkUpAccess(void)
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
  76              		.loc 1 105 1
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 1, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81 0000 80B4     		push	{r7}
  82              		.cfi_def_cfa_offset 4
  83              		.cfi_offset 7, -4
  84 0002 00AF     		add	r7, sp, #0
  85              		.cfi_def_cfa_register 7
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   SET_BIT(PWR->CR1, PWR_CR1_DBP);
  86              		.loc 1 106 3
  87 0004 054B     		ldr	r3, .L5
  88 0006 1B68     		ldr	r3, [r3]
  89 0008 044A     		ldr	r2, .L5
  90 000a 43F48073 		orr	r3, r3, #256
  91 000e 1360     		str	r3, [r2]
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
  92              		.loc 1 107 1
  93 0010 00BF     		nop
  94 0012 BD46     		mov	sp, r7
  95              		.cfi_def_cfa_register 13
  96              		@ sp needed
  97 0014 5DF8047B 		ldr	r7, [sp], #4
  98              		.cfi_restore 7
  99              		.cfi_def_cfa_offset 0
 100 0018 7047     		bx	lr
 101              	.L6:
 102 001a 00BF     		.align	2
 103              	.L5:
 104 001c 00700040 		.word	1073770496
 105              		.cfi_endproc
 106              	.LFE322:
 108              		.section	.text.HAL_PWR_DisableBkUpAccess,"ax",%progbits
 109              		.align	1
 110              		.global	HAL_PWR_DisableBkUpAccess
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 115              	HAL_PWR_DisableBkUpAccess:
 116              	.LFB323:
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Disable access to the backup domain
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        (RTC registers, RTC backup data registers).
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_DisableBkUpAccess(void)
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 117              		.loc 1 115 1
 118              		.cfi_startproc
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 5


 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 1, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 122 0000 80B4     		push	{r7}
 123              		.cfi_def_cfa_offset 4
 124              		.cfi_offset 7, -4
 125 0002 00AF     		add	r7, sp, #0
 126              		.cfi_def_cfa_register 7
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   CLEAR_BIT(PWR->CR1, PWR_CR1_DBP);
 127              		.loc 1 116 3
 128 0004 054B     		ldr	r3, .L8
 129 0006 1B68     		ldr	r3, [r3]
 130 0008 044A     		ldr	r2, .L8
 131 000a 23F48073 		bic	r3, r3, #256
 132 000e 1360     		str	r3, [r2]
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 133              		.loc 1 117 1
 134 0010 00BF     		nop
 135 0012 BD46     		mov	sp, r7
 136              		.cfi_def_cfa_register 13
 137              		@ sp needed
 138 0014 5DF8047B 		ldr	r7, [sp], #4
 139              		.cfi_restore 7
 140              		.cfi_def_cfa_offset 0
 141 0018 7047     		bx	lr
 142              	.L9:
 143 001a 00BF     		.align	2
 144              	.L8:
 145 001c 00700040 		.word	1073770496
 146              		.cfi_endproc
 147              	.LFE323:
 149              		.section	.text.HAL_PWR_ConfigPVD,"ax",%progbits
 150              		.align	1
 151              		.global	HAL_PWR_ConfigPVD
 152              		.syntax unified
 153              		.thumb
 154              		.thumb_func
 156              	HAL_PWR_ConfigPVD:
 157              	.LFB324:
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @}
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group2 Peripheral Control functions
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *  @brief Low Power modes configuration functions
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** @verbatim
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****  ===============================================================================
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****                  ##### Peripheral Control functions #####
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****  ===============================================================================
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 6


 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****      [..]
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****      *** PVD configuration ***
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     =========================
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     [..]
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) The PVD is used to monitor the VDD power supply by comparing it to a
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           threshold selected by the PVD Level (PLS[2:0] bits in PWR_CR2 register).
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) PVDO flag is available to indicate if VDD/VDDA is higher or lower
 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           than the PVD threshold. This event is internally connected to the EXTI
 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           line16 and can generate an interrupt if enabled. This is done through
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           __HAL_PVD_EXTI_ENABLE_IT() macro.
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) The PVD is stopped in Standby mode.
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     *** WakeUp pin configuration ***
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     ================================
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     [..]
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) WakeUp pins are used to wakeup the system from Standby mode or Shutdown mode.
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           The polarity of these pins can be set to configure event detection on high
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           level (rising edge) or low level (falling edge).
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     *** Low Power modes configuration ***
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     =====================================
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     [..]
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       The devices feature 8 low-power modes:
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Low-power Run mode: core and peripherals are running, main regulator off, low power regul
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Sleep mode: Cortex-M4 core stopped, peripherals kept running, main and low power regulato
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Low-power Sleep mode: Cortex-M4 core stopped, peripherals kept running, main regulator of
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Stop 0 mode: all clocks are stopped except LSI and LSE, main and low power regulators on.
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Stop 1 mode: all clocks are stopped except LSI and LSE, main regulator off, low power reg
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Stop 2 mode: all clocks are stopped except LSI and LSE, main regulator off, low power reg
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Standby mode with SRAM2: all clocks are stopped except LSI and LSE, SRAM2 content preserv
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Standby mode without SRAM2: all clocks are stopped except LSI and LSE, main and low power
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Shutdown mode: all clocks are stopped except LSE, main and low power regulators off.
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    *** Low-power run mode ***
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    ==========================
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     [..]
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Entry: (from main run mode)
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         (++) set LPR bit with HAL_PWREx_EnableLowPowerRunMode() API after having decreased the syst
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Exit:
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         (++) clear LPR bit then wait for REGLP bit to be reset with HAL_PWREx_DisableLowPowerRunMod
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****              then can the system clock frequency be increased above 2 MHz.
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    *** Sleep mode / Low-power sleep mode ***
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    =========================================
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     [..]
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Entry:
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           The Sleep mode / Low-power Sleep mode is entered thru HAL_PWR_EnterSLEEPMode() API
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           in specifying whether or not the regulator is forced to low-power mode and if exit is int
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) PWR_MAINREGULATOR_ON: Sleep mode (regulator in main mode).
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 7


 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) PWR_LOWPOWERREGULATOR_ON: Low-power sleep (regulator in low power mode).
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           In the latter case, the system clock frequency must have been decreased below 2 MHz befor
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFI: enter SLEEP mode with WFI instruction
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFE: enter SLEEP mode with WFE instruction
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) WFI Exit:
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         (++) Any peripheral interrupt acknowledged by the nested vectored interrupt
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****              controller (NVIC) or any wake-up event.
 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) WFE Exit:
 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         (++) Any wake-up event such as an EXTI line configured in event mode.
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****          [..] When exiting the Low-power sleep mode by issuing an interrupt or a wakeup event,
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****              the MCU is in Low-power Run mode.
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    *** Stop 0, Stop 1 and Stop 2 modes ***
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    ===============================
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     [..]
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Entry:
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           The Stop 0, Stop 1 or Stop 2 modes are entered thru the following API's:
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) HAL_PWREx_EnterSTOP0Mode() for mode 0 or HAL_PWREx_EnterSTOP1Mode() for mode 1 or fo
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) HAL_PWREx_EnterSTOP2Mode() for mode 2.
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Regulator setting (applicable to HAL_PWR_EnterSTOPMode() only):
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) PWR_MAINREGULATOR_ON
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) PWR_LOWPOWERREGULATOR_ON
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Exit (interrupt or event-triggered, specified when entering STOP mode):
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) PWR_STOPENTRY_WFI: enter Stop mode with WFI instruction
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) PWR_STOPENTRY_WFE: enter Stop mode with WFE instruction
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) WFI Exit:
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) Any EXTI Line (Internal or External) configured in Interrupt mode.
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) Some specific communication peripherals (USART, LPUART, I2C) interrupts
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****                when programmed in wakeup mode.
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) WFE Exit:
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) Any EXTI Line (Internal or External) configured in Event mode.
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****        [..]
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           When exiting Stop 0 and Stop 1 modes, the MCU is either in Run mode or in Low-power Run m
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           depending on the LPR bit setting.
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           When exiting Stop 2 mode, the MCU is in Run mode.
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    *** Standby mode ***
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    ====================
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****      [..]
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       The Standby mode offers two options:
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) option a) all clocks off except LSI and LSE, RRS bit set (keeps voltage regulator in low 
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         SRAM and registers contents are lost except for the SRAM2 content, the RTC registers, RTC b
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         and Standby circuitry.
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) option b) all clocks off except LSI and LSE, RRS bit cleared (voltage regulator then disa
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         SRAM and register contents are lost except for the RTC registers, RTC backup registers
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         and Standby circuitry.
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (++) Entry:
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (+++) The Standby mode is entered thru HAL_PWR_EnterSTANDBYMode() API.
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****                 SRAM1 and register contents are lost except for registers in the Backup domain and
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****                 Standby circuitry. SRAM2 content can be preserved if the bit RRS is set in PWR_CR3 
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****                 To enable this feature, the user can resort to HAL_PWREx_EnableSRAM2ContentRetentio
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 8


 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****                 to set RRS bit.
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (++) Exit:
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (+++) WKUP pin rising edge, RTC alarm or wakeup, tamper event, time-stamp event,
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****                 external reset in NRST pin, IWDG reset.
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       [..]    After waking up from Standby mode, program execution restarts in the same way as afte
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     *** Shutdown mode ***
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    ======================
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****      [..]
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       In Shutdown mode,
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         voltage regulator is disabled, all clocks are off except LSE, RRS bit is cleared.
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         SRAM and registers contents are lost except for backup domain registers.
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Entry:
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           The Shutdown mode is entered thru HAL_PWREx_EnterSHUTDOWNMode() API.
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Exit:
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) WKUP pin rising edge, RTC alarm or wakeup, tamper event, time-stamp event,
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****                external reset in NRST pin.
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****          [..] After waking up from Shutdown mode, program execution restarts in the same way as aft
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    *** Auto-wakeup (AWU) from low-power mode ***
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    =============================================
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     [..]
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       The MCU can be woken up from low-power mode by an RTC Alarm event, an RTC
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       Wakeup event, a tamper event or a time-stamp event, without depending on
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       an external interrupt (Auto-wakeup mode).
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) RTC auto-wakeup (AWU) from the Stop, Standby and Shutdown modes
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC alarm event, it is necessary to
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****              configure the RTC to generate the RTC alarm using the HAL_RTC_SetAlarm_IT() function.
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC Tamper or time stamp event, it
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****              is necessary to configure the RTC to detect the tamper or time stamp event using the
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****              HAL_RTCEx_SetTimeStamp_IT() or HAL_RTCEx_SetTamper_IT() functions.
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC WakeUp event, it is necessary to
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****               configure the RTC to generate the RTC WakeUp event using the HAL_RTCEx_SetWakeUpTimer
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** @endverbatim
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @{
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Configure the voltage threshold detected by the Power Voltage Detector (PVD).
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @param sConfigPVD: pointer to a PWR_PVDTypeDef structure that contains the PVD
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        configuration information.
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note Refer to the electrical characteristics of your device datasheet for
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 9


 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         more details about the voltage thresholds corresponding to each
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         detection level.
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** HAL_StatusTypeDef HAL_PWR_ConfigPVD(PWR_PVDTypeDef *sConfigPVD)
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 158              		.loc 1 312 1
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 8
 161              		@ frame_needed = 1, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 163 0000 80B4     		push	{r7}
 164              		.cfi_def_cfa_offset 4
 165              		.cfi_offset 7, -4
 166 0002 83B0     		sub	sp, sp, #12
 167              		.cfi_def_cfa_offset 16
 168 0004 00AF     		add	r7, sp, #0
 169              		.cfi_def_cfa_register 7
 170 0006 7860     		str	r0, [r7, #4]
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Check the parameters */
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_LEVEL(sConfigPVD->PVDLevel));
 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_MODE(sConfigPVD->Mode));
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Set PLS bits according to PVDLevel value */
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR2, PWR_CR2_PLS, sConfigPVD->PVDLevel);
 171              		.loc 1 318 3
 172 0008 2B4B     		ldr	r3, .L16
 173 000a 5B68     		ldr	r3, [r3, #4]
 174 000c 23F00E02 		bic	r2, r3, #14
 175 0010 7B68     		ldr	r3, [r7, #4]
 176 0012 1B68     		ldr	r3, [r3]
 177 0014 2849     		ldr	r1, .L16
 178 0016 1343     		orrs	r3, r3, r2
 179 0018 4B60     		str	r3, [r1, #4]
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_EVENT();
 180              		.loc 1 321 3
 181 001a 284B     		ldr	r3, .L16+4
 182 001c 5B68     		ldr	r3, [r3, #4]
 183 001e 274A     		ldr	r2, .L16+4
 184 0020 23F48033 		bic	r3, r3, #65536
 185 0024 5360     		str	r3, [r2, #4]
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_IT();
 186              		.loc 1 322 3
 187 0026 254B     		ldr	r3, .L16+4
 188 0028 1B68     		ldr	r3, [r3]
 189 002a 244A     		ldr	r2, .L16+4
 190 002c 23F48033 		bic	r3, r3, #65536
 191 0030 1360     		str	r3, [r2]
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_FALLING_EDGE();
 192              		.loc 1 323 3
 193 0032 224B     		ldr	r3, .L16+4
 194 0034 DB68     		ldr	r3, [r3, #12]
 195 0036 214A     		ldr	r2, .L16+4
 196 0038 23F48033 		bic	r3, r3, #65536
 197 003c D360     		str	r3, [r2, #12]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 10


 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_RISING_EDGE();
 198              		.loc 1 324 3
 199 003e 1F4B     		ldr	r3, .L16+4
 200 0040 9B68     		ldr	r3, [r3, #8]
 201 0042 1E4A     		ldr	r2, .L16+4
 202 0044 23F48033 		bic	r3, r3, #65536
 203 0048 9360     		str	r3, [r2, #8]
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Configure interrupt mode */
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_MODE_IT) == PVD_MODE_IT)
 204              		.loc 1 327 17
 205 004a 7B68     		ldr	r3, [r7, #4]
 206 004c 5B68     		ldr	r3, [r3, #4]
 207              		.loc 1 327 24
 208 004e 03F48033 		and	r3, r3, #65536
 209              		.loc 1 327 5
 210 0052 002B     		cmp	r3, #0
 211 0054 05D0     		beq	.L11
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_IT();
 212              		.loc 1 329 5
 213 0056 194B     		ldr	r3, .L16+4
 214 0058 1B68     		ldr	r3, [r3]
 215 005a 184A     		ldr	r2, .L16+4
 216 005c 43F48033 		orr	r3, r3, #65536
 217 0060 1360     		str	r3, [r2]
 218              	.L11:
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Configure event mode */
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_MODE_EVT) == PVD_MODE_EVT)
 219              		.loc 1 333 17
 220 0062 7B68     		ldr	r3, [r7, #4]
 221 0064 5B68     		ldr	r3, [r3, #4]
 222              		.loc 1 333 24
 223 0066 03F40033 		and	r3, r3, #131072
 224              		.loc 1 333 5
 225 006a 002B     		cmp	r3, #0
 226 006c 05D0     		beq	.L12
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_EVENT();
 227              		.loc 1 335 5
 228 006e 134B     		ldr	r3, .L16+4
 229 0070 5B68     		ldr	r3, [r3, #4]
 230 0072 124A     		ldr	r2, .L16+4
 231 0074 43F48033 		orr	r3, r3, #65536
 232 0078 5360     		str	r3, [r2, #4]
 233              	.L12:
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Configure the edge */
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_RISING_EDGE) == PVD_RISING_EDGE)
 234              		.loc 1 339 17
 235 007a 7B68     		ldr	r3, [r7, #4]
 236 007c 5B68     		ldr	r3, [r3, #4]
 237              		.loc 1 339 24
 238 007e 03F00103 		and	r3, r3, #1
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 11


 239              		.loc 1 339 5
 240 0082 002B     		cmp	r3, #0
 241 0084 05D0     		beq	.L13
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_RISING_EDGE();
 242              		.loc 1 341 5
 243 0086 0D4B     		ldr	r3, .L16+4
 244 0088 9B68     		ldr	r3, [r3, #8]
 245 008a 0C4A     		ldr	r2, .L16+4
 246 008c 43F48033 		orr	r3, r3, #65536
 247 0090 9360     		str	r3, [r2, #8]
 248              	.L13:
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_FALLING_EDGE) == PVD_FALLING_EDGE)
 249              		.loc 1 344 17
 250 0092 7B68     		ldr	r3, [r7, #4]
 251 0094 5B68     		ldr	r3, [r3, #4]
 252              		.loc 1 344 24
 253 0096 03F00203 		and	r3, r3, #2
 254              		.loc 1 344 5
 255 009a 002B     		cmp	r3, #0
 256 009c 05D0     		beq	.L14
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_FALLING_EDGE();
 257              		.loc 1 346 5
 258 009e 074B     		ldr	r3, .L16+4
 259 00a0 DB68     		ldr	r3, [r3, #12]
 260 00a2 064A     		ldr	r2, .L16+4
 261 00a4 43F48033 		orr	r3, r3, #65536
 262 00a8 D360     		str	r3, [r2, #12]
 263              	.L14:
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   return HAL_OK;
 264              		.loc 1 349 10
 265 00aa 0023     		movs	r3, #0
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 266              		.loc 1 350 1
 267 00ac 1846     		mov	r0, r3
 268 00ae 0C37     		adds	r7, r7, #12
 269              		.cfi_def_cfa_offset 4
 270 00b0 BD46     		mov	sp, r7
 271              		.cfi_def_cfa_register 13
 272              		@ sp needed
 273 00b2 5DF8047B 		ldr	r7, [sp], #4
 274              		.cfi_restore 7
 275              		.cfi_def_cfa_offset 0
 276 00b6 7047     		bx	lr
 277              	.L17:
 278              		.align	2
 279              	.L16:
 280 00b8 00700040 		.word	1073770496
 281 00bc 00040140 		.word	1073808384
 282              		.cfi_endproc
 283              	.LFE324:
 285              		.section	.text.HAL_PWR_EnablePVD,"ax",%progbits
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 12


 286              		.align	1
 287              		.global	HAL_PWR_EnablePVD
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 292              	HAL_PWR_EnablePVD:
 293              	.LFB325:
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Enable the Power Voltage Detector (PVD).
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_EnablePVD(void)
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 294              		.loc 1 358 1
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 1, uses_anonymous_args = 0
 298              		@ link register save eliminated.
 299 0000 80B4     		push	{r7}
 300              		.cfi_def_cfa_offset 4
 301              		.cfi_offset 7, -4
 302 0002 00AF     		add	r7, sp, #0
 303              		.cfi_def_cfa_register 7
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   SET_BIT(PWR->CR2, PWR_CR2_PVDE);
 304              		.loc 1 359 3
 305 0004 054B     		ldr	r3, .L19
 306 0006 5B68     		ldr	r3, [r3, #4]
 307 0008 044A     		ldr	r2, .L19
 308 000a 43F00103 		orr	r3, r3, #1
 309 000e 5360     		str	r3, [r2, #4]
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 310              		.loc 1 360 1
 311 0010 00BF     		nop
 312 0012 BD46     		mov	sp, r7
 313              		.cfi_def_cfa_register 13
 314              		@ sp needed
 315 0014 5DF8047B 		ldr	r7, [sp], #4
 316              		.cfi_restore 7
 317              		.cfi_def_cfa_offset 0
 318 0018 7047     		bx	lr
 319              	.L20:
 320 001a 00BF     		.align	2
 321              	.L19:
 322 001c 00700040 		.word	1073770496
 323              		.cfi_endproc
 324              	.LFE325:
 326              		.section	.text.HAL_PWR_DisablePVD,"ax",%progbits
 327              		.align	1
 328              		.global	HAL_PWR_DisablePVD
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 333              	HAL_PWR_DisablePVD:
 334              	.LFB326:
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 13


 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Disable the Power Voltage Detector (PVD).
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_DisablePVD(void)
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 335              		.loc 1 367 1
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 1, uses_anonymous_args = 0
 339              		@ link register save eliminated.
 340 0000 80B4     		push	{r7}
 341              		.cfi_def_cfa_offset 4
 342              		.cfi_offset 7, -4
 343 0002 00AF     		add	r7, sp, #0
 344              		.cfi_def_cfa_register 7
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   CLEAR_BIT(PWR->CR2, PWR_CR2_PVDE);
 345              		.loc 1 368 3
 346 0004 054B     		ldr	r3, .L22
 347 0006 5B68     		ldr	r3, [r3, #4]
 348 0008 044A     		ldr	r2, .L22
 349 000a 23F00103 		bic	r3, r3, #1
 350 000e 5360     		str	r3, [r2, #4]
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 351              		.loc 1 369 1
 352 0010 00BF     		nop
 353 0012 BD46     		mov	sp, r7
 354              		.cfi_def_cfa_register 13
 355              		@ sp needed
 356 0014 5DF8047B 		ldr	r7, [sp], #4
 357              		.cfi_restore 7
 358              		.cfi_def_cfa_offset 0
 359 0018 7047     		bx	lr
 360              	.L23:
 361 001a 00BF     		.align	2
 362              	.L22:
 363 001c 00700040 		.word	1073770496
 364              		.cfi_endproc
 365              	.LFE326:
 367              		.section	.text.HAL_PWR_EnableWakeUpPin,"ax",%progbits
 368              		.align	1
 369              		.global	HAL_PWR_EnableWakeUpPin
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
 374              	HAL_PWR_EnableWakeUpPin:
 375              	.LFB327:
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Enable the WakeUp PINx functionality.
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @param WakeUpPinPolarity: Specifies which Wake-Up pin to enable.
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         This parameter can be one of the following legacy values which set the default polarity
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         i.e. detection on high level (rising edge):
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           @arg @ref PWR_WAKEUP_PIN1, PWR_WAKEUP_PIN2, PWR_WAKEUP_PIN3, PWR_WAKEUP_PIN4, PWR_WAK
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 14


 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         or one of the following value where the user can explicitly specify the enabled pin and
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         the chosen polarity:
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           @arg @ref PWR_WAKEUP_PIN1_HIGH or PWR_WAKEUP_PIN1_LOW
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           @arg @ref PWR_WAKEUP_PIN2_HIGH or PWR_WAKEUP_PIN2_LOW
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           @arg @ref PWR_WAKEUP_PIN3_HIGH or PWR_WAKEUP_PIN3_LOW
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           @arg @ref PWR_WAKEUP_PIN4_HIGH or PWR_WAKEUP_PIN4_LOW
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           @arg @ref PWR_WAKEUP_PIN5_HIGH or PWR_WAKEUP_PIN5_LOW
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  PWR_WAKEUP_PINx and PWR_WAKEUP_PINx_HIGH are equivalent.
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_EnableWakeUpPin(uint32_t WakeUpPinPolarity)
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 376              		.loc 1 392 1
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 8
 379              		@ frame_needed = 1, uses_anonymous_args = 0
 380              		@ link register save eliminated.
 381 0000 80B4     		push	{r7}
 382              		.cfi_def_cfa_offset 4
 383              		.cfi_offset 7, -4
 384 0002 83B0     		sub	sp, sp, #12
 385              		.cfi_def_cfa_offset 16
 386 0004 00AF     		add	r7, sp, #0
 387              		.cfi_def_cfa_register 7
 388 0006 7860     		str	r0, [r7, #4]
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinPolarity));
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Specifies the Wake-Up pin polarity for the event detection
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     (rising or falling edge) */
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR4, (PWR_CR3_EWUP & WakeUpPinPolarity), (WakeUpPinPolarity >> PWR_WUP_POLARITY_S
 389              		.loc 1 397 3
 390 0008 0C4B     		ldr	r3, .L25
 391 000a DA68     		ldr	r2, [r3, #12]
 392 000c 7B68     		ldr	r3, [r7, #4]
 393 000e 03F01F03 		and	r3, r3, #31
 394 0012 DB43     		mvns	r3, r3
 395 0014 1A40     		ands	r2, r2, r3
 396 0016 7B68     		ldr	r3, [r7, #4]
 397 0018 5B09     		lsrs	r3, r3, #5
 398 001a 0849     		ldr	r1, .L25
 399 001c 1343     		orrs	r3, r3, r2
 400 001e CB60     		str	r3, [r1, #12]
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Enable wake-up pin */
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   SET_BIT(PWR->CR3, (PWR_CR3_EWUP & WakeUpPinPolarity));
 401              		.loc 1 400 3
 402 0020 064B     		ldr	r3, .L25
 403 0022 9A68     		ldr	r2, [r3, #8]
 404 0024 7B68     		ldr	r3, [r7, #4]
 405 0026 03F01F03 		and	r3, r3, #31
 406 002a 0449     		ldr	r1, .L25
 407 002c 1343     		orrs	r3, r3, r2
 408 002e 8B60     		str	r3, [r1, #8]
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 15


 409              		.loc 1 403 1
 410 0030 00BF     		nop
 411 0032 0C37     		adds	r7, r7, #12
 412              		.cfi_def_cfa_offset 4
 413 0034 BD46     		mov	sp, r7
 414              		.cfi_def_cfa_register 13
 415              		@ sp needed
 416 0036 5DF8047B 		ldr	r7, [sp], #4
 417              		.cfi_restore 7
 418              		.cfi_def_cfa_offset 0
 419 003a 7047     		bx	lr
 420              	.L26:
 421              		.align	2
 422              	.L25:
 423 003c 00700040 		.word	1073770496
 424              		.cfi_endproc
 425              	.LFE327:
 427              		.section	.text.HAL_PWR_DisableWakeUpPin,"ax",%progbits
 428              		.align	1
 429              		.global	HAL_PWR_DisableWakeUpPin
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 434              	HAL_PWR_DisableWakeUpPin:
 435              	.LFB328:
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Disable the WakeUp PINx functionality.
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @param WakeUpPinx: Specifies the Power Wake-Up pin to disable.
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         This parameter can be one of the following values:
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           @arg @ref PWR_WAKEUP_PIN1, PWR_WAKEUP_PIN2, PWR_WAKEUP_PIN3, PWR_WAKEUP_PIN4, PWR_WAK
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_DisableWakeUpPin(uint32_t WakeUpPinx)
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 436              		.loc 1 413 1
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 8
 439              		@ frame_needed = 1, uses_anonymous_args = 0
 440              		@ link register save eliminated.
 441 0000 80B4     		push	{r7}
 442              		.cfi_def_cfa_offset 4
 443              		.cfi_offset 7, -4
 444 0002 83B0     		sub	sp, sp, #12
 445              		.cfi_def_cfa_offset 16
 446 0004 00AF     		add	r7, sp, #0
 447              		.cfi_def_cfa_register 7
 448 0006 7860     		str	r0, [r7, #4]
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   CLEAR_BIT(PWR->CR3, (PWR_CR3_EWUP & WakeUpPinx));
 449              		.loc 1 416 3
 450 0008 074B     		ldr	r3, .L28
 451 000a 9A68     		ldr	r2, [r3, #8]
 452 000c 7B68     		ldr	r3, [r7, #4]
 453 000e 03F01F03 		and	r3, r3, #31
 454 0012 DB43     		mvns	r3, r3
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 16


 455 0014 0449     		ldr	r1, .L28
 456 0016 1340     		ands	r3, r3, r2
 457 0018 8B60     		str	r3, [r1, #8]
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 458              		.loc 1 417 1
 459 001a 00BF     		nop
 460 001c 0C37     		adds	r7, r7, #12
 461              		.cfi_def_cfa_offset 4
 462 001e BD46     		mov	sp, r7
 463              		.cfi_def_cfa_register 13
 464              		@ sp needed
 465 0020 5DF8047B 		ldr	r7, [sp], #4
 466              		.cfi_restore 7
 467              		.cfi_def_cfa_offset 0
 468 0024 7047     		bx	lr
 469              	.L29:
 470 0026 00BF     		.align	2
 471              	.L28:
 472 0028 00700040 		.word	1073770496
 473              		.cfi_endproc
 474              	.LFE328:
 476              		.section	.text.HAL_PWR_EnterSLEEPMode,"ax",%progbits
 477              		.align	1
 478              		.global	HAL_PWR_EnterSLEEPMode
 479              		.syntax unified
 480              		.thumb
 481              		.thumb_func
 483              	HAL_PWR_EnterSLEEPMode:
 484              	.LFB329:
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Enter Sleep or Low-power Sleep mode.
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  In Sleep/Low-power Sleep mode, all I/O pins keep the same state as in Run mode.
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @param Regulator: Specifies the regulator state in Sleep/Low-power Sleep mode.
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *            @arg @ref PWR_MAINREGULATOR_ON Sleep mode (regulator in main mode)
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *            @arg @ref PWR_LOWPOWERREGULATOR_ON Low-power Sleep mode (regulator in low-power mode
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  Low-power Sleep mode is entered from Low-power Run mode. Therefore, if not yet
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        in Low-power Run mode before calling HAL_PWR_EnterSLEEPMode() with Regulator set
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        to PWR_LOWPOWERREGULATOR_ON, the user can optionally configure the
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        Flash in power-down monde in setting the SLEEP_PD bit in FLASH_ACR register.
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        Additionally, the clock frequency must be reduced below 2 MHz.
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        Setting SLEEP_PD in FLASH_ACR then appropriately reducing the clock frequency must
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        be done before calling HAL_PWR_EnterSLEEPMode() API.
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  When exiting Low-power Sleep mode, the MCU is in Low-power Run mode. To move in
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        Run mode, the user must resort to HAL_PWREx_DisableLowPowerRunMode() API.
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @param SLEEPEntry: Specifies if Sleep mode is entered with WFI or WFE instruction.
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           This parameter can be one of the following values:
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *            @arg @ref PWR_SLEEPENTRY_WFI enter Sleep or Low-power Sleep mode with WFI instructio
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *            @arg @ref PWR_SLEEPENTRY_WFE enter Sleep or Low-power Sleep mode with WFE instructio
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  When WFI entry is used, tick interrupt have to be disabled if not desired as
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        the interrupt wake up source.
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_EnterSLEEPMode(uint32_t Regulator, uint8_t SLEEPEntry)
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 17


 485              		.loc 1 445 1
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 8
 488              		@ frame_needed = 1, uses_anonymous_args = 0
 489 0000 80B5     		push	{r7, lr}
 490              		.cfi_def_cfa_offset 8
 491              		.cfi_offset 7, -8
 492              		.cfi_offset 14, -4
 493 0002 82B0     		sub	sp, sp, #8
 494              		.cfi_def_cfa_offset 16
 495 0004 00AF     		add	r7, sp, #0
 496              		.cfi_def_cfa_register 7
 497 0006 7860     		str	r0, [r7, #4]
 498 0008 0B46     		mov	r3, r1
 499 000a FB70     		strb	r3, [r7, #3]
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Check the parameters */
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_SLEEP_ENTRY(SLEEPEntry));
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Set Regulator parameter */
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   if (Regulator == PWR_MAINREGULATOR_ON)
 500              		.loc 1 451 6
 501 000c 7B68     		ldr	r3, [r7, #4]
 502 000e 002B     		cmp	r3, #0
 503 0010 0CD1     		bne	.L31
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     /* If in low-power run mode at this point, exit it */
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF))
 504              		.loc 1 454 9
 505 0012 134B     		ldr	r3, .L35
 506 0014 5B69     		ldr	r3, [r3, #20]
 507 0016 03F40073 		and	r3, r3, #512
 508              		.loc 1 454 8
 509 001a B3F5007F 		cmp	r3, #512
 510 001e 0ED1     		bne	.L32
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     {
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       if (HAL_PWREx_DisableLowPowerRunMode() != HAL_OK)
 511              		.loc 1 456 11
 512 0020 FFF7FEFF 		bl	HAL_PWREx_DisableLowPowerRunMode
 513 0024 0346     		mov	r3, r0
 514              		.loc 1 456 10
 515 0026 002B     		cmp	r3, #0
 516 0028 09D0     		beq	.L32
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       {
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         return ;
 517              		.loc 1 458 9
 518 002a 16E0     		b	.L30
 519              	.L31:
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       }
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     }
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     /* Regulator now in main mode. */
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   else
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     /* If in run mode, first move to low-power run mode.
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****        The system clock frequency must be below 2 MHz at this point. */
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF) == RESET)
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 18


 520              		.loc 1 467 9
 521 002c 0C4B     		ldr	r3, .L35
 522 002e 5B69     		ldr	r3, [r3, #20]
 523 0030 03F40073 		and	r3, r3, #512
 524              		.loc 1 467 8
 525 0034 B3F5007F 		cmp	r3, #512
 526 0038 01D0     		beq	.L32
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     {
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       HAL_PWREx_EnableLowPowerRunMode();
 527              		.loc 1 469 7
 528 003a FFF7FEFF 		bl	HAL_PWREx_EnableLowPowerRunMode
 529              	.L32:
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     }
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Clear SLEEPDEEP bit of Cortex System Control Register */
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 530              		.loc 1 474 3
 531 003e 094B     		ldr	r3, .L35+4
 532 0040 1B69     		ldr	r3, [r3, #16]
 533 0042 084A     		ldr	r2, .L35+4
 534 0044 23F00403 		bic	r3, r3, #4
 535 0048 1361     		str	r3, [r2, #16]
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Select SLEEP mode entry -------------------------------------------------*/
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   if(SLEEPEntry == PWR_SLEEPENTRY_WFI)
 536              		.loc 1 477 5
 537 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 538 004c 012B     		cmp	r3, #1
 539 004e 01D1     		bne	.L34
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     /* Request Wait For Interrupt */
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     __WFI();
 540              		.loc 1 480 5
 541              		.syntax unified
 542              	@ 480 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c" 1
 543 0050 30BF     		wfi
 544              	@ 0 "" 2
 545              		.thumb
 546              		.syntax unified
 547 0052 02E0     		b	.L30
 548              	.L34:
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   else
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     /* Request Wait For Event */
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     __SEV();
 549              		.loc 1 485 5
 550              		.syntax unified
 551              	@ 485 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c" 1
 552 0054 40BF     		sev
 553              	@ 0 "" 2
 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     __WFE();
 554              		.loc 1 486 5
 555              	@ 486 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c" 1
 556 0056 20BF     		wfe
 557              	@ 0 "" 2
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 19


 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     __WFE();
 558              		.loc 1 487 5
 559              	@ 487 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c" 1
 560 0058 20BF     		wfe
 561              	@ 0 "" 2
 562              		.thumb
 563              		.syntax unified
 564              	.L30:
 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 565              		.loc 1 490 1
 566 005a 0837     		adds	r7, r7, #8
 567              		.cfi_def_cfa_offset 8
 568 005c BD46     		mov	sp, r7
 569              		.cfi_def_cfa_register 13
 570              		@ sp needed
 571 005e 80BD     		pop	{r7, pc}
 572              	.L36:
 573              		.align	2
 574              	.L35:
 575 0060 00700040 		.word	1073770496
 576 0064 00ED00E0 		.word	-536810240
 577              		.cfi_endproc
 578              	.LFE329:
 580              		.section	.text.HAL_PWR_EnterSTOPMode,"ax",%progbits
 581              		.align	1
 582              		.global	HAL_PWR_EnterSTOPMode
 583              		.syntax unified
 584              		.thumb
 585              		.thumb_func
 587              	HAL_PWR_EnterSTOPMode:
 588              	.LFB330:
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Enter Stop mode
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  This API is named HAL_PWR_EnterSTOPMode to ensure compatibility with legacy code running
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        on devices where only "Stop mode" is mentioned with main or low power regulator ON.
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  In Stop mode, all I/O pins keep the same state as in Run mode.
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  All clocks in the VCORE domain are stopped; the PLL, the MSI,
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        the HSI and the HSE oscillators are disabled. Some peripherals with the wakeup capabilit
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        (I2Cx, USARTx and LPUART) can switch on the HSI to receive a frame, and switch off the H
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        after receiving the frame if it is not a wakeup frame. In this case, the HSI clock is pr
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        only to the peripheral requesting it.
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        SRAM1, SRAM2 and register contents are preserved.
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        The BOR is available.
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        The voltage regulator can be configured either in normal (Stop 0) or low-power mode (Sto
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  When exiting Stop 0 or Stop 1 mode by issuing an interrupt or a wakeup event,
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         is set; the MSI oscillator is selected if STOPWUCK is cleared.
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  When the voltage regulator operates in low power mode (Stop 1), an additional
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         startup delay is incurred when waking up.
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         By keeping the internal regulator ON during Stop mode (Stop 0), the consumption
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         is higher although the startup time is reduced.
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @param Regulator: Specifies the regulator state in Stop mode.
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 20


 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *            @arg @ref PWR_MAINREGULATOR_ON  Stop 0 mode (main regulator ON)
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *            @arg @ref PWR_LOWPOWERREGULATOR_ON  Stop 1 mode (low power regulator ON)
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @param STOPEntry: Specifies Stop 0 or Stop 1 mode is entered with WFI or WFE instruction.
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *            @arg @ref PWR_STOPENTRY_WFI  Enter Stop 0 or Stop 1 mode with WFI instruction.
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *            @arg @ref PWR_STOPENTRY_WFE  Enter Stop 0 or Stop 1 mode with WFE instruction.
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_EnterSTOPMode(uint32_t Regulator, uint8_t STOPEntry)
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 589              		.loc 1 524 1
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 8
 592              		@ frame_needed = 1, uses_anonymous_args = 0
 593 0000 80B5     		push	{r7, lr}
 594              		.cfi_def_cfa_offset 8
 595              		.cfi_offset 7, -8
 596              		.cfi_offset 14, -4
 597 0002 82B0     		sub	sp, sp, #8
 598              		.cfi_def_cfa_offset 16
 599 0004 00AF     		add	r7, sp, #0
 600              		.cfi_def_cfa_register 7
 601 0006 7860     		str	r0, [r7, #4]
 602 0008 0B46     		mov	r3, r1
 603 000a FB70     		strb	r3, [r7, #3]
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Check the parameters */
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   if(Regulator == PWR_LOWPOWERREGULATOR_ON)
 604              		.loc 1 528 5
 605 000c 7B68     		ldr	r3, [r7, #4]
 606 000e B3F5804F 		cmp	r3, #16384
 607 0012 04D1     		bne	.L38
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     HAL_PWREx_EnterSTOP1Mode(STOPEntry);
 608              		.loc 1 530 5
 609 0014 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 610 0016 1846     		mov	r0, r3
 611 0018 FFF7FEFF 		bl	HAL_PWREx_EnterSTOP1Mode
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   else
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     HAL_PWREx_EnterSTOP0Mode(STOPEntry);
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 612              		.loc 1 536 1
 613 001c 03E0     		b	.L40
 614              	.L38:
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 615              		.loc 1 534 5
 616 001e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 617 0020 1846     		mov	r0, r3
 618 0022 FFF7FEFF 		bl	HAL_PWREx_EnterSTOP0Mode
 619              	.L40:
 620              		.loc 1 536 1
 621 0026 00BF     		nop
 622 0028 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 21


 623              		.cfi_def_cfa_offset 8
 624 002a BD46     		mov	sp, r7
 625              		.cfi_def_cfa_register 13
 626              		@ sp needed
 627 002c 80BD     		pop	{r7, pc}
 628              		.cfi_endproc
 629              	.LFE330:
 631              		.section	.text.HAL_PWR_EnterSTANDBYMode,"ax",%progbits
 632              		.align	1
 633              		.global	HAL_PWR_EnterSTANDBYMode
 634              		.syntax unified
 635              		.thumb
 636              		.thumb_func
 638              	HAL_PWR_EnterSTANDBYMode:
 639              	.LFB331:
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Enter Standby mode.
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  In Standby mode, the PLL, the HSI, the MSI and the HSE oscillators are switched
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        off. The voltage regulator is disabled, except when SRAM2 content is preserved
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        in which case the regulator is in low-power mode.
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        SRAM1 and register contents are lost except for registers in the Backup domain and
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        Standby circuitry. SRAM2 content can be preserved if the bit RRS is set in PWR_CR3 regis
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        To enable this feature, the user can resort to HAL_PWREx_EnableSRAM2ContentRetention() A
 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        to set RRS bit.
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        The BOR is available.
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  The I/Os can be configured either with a pull-up or pull-down or can be kept in analog s
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        HAL_PWREx_EnableGPIOPullUp() and HAL_PWREx_EnableGPIOPullDown() respectively enable Pull
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        Pull Down state, HAL_PWREx_DisableGPIOPullUp() and HAL_PWREx_DisableGPIOPullDown() disab
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        same.
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        These states are effective in Standby mode only if APC bit is set through
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        HAL_PWREx_EnablePullUpPullDownConfig() API.
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_EnterSTANDBYMode(void)
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 640              		.loc 1 557 1
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 0
 643              		@ frame_needed = 1, uses_anonymous_args = 0
 644              		@ link register save eliminated.
 645 0000 80B4     		push	{r7}
 646              		.cfi_def_cfa_offset 4
 647              		.cfi_offset 7, -4
 648 0002 00AF     		add	r7, sp, #0
 649              		.cfi_def_cfa_register 7
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Set Stand-by mode */
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_STANDBY);
 650              		.loc 1 559 3
 651 0004 094B     		ldr	r3, .L42
 652 0006 1B68     		ldr	r3, [r3]
 653 0008 23F00703 		bic	r3, r3, #7
 654 000c 074A     		ldr	r2, .L42
 655 000e 43F00303 		orr	r3, r3, #3
 656 0012 1360     		str	r3, [r2]
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 22


 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 657              		.loc 1 562 3
 658 0014 064B     		ldr	r3, .L42+4
 659 0016 1B69     		ldr	r3, [r3, #16]
 660 0018 054A     		ldr	r2, .L42+4
 661 001a 43F00403 		orr	r3, r3, #4
 662 001e 1361     		str	r3, [r2, #16]
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /* This option is used to ensure that store operations are completed */
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** #if defined ( __CC_ARM)
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   __force_stores();
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** #endif
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Request Wait For Interrupt */
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   __WFI();
 663              		.loc 1 569 3
 664              		.syntax unified
 665              	@ 569 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c" 1
 666 0020 30BF     		wfi
 667              	@ 0 "" 2
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 668              		.loc 1 570 1
 669              		.thumb
 670              		.syntax unified
 671 0022 00BF     		nop
 672 0024 BD46     		mov	sp, r7
 673              		.cfi_def_cfa_register 13
 674              		@ sp needed
 675 0026 5DF8047B 		ldr	r7, [sp], #4
 676              		.cfi_restore 7
 677              		.cfi_def_cfa_offset 0
 678 002a 7047     		bx	lr
 679              	.L43:
 680              		.align	2
 681              	.L42:
 682 002c 00700040 		.word	1073770496
 683 0030 00ED00E0 		.word	-536810240
 684              		.cfi_endproc
 685              	.LFE331:
 687              		.section	.text.HAL_PWR_EnableSleepOnExit,"ax",%progbits
 688              		.align	1
 689              		.global	HAL_PWR_EnableSleepOnExit
 690              		.syntax unified
 691              		.thumb
 692              		.thumb_func
 694              	HAL_PWR_EnableSleepOnExit:
 695              	.LFB332:
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Indicate Sleep-On-Exit when returning from Handler mode to Thread mode.
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note Set SLEEPONEXIT bit of SCR register. When this bit is set, the processor
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *       Setting this bit is useful when the processor is expected to run only on
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *       interruptions handling.
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 23


 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_EnableSleepOnExit(void)
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 696              		.loc 1 583 1
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 0
 699              		@ frame_needed = 1, uses_anonymous_args = 0
 700              		@ link register save eliminated.
 701 0000 80B4     		push	{r7}
 702              		.cfi_def_cfa_offset 4
 703              		.cfi_offset 7, -4
 704 0002 00AF     		add	r7, sp, #0
 705              		.cfi_def_cfa_register 7
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Set SLEEPONEXIT bit of Cortex System Control Register */
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 706              		.loc 1 585 3
 707 0004 054B     		ldr	r3, .L45
 708 0006 1B69     		ldr	r3, [r3, #16]
 709 0008 044A     		ldr	r2, .L45
 710 000a 43F00203 		orr	r3, r3, #2
 711 000e 1361     		str	r3, [r2, #16]
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 712              		.loc 1 586 1
 713 0010 00BF     		nop
 714 0012 BD46     		mov	sp, r7
 715              		.cfi_def_cfa_register 13
 716              		@ sp needed
 717 0014 5DF8047B 		ldr	r7, [sp], #4
 718              		.cfi_restore 7
 719              		.cfi_def_cfa_offset 0
 720 0018 7047     		bx	lr
 721              	.L46:
 722 001a 00BF     		.align	2
 723              	.L45:
 724 001c 00ED00E0 		.word	-536810240
 725              		.cfi_endproc
 726              	.LFE332:
 728              		.section	.text.HAL_PWR_DisableSleepOnExit,"ax",%progbits
 729              		.align	1
 730              		.global	HAL_PWR_DisableSleepOnExit
 731              		.syntax unified
 732              		.thumb
 733              		.thumb_func
 735              	HAL_PWR_DisableSleepOnExit:
 736              	.LFB333:
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Disable Sleep-On-Exit feature when returning from Handler mode to Thread mode.
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note Clear SLEEPONEXIT bit of SCR register. When this bit is set, the processor
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_DisableSleepOnExit(void)
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 737              		.loc 1 596 1
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 24


 740              		@ frame_needed = 1, uses_anonymous_args = 0
 741              		@ link register save eliminated.
 742 0000 80B4     		push	{r7}
 743              		.cfi_def_cfa_offset 4
 744              		.cfi_offset 7, -4
 745 0002 00AF     		add	r7, sp, #0
 746              		.cfi_def_cfa_register 7
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Clear SLEEPONEXIT bit of Cortex System Control Register */
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 747              		.loc 1 598 3
 748 0004 054B     		ldr	r3, .L48
 749 0006 1B69     		ldr	r3, [r3, #16]
 750 0008 044A     		ldr	r2, .L48
 751 000a 23F00203 		bic	r3, r3, #2
 752 000e 1361     		str	r3, [r2, #16]
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 753              		.loc 1 599 1
 754 0010 00BF     		nop
 755 0012 BD46     		mov	sp, r7
 756              		.cfi_def_cfa_register 13
 757              		@ sp needed
 758 0014 5DF8047B 		ldr	r7, [sp], #4
 759              		.cfi_restore 7
 760              		.cfi_def_cfa_offset 0
 761 0018 7047     		bx	lr
 762              	.L49:
 763 001a 00BF     		.align	2
 764              	.L48:
 765 001c 00ED00E0 		.word	-536810240
 766              		.cfi_endproc
 767              	.LFE333:
 769              		.section	.text.HAL_PWR_EnableSEVOnPend,"ax",%progbits
 770              		.align	1
 771              		.global	HAL_PWR_EnableSEVOnPend
 772              		.syntax unified
 773              		.thumb
 774              		.thumb_func
 776              	HAL_PWR_EnableSEVOnPend:
 777              	.LFB334:
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Enable CORTEX M4 SEVONPEND bit.
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note Set SEVONPEND bit of SCR register. When this bit is set, this causes
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_EnableSEVOnPend(void)
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 778              		.loc 1 610 1
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 1, uses_anonymous_args = 0
 782              		@ link register save eliminated.
 783 0000 80B4     		push	{r7}
 784              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 25


 785              		.cfi_offset 7, -4
 786 0002 00AF     		add	r7, sp, #0
 787              		.cfi_def_cfa_register 7
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Set SEVONPEND bit of Cortex System Control Register */
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
 788              		.loc 1 612 3
 789 0004 054B     		ldr	r3, .L51
 790 0006 1B69     		ldr	r3, [r3, #16]
 791 0008 044A     		ldr	r2, .L51
 792 000a 43F01003 		orr	r3, r3, #16
 793 000e 1361     		str	r3, [r2, #16]
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 794              		.loc 1 613 1
 795 0010 00BF     		nop
 796 0012 BD46     		mov	sp, r7
 797              		.cfi_def_cfa_register 13
 798              		@ sp needed
 799 0014 5DF8047B 		ldr	r7, [sp], #4
 800              		.cfi_restore 7
 801              		.cfi_def_cfa_offset 0
 802 0018 7047     		bx	lr
 803              	.L52:
 804 001a 00BF     		.align	2
 805              	.L51:
 806 001c 00ED00E0 		.word	-536810240
 807              		.cfi_endproc
 808              	.LFE334:
 810              		.section	.text.HAL_PWR_DisableSEVOnPend,"ax",%progbits
 811              		.align	1
 812              		.global	HAL_PWR_DisableSEVOnPend
 813              		.syntax unified
 814              		.thumb
 815              		.thumb_func
 817              	HAL_PWR_DisableSEVOnPend:
 818              	.LFB335:
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Disable CORTEX M4 SEVONPEND bit.
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note Clear SEVONPEND bit of SCR register. When this bit is set, this causes
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_DisableSEVOnPend(void)
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 819              		.loc 1 623 1
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 0
 822              		@ frame_needed = 1, uses_anonymous_args = 0
 823              		@ link register save eliminated.
 824 0000 80B4     		push	{r7}
 825              		.cfi_def_cfa_offset 4
 826              		.cfi_offset 7, -4
 827 0002 00AF     		add	r7, sp, #0
 828              		.cfi_def_cfa_register 7
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Clear SEVONPEND bit of Cortex System Control Register */
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 26


 829              		.loc 1 625 3
 830 0004 054B     		ldr	r3, .L54
 831 0006 1B69     		ldr	r3, [r3, #16]
 832 0008 044A     		ldr	r2, .L54
 833 000a 23F01003 		bic	r3, r3, #16
 834 000e 1361     		str	r3, [r2, #16]
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 835              		.loc 1 626 1
 836 0010 00BF     		nop
 837 0012 BD46     		mov	sp, r7
 838              		.cfi_def_cfa_register 13
 839              		@ sp needed
 840 0014 5DF8047B 		ldr	r7, [sp], #4
 841              		.cfi_restore 7
 842              		.cfi_def_cfa_offset 0
 843 0018 7047     		bx	lr
 844              	.L55:
 845 001a 00BF     		.align	2
 846              	.L54:
 847 001c 00ED00E0 		.word	-536810240
 848              		.cfi_endproc
 849              	.LFE335:
 851              		.section	.text.HAL_PWR_PVDCallback,"ax",%progbits
 852              		.align	1
 853              		.weak	HAL_PWR_PVDCallback
 854              		.syntax unified
 855              		.thumb
 856              		.thumb_func
 858              	HAL_PWR_PVDCallback:
 859              	.LFB336:
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief PWR PVD interrupt callback
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** __weak void HAL_PWR_PVDCallback(void)
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 860              		.loc 1 637 1
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 0
 863              		@ frame_needed = 1, uses_anonymous_args = 0
 864              		@ link register save eliminated.
 865 0000 80B4     		push	{r7}
 866              		.cfi_def_cfa_offset 4
 867              		.cfi_offset 7, -4
 868 0002 00AF     		add	r7, sp, #0
 869              		.cfi_def_cfa_register 7
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* NOTE : This function should not be modified; when the callback is needed,
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****             the HAL_PWR_PVDCallback can be implemented in the user file
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    */
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 870              		.loc 1 641 1
 871 0004 00BF     		nop
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 27


 872 0006 BD46     		mov	sp, r7
 873              		.cfi_def_cfa_register 13
 874              		@ sp needed
 875 0008 5DF8047B 		ldr	r7, [sp], #4
 876              		.cfi_restore 7
 877              		.cfi_def_cfa_offset 0
 878 000c 7047     		bx	lr
 879              		.cfi_endproc
 880              	.LFE336:
 882              		.text
 883              	.Letext0:
 884              		.file 2 "c:\\users\\morroway\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@
 885              		.file 3 "c:\\users\\morroway\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@
 886              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 887              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4p5xx.h"
 888              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 889              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 890              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr.h"
 891              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s 			page 28


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_pwr.c
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:20     .text.HAL_PWR_DeInit:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:26     .text.HAL_PWR_DeInit:0000000000000000 HAL_PWR_DeInit
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:63     .text.HAL_PWR_DeInit:0000000000000028 $d
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:68     .text.HAL_PWR_EnableBkUpAccess:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:74     .text.HAL_PWR_EnableBkUpAccess:0000000000000000 HAL_PWR_EnableBkUpAccess
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:104    .text.HAL_PWR_EnableBkUpAccess:000000000000001c $d
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:109    .text.HAL_PWR_DisableBkUpAccess:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:115    .text.HAL_PWR_DisableBkUpAccess:0000000000000000 HAL_PWR_DisableBkUpAccess
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:145    .text.HAL_PWR_DisableBkUpAccess:000000000000001c $d
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:150    .text.HAL_PWR_ConfigPVD:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:156    .text.HAL_PWR_ConfigPVD:0000000000000000 HAL_PWR_ConfigPVD
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:280    .text.HAL_PWR_ConfigPVD:00000000000000b8 $d
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:286    .text.HAL_PWR_EnablePVD:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:292    .text.HAL_PWR_EnablePVD:0000000000000000 HAL_PWR_EnablePVD
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:322    .text.HAL_PWR_EnablePVD:000000000000001c $d
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:327    .text.HAL_PWR_DisablePVD:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:333    .text.HAL_PWR_DisablePVD:0000000000000000 HAL_PWR_DisablePVD
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:363    .text.HAL_PWR_DisablePVD:000000000000001c $d
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:368    .text.HAL_PWR_EnableWakeUpPin:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:374    .text.HAL_PWR_EnableWakeUpPin:0000000000000000 HAL_PWR_EnableWakeUpPin
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:423    .text.HAL_PWR_EnableWakeUpPin:000000000000003c $d
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:428    .text.HAL_PWR_DisableWakeUpPin:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:434    .text.HAL_PWR_DisableWakeUpPin:0000000000000000 HAL_PWR_DisableWakeUpPin
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:472    .text.HAL_PWR_DisableWakeUpPin:0000000000000028 $d
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:477    .text.HAL_PWR_EnterSLEEPMode:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:483    .text.HAL_PWR_EnterSLEEPMode:0000000000000000 HAL_PWR_EnterSLEEPMode
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:575    .text.HAL_PWR_EnterSLEEPMode:0000000000000060 $d
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:581    .text.HAL_PWR_EnterSTOPMode:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:587    .text.HAL_PWR_EnterSTOPMode:0000000000000000 HAL_PWR_EnterSTOPMode
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:632    .text.HAL_PWR_EnterSTANDBYMode:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:638    .text.HAL_PWR_EnterSTANDBYMode:0000000000000000 HAL_PWR_EnterSTANDBYMode
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:682    .text.HAL_PWR_EnterSTANDBYMode:000000000000002c $d
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:688    .text.HAL_PWR_EnableSleepOnExit:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:694    .text.HAL_PWR_EnableSleepOnExit:0000000000000000 HAL_PWR_EnableSleepOnExit
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:724    .text.HAL_PWR_EnableSleepOnExit:000000000000001c $d
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:729    .text.HAL_PWR_DisableSleepOnExit:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:735    .text.HAL_PWR_DisableSleepOnExit:0000000000000000 HAL_PWR_DisableSleepOnExit
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:765    .text.HAL_PWR_DisableSleepOnExit:000000000000001c $d
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:770    .text.HAL_PWR_EnableSEVOnPend:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:776    .text.HAL_PWR_EnableSEVOnPend:0000000000000000 HAL_PWR_EnableSEVOnPend
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:806    .text.HAL_PWR_EnableSEVOnPend:000000000000001c $d
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:811    .text.HAL_PWR_DisableSEVOnPend:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:817    .text.HAL_PWR_DisableSEVOnPend:0000000000000000 HAL_PWR_DisableSEVOnPend
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:847    .text.HAL_PWR_DisableSEVOnPend:000000000000001c $d
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:852    .text.HAL_PWR_PVDCallback:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccwXMlJ4.s:858    .text.HAL_PWR_PVDCallback:0000000000000000 HAL_PWR_PVDCallback

UNDEFINED SYMBOLS
HAL_PWREx_DisableLowPowerRunMode
HAL_PWREx_EnableLowPowerRunMode
HAL_PWREx_EnterSTOP1Mode
HAL_PWREx_EnterSTOP0Mode
