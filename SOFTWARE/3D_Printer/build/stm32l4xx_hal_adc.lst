ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32l4xx_hal_adc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.LL_ADC_SetCommonClock,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	LL_ADC_SetCommonClock:
  26              	.LFB133:
  27              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h"
   1:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @file    stm32l4xx_ll_adc.h
   4:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @attention
   8:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
   9:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * Copyright (c) 2017 STMicroelectronics.
  10:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * All rights reserved.
  11:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
  12:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * in the root directory of this software component.
  14:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
  16:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ******************************************************************************
  17:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  18:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  19:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #ifndef STM32L4xx_LL_ADC_H
  21:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define STM32L4xx_LL_ADC_H
  22:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  23:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #ifdef __cplusplus
  24:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** extern "C" {
  25:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
  26:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  27:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #include "stm32l4xx.h"
  29:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  30:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @addtogroup STM32L4xx_LL_Driver
  31:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 2


  32:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  33:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  34:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined (ADC1) || defined (ADC2) || defined (ADC3)
  35:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  36:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  37:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
  38:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  39:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  40:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  43:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
  46:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  47:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  48:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  49:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  50:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - sequencer register offset                                                */
  51:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  52:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  53:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  54:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  55:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 (0x00000000UL)
  56:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 (0x00000100UL)
  57:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 (0x00000200UL)
  58:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 (0x00000300UL)
  59:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  60:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET \
  61:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SQR3_REGOFFSET | ADC_SQR4_REGOFFSET)
  62:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_SQRx_REGOFFSET in ADC_REG_
  63:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  64:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  65:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  66:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  67:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR1_SQ1" po
  68:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR1_SQ2" po
  69:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR1_SQ3" po
  70:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR1_SQ4" po
  71:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  ( 0UL) /* Value equivalent to bitfield "ADC_SQR2_SQ5" po
  72:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR2_SQ6" po
  73:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR2_SQ7" po
  74:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR2_SQ8" po
  75:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR2_SQ9" po
  76:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR3_SQ10" p
  77:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR3_SQ11" p
  78:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (12UL) /* Value equivalent to bitfield "ADC_SQR3_SQ12" p
  79:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS (18UL) /* Value equivalent to bitfield "ADC_SQR3_SQ13" p
  80:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS (24UL) /* Value equivalent to bitfield "ADC_SQR3_SQ14" p
  81:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR4_SQ15" p
  82:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR4_SQ16" p
  83:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  84:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  85:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  86:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
  87:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
  88:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - data register offset                                                     */
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 3


  89:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  90:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  91:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
  92:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  93:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 (0x00000000UL)
  94:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 (0x00000100UL)
  95:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 (0x00000200UL)
  96:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 (0x00000300UL)
  97:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  98:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET \
  99:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_JDR3_REGOFFSET | ADC_JDR4_REGOFFSET)
 100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
 101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_JDRx_REGOFFSET in ADC_INJ_
 102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group injected sequencer bits information to be inserted */
 104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* into ADC group injected sequencer ranks literals definition.               */
 105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_1_JSQR_BITOFFSET_POS  ( 8UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ1" p
 106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_2_JSQR_BITOFFSET_POS  (14UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ2" p
 107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_3_JSQR_BITOFFSET_POS  (20UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ3" p
 108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_4_JSQR_BITOFFSET_POS  (26UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ4" p
 109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
 113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
 114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - regular trigger source                                                   */
 115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - regular trigger edge                                                     */
 116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR_EXTEN_0) /* Trigger edge set to rising edge (
 117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTSEL) << (4U *
 122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN) << (4U * 
 130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
 135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_CFGR_EXTSEL"
 136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Value equivalent to bitfield "ADC_CFGR_EXTEN" 
 137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group injected trigger:                              */
 141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_TRIG_x the relevant bits for:            */
 142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - injected trigger source                                                  */
 143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - injected trigger edge                                                    */
 144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXT_EDGE_DEFAULT      (ADC_JSQR_JEXTEN_0) /* Trigger edge set to rising edge (
 145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 4


 146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_SOURCE_MASK            (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTSEL)  << (4U
 150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EDGE_MASK              (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN) << (4U *
 158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group injected trigger bits information.                 */
 163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS  ( 2UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTSEL
 164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTEN_BITOFFSET_POS   ( 6UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTEN"
 165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
 173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel identifier defined by number                                     */
 174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
 178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR_AWD1CH)
 180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_AWD2CR_AWD2CH)
 181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)/* Value equivalent to bitfield "ADC_CHANNEL_ID_N
 182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_ID_INTERNAL_CH_MASK)
 184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (ADC_SQR2_SQ5) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_2       (0x00080000UL) /* Marker of internal channel for other A
 190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH | ADC_CHANNEL_ID_INTERNAL_CH
 191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
 193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                (0x00000000UL)
 195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                (0x02000000UL)
 196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
 197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SMPRX_REGOFFSET_POS            (25UL) /* Position of bits ADC_SMPRx_REGOFFSET in ADC_CH
 198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    (0x01F00000UL)
 200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20UL)           /* Value equivalent to bitfield "ADC_CH
 201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 5


 203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (ADC_CFGR_AWD1CH_0)
 206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (ADC_CFGR_AWD1CH_1)
 207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (ADC_CFGR_AWD1CH_2)
 209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_0)
 210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1)
 211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (ADC_CFGR_AWD1CH_3)
 213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_0)
 214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1)
 215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2)
 217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | \
 220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR_AWD1CH_4)
 222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_0)
 223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_1)
 224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_AWD2CR_AWD2CH_0)
 228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_AWD2CR_AWD2CH_1)
 229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_AWD2CR_AWD2CH_2)
 230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_AWD2CR_AWD2CH_3)
 231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_AWD2CR_AWD2CH_4)
 232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_AWD2CR_AWD2CH_5)
 233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_AWD2CR_AWD2CH_6)
 234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_AWD2CR_AWD2CH_7)
 235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_AWD2CR_AWD2CH_8)
 236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_AWD2CR_AWD2CH_9)
 237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_AWD2CR_AWD2CH_10)
 238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_AWD2CR_AWD2CH_11)
 239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_AWD2CR_AWD2CH_12)
 240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_AWD2CR_AWD2CH_13)
 241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_AWD2CR_AWD2CH_14)
 242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_AWD2CR_AWD2CH_15)
 243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_AWD2CR_AWD2CH_16)
 244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_AWD2CR_AWD2CH_17)
 245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_AWD2CR_AWD2CH_18)
 246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
 248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR1_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR1_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR1_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR1_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR1_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR1_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR1_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR1_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR1_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR1_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR2_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 6


 260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR2_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR2_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR2_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR2_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR2_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR2_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR2_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_SMP                 (ADC_SMPR2_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC mode single or differential ended:                   */
 271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literals LL_ADC_SINGLE_ENDED or LL_ADC_SINGLE_DIFFERENTIAL  */
 272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* the relevant bits for:                                                     */
 273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
 274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - ADC calibration: calibration start, calibration factor get or set        */
 275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - ADC channels: set each ADC channel ending mode                           */
 276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_START_MASK    (ADC_CR_ADCALDIF)
 277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_FACTOR_MASK   (ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S)
 278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_MASK        (ADC_CHANNEL_ID_BITFIELD_MASK) /* Equivalent to ADC_DIFS
 279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK  (ADC_CALFACT_CALFACT_S_4 | ADC_CALFACT_CALFACT_S_3) /* B
 280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK   (0x00010000UL)                           /* Selection o
 281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_POS    (16UL)                                   /* Selection o
 282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4 (ADC_SINGLEDIFF_CALIB_F_BIT_D_POS - 4UL) /* Shift of bi
 283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   selection on groups.                                                     */
 292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR_AWD1CH | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | 
 306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL) /* Position of bits ADC_AWD_CRx_REGOFFSET in ADC_
 310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET)
 315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)     /* Position of bits ADC_
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 7


 317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC offset:                                              */
 322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC offset number configuration */
 323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR1_REGOFFSET                 (0x00000000UL)
 324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR2_REGOFFSET                 (0x00000001UL)
 325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR3_REGOFFSET                 (0x00000002UL)
 326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR4_REGOFFSET                 (0x00000003UL)
 327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFRx_REGOFFSET_MASK            (ADC_OFR1_REGOFFSET | ADC_OFR2_REGOFFSET \
 328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_OFR3_REGOFFSET | ADC_OFR4_REGOFFSET)
 329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* ADC registers bits positions */
 332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         ( 3UL) /* Value equivalent to bitfield "ADC_CFGR_RES" po
 333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_AWD1SGL_BITOFFSET_POS     (22UL) /* Value equivalent to bitfield "ADC_CFGR_AWD1SGL
 334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_AWD1EN_BITOFFSET_POS      (23UL) /* Value equivalent to bitfield "ADC_CFGR_AWD1EN"
 335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_JAWD1EN_BITOFFSET_POS     (24UL) /* Value equivalent to bitfield "ADC_CFGR_JAWD1EN
 336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (16UL) /* Value equivalent to bitfield "ADC_TR1_HT1" pos
 337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* ADC registers bits groups */
 340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JA
 341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* ADC internal channels related definitions */
 344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF75AAUL)) /* Internal voltage referen
 346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define VREFINT_CAL_VREF                   ( 3000UL)                    /* Analog voltage reference
 347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Temperature sensor */
 348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF75A8UL)) /* Internal temperature sen
 349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF75CAUL)) /* Internal temperature sen
 350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (( int32_t)   30L)           /* Internal temperature sen
 351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx
 352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (110L)                       /* Internal temperature sen
 353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
 354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (130L)                       /* Internal temperature sen
 355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32
 356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3000UL)                     /* Analog voltage reference
 357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a register from a register basis from which an offset
 371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is applied.
 372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 8


 374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Pointer to register address
 375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and multimode
 393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sharing the same ADC common instance):
 397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         disabled.
 399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note On this STM32 series, if ADC group injected is u
 405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    clock ratio constraints between ADC clock and AH
 406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    must be respected. Refer to reference manual.
 407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t Multimode;                   /*!< Set ADC multimode configuration to operate in independ
 412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t MultiDMATransfer;            /*!< Set ADC multimode conversion data transfer: no transfe
 417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t MultiTwoSamplingDelay;       /*!< Set ADC multimode delay between 2 sampling phases.
 422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 9


 431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of ADC group injected depends on STM32 families).
 434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (functions with prefix "REG").
 474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 10


 488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              data preserved or overwritten.
 522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
 531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (functions with prefix "INJ").
 534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
 535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 11


 545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
 563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
 576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC                   ADC_ISR_JEOC       /*!< ADC flag ADC group injected end 
 597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_ISR_JEOS       /*!< ADC flag ADC group injected end 
 598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF                  ADC_ISR_JQOVF      /*!< ADC flag ADC group injected cont
 599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 12


 602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_MST              ADC_CSR_ADRDY_MST  /*!< ADC flag ADC multimode master in
 604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_SLV              ADC_CSR_ADRDY_SLV  /*!< ADC flag ADC multimode slave ins
 605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_MST                ADC_CSR_EOC_MST    /*!< ADC flag ADC multimode master gr
 606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_SLV                ADC_CSR_EOC_SLV    /*!< ADC flag ADC multimode slave gro
 607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_MST                ADC_CSR_EOS_MST    /*!< ADC flag ADC multimode master gr
 608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_SLV                ADC_CSR_EOS_SLV    /*!< ADC flag ADC multimode slave gro
 609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_MST                ADC_CSR_OVR_MST    /*!< ADC flag ADC multimode master gr
 610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_SLV                ADC_CSR_OVR_SLV    /*!< ADC flag ADC multimode slave gro
 611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_MST              ADC_CSR_EOSMP_MST  /*!< ADC flag ADC multimode master gr
 612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_SLV              ADC_CSR_EOSMP_SLV  /*!< ADC flag ADC multimode slave gro
 613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_MST               ADC_CSR_JEOC_MST   /*!< ADC flag ADC multimode master gr
 614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_SLV               ADC_CSR_JEOC_SLV   /*!< ADC flag ADC multimode slave gro
 615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_MST               ADC_CSR_JEOS_MST   /*!< ADC flag ADC multimode master gr
 616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_SLV               ADC_CSR_JEOS_SLV   /*!< ADC flag ADC multimode slave gro
 617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_MST              ADC_CSR_JQOVF_MST  /*!< ADC flag ADC multimode master gr
 618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_SLV              ADC_CSR_JQOVF_SLV  /*!< ADC flag ADC multimode slave gro
 619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_MST               ADC_CSR_AWD1_MST   /*!< ADC flag ADC multimode master an
 620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_SLV               ADC_CSR_AWD1_SLV   /*!< ADC flag ADC multimode slave ana
 621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_MST               ADC_CSR_AWD2_MST   /*!< ADC flag ADC multimode master an
 622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_SLV               ADC_CSR_AWD2_SLV   /*!< ADC flag ADC multimode slave ana
 623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_MST               ADC_CSR_AWD3_MST   /*!< ADC flag ADC multimode master an
 624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_SLV               ADC_CSR_AWD3_SLV   /*!< ADC flag ADC multimode slave ana
 625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JEOC                     ADC_IER_JEOCIE     /*!< ADC interruption ADC group injec
 640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_IER_JEOSIE     /*!< ADC interruption ADC group injec
 641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JQOVF                    ADC_IER_JQOVFIE    /*!< ADC interruption ADC group injec
 642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* DMA transfer.                                                              */
 654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000UL) /* ADC group regular conversion data re
 656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA_MULTI    (0x00000001UL) /* ADC group regular conversion data re
 658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 13


 659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CCR_CKMODE_0)                                    /*
 667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CCR_CKMODE_1                   )                 /*
 668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CCR_CKMODE_1 | ADC_CCR_CKMODE_0)                 /*
 669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                                        /*
 670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)         /*!< ADC measurement paths all di
 694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)         /*!< ADC measurement path to inte
 696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)       /*!< ADC measurement path to inte
 697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                 ADC_CFGR_RES_0)   /*!< ADC resolution 
 706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_1                 )   /*!< ADC resolution 
 707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)   /*!< ADC resolution 
 708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)         /*!< ADC conversion data alignmen
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 14


 716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR_ALIGN)       /*!< ADC conversion data alignmen
 717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)                      /*!< No ADC low powe
 725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR_AUTDLY)                   /*!< ADC low power m
 726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_NB  ADC instance - Offset number
 731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_1                    ADC_OFR1_REGOFFSET /*!< ADC offset number 1: ADC channel
 734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_2                    ADC_OFR2_REGOFFSET /*!< ADC offset number 2: ADC channel
 735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_3                    ADC_OFR3_REGOFFSET /*!< ADC offset number 3: ADC channel
 736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_4                    ADC_OFR4_REGOFFSET /*!< ADC offset number 4: ADC channel
 737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_STATE ADC instance - Offset state
 742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_DISABLE              (0x00000000UL)         /*!< ADC offset disabled (among A
 745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_ENABLE               (ADC_OFR1_OFFSET1_EN)  /*!< ADC offset enabled (among AD
 746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              (0x00000002UL) /*!< ADC group injected (not available on
 755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      (0x00000003UL) /*!< ADC both groups regular and injected
 756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP  | ADC_CHANNE
 764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP  | ADC_CHANNE
 765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP  | ADC_CHANNE
 766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP  | ADC_CHANNE
 767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP  | ADC_CHANNE
 768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP  | ADC_CHANNE
 769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP  | ADC_CHANNE
 770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP  | ADC_CHANNE
 771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP  | ADC_CHANNE
 772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP  | ADC_CHANNE
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 15


 773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP | ADC_CHANNE
 774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP | ADC_CHANNE
 775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP | ADC_CHANNE
 776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP | ADC_CHANNE
 777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP | ADC_CHANNE
 778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP | ADC_CHANNE
 779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP | ADC_CHANNE
 780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP | ADC_CHANNE
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_SMP | ADC_CHANNE
 782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_0  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && !defined(ADC2)
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2             (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC2)
 789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1_ADC2        (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2_ADC2        (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC3)
 792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1_ADC3        (LL_ADC_CHANNEL_14 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2_ADC3        (LL_ADC_CHANNEL_15 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC3 */
 795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC1 && !ADC2 */
 796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                          
 804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1       (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                         
 807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2       (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3       (ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2       (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH4       (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EX
 814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH4       (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                   ADC_CFGR_EXTEN_0)   /*!< ADC group r
 828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR_EXTEN_1                   )   /*!< ADC group r
 829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR_EXTEN_1 | ADC_CFGR_EXTEN_0)   /*!< ADC group r
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 16


 830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)          /*!< ADC conversions are perform
 838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR_CONT)         /*!< ADC conversions are perform
 839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)                        /*!< ADC conversio
 847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                  ADC_CFGR_DMAEN)    /*!< ADC conversio
 848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR_DMACFG | ADC_CFGR_DMAEN)    /*!< ADC conversio
 849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
 854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DFSDM_TRANSFER ADC group regular - DFSDM transfer of ADC conversion dat
 855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DFSDM_TRANSFER_NONE     (0x00000000UL)          /*!< ADC conversions are not tra
 858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DFSDM_TRANSFER_ENABLE   (ADC_CFGR_DFSDMCFG)     /*!< ADC conversion data are tra
 859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_CFGR_DFSDMCFG */
 863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
 865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON_CONFIG ADC instance - ADC sampling time common configur
 866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_DEFAULT      (0x00000000UL)      /*!< ADC sampling time let to d
 869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5 (ADC_SMPR1_SMPPLUS) /*!< ADC additional sampling ti
 870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
 874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)         /*!< ADC group regular behavior i
 879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR_OVRMOD)      /*!< ADC group regular behavior i
 880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
 885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 17


 887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (0x00000000UL)                                          
 888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (                                             ADC_SQR1_L
 889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (                              ADC_SQR1_L_1             
 890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (                              ADC_SQR1_L_1 | ADC_SQR1_L
 891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (               ADC_SQR1_L_2                            
 892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (               ADC_SQR1_L_2                | ADC_SQR1_L
 893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1             
 894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
 895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3                                           
 896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3                               | ADC_SQR1_L
 897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1             
 898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1 | ADC_SQR1_L
 899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                            
 900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                | ADC_SQR1_L
 901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1             
 902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
 903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
 908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                                          
 911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (                                                       
 912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (                                          ADC_CFGR_DISC
 913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (                     ADC_CFGR_DISCNUM_1                
 914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (                     ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
 915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CFGR_DISCNUM_2                                     
 916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CFGR_DISCNUM_2                      | ADC_CFGR_DISC
 917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1                
 918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
 919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
 924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
 927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
 928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
 929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
 930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
 931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
 932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
 933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
 934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
 935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
 936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
 937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
 938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
 939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
 940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
 941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
 942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 18


 944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
 947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (0x00000000UL)                                          
 950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      (ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                         
 951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
 955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_
 956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH1       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
 957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
 958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_TRGO      (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
 960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM6_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
 961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
 962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
 963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
 964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM15_TRGO     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
 965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
 966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
 971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         (                    ADC_JSQR_JEXTEN_0) /*!< ADC group i
 974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_FALLING        (ADC_JSQR_JEXTEN_1                    ) /*!< ADC group i
 975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISINGFALLING  (ADC_JSQR_JEXTEN_1 | ADC_JSQR_JEXTEN_0) /*!< ADC group i
 976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
 981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        (0x00000000UL)         /*!< ADC group injected conversio
 984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CFGR_JAUTO)       /*!< ADC group injected conversio
 985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_CONTEXT_QUEUE  ADC group injected - Context queue mode
 990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE (0x00000000UL)         /* Group injected sequence co
 993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY   (ADC_CFGR_JQM)         /* Group injected sequence co
 994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_DISABLE               (ADC_CFGR_JQDIS)       /* Group injected sequence co
 995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
1000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 19


1001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        (0x00000000UL)                  /*!< ADC group injected 
1003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
1004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
1005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
1006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
1011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     (0x00000000UL)         /*!< ADC group injected sequencer
1014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CFGR_JDISCEN)     /*!< ADC group injected sequencer
1015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
1020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET | ADC_INJ_RANK_1_JSQR_BITOFFSET_POS)
1023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET | ADC_INJ_RANK_2_JSQR_BITOFFSET_POS)
1024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET | ADC_INJ_RANK_3_JSQR_BITOFFSET_POS)
1025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET | ADC_INJ_RANK_4_JSQR_BITOFFSET_POS)
1026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_2CYCLES_5      (0x00000000UL)                                          
1034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_6CYCLES_5      (                                        ADC_SMPR2_SMP10
1035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (                    ADC_SMPR2_SMP10_1                  
1036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_24CYCLES_5     (                    ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_47CYCLES_5     (ADC_SMPR2_SMP10_2                                      
1038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_92CYCLES_5     (ADC_SMPR2_SMP10_2                     | ADC_SMPR2_SMP10
1039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_247CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1                  
1040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_640CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SINGLE_DIFF_ENDING  Channel - Single or differential ending
1046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (                  ADC_CALFACT_CALFACT_S)         /*!< A
1049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DIFFERENTIAL_ENDED          (ADC_CR_ADCALDIF | ADC_CALFACT_CALFACT_D)         /*!< A
1050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_BOTH_SINGLE_DIFF_ENDED      (LL_ADC_SINGLE_ENDED | LL_ADC_DIFFERENTIAL_ENDED) /*!< A
1051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
1056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 20


1058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
1059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR2_REGOFFSET) /*!<
1060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR3_REGOFFSET) /*!<
1061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
1066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
1069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK                              
1070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)              
1073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)              
1076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)              
1079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)              
1082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)              
1085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)              
1088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)              
1091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)              
1094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)              
1097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)              
1100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)              
1103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)              
1106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)              
1109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)              
1112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)              
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 21


1115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)              
1118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)              
1121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)              
1124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)              
1127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_INJ          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG_INJ      ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK)   
1130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK)   
1133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK)   
1136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_INJ             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG_INJ         ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && !defined(ADC2)
1139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_REG          ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK)   
1140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_INJ          ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK) | 
1141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_REG_INJ      ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK) | 
1142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_REG          ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK)   
1143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_INJ          ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK) | 
1144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_REG_INJ      ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK) | 
1145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC2)
1146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK)   
1147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) | 
1148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) | 
1149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK)   
1150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) | 
1151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) | 
1152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC3)
1153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK)   
1154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK) | 
1155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK) | 
1156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK)   
1157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK) | 
1158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK) | 
1159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC3 */
1160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC1 && !ADC2 */
1161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR1_HT1              ) /*!< ADC analog watchdog thr
1169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (              ADC_TR1_LT1) /*!< ADC analog watchdog thr
1170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR1_HT1 | ADC_TR1_LT1) /*!< ADC analog watchdog bot
1171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 22


1172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
1179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_ROVSE) /*
1180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_RESUMED     (ADC_CFGR2_ROVSM |                   ADC_CFGR2_ROVSE) /*
1181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJECTED            (                  ADC_CFGR2_JOVSE                  ) /*
1182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJ_REG_RESUMED     (                  ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE) /*
1183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)         /*!< ADC oversampling discontinuo
1191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TROVS)      /*!< ADC oversampling discontinuo
1192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                                          
1200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                      ADC_CFGR2_OVSR_0)
1201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                   ADC_CFGR2_OVSR_1                   )
1202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                   ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2                                      )
1204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2                    | ADC_CFGR2_OVSR_0)
1205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1                   )
1206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
1212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                                          
1215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
1216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
1217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
1218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
1219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
1220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
1223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
1228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MODE  Multimode - Mode
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 23


1229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_INDEPENDENT           (0x00000000UL)                                          
1232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIMULT       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1       
1233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTERL       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1 | ADC_
1234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_SIMULT       (                 ADC_CCR_DUAL_2                  | ADC_
1235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_ALTERN       (ADC_CCR_DUAL_3                                   | ADC_
1236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM  (                                                   ADC_
1237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT  (                                  ADC_CCR_DUAL_1       
1238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM  (                                  ADC_CCR_DUAL_1 | ADC_
1239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_DMA_TRANSFER  Multimode - DMA transfer
1244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_EACH_ADC        (0x00000000UL)                                     /*!
1247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B (                 ADC_CCR_MDMA_1                 ) /*!
1248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B   (                 ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!
1249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B (ADC_CCR_DMACFG | ADC_CCR_MDMA_1                 ) /*!
1250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B   (ADC_CCR_DMACFG | ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!
1251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_TWOSMP_DELAY  Multimode - Delay between two sampling phases
1256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE   (0x00000000UL)                                          
1259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES  (                                                      A
1260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES  (                                    ADC_CCR_DELAY_1    
1261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES  (                                    ADC_CCR_DELAY_1 | A
1262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES  (                  ADC_CCR_DELAY_2                      
1263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (                  ADC_CCR_DELAY_2                   | A
1264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (                  ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1    
1265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (                  ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1 | A
1266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (ADC_CCR_DELAY_3                                        
1267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (ADC_CCR_DELAY_3                                     | A
1268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (ADC_CCR_DELAY_3                   | ADC_CCR_DELAY_1    
1269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (ADC_CCR_DELAY_3                   | ADC_CCR_DELAY_1 | A
1270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MASTER_SLAVE  Multimode - ADC master or slave
1275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER                (                    ADC_CDR_RDATA_MST) /*!< In multimod
1278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_SLAVE                 (ADC_CDR_RDATA_SLV                    ) /*!< In multimod
1279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER_SLAVE          (ADC_CDR_RDATA_SLV | ADC_CDR_RDATA_MST) /*!< In multimod
1280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
1285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 24


1286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LEGACY ADC literals legacy naming
1287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SW_START           (LL_ADC_REG_TRIG_SOFTWARE)
1290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC1       (LL_ADC_REG_TRIG_EXT_TIM1_CH1)
1291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC2       (LL_ADC_REG_TRIG_EXT_TIM1_CH2)
1292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC3       (LL_ADC_REG_TRIG_EXT_TIM1_CH3)
1293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CC2       (LL_ADC_REG_TRIG_EXT_TIM2_CH2)
1294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CC4       (LL_ADC_REG_TRIG_EXT_TIM3_CH4)
1295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CC4       (LL_ADC_REG_TRIG_EXT_TIM4_CH4)
1296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SW_START           (LL_ADC_INJ_TRIG_SOFTWARE)
1298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CC4       (LL_ADC_INJ_TRIG_EXT_TIM1_CH4)
1299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CC1       (LL_ADC_INJ_TRIG_EXT_TIM2_CH1)
1300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC1       (LL_ADC_INJ_TRIG_EXT_TIM3_CH1)
1301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC3       (LL_ADC_INJ_TRIG_EXT_TIM3_CH3)
1302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC4       (LL_ADC_INJ_TRIG_EXT_TIM3_CH4)
1303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CC4       (LL_ADC_INJ_TRIG_EXT_TIM8_CH4)
1304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_NONE        (LL_ADC_OVS_SHIFT_NONE)
1306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_1           (LL_ADC_OVS_SHIFT_RIGHT_1)
1307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_2           (LL_ADC_OVS_SHIFT_RIGHT_2)
1308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_3           (LL_ADC_OVS_SHIFT_RIGHT_3)
1309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_4           (LL_ADC_OVS_SHIFT_RIGHT_4)
1310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_5           (LL_ADC_OVS_SHIFT_RIGHT_5)
1311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_6           (LL_ADC_OVS_SHIFT_RIGHT_6)
1312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_7           (LL_ADC_OVS_SHIFT_RIGHT_7)
1313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_8           (LL_ADC_OVS_SHIFT_RIGHT_8)
1314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
1321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
1322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         not timeout values.
1323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
1324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         above each literal definition.
1325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
1329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       not timeout values.                                                  */
1330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
1331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
1332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
1333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
1334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       STM32 series:                                                        */
1335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 112/fADC.                   */
1336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
1337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
1338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
1339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
1340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
1341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         cycles                                                             */
1342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 25


1343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         configuration.                                                     */
1344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
1345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
1347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
1349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
1350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)  /*!< Delay for ADC stabilization time (ADC vol
1351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
1353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
1355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
1356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US           ( 12UL)  /*!< Delay for internal voltage reference s
1357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
1359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
1360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* parameter "tSTART").                                                       */
1361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
1362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        (120UL)  /*!< Delay for temperature sensor stabiliza
1363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US ( 15UL)  /*!< Delay for temperature sensor buffer st
1364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
1366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles           */
1367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
1368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
1369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
1370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
1371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
1372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES   (  4UL)  /*!< Delay required between ADC end of cali
1373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
1384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
1385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
1389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Write a value in ADC register
1394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register to be written
1396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
1397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
1398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 26


1400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Read a value in ADC register
1403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register to be read
1405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Register value
1406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
1408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
1413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
1418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
1419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Example:
1420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
1421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will return decimal number "4".
1422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
1423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number is returned, either defined with number
1424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
1425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 27


1457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
1466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                               \
1467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                       \
1468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
1469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                       \
1470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                       \
1471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                       \
1472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
1473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                       \
1474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from number in decimal format.
1479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Example:
1480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 28


1514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
1522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
1523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
1526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9UL) ?                                                                     
1527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                               
1528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                             |     
1529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                             |     
1530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((3UL * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_POS))      
1531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                               
1532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                               
1533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                               
1534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
1535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                                   
1536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((3UL * ((__DECIMAL_NB__) - 10UL))) << ADC_CHANNEL_SMPx_BITOFFSET_PO
1537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                               
1538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC internal channel:
1545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         returned from ADC registers,
1554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         because internal and external channels share the same channel
1555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         parameters definitions of driver.
1557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 29


1571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a value defined from parameter definition of
1611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC registers.
1614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 30


1628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or a value from functions where a channel number is
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 31


1685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         returned from ADC registers,
1686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         because internal and external channels share the same channel
1687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         parameters definitions of driver.
1689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
1707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined (ADC1) && defined (ADC2) && defined (ADC3)
1711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__ADC_INSTANCE__) == ADC1) ?                                              \
1713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                           \
1714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                     \
1717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                           \
1718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                           \
1719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ((__ADC_INSTANCE__) == ADC2) ?                                              \
1720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     (                                                                          \
1721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                         \
1722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                         \
1723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2)                            \
1724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     )                                                                          \
1725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     :                                                                          \
1726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__ADC_INSTANCE__) == ADC3) ?                                             \
1727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      (                                                                         \
1728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                        \
1729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR)   ||                        \
1730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)         ||                        \
1731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC3) ||                        \
1732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC3)                           \
1733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      )                                                                         \
1734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      :                                                                         \
1735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      (0UL)                                                                     \
1736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined (ADC1) && defined (ADC2)
1738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__ADC_INSTANCE__) == ADC1) ?                                              \
1740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                           \
1741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 32


1742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                     \
1744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                           \
1745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                           \
1746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ((__ADC_INSTANCE__) == ADC2) ?                                              \
1747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     (                                                                          \
1748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                         \
1749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                         \
1750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2)                            \
1751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     )                                                                          \
1752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     :                                                                          \
1753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     (0UL)                                                                      \
1754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined (ADC1)
1756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (                                                                            \
1758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)       ||                            \
1761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1)    ||                            \
1762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2)                                  \
1763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* defined (ADC1) && defined (ADC2) && defined (ADC3) */
1765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from sequencer channel and groups definition.
1770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example:
1772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 33


1799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
1814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
1815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
1819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
1820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
1823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
1824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
1825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
1826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
1827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
1828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
1829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
1830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
1831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
1832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
1833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
1834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
1835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
1836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
1837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
1838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
1839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
1840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
1841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
1842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
1843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
1844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
1845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
1846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
1847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
1848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
1849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
1850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
1851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
1852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
1853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
1854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
1855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 34


1856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
1857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
1858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
1859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
1860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
1861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
1862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
1863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
1864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
1865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
1866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
1867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
1868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
1869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
1870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
1871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
1872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
1873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
1874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
1875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
1876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
1877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
1878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
1879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
1880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
1881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
1882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
1883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
1884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
1885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(4)
1886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(4)
1887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (4)
1888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(4)
1889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(4)
1890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (4)
1891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG          (0)(2)(5)
1892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_INJ          (0)(2)(5)
1893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG_INJ         (2)(5)
1894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG          (0)(2)(5)
1895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_INJ          (0)(2)(5)
1896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG_INJ         (2)(5)
1897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)(6)
1898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)(6)
1899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)(6)
1900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)(6)
1901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)(6)
1902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)(6)
1903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     (0)(3)(6)
1904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     (0)(3)(6)
1905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ    (3)(6)
1906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     (0)(3)(6)
1907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     (0)(3)(6)
1908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ    (3)(6)
1909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.\n
1911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 35


1913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.
1915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
1917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
1920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)                  
1921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                               
1922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                          
1923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)                 
1924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                               
1925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL) 
1926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         different of 12 bits.
1932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
1933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            (< ADCx param >,
1938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            );
1940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
1950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         different of 12 bits.
1955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            );
1962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
1968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 36


1970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
1971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
1972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
1975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
1976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
1978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
1979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
1980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
1981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
1982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
1983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)       \
1986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
1987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to set the ADC calibration value with both single ended
1990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and differential modes calibration factors concatenated.
1991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetCalibrationFactor().
1992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, to set calibration factors single ended to 0x55
1993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and differential ended to 0x2A:
1994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetCalibrationFactor(
1995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC1,
1996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(0x55, 0x2A))
1997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_SINGLE_ENDED__ Value between Min_Data=0x00 and Max_Data=0x7F
1998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_DIFFERENTIAL__ Value between Min_Data=0x00 and Max_Data=0x7F
1999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(__CALIB_FACTOR_SINGLE_ENDED__, __CALIB_FACTOR_DIFFERENTIA
2002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__CALIB_FACTOR_DIFFERENTIAL__) << ADC_CALFACT_CALFACT_D_Pos) | (__CALIB_FACTOR_SINGLE_ENDED__)
2003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC multimode conversion data of ADC master
2007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or ADC slave from raw value with both ADC conversion data concatenated.
2008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This macro is intended to be used when multimode transfer by DMA
2009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled: refer to function @ref LL_ADC_SetMultiDMATransfer().
2010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In this case the transferred data need to processed with this macro
2011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to separate the conversion data of ADC master and ADC slave.
2012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_MULTI_MASTER_SLAVE__ This parameter can be one of the following values:
2013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
2014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
2015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_MULTI_CONV_DATA__ Value between Min_Data=0x000 and Max_Data=0xFFF
2016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE(__ADC_MULTI_MASTER_SLAVE__, __ADC_MULTI_CONV_DATA__) 
2019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__ADC_MULTI_CONV_DATA__) >> ((ADC_CDR_RDATA_SLV_Pos) & ~(__ADC_MULTI_MASTER_SLAVE__))) & ADC_C
2020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to select, from a ADC instance, to which ADC instance
2025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         it has a dependence in multimode (ADC master of the corresponding
2026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC common instance).
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 37


2027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of device with multimode available and a mix of
2028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instances compliant and not compliant with multimode feature,
2029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instances not compliant with multimode feature are
2030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         considered as master instances (do not depend to
2031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         any other ADC instance).
2032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval __ADCx__ ADC instance master of the corresponding ADC common instance
2034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC2)
2036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((((__ADCx__) == ADC2))?                                                   \
2038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (ADC1)                                                                    \
2039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                         \
2040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (__ADCx__)                                                                \
2041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
2042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (__ADCx__)
2045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC2 */
2046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
2050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
2051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
2052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
2053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
2054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC common register instance
2057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
2059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (ADC123_COMMON)
2061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
2062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (ADC12_COMMON)
2064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (ADC1_COMMON)
2067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* defined(ADC1) && defined(ADC2) && defined(ADC3) */
2068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
2071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC common instance are disabled.
2072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
2073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
2077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
2078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
2079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
2080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
2082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are disabled.
2083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 38


2084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled.
2085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
2087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
2089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2) |                                                    \
2090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC3)  )
2091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
2092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
2094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2)  )
2095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1))
2098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* defined(ADC1) && defined(ADC2) && defined(ADC3) */
2099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (refer to reference manual).
2106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
2112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))
2115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
2118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a resolution to another resolution.
2119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
2120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
2133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)          \
2137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** (((__DATA__)                                                                 \
2138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))   \
2139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))      \
2140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 39


2141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
2144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
2145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
2149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
2150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                       (unit: digital value).
2151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
2157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
2159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                       __ADC_DATA__,\
2160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                    \
2161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
2162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
2163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Legacy define */
2166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_VOLTAGE()  __LL_ADC_CALC_DATA_TO_VOLTAGE()
2167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
2170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
2171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         reference VrefInt.
2172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
2173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
2175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         connected to pin Vref+.
2176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
2177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
2178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
2179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
2180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal voltage reference VrefInt.
2182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
2185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
2186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
2192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
2194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                 \
2195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
2196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
2197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     (__ADC_RESOLUTION__),                    \
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 40


2198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     LL_ADC_RESOLUTION_12B)                   \
2199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
2205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Calculation formula:
2207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
2208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
2209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
2210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
2211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
2212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
2213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
2214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
2215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
2216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
2217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
2218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  parameters are correct (address and data).
2219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
2220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
2221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  less accurate than calibrated values),
2222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
2223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
2229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
2230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor.
2232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
2235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
2236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
2237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
2238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                 sensor voltage has been measured.
2239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
2247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
2248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                   __ADC_RESOLUTION__)                            \
2249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
2250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                   (__ADC_RESOLUTION__),          \
2251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                   LL_ADC_RESOLUTION_12B)         \
2252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                  * (__VREFANALOG_VOLTAGE__))                                     \
2253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                 / TEMPSENSOR_CAL_VREFANALOG)                                     \
2254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 41


2255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
2256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
2257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  ) + TEMPSENSOR_CAL1_TEMP                                                        \
2258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
2264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (refer to device datasheet).
2265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Calculation formula:
2266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
2267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
2268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
2269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                   (unit: digital value)
2270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
2271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
2272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
2273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
2274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
2275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  of the current device has characteristics in line with
2276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  datasheet typical values.
2277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
2278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
2279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
2280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
2281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
2287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
2288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
2289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
2290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                       On STM32L4, refer to device datasheet parameter "Avg_Slop
2291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
2292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                       On STM32L4, refer to device datasheet parameter "V30" (co
2293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
2294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
2295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
2296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
2297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
2305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
2306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
2307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
2308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
2309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __ADC_RESOLUTION__)            \
2310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** (((((int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
2311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 42


2312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****               * 1000UL)                                                     \
2313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     -                                                                       \
2314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
2315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****               * 1000UL)                                                     \
2316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                        \
2317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                \
2318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                    \
2319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
2331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
2332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
2336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
2339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
2340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
2341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
2344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
2345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
2346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These ADC registers are data registers:
2347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
2348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
2349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
2350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
2351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example:
2352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
2353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
2354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
2355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
2356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
2357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
2358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
2359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
2360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
2361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_DMA_GetRegAddr\n
2362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_MST      LL_ADC_DMA_GetRegAddr\n
2363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_DMA_GetRegAddr
2364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
2366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
2367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA_MULTI (1)
2368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 43


2369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) Available on devices with several ADC instances.
2370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC register address
2371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t data_reg_addr;
2376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   if (Register == LL_ADC_DMA_REG_REGULAR_DATA)
2378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   {
2379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     /* Retrieve address of register DR */
2380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &(ADCx->DR);
2381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   }
2382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   else /* (Register == LL_ADC_DMA_REG_REGULAR_DATA_MULTI) */
2383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   {
2384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     /* Retrieve address of register CDR */
2385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &((__LL_ADC_COMMON_INSTANCE(ADCx))->CDR);
2386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   }
2387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return data_reg_addr;
2389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
2394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (void)(Register);
2395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Retrieve address of register DR */
2397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
2398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
2406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
2411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, if ADC group injected is used, some
2412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         clock ratio constraints between ADC clock and AHB clock
2413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         must be respected.
2414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
2415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_SetCommonClock\n
2422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_SetCommonClock
2423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 44


2426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
2444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
  28              		.loc 1 2444 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 7860     		str	r0, [r7, #4]
  41 0008 3960     		str	r1, [r7]
2445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
  42              		.loc 1 2445 3
  43 000a 7B68     		ldr	r3, [r7, #4]
  44 000c 9B68     		ldr	r3, [r3, #8]
  45 000e 23F47C12 		bic	r2, r3, #4128768
  46 0012 3B68     		ldr	r3, [r7]
  47 0014 1A43     		orrs	r2, r2, r3
  48 0016 7B68     		ldr	r3, [r7, #4]
  49 0018 9A60     		str	r2, [r3, #8]
2446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
  50              		.loc 1 2446 1
  51 001a 00BF     		nop
  52 001c 0C37     		adds	r7, r7, #12
  53              		.cfi_def_cfa_offset 4
  54 001e BD46     		mov	sp, r7
  55              		.cfi_def_cfa_register 13
  56              		@ sp needed
  57 0020 5DF8047B 		ldr	r7, [sp], #4
  58              		.cfi_restore 7
  59              		.cfi_def_cfa_offset 0
  60 0024 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE133:
  64              		.section	.text.LL_ADC_SetCommonPathInternalCh,"ax",%progbits
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 45


  65              		.align	1
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  70              	LL_ADC_SetCommonPathInternalCh:
  71              	.LFB135:
2447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
2450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_GetCommonClock\n
2451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_GetCommonClock
2452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
2472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC));
2474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
2480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         The values not selected are removed from configuration.
2484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor stabilization time.
2488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US, 
2491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
2492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a sampling time minimum value is required.
2495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
2497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 46


2498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
2499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
2509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
  72              		.loc 1 2509 1
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 8
  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77 0000 80B4     		push	{r7}
  78              		.cfi_def_cfa_offset 4
  79              		.cfi_offset 7, -4
  80 0002 83B0     		sub	sp, sp, #12
  81              		.cfi_def_cfa_offset 16
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  84 0006 7860     		str	r0, [r7, #4]
  85 0008 3960     		str	r1, [r7]
2510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
  86              		.loc 1 2510 3
  87 000a 7B68     		ldr	r3, [r7, #4]
  88 000c 9B68     		ldr	r3, [r3, #8]
  89 000e 23F0E072 		bic	r2, r3, #29360128
  90 0012 3B68     		ldr	r3, [r7]
  91 0014 1A43     		orrs	r2, r2, r3
  92 0016 7B68     		ldr	r3, [r7, #4]
  93 0018 9A60     		str	r2, [r3, #8]
2511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
  94              		.loc 1 2511 1
  95 001a 00BF     		nop
  96 001c 0C37     		adds	r7, r7, #12
  97              		.cfi_def_cfa_offset 4
  98 001e BD46     		mov	sp, r7
  99              		.cfi_def_cfa_register 13
 100              		@ sp needed
 101 0020 5DF8047B 		ldr	r7, [sp], #4
 102              		.cfi_restore 7
 103              		.cfi_def_cfa_offset 0
 104 0024 7047     		bx	lr
 105              		.cfi_endproc
 106              	.LFE135:
 108              		.section	.text.LL_ADC_GetCommonPathInternalCh,"ax",%progbits
 109              		.align	1
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 114              	LL_ADC_GetCommonPathInternalCh:
 115              	.LFB138:
2512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 47


2513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Add paths to the current configuration.
2517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor stabilization time.
2524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US, 
2527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
2528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a sampling time minimum value is required.
2531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
2533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
2534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChAdd
2535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
2547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Remove paths to the current configuration.
2553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
2557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
2558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChRem
2559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 48


2570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
2571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
2575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
2580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
2581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
2582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
2591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 116              		.loc 1 2591 1
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 8
 119              		@ frame_needed = 1, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121 0000 80B4     		push	{r7}
 122              		.cfi_def_cfa_offset 4
 123              		.cfi_offset 7, -4
 124 0002 83B0     		sub	sp, sp, #12
 125              		.cfi_def_cfa_offset 16
 126 0004 00AF     		add	r7, sp, #0
 127              		.cfi_def_cfa_register 7
 128 0006 7860     		str	r0, [r7, #4]
2592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
 129              		.loc 1 2592 21
 130 0008 7B68     		ldr	r3, [r7, #4]
 131 000a 9B68     		ldr	r3, [r3, #8]
 132              		.loc 1 2592 10
 133 000c 03F0E073 		and	r3, r3, #29360128
2593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 134              		.loc 1 2593 1
 135 0010 1846     		mov	r0, r3
 136 0012 0C37     		adds	r7, r7, #12
 137              		.cfi_def_cfa_offset 4
 138 0014 BD46     		mov	sp, r7
 139              		.cfi_def_cfa_register 13
 140              		@ sp needed
 141 0016 5DF8047B 		ldr	r7, [sp], #4
 142              		.cfi_restore 7
 143              		.cfi_def_cfa_offset 0
 144 001a 7047     		bx	lr
 145              		.cfi_endproc
 146              	.LFE138:
 148              		.section	.text.LL_ADC_SetOffset,"ax",%progbits
 149              		.align	1
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 49


 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 154              	LL_ADC_SetOffset:
 155              	.LFB147:
2594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
2600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without having to perform a new calibration using
2608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
2610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
2612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (calibration factor must be specified for each of these
2613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
2614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         requires their calibration).
2615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
2616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
2617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         both calibration factors must be concatenated.
2618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         To perform this processing, use helper macro
2619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
2620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on group regular.
2624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationFactor\n
2625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationFactor
2626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOTH_SINGLE_DIFF_ENDED
2631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff, uint32_t C
2635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
2638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >> ADC_SINGLED
2639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 50


2646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
2647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
2649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationFactor\n
2650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationFactor
2651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff)
2658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Retrieve bits with position in register depending on parameter           */
2660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "SingleDiff".                                                            */
2661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameter used with mask "ADC_SINGLEDIFF_CALIB_FACTOR_MASK" because      */
2662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
2663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT,
2664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) >> ((SingleDiff & ADC
2665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                                   ADC_SINGLEDIFF_CA
2666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC resolution.
2670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_SetResolution
2677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
2686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
2688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC resolution.
2692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_GetResolution
2695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 51


2703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
2705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
2709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_SetDataAlignment
2716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
2718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
2723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_ALIGN, DataAlignment);
2725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
2729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_GetDataAlignment
2732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
2738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_ALIGN));
2740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC low power mode.
2744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           in order to reduce power consumption.
2748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
2751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           has been retrieved by user software.
2752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           other conversion.
2754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           applications.
2758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           How to use this low power mode:
2759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 52


2760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC conversion start.
2770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of delay during which ADC was idle.
2779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
2782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_SetLowPowerMode
2787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_AUTDLY, LowPowerMode);
2796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC low power mode:
2800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           in order to reduce power consumption.
2804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
2807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           has been retrieved by user software.
2808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           other conversion.
2810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           applications.
2814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           How to use this low power mode:
2815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 53


2817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC conversion start.
2826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of delay during which ADC was idle.
2835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
2838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_GetLowPowerMode
2839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
2845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_AUTDLY));
2847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC selected offset number 1, 2, 3 or 4.
2851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function set the 2 items of offset configuration:
2852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC channel to which the offset programmed will be applied
2853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (independently of channel mapped on ADC group regular
2854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or group injected)
2855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
2856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           converted data).
2857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
2858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
2859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are set to 0.
2860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function enables the offset, by default. It can be forced
2861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to disable state using function LL_ADC_SetOffsetState().
2862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If a channel is mapped on several offsets numbers, only the offset
2863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with the lowest value is considered for the subtraction.
2864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
2869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
2870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_SetOffset\n
2871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR1     OFFSET1        LL_ADC_SetOffset\n
2872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR1     OFFSET1_EN     LL_ADC_SetOffset\n
2873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_SetOffset\n
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 54


2874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_SetOffset\n
2875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffset\n
2876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_SetOffset\n
2877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_SetOffset\n
2878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffset\n
2879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_SetOffset\n
2880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_SetOffset\n
2881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffset
2882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
2884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
2885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
2886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
2887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
2888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
2889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
2891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
2892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
2893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
2894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
2895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
2910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
2922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
2924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
2925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
2926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0xFFF
2927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32
2930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 55


 156              		.loc 1 2930 1
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 24
 159              		@ frame_needed = 1, uses_anonymous_args = 0
 160              		@ link register save eliminated.
 161 0000 80B4     		push	{r7}
 162              		.cfi_def_cfa_offset 4
 163              		.cfi_offset 7, -4
 164 0002 87B0     		sub	sp, sp, #28
 165              		.cfi_def_cfa_offset 32
 166 0004 00AF     		add	r7, sp, #0
 167              		.cfi_def_cfa_register 7
 168 0006 F860     		str	r0, [r7, #12]
 169 0008 B960     		str	r1, [r7, #8]
 170 000a 7A60     		str	r2, [r7, #4]
 171 000c 3B60     		str	r3, [r7]
2931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 172              		.loc 1 2931 25
 173 000e FB68     		ldr	r3, [r7, #12]
 174 0010 6033     		adds	r3, r3, #96
 175 0012 1A46     		mov	r2, r3
 176 0014 BB68     		ldr	r3, [r7, #8]
 177 0016 9B00     		lsls	r3, r3, #2
 178 0018 1344     		add	r3, r3, r2
 179              		.loc 1 2931 18
 180 001a 7B61     		str	r3, [r7, #20]
2932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
 181              		.loc 1 2933 3
 182 001c 7B69     		ldr	r3, [r7, #20]
 183 001e 1A68     		ldr	r2, [r3]
 184 0020 084B     		ldr	r3, .L6
 185 0022 1340     		ands	r3, r3, r2
 186 0024 7A68     		ldr	r2, [r7, #4]
 187 0026 02F0F841 		and	r1, r2, #2080374784
 188 002a 3A68     		ldr	r2, [r7]
 189 002c 0A43     		orrs	r2, r2, r1
 190 002e 1343     		orrs	r3, r3, r2
 191 0030 43F00042 		orr	r2, r3, #-2147483648
 192 0034 7B69     		ldr	r3, [r7, #20]
 193 0036 1A60     		str	r2, [r3]
2934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
2935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
2936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 194              		.loc 1 2936 1
 195 0038 00BF     		nop
 196 003a 1C37     		adds	r7, r7, #28
 197              		.cfi_def_cfa_offset 4
 198 003c BD46     		mov	sp, r7
 199              		.cfi_def_cfa_register 13
 200              		@ sp needed
 201 003e 5DF8047B 		ldr	r7, [sp], #4
 202              		.cfi_restore 7
 203              		.cfi_def_cfa_offset 0
 204 0042 7047     		bx	lr
 205              	.L7:
 206              		.align	2
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 56


 207              	.L6:
 208 0044 00F0FF03 		.word	67104768
 209              		.cfi_endproc
 210              	.LFE147:
 212              		.section	.text.LL_ADC_GetOffsetChannel,"ax",%progbits
 213              		.align	1
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 218              	LL_ADC_GetOffsetChannel:
 219              	.LFB148:
2937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
2940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Channel to which the offset programmed will be applied
2941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (independently of channel mapped on ADC group regular
2942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or group injected)
2943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
2944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
2945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
2946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
2947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
2948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
2950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
2951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
2952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
2953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
2955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
2956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_GetOffsetChannel\n
2957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_GetOffsetChannel\n
2958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_GetOffsetChannel\n
2959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_GetOffsetChannel
2960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
2962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
2963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
2964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
2965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
2966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
2969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
2970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
2971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
2972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
2973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 57


2983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
2988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
3000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
3001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
3002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
3003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
3005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
3006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(ADC_TypeDef *ADCx, uint32_t Offsety)
3009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 220              		.loc 1 3009 1
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 16
 223              		@ frame_needed = 1, uses_anonymous_args = 0
 224              		@ link register save eliminated.
 225 0000 80B4     		push	{r7}
 226              		.cfi_def_cfa_offset 4
 227              		.cfi_offset 7, -4
 228 0002 85B0     		sub	sp, sp, #20
 229              		.cfi_def_cfa_offset 24
 230 0004 00AF     		add	r7, sp, #0
 231              		.cfi_def_cfa_register 7
 232 0006 7860     		str	r0, [r7, #4]
 233 0008 3960     		str	r1, [r7]
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 234              		.loc 1 3010 31
 235 000a 7B68     		ldr	r3, [r7, #4]
 236 000c 6033     		adds	r3, r3, #96
 237 000e 1A46     		mov	r2, r3
 238 0010 3B68     		ldr	r3, [r7]
 239 0012 9B00     		lsls	r3, r3, #2
 240 0014 1344     		add	r3, r3, r2
 241              		.loc 1 3010 24
 242 0016 FB60     		str	r3, [r7, #12]
3011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
 243              		.loc 1 3012 10
 244 0018 FB68     		ldr	r3, [r7, #12]
 245 001a 1B68     		ldr	r3, [r3]
 246 001c 03F0F843 		and	r3, r3, #2080374784
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 58


3013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 247              		.loc 1 3013 1
 248 0020 1846     		mov	r0, r3
 249 0022 1437     		adds	r7, r7, #20
 250              		.cfi_def_cfa_offset 4
 251 0024 BD46     		mov	sp, r7
 252              		.cfi_def_cfa_register 13
 253              		@ sp needed
 254 0026 5DF8047B 		ldr	r7, [sp], #4
 255              		.cfi_restore 7
 256              		.cfi_def_cfa_offset 0
 257 002a 7047     		bx	lr
 258              		.cfi_endproc
 259              	.LFE148:
 261              		.section	.text.LL_ADC_SetOffsetState,"ax",%progbits
 262              		.align	1
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 267              	LL_ADC_SetOffsetState:
 268              	.LFB150:
3014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Offset level (offset to be subtracted from the raw
3018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         converted data).
3019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are set to 0.
3022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1        LL_ADC_GetOffsetLevel\n
3023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_GetOffsetLevel\n
3024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_GetOffsetLevel\n
3025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_GetOffsetLevel
3026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetLevel(ADC_TypeDef *ADCx, uint32_t Offsety)
3035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1);
3039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         force offset state disable or enable
3044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without modifying offset channel or offset value.
3045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function should be needed only in case of offset to be
3046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled-disabled dynamically, and should not be needed in other cases:
3047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function LL_ADC_SetOffset() automatically enables the offset.
3048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 59


3050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_SetOffsetState\n
3053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffsetState\n
3054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffsetState\n
3055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffsetState
3056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OffsetState This parameter can be one of the following values:
3063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetStat
3068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 269              		.loc 1 3068 1
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 24
 272              		@ frame_needed = 1, uses_anonymous_args = 0
 273              		@ link register save eliminated.
 274 0000 80B4     		push	{r7}
 275              		.cfi_def_cfa_offset 4
 276              		.cfi_offset 7, -4
 277 0002 87B0     		sub	sp, sp, #28
 278              		.cfi_def_cfa_offset 32
 279 0004 00AF     		add	r7, sp, #0
 280              		.cfi_def_cfa_register 7
 281 0006 F860     		str	r0, [r7, #12]
 282 0008 B960     		str	r1, [r7, #8]
 283 000a 7A60     		str	r2, [r7, #4]
3069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 284              		.loc 1 3069 25
 285 000c FB68     		ldr	r3, [r7, #12]
 286 000e 6033     		adds	r3, r3, #96
 287 0010 1A46     		mov	r2, r3
 288 0012 BB68     		ldr	r3, [r7, #8]
 289 0014 9B00     		lsls	r3, r3, #2
 290 0016 1344     		add	r3, r3, r2
 291              		.loc 1 3069 18
 292 0018 7B61     		str	r3, [r7, #20]
3070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
 293              		.loc 1 3071 3
 294 001a 7B69     		ldr	r3, [r7, #20]
 295 001c 1B68     		ldr	r3, [r3]
 296 001e 23F00042 		bic	r2, r3, #-2147483648
 297 0022 7B68     		ldr	r3, [r7, #4]
 298 0024 1A43     		orrs	r2, r2, r3
 299 0026 7B69     		ldr	r3, [r7, #20]
 300 0028 1A60     		str	r2, [r3]
3072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
3073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              OffsetState);
3074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 60


 301              		.loc 1 3074 1
 302 002a 00BF     		nop
 303 002c 1C37     		adds	r7, r7, #28
 304              		.cfi_def_cfa_offset 4
 305 002e BD46     		mov	sp, r7
 306              		.cfi_def_cfa_register 13
 307              		@ sp needed
 308 0030 5DF8047B 		ldr	r7, [sp], #4
 309              		.cfi_restore 7
 310              		.cfi_def_cfa_offset 0
 311 0034 7047     		bx	lr
 312              		.cfi_endproc
 313              	.LFE150:
 315              		.section	.text.LL_ADC_SetSamplingTimeCommonConfig,"ax",%progbits
 316              		.align	1
 317              		.syntax unified
 318              		.thumb
 319              		.thumb_func
 321              	LL_ADC_SetSamplingTimeCommonConfig:
 322              	.LFB152:
3075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         offset state disabled or enabled.
3079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_GetOffsetState\n
3080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_GetOffsetState\n
3081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_GetOffsetState\n
3082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_GetOffsetState
3083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety)
3094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_EN);
3098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
3101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC sampling time common configuration impacting
3103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_SetSamplingTimeCommonConfig
3109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SamplingTimeCommonConfig This parameter can be one of the following values:
3111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 61


3112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonConfig(ADC_TypeDef *ADCx, uint32_t SamplingTimeCom
3116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 323              		.loc 1 3116 1
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 8
 326              		@ frame_needed = 1, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328 0000 80B4     		push	{r7}
 329              		.cfi_def_cfa_offset 4
 330              		.cfi_offset 7, -4
 331 0002 83B0     		sub	sp, sp, #12
 332              		.cfi_def_cfa_offset 16
 333 0004 00AF     		add	r7, sp, #0
 334              		.cfi_def_cfa_register 7
 335 0006 7860     		str	r0, [r7, #4]
 336 0008 3960     		str	r1, [r7]
3117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR1, ADC_SMPR1_SMPPLUS, SamplingTimeCommonConfig);
 337              		.loc 1 3117 3
 338 000a 7B68     		ldr	r3, [r7, #4]
 339 000c 5B69     		ldr	r3, [r3, #20]
 340 000e 23F00042 		bic	r2, r3, #-2147483648
 341 0012 3B68     		ldr	r3, [r7]
 342 0014 1A43     		orrs	r2, r2, r3
 343 0016 7B68     		ldr	r3, [r7, #4]
 344 0018 5A61     		str	r2, [r3, #20]
3118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 345              		.loc 1 3118 1
 346 001a 00BF     		nop
 347 001c 0C37     		adds	r7, r7, #12
 348              		.cfi_def_cfa_offset 4
 349 001e BD46     		mov	sp, r7
 350              		.cfi_def_cfa_register 13
 351              		@ sp needed
 352 0020 5DF8047B 		ldr	r7, [sp], #4
 353              		.cfi_restore 7
 354              		.cfi_def_cfa_offset 0
 355 0024 7047     		bx	lr
 356              		.cfi_endproc
 357              	.LFE152:
 359              		.section	.text.LL_ADC_REG_IsTriggerSourceSWStart,"ax",%progbits
 360              		.align	1
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 365              	LL_ADC_REG_IsTriggerSourceSWStart:
 366              	.LFB156:
3119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC sampling time common configuration impacting
3122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_GetSamplingTimeCommonConfig
3124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 62


3127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonConfig(ADC_TypeDef *ADCx)
3130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SMPR1, ADC_SMPR1_SMPPLUS));
3132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_SMPR1_SMPPLUS */
3134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
3137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
3140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
3141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
3145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
3153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_SetTriggerSource\n
3160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_SetTriggerSource
3161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 63


3184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN | ADC_CFGR_EXTSEL, TriggerSource);
3185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
3189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
3192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
3193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (equivalent to
3195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
3196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
3197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_GetTriggerSource\n
3200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_GetTriggerSource
3201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
3222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->CFGR, ADC_CFGR_EXTSEL | ADC_CFGR_EXTEN);
3224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* corresponding to ADC_CFGR_EXTEN {0; 1; 2; 3}.                            */
3227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2U
3228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR_EXTEN and ADC_CFGR_EXTSEL         */
3230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((TriggerSource
3232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR_EXTSEL)
3233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR_EXTEN)
3234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****          );
3235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
3239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or external.
3240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 64


3241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
3243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
3244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
3249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 367              		.loc 1 3249 1
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 8
 370              		@ frame_needed = 1, uses_anonymous_args = 0
 371              		@ link register save eliminated.
 372 0000 80B4     		push	{r7}
 373              		.cfi_def_cfa_offset 4
 374              		.cfi_offset 7, -4
 375 0002 83B0     		sub	sp, sp, #12
 376              		.cfi_def_cfa_offset 16
 377 0004 00AF     		add	r7, sp, #0
 378              		.cfi_def_cfa_register 7
 379 0006 7860     		str	r0, [r7, #4]
3250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1
 380              		.loc 1 3250 12
 381 0008 7B68     		ldr	r3, [r7, #4]
 382 000a DB68     		ldr	r3, [r3, #12]
 383 000c 03F44063 		and	r3, r3, #3072
 384              		.loc 1 3250 103
 385 0010 002B     		cmp	r3, #0
 386 0012 01D1     		bne	.L13
 387              		.loc 1 3250 103 is_stmt 0 discriminator 1
 388 0014 0123     		movs	r3, #1
 389 0016 00E0     		b	.L15
 390              	.L13:
 391              		.loc 1 3250 103 discriminator 2
 392 0018 0023     		movs	r3, #0
 393              	.L15:
3251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 394              		.loc 1 3251 1 is_stmt 1 discriminator 5
 395 001a 1846     		mov	r0, r3
 396 001c 0C37     		adds	r7, r7, #12
 397              		.cfi_def_cfa_offset 4
 398 001e BD46     		mov	sp, r7
 399              		.cfi_def_cfa_register 13
 400              		@ sp needed
 401 0020 5DF8047B 		ldr	r7, [sp], #4
 402              		.cfi_restore 7
 403              		.cfi_def_cfa_offset 0
 404 0024 7047     		bx	lr
 405              		.cfi_endproc
 406              	.LFE156:
 408              		.section	.text.LL_ADC_REG_SetSequencerRanks,"ax",%progbits
 409              		.align	1
 410              		.syntax unified
 411              		.thumb
 412              		.thumb_func
 414              	LL_ADC_REG_SetSequencerRanks:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 65


 415              	.LFB163:
3252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
3255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_SetTriggerEdge
3261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
3269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN, ExternalTriggerEdge);
3271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
3275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_GetTriggerEdge
3277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
3284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN));
3286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
3290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are configurable.
3295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function performs configuration of:
3296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are defined by channel number.
3305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function performs configuration of:
3306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 66


3308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             highest channel number).
3313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_SetSequencerLength
3322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
3324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
3335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
3337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
3343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
3345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
3349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are configurable.
3354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function retrieves:
3355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are defined by channel number.
3364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function retrieves:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 67


3365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             highest channel number).
3372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_GetSequencerLength
3377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
3390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
3392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef *ADCx)
3397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
3399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
3403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
3405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
3408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
3409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_SetSequencerDiscont\n
3414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_SetSequencerDiscont
3415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
3417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
3420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
3421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 68


3422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
3423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
3424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
3425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
3426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
3429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM, SeqDiscont);
3431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
3435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
3437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_GetSequencerDiscont\n
3438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_GetSequencerDiscont
3439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
3444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
3445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
3446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
3447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
3448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
3449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
3450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
3452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM));
3454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
3458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         scan sequence rank.
3459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function performs configuration of:
3460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
3462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         affectation to a channel are configurable.
3465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled separately.
3471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_SetSequencerRanks\n
3477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_SetSequencerRanks\n
3478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_SetSequencerRanks\n
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 69


3479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_SetSequencerRanks\n
3480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_SetSequencerRanks\n
3481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_SetSequencerRanks\n
3482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
3483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
3484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
3485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_SetSequencerRanks\n
3486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_SetSequencerRanks\n
3487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_SetSequencerRanks\n
3488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_SetSequencerRanks\n
3489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_SetSequencerRanks\n
3490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_SetSequencerRanks\n
3491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_SetSequencerRanks
3492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
3503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
3504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
3505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
3506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
3507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
3508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
3509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
3510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
3532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
3533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
3534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
3535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 70


3536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
3537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
3538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
3539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
3540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
3541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
3542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
3543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
3544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
3545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
3546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
3547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
3551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 416              		.loc 1 3551 1
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 24
 419              		@ frame_needed = 1, uses_anonymous_args = 0
 420              		@ link register save eliminated.
 421 0000 80B4     		push	{r7}
 422              		.cfi_def_cfa_offset 4
 423              		.cfi_offset 7, -4
 424 0002 87B0     		sub	sp, sp, #28
 425              		.cfi_def_cfa_offset 32
 426 0004 00AF     		add	r7, sp, #0
 427              		.cfi_def_cfa_register 7
 428 0006 F860     		str	r0, [r7, #12]
 429 0008 B960     		str	r1, [r7, #8]
 430 000a 7A60     		str	r2, [r7, #4]
3552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
3553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
3554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
3555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> A
 431              		.loc 1 3556 25
 432 000c FB68     		ldr	r3, [r7, #12]
 433 000e 3033     		adds	r3, r3, #48
 434 0010 1A46     		mov	r2, r3
 435 0012 BB68     		ldr	r3, [r7, #8]
 436 0014 1B0A     		lsrs	r3, r3, #8
 437 0016 9B00     		lsls	r3, r3, #2
 438 0018 03F00C03 		and	r3, r3, #12
 439 001c 1344     		add	r3, r3, r2
 440              		.loc 1 3556 18
 441 001e 7B61     		str	r3, [r7, #20]
3557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
 442              		.loc 1 3558 3
 443 0020 7B69     		ldr	r3, [r7, #20]
 444 0022 1A68     		ldr	r2, [r3]
 445 0024 BB68     		ldr	r3, [r7, #8]
 446 0026 03F01F03 		and	r3, r3, #31
 447 002a 1F21     		movs	r1, #31
 448 002c 01FA03F3 		lsl	r3, r1, r3
 449 0030 DB43     		mvns	r3, r3
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 71


 450 0032 1A40     		ands	r2, r2, r3
 451 0034 7B68     		ldr	r3, [r7, #4]
 452 0036 9B0E     		lsrs	r3, r3, #26
 453 0038 03F01F01 		and	r1, r3, #31
 454 003c BB68     		ldr	r3, [r7, #8]
 455 003e 03F01F03 		and	r3, r3, #31
 456 0042 01FA03F3 		lsl	r3, r1, r3
 457 0046 1A43     		orrs	r2, r2, r3
 458 0048 7B69     		ldr	r3, [r7, #20]
 459 004a 1A60     		str	r2, [r3]
3559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
3560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
3561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 460              		.loc 1 3561 1
 461 004c 00BF     		nop
 462 004e 1C37     		adds	r7, r7, #28
 463              		.cfi_def_cfa_offset 4
 464 0050 BD46     		mov	sp, r7
 465              		.cfi_def_cfa_register 13
 466              		@ sp needed
 467 0052 5DF8047B 		ldr	r7, [sp], #4
 468              		.cfi_restore 7
 469              		.cfi_def_cfa_offset 0
 470 0056 7047     		bx	lr
 471              		.cfi_endproc
 472              	.LFE163:
 474              		.section	.text.LL_ADC_INJ_IsTriggerSourceSWStart,"ax",%progbits
 475              		.align	1
 476              		.syntax unified
 477              		.thumb
 478              		.thumb_func
 480              	LL_ADC_INJ_IsTriggerSourceSWStart:
 481              	.LFB175:
3562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
3565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         scan sequence rank.
3566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         affectation to a channel are configurable.
3569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
3580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
3582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_GetSequencerRanks\n
3584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_GetSequencerRanks\n
3585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_GetSequencerRanks\n
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 72


3586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_GetSequencerRanks\n
3587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_GetSequencerRanks\n
3588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_GetSequencerRanks\n
3589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
3590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
3591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
3592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_GetSequencerRanks\n
3593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_GetSequencerRanks\n
3594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_GetSequencerRanks\n
3595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_GetSequencerRanks\n
3596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_GetSequencerRanks\n
3597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_GetSequencerRanks\n
3598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_GetSequencerRanks
3599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
3610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
3611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
3612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
3613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
3614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
3615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
3616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
3617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
3639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
3640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
3641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
3642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 73


3643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
3644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
3645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
3646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
3647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
3648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
3649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
3650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
3651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
3652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
3653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
3654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
3656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
3657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
3660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK
3662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(*preg,
3664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MA
3665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
3666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
3667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
3671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           conversions launched successively automatically.
3675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_SetContinuousMode
3682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
3684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
3689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_CONT, Continuous);
3691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
3695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           conversions launched successively automatically.
3699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_GetContinuousMode
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 74


3700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
3706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_CONT));
3708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
3712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode:
3715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
3717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
3718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
3722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
3725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
3728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
3729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_SetMultiDMATransfer().
3730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransfer\n
3737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_SetDMATransfer
3738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
3740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
3746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG, DMATransfer);
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
3752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode:
3755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 75


3757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
3758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
3762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
3765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
3768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
3769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_GetMultiDMATransfer().
3770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_GetDMATransfer\n
3773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_GetDMATransfer
3774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
3781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG));
3783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
3786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer to DFSDM.
3788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   DFSDM transfer cannot be used if DMA transfer is enabled.
3789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To configure DFSDM source address (peripheral address),
3790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use the same function as for DMA transfer:
3791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_DMA_GetRegAddr().
3792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DFSDMCFG       LL_ADC_REG_GetDFSDMTransfer
3797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  DFSDMTransfer This parameter can be one of the following values:
3799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_NONE
3800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_ENABLE
3801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDFSDMTransfer(ADC_TypeDef *ADCx, uint32_t DFSDMTransfer)
3804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DFSDMCFG, DFSDMTransfer);
3806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer to DFSDM.
3810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DFSDMCFG       LL_ADC_REG_GetDFSDMTransfer
3811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_NONE
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 76


3814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_ENABLE
3815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDFSDMTransfer(ADC_TypeDef *ADCx)
3817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DFSDMCFG));
3819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_CFGR_DFSDMCFG */
3821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
3824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         data preserved or overwritten.
3825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
3826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         other devices without this feature have a behavior
3827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         equivalent to data overwritten.
3828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
3829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
3830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         overrun should be set to data overwritten.
3831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_SetOverrun
3836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
3838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
3843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_OVRMOD, Overrun);
3845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
3849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         data preserved or overwritten.
3850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_GetOverrun
3851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
3857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_OVRMOD));
3859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
3863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
3866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
3867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 77


3871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_INJ_SetTriggerEdge().
3879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
3884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
3885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_SetTriggerSource\n
3886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_SetTriggerSource
3887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
3890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
3891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
3892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
3893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
3894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
3895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
3896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
3897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
3898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
3899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
3900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
3901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
3902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
3903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
3904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
3905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
3906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN, TriggerSource);
3911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
3915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
3918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
3919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (equivalent to
3921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
3922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
3923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_GetTriggerSource\n
3926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_GetTriggerSource
3927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 78


3928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
3930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
3931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
3932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
3933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
3934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
3935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
3936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
3937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
3938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
3939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
3940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
3941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
3942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
3943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
3944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
3945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
3946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(ADC_TypeDef *ADCx)
3948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN);
3950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* corresponding to ADC_JSQR_JEXTEN {0; 1; 2; 3}.                           */
3953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t ShiftJexten = ((TriggerSource & ADC_JSQR_JEXTEN) >> (ADC_INJ_TRIG_EXTEN_BITOFFSET_POS - 
3954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_JSQR_JEXTEN and ADC_JSQR_JEXTSEL       */
3956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((TriggerSource
3958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****            & (ADC_INJ_TRIG_SOURCE_MASK >> ShiftJexten) & ADC_JSQR_JEXTSEL)
3959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****           | ((ADC_INJ_TRIG_EDGE_MASK >> ShiftJexten) & ADC_JSQR_JEXTEN)
3960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****          );
3961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
3965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****             or external
3966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
3967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
3969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_IsTriggerSourceSWStart
3970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
3975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 482              		.loc 1 3975 1
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 8
 485              		@ frame_needed = 1, uses_anonymous_args = 0
 486              		@ link register save eliminated.
 487 0000 80B4     		push	{r7}
 488              		.cfi_def_cfa_offset 4
 489              		.cfi_offset 7, -4
 490 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 79


 491              		.cfi_def_cfa_offset 16
 492 0004 00AF     		add	r7, sp, #0
 493              		.cfi_def_cfa_register 7
 494 0006 7860     		str	r0, [r7, #4]
3976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN) == (LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN)) ?
 495              		.loc 1 3976 12
 496 0008 7B68     		ldr	r3, [r7, #4]
 497 000a DB6C     		ldr	r3, [r3, #76]
 498 000c 03F0C003 		and	r3, r3, #192
 499              		.loc 1 3976 105
 500 0010 002B     		cmp	r3, #0
 501 0012 01D1     		bne	.L18
 502              		.loc 1 3976 105 is_stmt 0 discriminator 1
 503 0014 0123     		movs	r3, #1
 504 0016 00E0     		b	.L20
 505              	.L18:
 506              		.loc 1 3976 105 discriminator 2
 507 0018 0023     		movs	r3, #0
 508              	.L20:
3977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 509              		.loc 1 3977 1 is_stmt 1 discriminator 5
 510 001a 1846     		mov	r0, r3
 511 001c 0C37     		adds	r7, r7, #12
 512              		.cfi_def_cfa_offset 4
 513 001e BD46     		mov	sp, r7
 514              		.cfi_def_cfa_register 13
 515              		@ sp needed
 516 0020 5DF8047B 		ldr	r7, [sp], #4
 517              		.cfi_restore 7
 518              		.cfi_def_cfa_offset 0
 519 0024 7047     		bx	lr
 520              		.cfi_endproc
 521              	.LFE175:
 523              		.section	.text.LL_ADC_SetChannelSamplingTime,"ax",%progbits
 524              		.align	1
 525              		.syntax unified
 526              		.thumb
 527              		.thumb_func
 529              	LL_ADC_SetChannelSamplingTime:
 530              	.LFB189:
3978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger polarity.
3981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
3982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
3985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
3986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_SetTriggerEdge
3987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
3990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
3991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
3992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 80


3995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTEN, ExternalTriggerEdge);
3997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger polarity.
4001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_GetTriggerEdge
4003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerEdge(ADC_TypeDef *ADCx)
4010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN));
4012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
4016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function performs configuration of:
4017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
4027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
4038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
4042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function retrieves:
4043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
4049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 81


4052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(ADC_TypeDef *ADCx)
4057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
4059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
4063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
4065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_SetSequencerDiscont
4068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JDISCEN, SeqDiscont);
4077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
4081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
4083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_GetSequencerDiscont
4084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(ADC_TypeDef *ADCx)
4090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JDISCEN));
4092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
4096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence rank.
4097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled separately.
4102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
4104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 82


4109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
4110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
4111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
4112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
4113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
4163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 83


4166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
4167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
4172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence rank.
4173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
4183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
4185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_GetSequencerRanks\n
4187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_GetSequencerRanks\n
4188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_GetSequencerRanks\n
4189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_GetSequencerRanks
4190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 84


4223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
4235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
4236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->JSQR,
4241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                               (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) <
4242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                      >> (Rank & ADC_INJ_RANK_ID_JSQR_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
4244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
4248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         independent or from ADC group regular.
4249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
4250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data
4251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
4252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
4253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
4254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on ADC group injected.
4255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
4256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external trigger, this feature must be must be set to
4257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         independent trigger.
4258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with
4259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         group injected trigger source set to SW start, without any
4260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop:
4261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         in this case, ADC group injected is controlled only
4262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC group regular.
4263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_SetTrigAuto
4270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
4272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
4277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JAUTO, TrigAuto);
4279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 85


4280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
4283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         independent or from ADC group regular.
4284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_GetTrigAuto
4285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(ADC_TypeDef *ADCx)
4291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JAUTO));
4293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected contexts queue mode.
4297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - group injected trigger
4299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer length
4300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer ranks
4301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If contexts queue is disabled:
4302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - only 1 sequence can be configured
4303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           and is active perpetually.
4304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If contexts queue is enabled:
4305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - up to 2 contexts can be queued
4306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           and are checked in and out as a FIFO stack (first-in, first-out).
4307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If a new context is set when queues is full, error is triggered
4308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           by interruption "Injected Queue Overflow".
4309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Two behaviors are possible when all contexts have been processed:
4310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the contexts queue can maintain the last context active perpetually
4311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or can be empty and injected group triggers are disabled.
4312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Triggers can be only external (not internal SW start)
4313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Caution: The sequence must be fully configured in one time
4314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (one write of register JSQR makes a check-in of a new context
4315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           into the queue).
4316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Therefore functions to set separately injected trigger and
4317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer channels cannot be used, register JSQR must be set
4318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           using function @ref LL_ADC_INJ_ConfigQueueContext().
4319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This parameter can be modified only when no conversion is on going
4320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   A modification of the context mode (bit JQDIS) causes the contexts
4322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         queue to be flushed and the register JSQR is cleared.
4323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_SetQueueMode\n
4328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_SetQueueMode
4329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  QueueMode This parameter can be one of the following values:
4331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
4332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
4333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetQueueMode(ADC_TypeDef *ADCx, uint32_t QueueMode)
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 86


4337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS, QueueMode);
4339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected context queue mode.
4343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_GetQueueMode\n
4344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_GetQueueMode
4345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
4348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
4349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetQueueMode(ADC_TypeDef *ADCx)
4352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS));
4354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set one context on ADC group injected that will be checked in
4358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         contexts queue.
4359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - group injected trigger
4361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer length
4362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer ranks
4363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This function is intended to be used when contexts queue is enabled,
4364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         because the sequence must be fully configured in one time
4365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (functions to set separately injected trigger and sequencer channels
4366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         cannot be used):
4367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_INJ_SetQueueMode().
4368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In the contexts queue, only the active context can be read.
4369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         The parameters of this function can be read using functions:
4370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerSource()
4371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerEdge()
4372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetSequencerRanks()
4373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled separately.
4376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
4378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_ConfigQueueContext\n
4384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_ConfigQueueContext\n
4385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JL             LL_ADC_INJ_ConfigQueueContext\n
4386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ1           LL_ADC_INJ_ConfigQueueContext\n
4387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_ConfigQueueContext\n
4388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_ConfigQueueContext\n
4389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_ConfigQueueContext
4390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 87


4394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
4400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
4401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
4402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Note: This parameter is discarded in case of SW start:
4415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *               parameter "TriggerSource" set to "LL_ADC_INJ_TRIG_SOFTWARE".
4416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank1_Channel This parameter can be one of the following values:
4422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 88


4451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank2_Channel This parameter can be one of the following values:
4460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank3_Channel This parameter can be one of the following values:
4498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 89


4508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank4_Channel This parameter can be one of the following values:
4536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 90


4565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_ConfigQueueContext(ADC_TypeDef *ADCx,
4576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t TriggerSource,
4577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t ExternalTriggerEdge,
4578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t SequencerNbRanks,
4579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank1_Channel,
4580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank2_Channel,
4581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank3_Channel,
4582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank4_Channel)
4583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Rankx_Channel" with bits position    */
4585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register depending on literal "LL_ADC_INJ_RANK_x".                    */
4586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "Rankx_Channel" and "LL_ADC_INJ_RANK_x" are used with masks   */
4587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* because containing other bits reserved for other purpose.                */
4588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* If parameter "TriggerSource" is set to SW start, then parameter          */
4589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "ExternalTriggerEdge" is discarded.                                      */
4590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t is_trigger_not_sw = (uint32_t)((TriggerSource != LL_ADC_INJ_TRIG_SOFTWARE) ? 1UL : 0UL);
4591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JEXTSEL |
4593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JEXTEN  |
4594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ4    |
4595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ3    |
4596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ2    |
4597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ1    |
4598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JL,
4599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (TriggerSource & ADC_JSQR_JEXTSEL)          |
4600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (ExternalTriggerEdge * (is_trigger_not_sw)) |
4601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank4_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank3_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank2_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank1_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SequencerNbRanks
4606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****             );
4607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
4611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
4614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
4615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
4619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
4620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
4621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 91


4622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
4623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         converted:
4624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
4625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
4626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         setting).
4627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
4628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TS_temp, ...).
4629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
4630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
4631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
4632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
4633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
4634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
4635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
4636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
4637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is required.
4638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
4639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
4644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
4645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
4646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
4647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
4648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
4649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
4650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
4651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
4652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
4653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
4654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
4655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
4656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
4657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
4658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
4659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
4660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
4661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
4662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 92


4679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
4702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
4703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
4704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
4705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
4706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
4707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
4708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
4709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
4710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
4712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
4713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
4714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
4717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 531              		.loc 1 4717 1
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 24
 534              		@ frame_needed = 1, uses_anonymous_args = 0
 535              		@ link register save eliminated.
 536 0000 80B4     		push	{r7}
 537              		.cfi_def_cfa_offset 4
 538              		.cfi_offset 7, -4
 539 0002 87B0     		sub	sp, sp, #28
 540              		.cfi_def_cfa_offset 32
 541 0004 00AF     		add	r7, sp, #0
 542              		.cfi_def_cfa_register 7
 543 0006 F860     		str	r0, [r7, #12]
 544 0008 B960     		str	r1, [r7, #8]
 545 000a 7A60     		str	r2, [r7, #4]
4718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
4719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
4720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 93


4721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_M
 546              		.loc 1 4722 25
 547 000c FB68     		ldr	r3, [r7, #12]
 548 000e 1433     		adds	r3, r3, #20
 549 0010 1A46     		mov	r2, r3
 550 0012 BB68     		ldr	r3, [r7, #8]
 551 0014 5B0E     		lsrs	r3, r3, #25
 552 0016 9B00     		lsls	r3, r3, #2
 553 0018 03F00403 		and	r3, r3, #4
 554 001c 1344     		add	r3, r3, r2
 555              		.loc 1 4722 18
 556 001e 7B61     		str	r3, [r7, #20]
4723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
 557              		.loc 1 4724 3
 558 0020 7B69     		ldr	r3, [r7, #20]
 559 0022 1A68     		ldr	r2, [r3]
 560 0024 BB68     		ldr	r3, [r7, #8]
 561 0026 1B0D     		lsrs	r3, r3, #20
 562 0028 03F01F03 		and	r3, r3, #31
 563 002c 0721     		movs	r1, #7
 564 002e 01FA03F3 		lsl	r3, r1, r3
 565 0032 DB43     		mvns	r3, r3
 566 0034 1A40     		ands	r2, r2, r3
 567 0036 BB68     		ldr	r3, [r7, #8]
 568 0038 1B0D     		lsrs	r3, r3, #20
 569 003a 03F01F03 		and	r3, r3, #31
 570 003e 7968     		ldr	r1, [r7, #4]
 571 0040 01FA03F3 		lsl	r3, r1, r3
 572 0044 1A43     		orrs	r2, r2, r3
 573 0046 7B69     		ldr	r3, [r7, #20]
 574 0048 1A60     		str	r2, [r3]
4725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
4726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
4727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 575              		.loc 1 4727 1
 576 004a 00BF     		nop
 577 004c 1C37     		adds	r7, r7, #28
 578              		.cfi_def_cfa_offset 4
 579 004e BD46     		mov	sp, r7
 580              		.cfi_def_cfa_register 13
 581              		@ sp needed
 582 0050 5DF8047B 		ldr	r7, [sp], #4
 583              		.cfi_restore 7
 584              		.cfi_def_cfa_offset 0
 585 0054 7047     		bx	lr
 586              		.cfi_endproc
 587              	.LFE189:
 589              		.section	.text.LL_ADC_SetChannelSingleDiff,"ax",%progbits
 590              		.align	1
 591              		.syntax unified
 592              		.thumb
 593              		.thumb_func
 595              	LL_ADC_SetChannelSingleDiff:
 596              	.LFB191:
4728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 94


4729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
4731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
4732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
4733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
4734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
4735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
4736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
4737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
4738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
4739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
4740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
4741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
4742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
4743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
4744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
4745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
4746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
4747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
4748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
4749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
4750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
4751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
4752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
4753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
4754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
4755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
4756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
4757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
4758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
4759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 95


4786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
4800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
4801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
4802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
4803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
4804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
4805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
4806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
4807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
4809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
4810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
4811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel)
4813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOF
4815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
4817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_
4818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                     >> ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_P
4819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
4820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set mode single-ended or differential input of the selected
4824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
4825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Channel ending is on channel scope: independently of channel mapped
4826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on ADC group regular or injected.
4827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In differential mode: Differential measurement is carried out
4828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         between the selected channel 'i' (positive input) and
4829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         channel 'i+1' (negative input). Only channel 'i' has to be
4830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         configured, channel 'i+1' is configured automatically.
4831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
4832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         available in differential mode.
4833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
4834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         not available in differential mode.
4835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
4836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
4837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, channels 16, 17, 18 of ADC1, ADC2, ADC3 (if available)
4838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are internally fixed to single-ended inputs configuration.
4839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For ADC channels configured in differential mode, both inputs
4840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         should be biased at (Vref+)/2 +/-200mV.
4841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (Vref+ is the analog voltage reference)
4842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 96


4843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
4845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
4846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_SetChannelSingleDiff
4848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
4851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
4852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
4853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
4854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
4855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be a combination of the following values:
4866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
4867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
4868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sing
4871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 597              		.loc 1 4871 1
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 16
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601              		@ link register save eliminated.
 602 0000 80B4     		push	{r7}
 603              		.cfi_def_cfa_offset 4
 604              		.cfi_offset 7, -4
 605 0002 85B0     		sub	sp, sp, #20
 606              		.cfi_def_cfa_offset 24
 607 0004 00AF     		add	r7, sp, #0
 608              		.cfi_def_cfa_register 7
 609 0006 F860     		str	r0, [r7, #12]
 610 0008 B960     		str	r1, [r7, #8]
 611 000a 7A60     		str	r2, [r7, #4]
4872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
4873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
4874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
4875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->DIFSEL,
 612              		.loc 1 4875 3
 613 000c FB68     		ldr	r3, [r7, #12]
 614 000e D3F8B020 		ldr	r2, [r3, #176]
 615 0012 BB68     		ldr	r3, [r7, #8]
 616 0014 C3F31203 		ubfx	r3, r3, #0, #19
 617 0018 DB43     		mvns	r3, r3
 618 001a 1A40     		ands	r2, r2, r3
 619 001c 7B68     		ldr	r3, [r7, #4]
 620 001e 03F01803 		and	r3, r3, #24
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 97


 621 0022 0849     		ldr	r1, .L23
 622 0024 D940     		lsrs	r1, r1, r3
 623 0026 BB68     		ldr	r3, [r7, #8]
 624 0028 0B40     		ands	r3, r3, r1
 625 002a C3F31203 		ubfx	r3, r3, #0, #19
 626 002e 1A43     		orrs	r2, r2, r3
 627 0030 FB68     		ldr	r3, [r7, #12]
 628 0032 C3F8B020 		str	r2, [r3, #176]
4876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
4877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SING
4878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 629              		.loc 1 4878 1
 630 0036 00BF     		nop
 631 0038 1437     		adds	r7, r7, #20
 632              		.cfi_def_cfa_offset 4
 633 003a BD46     		mov	sp, r7
 634              		.cfi_def_cfa_register 13
 635              		@ sp needed
 636 003c 5DF8047B 		ldr	r7, [sp], #4
 637              		.cfi_restore 7
 638              		.cfi_def_cfa_offset 0
 639 0040 7047     		bx	lr
 640              	.L24:
 641 0042 00BF     		.align	2
 642              	.L23:
 643 0044 FFFF0700 		.word	524287
 644              		.cfi_endproc
 645              	.LFE191:
 647              		.section	.text.LL_ADC_SetAnalogWDMonitChannels,"ax",%progbits
 648              		.align	1
 649              		.syntax unified
 650              		.thumb
 651              		.thumb_func
 653              	LL_ADC_SetAnalogWDMonitChannels:
 654              	.LFB193:
4879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get mode single-ended or differential input of the selected
4882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
4883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
4884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
4885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, to ensure a channel is configured in single-ended mode,
4886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the configuration of channel itself and the channel 'i-1' must be
4887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         read back (to ensure that the selected channel channel has not been
4888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         configured in differential mode by the previous channel).
4889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
4890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         available in differential mode.
4891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
4892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         not available in differential mode.
4893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
4894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
4895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, channels 16, 17, 18 of ADC1, ADC2, ADC3 (if available)
4896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are internally fixed to single-ended inputs configuration.
4897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected. In this case, the value
4898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         returned is null if all channels are in single ended-mode.
4899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_GetChannelSingleDiff
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 98


4901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
4903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
4904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
4905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
4906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
4907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
4908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: channel in single-ended mode, else: channel in differential mode
4919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel)
4921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
4923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
4927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
4930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
4931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
4935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
4936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on ADC groups regular and-or injected.
4937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
4938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled.
4939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
4940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
4941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
4942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
4943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
4944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
4945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
4946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
4947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
4949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
4950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
4951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
4952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
4953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
4954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
4955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
4956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
4957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 99


4958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
4959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
4960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
4961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
4962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
4963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
4968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
4969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
4970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_SetAnalogWDMonitChannels\n
4971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
4972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
4973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
4977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
4978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
4979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
4980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
4981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
4982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
4983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
4984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
4985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
4986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
4987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
4988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
4989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
4990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
4991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
4992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
4993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
4994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
4995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
4996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
4997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
4998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
4999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 100


5015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
5041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
5042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
5043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(4)
5044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(4)
5045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (4)
5046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(4)
5047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(4)
5048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (4)
5049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG          (0)(2)(5)
5050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_INJ          (0)(2)(5)
5051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG_INJ         (2)(5)
5052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG          (0)(2)(5)
5053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_INJ          (0)(2)(5)
5054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG_INJ         (2)(5)
5055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)(6)
5056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)(6)
5057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)(6)
5058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)(6)
5059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)(6)
5060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)(6)
5061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     (0)(3)(6)
5062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     (0)(3)(6)
5063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ    (3)(6)
5064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     (0)(3)(6)
5065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     (0)(3)(6)
5066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ    (3)(6)
5067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.\n
5069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
5070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
5071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 101


5072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.
5073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
5074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
5075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 655              		.loc 1 5078 1
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 24
 658              		@ frame_needed = 1, uses_anonymous_args = 0
 659              		@ link register save eliminated.
 660 0000 80B4     		push	{r7}
 661              		.cfi_def_cfa_offset 4
 662              		.cfi_offset 7, -4
 663 0002 87B0     		sub	sp, sp, #28
 664              		.cfi_def_cfa_offset 32
 665 0004 00AF     		add	r7, sp, #0
 666              		.cfi_def_cfa_register 7
 667 0006 F860     		str	r0, [r7, #12]
 668 0008 B960     		str	r1, [r7, #8]
 669 000a 7A60     		str	r2, [r7, #4]
5079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
5080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
5081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
5082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> AD
 670              		.loc 1 5083 25
 671 000c FB68     		ldr	r3, [r7, #12]
 672 000e 0C33     		adds	r3, r3, #12
 673 0010 1846     		mov	r0, r3
 674 0012 BB68     		ldr	r3, [r7, #8]
 675 0014 1B0D     		lsrs	r3, r3, #20
 676 0016 03F00301 		and	r1, r3, #3
 677 001a BB68     		ldr	r3, [r7, #8]
 678 001c 03F00102 		and	r2, r3, #1
 679 0020 1346     		mov	r3, r2
 680 0022 DB00     		lsls	r3, r3, #3
 681 0024 1344     		add	r3, r3, r2
 682 0026 9B00     		lsls	r3, r3, #2
 683 0028 0B44     		add	r3, r3, r1
 684 002a 9B00     		lsls	r3, r3, #2
 685 002c 0344     		add	r3, r3, r0
 686              		.loc 1 5083 18
 687 002e 7B61     		str	r3, [r7, #20]
5084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
5085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
 688              		.loc 1 5086 3
 689 0030 7B69     		ldr	r3, [r7, #20]
 690 0032 1A68     		ldr	r2, [r3]
 691 0034 BB68     		ldr	r3, [r7, #8]
 692 0036 23F00243 		bic	r3, r3, #-2113929216
 693 003a 23F46013 		bic	r3, r3, #3670016
 694 003e DB43     		mvns	r3, r3
 695 0040 1A40     		ands	r2, r2, r3
 696 0042 7968     		ldr	r1, [r7, #4]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 102


 697 0044 BB68     		ldr	r3, [r7, #8]
 698 0046 0B40     		ands	r3, r3, r1
 699 0048 1A43     		orrs	r2, r2, r3
 700 004a 7B69     		ldr	r3, [r7, #20]
 701 004c 1A60     		str	r2, [r3]
5087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
5088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              AWDChannelGroup & AWDy);
5089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 702              		.loc 1 5089 1
 703 004e 00BF     		nop
 704 0050 1C37     		adds	r7, r7, #28
 705              		.cfi_def_cfa_offset 4
 706 0052 BD46     		mov	sp, r7
 707              		.cfi_def_cfa_register 13
 708              		@ sp needed
 709 0054 5DF8047B 		ldr	r7, [sp], #4
 710              		.cfi_restore 7
 711              		.cfi_def_cfa_offset 0
 712 0058 7047     		bx	lr
 713              		.cfi_endproc
 714              	.LFE193:
 716              		.section	.text.LL_ADC_ConfigAnalogWDThresholds,"ax",%progbits
 717              		.align	1
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 722              	LL_ADC_ConfigAnalogWDThresholds:
 723              	.LFB195:
5090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
5093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
5094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
5095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
5096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
5097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
5100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
5101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
5102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
5103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
5105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           one channel.
5106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
5108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 103


5119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
5132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
5133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
5134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_GetAnalogWDMonitChannels\n
5135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
5136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
5137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
5141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
5142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
5144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
5145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
5146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
5147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             by bitfield.
5148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 104


5176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.
5212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy)
5214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)
5216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC
5217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t AnalogWDMonitChannels = (READ_BIT(*preg, AWDy) & ADC_AWD_CR_ALL_CHANNEL_MASK);
5219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* If "AnalogWDMonitChannels" == 0, then the selected AWD is disabled       */
5221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
5222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
5223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* or a single channel.                                                     */
5224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   if (AnalogWDMonitChannels != 0UL)
5225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   {
5226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
5227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     {
5228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_CFGR_AWD1SGL) == 0UL)
5229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
5230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = ((AnalogWDMonitChannels
5232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                   | (ADC_AWD_CR23_CHANNEL_MASK)
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 105


5233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  )
5234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  & (~(ADC_CFGR_AWD1CH))
5235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                 );
5236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
5237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       else
5238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
5239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a single channel */
5240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  | (ADC_AWD2CR_AWD2CH_0 << (AnalogWDMonitChannels >> ADC_CFGR_AWD1C
5242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                 );
5243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
5244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     }
5245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     else
5246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     {
5247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
5248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
5249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = (ADC_AWD_CR23_CHANNEL_MASK
5251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  | ((ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN))
5252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                 );
5253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
5254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       else
5255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
5256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a single channel */
5257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  | (ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)
5260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDMonitChannels) << ADC_CF
5261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                 );
5262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
5263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     }
5264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   }
5265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return AnalogWDMonitChannels;
5267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
5271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         high and low.
5272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
5273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
5274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
5279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 106


5290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
5299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
5300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
5301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
5302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
5307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
5308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
5309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
5310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
5311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
5312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
5318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
5319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
5323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 724              		.loc 1 5323 1
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 24
 727              		@ frame_needed = 1, uses_anonymous_args = 0
 728              		@ link register save eliminated.
 729 0000 80B4     		push	{r7}
 730              		.cfi_def_cfa_offset 4
 731              		.cfi_offset 7, -4
 732 0002 87B0     		sub	sp, sp, #28
 733              		.cfi_def_cfa_offset 32
 734 0004 00AF     		add	r7, sp, #0
 735              		.cfi_def_cfa_register 7
 736 0006 F860     		str	r0, [r7, #12]
 737 0008 B960     		str	r1, [r7, #8]
 738 000a 7A60     		str	r2, [r7, #4]
 739 000c 3B60     		str	r3, [r7]
5324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
5325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
5326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "AWDy".                                                                  */
5327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
5328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC
 740              		.loc 1 5329 25
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 107


 741 000e FB68     		ldr	r3, [r7, #12]
 742 0010 2033     		adds	r3, r3, #32
 743 0012 1A46     		mov	r2, r3
 744 0014 BB68     		ldr	r3, [r7, #8]
 745 0016 1B0D     		lsrs	r3, r3, #20
 746 0018 9B00     		lsls	r3, r3, #2
 747 001a 03F00C03 		and	r3, r3, #12
 748 001e 1344     		add	r3, r3, r2
 749              		.loc 1 5329 18
 750 0020 7B61     		str	r3, [r7, #20]
5330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
 751              		.loc 1 5331 3
 752 0022 7B69     		ldr	r3, [r7, #20]
 753 0024 1B68     		ldr	r3, [r3]
 754 0026 03F0F022 		and	r2, r3, #-268374016
 755 002a 7B68     		ldr	r3, [r7, #4]
 756 002c 1904     		lsls	r1, r3, #16
 757 002e 3B68     		ldr	r3, [r7]
 758 0030 0B43     		orrs	r3, r3, r1
 759 0032 1A43     		orrs	r2, r2, r3
 760 0034 7B69     		ldr	r3, [r7, #20]
 761 0036 1A60     		str	r2, [r3]
5332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
5333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
5334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 762              		.loc 1 5334 1
 763 0038 00BF     		nop
 764 003a 1C37     		adds	r7, r7, #28
 765              		.cfi_def_cfa_offset 4
 766 003c BD46     		mov	sp, r7
 767              		.cfi_def_cfa_register 13
 768              		@ sp needed
 769 003e 5DF8047B 		ldr	r7, [sp], #4
 770              		.cfi_restore 7
 771              		.cfi_def_cfa_offset 0
 772 0042 7047     		bx	lr
 773              		.cfi_endproc
 774              	.LFE195:
 776              		.section	.text.LL_ADC_GetMultimode,"ax",%progbits
 777              		.align	1
 778              		.syntax unified
 779              		.thumb
 780              		.thumb_func
 782              	LL_ADC_GetMultimode:
 783              	.LFB206:
5335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
5338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         high or low.
5339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
5340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
5341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 108


5346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
5366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
5367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
5368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
5369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either ADC groups regular or injected.
5373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
5374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
5375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
5376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
5377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
5378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
5379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
5385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
5386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
5387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
5388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
5391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
5392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
5394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
5395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
5396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
5397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
5399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_TRX_RE
5400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
5402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              AWDThresholdsHighLow,
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 109


5403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
5404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
5408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
5409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         concatenated.
5410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
5411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
5412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         using helper macro:
5413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
5414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
5417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
5418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
5419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
5420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
5421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
5422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
5423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
5429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
5430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
5431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
5432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
5433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AW
5435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
5437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_
5438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
5440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR1_LT1))
5441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
5442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                         & ~(AWDThresholdsHighLow & ADC_TR1_LT1)));
5443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
5447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
5450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
5451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling scope: ADC groups regular and-or injected
5455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
5456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
5457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
5458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
5459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 110


5460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
5461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (oversampler buffer reset).
5462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_SetOverSamplingScope\n
5467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_SetOverSamplingScope\n
5468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_SetOverSamplingScope
5469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
5471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
5472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
5473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
5474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
5475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
5476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
5479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM, OvsScope);
5481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling scope: ADC groups regular and-or injected
5485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
5486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
5487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
5488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
5489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
5490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
5491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (oversampler buffer reset).
5492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_GetOverSamplingScope\n
5493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_GetOverSamplingScope\n
5494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_GetOverSamplingScope
5495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
5498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
5499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
5500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
5501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
5502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
5504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM));
5506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
5510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on the selected ADC group.
5511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
5512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
5513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are done from 1 trigger)
5514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
5515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           needs a trigger)
5516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 111


5517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
5520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, oversampling discontinuous mode
5521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (triggered mode) can be used only when oversampling is
5522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         set on group regular only and in resumed mode.
5523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_SetOverSamplingDiscont
5524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
5526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
5527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
5528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
5531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TROVS, OverSamplingDiscont);
5533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
5537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on the selected ADC group.
5538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
5539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
5540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are done from 1 trigger)
5541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
5542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           needs a trigger)
5543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_GetOverSamplingDiscont
5544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
5547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
5548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
5550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TROVS));
5552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling
5556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (impacting both ADC groups regular and injected)
5557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
5558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ratio
5559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - shift
5560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
5565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
5566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
5568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
5569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
5570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
5571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
5572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
5573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 112


5574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
5575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
5576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
5577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
5578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
5579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
5580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
5581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
5582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
5583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
5584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
5585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
5586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
5589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
5591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
5595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
5596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
5597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
5599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
5600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
5601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
5602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
5603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
5604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
5605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
5606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
5607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
5609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
5611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
5615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
5616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
5617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
5619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
5620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
5621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
5622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
5623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
5624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
5625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
5626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
5627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
5628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
5630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 113


5631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
5632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
5636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Multimode Configuration of ADC hierarchical scope: multim
5639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
5640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
5643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode configuration to operate in independent mode
5645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
5646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
5647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         either master or slave depending on hardware.
5648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
5649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
5652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
5653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro
5654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
5655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_SetMultimode
5656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Multimode This parameter can be one of the following values:
5659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
5660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
5661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
5662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
5663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
5664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
5665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
5666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
5667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultimode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Multimode)
5670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DUAL, Multimode);
5672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode configuration to operate in independent mode
5676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
5677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
5678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         either master or slave depending on hardware.
5679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
5680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_GetMultimode
5681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
5685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
5686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
5687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 114


5688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
5689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
5690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
5691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
5692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultimode(ADC_Common_TypeDef *ADCxy_COMMON)
5694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 784              		.loc 1 5694 1
 785              		.cfi_startproc
 786              		@ args = 0, pretend = 0, frame = 8
 787              		@ frame_needed = 1, uses_anonymous_args = 0
 788              		@ link register save eliminated.
 789 0000 80B4     		push	{r7}
 790              		.cfi_def_cfa_offset 4
 791              		.cfi_offset 7, -4
 792 0002 83B0     		sub	sp, sp, #12
 793              		.cfi_def_cfa_offset 16
 794 0004 00AF     		add	r7, sp, #0
 795              		.cfi_def_cfa_register 7
 796 0006 7860     		str	r0, [r7, #4]
5695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
 797              		.loc 1 5695 21
 798 0008 7B68     		ldr	r3, [r7, #4]
 799 000a 9B68     		ldr	r3, [r3, #8]
 800              		.loc 1 5695 10
 801 000c 03F01F03 		and	r3, r3, #31
5696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 802              		.loc 1 5696 1
 803 0010 1846     		mov	r0, r3
 804 0012 0C37     		adds	r7, r7, #12
 805              		.cfi_def_cfa_offset 4
 806 0014 BD46     		mov	sp, r7
 807              		.cfi_def_cfa_register 13
 808              		@ sp needed
 809 0016 5DF8047B 		ldr	r7, [sp], #4
 810              		.cfi_restore 7
 811              		.cfi_def_cfa_offset 0
 812 001a 7047     		bx	lr
 813              		.cfi_endproc
 814              	.LFE206:
 816              		.section	.text.LL_ADC_GetMultiDMATransfer,"ax",%progbits
 817              		.align	1
 818              		.syntax unified
 819              		.thumb
 820              		.thumb_func
 822              	LL_ADC_GetMultiDMATransfer:
 823              	.LFB208:
5697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode conversion data transfer: no transfer
5700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or transfer by DMA.
5701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
5702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
5703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         DMA transfer settings.
5704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
5705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
5706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 115


5707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
5708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
5709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
5710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
5711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
5712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
5713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
5714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
5715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
5716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
5717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
5718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
5719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
5720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
5721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
5722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
5723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
5724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
5725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
5726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
5727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
5728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled
5731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or enabled without conversion on going on group regular.
5732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_SetMultiDMATransfer\n
5733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_SetMultiDMATransfer
5734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  MultiDMATransfer This parameter can be one of the following values:
5737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
5738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
5739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
5740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
5741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
5742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t MultiDMA
5745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG, MultiDMATransfer);
5747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data transfer: no transfer
5751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or transfer by DMA.
5752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
5753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
5754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         DMA transfer settings.
5755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
5756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
5757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
5758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
5759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
5760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
5761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
5762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
5763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 116


5764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
5765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
5766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
5767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
5768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
5769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
5770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
5771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
5772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
5773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
5774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
5775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
5776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
5777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
5778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
5779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_GetMultiDMATransfer\n
5780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_GetMultiDMATransfer
5781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
5785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
5786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
5787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
5788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
5789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON)
5791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 824              		.loc 1 5791 1
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 8
 827              		@ frame_needed = 1, uses_anonymous_args = 0
 828              		@ link register save eliminated.
 829 0000 80B4     		push	{r7}
 830              		.cfi_def_cfa_offset 4
 831              		.cfi_offset 7, -4
 832 0002 83B0     		sub	sp, sp, #12
 833              		.cfi_def_cfa_offset 16
 834 0004 00AF     		add	r7, sp, #0
 835              		.cfi_def_cfa_register 7
 836 0006 7860     		str	r0, [r7, #4]
5792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG));
 837              		.loc 1 5792 21
 838 0008 7B68     		ldr	r3, [r7, #4]
 839 000a 9B68     		ldr	r3, [r3, #8]
 840              		.loc 1 5792 10
 841 000c 03F46043 		and	r3, r3, #57344
5793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 842              		.loc 1 5793 1
 843 0010 1846     		mov	r0, r3
 844 0012 0C37     		adds	r7, r7, #12
 845              		.cfi_def_cfa_offset 4
 846 0014 BD46     		mov	sp, r7
 847              		.cfi_def_cfa_register 13
 848              		@ sp needed
 849 0016 5DF8047B 		ldr	r7, [sp], #4
 850              		.cfi_restore 7
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 117


 851              		.cfi_def_cfa_offset 0
 852 001a 7047     		bx	lr
 853              		.cfi_endproc
 854              	.LFE208:
 856              		.section	.text.LL_ADC_DisableDeepPowerDown,"ax",%progbits
 857              		.align	1
 858              		.syntax unified
 859              		.thumb
 860              		.thumb_func
 862              	LL_ADC_DisableDeepPowerDown:
 863              	.LFB214:
5794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode delay between 2 sampling phases.
5797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The sampling delay range depends on ADC resolution:
5798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution 12 bits can have maximum delay of 12 cycles.
5799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution 10 bits can have maximum delay of 10 cycles.
5800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution  8 bits can have maximum delay of  8 cycles.
5801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution  6 bits can have maximum delay of  6 cycles.
5802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
5805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
5806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
5807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
5808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_SetMultiTwoSamplingDelay
5809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  MultiTwoSamplingDelay This parameter can be one of the following values:
5812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
5813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
5814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
5815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
5816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
5817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
5818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
5819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
5820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
5821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
5822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
5823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
5824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
5826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
5827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
5828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Mul
5831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DELAY, MultiTwoSamplingDelay);
5833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode delay between 2 sampling phases.
5837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_GetMultiTwoSamplingDelay
5838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 118


5840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
5842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
5843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
5844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
5845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
5846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
5847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
5848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
5849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
5850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
5851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
5852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
5853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
5855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
5856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
5857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON)
5859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DELAY));
5861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
5863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
5866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Leg_Functions Configuration of ADC alternate functions name
5868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
5869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Old functions name kept for legacy purpose, to be replaced by the          */
5871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* current functions name.                                                    */
5872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTrigSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
5873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   LL_ADC_REG_SetTriggerSource(ADCx, TriggerSource);
5875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
5877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   LL_ADC_INJ_SetTriggerSource(ADCx, TriggerSource);
5879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
5883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
5886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
5887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Put ADC instance in deep power down state.
5891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
5892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
5893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
5894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
5895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 119


5897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_EnableDeepPowerDown
5899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDeepPowerDown(ADC_TypeDef *ADCx)
5903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
5905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
5906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
5907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
5908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
5909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_DEEPPWD);
5910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable ADC deep power down mode.
5914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
5915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
5916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
5917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
5918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
5922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
5926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 864              		.loc 1 5926 1
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 8
 867              		@ frame_needed = 1, uses_anonymous_args = 0
 868              		@ link register save eliminated.
 869 0000 80B4     		push	{r7}
 870              		.cfi_def_cfa_offset 4
 871              		.cfi_offset 7, -4
 872 0002 83B0     		sub	sp, sp, #12
 873              		.cfi_def_cfa_offset 16
 874 0004 00AF     		add	r7, sp, #0
 875              		.cfi_def_cfa_register 7
 876 0006 7860     		str	r0, [r7, #4]
5927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
5928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
5929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
5930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
 877              		.loc 1 5930 3
 878 0008 7B68     		ldr	r3, [r7, #4]
 879 000a 9B68     		ldr	r3, [r3, #8]
 880 000c 23F02043 		bic	r3, r3, #-1610612736
 881 0010 23F03F03 		bic	r3, r3, #63
 882 0014 7A68     		ldr	r2, [r7, #4]
 883 0016 9360     		str	r3, [r2, #8]
5931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 884              		.loc 1 5931 1
 885 0018 00BF     		nop
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 120


 886 001a 0C37     		adds	r7, r7, #12
 887              		.cfi_def_cfa_offset 4
 888 001c BD46     		mov	sp, r7
 889              		.cfi_def_cfa_register 13
 890              		@ sp needed
 891 001e 5DF8047B 		ldr	r7, [sp], #4
 892              		.cfi_restore 7
 893              		.cfi_def_cfa_offset 0
 894 0022 7047     		bx	lr
 895              		.cfi_endproc
 896              	.LFE214:
 898              		.section	.text.LL_ADC_IsDeepPowerDownEnabled,"ax",%progbits
 899              		.align	1
 900              		.syntax unified
 901              		.thumb
 902              		.thumb_func
 904              	LL_ADC_IsDeepPowerDownEnabled:
 905              	.LFB215:
5932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance deep power down state.
5935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
5936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: deep power down is disabled, 1: deep power down is enabled.
5938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(ADC_TypeDef *ADCx)
5940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 906              		.loc 1 5940 1
 907              		.cfi_startproc
 908              		@ args = 0, pretend = 0, frame = 8
 909              		@ frame_needed = 1, uses_anonymous_args = 0
 910              		@ link register save eliminated.
 911 0000 80B4     		push	{r7}
 912              		.cfi_def_cfa_offset 4
 913              		.cfi_offset 7, -4
 914 0002 83B0     		sub	sp, sp, #12
 915              		.cfi_def_cfa_offset 16
 916 0004 00AF     		add	r7, sp, #0
 917              		.cfi_def_cfa_register 7
 918 0006 7860     		str	r0, [r7, #4]
5941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
 919              		.loc 1 5941 12
 920 0008 7B68     		ldr	r3, [r7, #4]
 921 000a 9B68     		ldr	r3, [r3, #8]
 922 000c 03F00053 		and	r3, r3, #536870912
 923              		.loc 1 5941 74
 924 0010 B3F1005F 		cmp	r3, #536870912
 925 0014 01D1     		bne	.L33
 926              		.loc 1 5941 74 is_stmt 0 discriminator 1
 927 0016 0123     		movs	r3, #1
 928 0018 00E0     		b	.L35
 929              	.L33:
 930              		.loc 1 5941 74 discriminator 2
 931 001a 0023     		movs	r3, #0
 932              	.L35:
5942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 933              		.loc 1 5942 1 is_stmt 1 discriminator 5
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 121


 934 001c 1846     		mov	r0, r3
 935 001e 0C37     		adds	r7, r7, #12
 936              		.cfi_def_cfa_offset 4
 937 0020 BD46     		mov	sp, r7
 938              		.cfi_def_cfa_register 13
 939              		@ sp needed
 940 0022 5DF8047B 		ldr	r7, [sp], #4
 941              		.cfi_restore 7
 942              		.cfi_def_cfa_offset 0
 943 0026 7047     		bx	lr
 944              		.cfi_endproc
 945              	.LFE215:
 947              		.section	.text.LL_ADC_EnableInternalRegulator,"ax",%progbits
 948              		.align	1
 949              		.syntax unified
 950              		.thumb
 951              		.thumb_func
 953              	LL_ADC_EnableInternalRegulator:
 954              	.LFB216:
5943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
5946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
5947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
5948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
5949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tADCVREG_STUP.
5950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
5951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
5955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
5959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 955              		.loc 1 5959 1
 956              		.cfi_startproc
 957              		@ args = 0, pretend = 0, frame = 8
 958              		@ frame_needed = 1, uses_anonymous_args = 0
 959              		@ link register save eliminated.
 960 0000 80B4     		push	{r7}
 961              		.cfi_def_cfa_offset 4
 962              		.cfi_offset 7, -4
 963 0002 83B0     		sub	sp, sp, #12
 964              		.cfi_def_cfa_offset 16
 965 0004 00AF     		add	r7, sp, #0
 966              		.cfi_def_cfa_register 7
 967 0006 7860     		str	r0, [r7, #4]
5960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
5961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
5962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
5963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 968              		.loc 1 5963 3
 969 0008 7B68     		ldr	r3, [r7, #4]
 970 000a 9B68     		ldr	r3, [r3, #8]
 971 000c 23F01043 		bic	r3, r3, #-1879048192
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 122


 972 0010 23F03F03 		bic	r3, r3, #63
 973 0014 43F08052 		orr	r2, r3, #268435456
 974 0018 7B68     		ldr	r3, [r7, #4]
 975 001a 9A60     		str	r2, [r3, #8]
5964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
5965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADVREGEN);
5966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 976              		.loc 1 5966 1
 977 001c 00BF     		nop
 978 001e 0C37     		adds	r7, r7, #12
 979              		.cfi_def_cfa_offset 4
 980 0020 BD46     		mov	sp, r7
 981              		.cfi_def_cfa_register 13
 982              		@ sp needed
 983 0022 5DF8047B 		ldr	r7, [sp], #4
 984              		.cfi_restore 7
 985              		.cfi_def_cfa_offset 0
 986 0026 7047     		bx	lr
 987              		.cfi_endproc
 988              	.LFE216:
 990              		.section	.text.LL_ADC_IsInternalRegulatorEnabled,"ax",%progbits
 991              		.align	1
 992              		.syntax unified
 993              		.thumb
 994              		.thumb_func
 996              	LL_ADC_IsInternalRegulatorEnabled:
 997              	.LFB218:
5967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
5970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
5974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
5978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
5980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
5984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
5985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
5987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
5989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 998              		.loc 1 5989 1
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 8
 1001              		@ frame_needed = 1, uses_anonymous_args = 0
 1002              		@ link register save eliminated.
 1003 0000 80B4     		push	{r7}
 1004              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 123


 1005              		.cfi_offset 7, -4
 1006 0002 83B0     		sub	sp, sp, #12
 1007              		.cfi_def_cfa_offset 16
 1008 0004 00AF     		add	r7, sp, #0
 1009              		.cfi_def_cfa_register 7
 1010 0006 7860     		str	r0, [r7, #4]
5990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 1011              		.loc 1 5990 12
 1012 0008 7B68     		ldr	r3, [r7, #4]
 1013 000a 9B68     		ldr	r3, [r3, #8]
 1014 000c 03F08053 		and	r3, r3, #268435456
 1015              		.loc 1 5990 76
 1016 0010 B3F1805F 		cmp	r3, #268435456
 1017 0014 01D1     		bne	.L38
 1018              		.loc 1 5990 76 is_stmt 0 discriminator 1
 1019 0016 0123     		movs	r3, #1
 1020 0018 00E0     		b	.L40
 1021              	.L38:
 1022              		.loc 1 5990 76 discriminator 2
 1023 001a 0023     		movs	r3, #0
 1024              	.L40:
5991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1025              		.loc 1 5991 1 is_stmt 1 discriminator 5
 1026 001c 1846     		mov	r0, r3
 1027 001e 0C37     		adds	r7, r7, #12
 1028              		.cfi_def_cfa_offset 4
 1029 0020 BD46     		mov	sp, r7
 1030              		.cfi_def_cfa_register 13
 1031              		@ sp needed
 1032 0022 5DF8047B 		ldr	r7, [sp], #4
 1033              		.cfi_restore 7
 1034              		.cfi_def_cfa_offset 0
 1035 0026 7047     		bx	lr
 1036              		.cfi_endproc
 1037              	.LFE218:
 1039              		.section	.text.LL_ADC_Enable,"ax",%progbits
 1040              		.align	1
 1041              		.syntax unified
 1042              		.thumb
 1043              		.thumb_func
 1045              	LL_ADC_Enable:
 1046              	.LFB219:
5992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
5995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
5996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
5997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion start.
5998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
5999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
6005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
6006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 124


6007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
6010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1047              		.loc 1 6010 1
 1048              		.cfi_startproc
 1049              		@ args = 0, pretend = 0, frame = 8
 1050              		@ frame_needed = 1, uses_anonymous_args = 0
 1051              		@ link register save eliminated.
 1052 0000 80B4     		push	{r7}
 1053              		.cfi_def_cfa_offset 4
 1054              		.cfi_offset 7, -4
 1055 0002 83B0     		sub	sp, sp, #12
 1056              		.cfi_def_cfa_offset 16
 1057 0004 00AF     		add	r7, sp, #0
 1058              		.cfi_def_cfa_register 7
 1059 0006 7860     		str	r0, [r7, #4]
6011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 1060              		.loc 1 6014 3
 1061 0008 7B68     		ldr	r3, [r7, #4]
 1062 000a 9B68     		ldr	r3, [r3, #8]
 1063 000c 23F00043 		bic	r3, r3, #-2147483648
 1064 0010 23F03F03 		bic	r3, r3, #63
 1065 0014 43F00102 		orr	r2, r3, #1
 1066 0018 7B68     		ldr	r3, [r7, #4]
 1067 001a 9A60     		str	r2, [r3, #8]
6015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADEN);
6017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1068              		.loc 1 6017 1
 1069 001c 00BF     		nop
 1070 001e 0C37     		adds	r7, r7, #12
 1071              		.cfi_def_cfa_offset 4
 1072 0020 BD46     		mov	sp, r7
 1073              		.cfi_def_cfa_register 13
 1074              		@ sp needed
 1075 0022 5DF8047B 		ldr	r7, [sp], #4
 1076              		.cfi_restore 7
 1077              		.cfi_def_cfa_offset 0
 1078 0026 7047     		bx	lr
 1079              		.cfi_endproc
 1080              	.LFE219:
 1082              		.section	.text.LL_ADC_Disable,"ax",%progbits
 1083              		.align	1
 1084              		.syntax unified
 1085              		.thumb
 1086              		.thumb_func
 1088              	LL_ADC_Disable:
 1089              	.LFB220:
6018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
6021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 125


6023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
6024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
6025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
6026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
6030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1090              		.loc 1 6030 1
 1091              		.cfi_startproc
 1092              		@ args = 0, pretend = 0, frame = 8
 1093              		@ frame_needed = 1, uses_anonymous_args = 0
 1094              		@ link register save eliminated.
 1095 0000 80B4     		push	{r7}
 1096              		.cfi_def_cfa_offset 4
 1097              		.cfi_offset 7, -4
 1098 0002 83B0     		sub	sp, sp, #12
 1099              		.cfi_def_cfa_offset 16
 1100 0004 00AF     		add	r7, sp, #0
 1101              		.cfi_def_cfa_register 7
 1102 0006 7860     		str	r0, [r7, #4]
6031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 1103              		.loc 1 6034 3
 1104 0008 7B68     		ldr	r3, [r7, #4]
 1105 000a 9B68     		ldr	r3, [r3, #8]
 1106 000c 23F00043 		bic	r3, r3, #-2147483648
 1107 0010 23F03F03 		bic	r3, r3, #63
 1108 0014 43F00202 		orr	r2, r3, #2
 1109 0018 7B68     		ldr	r3, [r7, #4]
 1110 001a 9A60     		str	r2, [r3, #8]
6035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADDIS);
6037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1111              		.loc 1 6037 1
 1112 001c 00BF     		nop
 1113 001e 0C37     		adds	r7, r7, #12
 1114              		.cfi_def_cfa_offset 4
 1115 0020 BD46     		mov	sp, r7
 1116              		.cfi_def_cfa_register 13
 1117              		@ sp needed
 1118 0022 5DF8047B 		ldr	r7, [sp], #4
 1119              		.cfi_restore 7
 1120              		.cfi_def_cfa_offset 0
 1121 0026 7047     		bx	lr
 1122              		.cfi_endproc
 1123              	.LFE220:
 1125              		.section	.text.LL_ADC_IsEnabled,"ax",%progbits
 1126              		.align	1
 1127              		.syntax unified
 1128              		.thumb
 1129              		.thumb_func
 1131              	LL_ADC_IsEnabled:
 1132              	.LFB221:
6038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 126


6039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
6041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
6045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
6047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
6049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1133              		.loc 1 6049 1
 1134              		.cfi_startproc
 1135              		@ args = 0, pretend = 0, frame = 8
 1136              		@ frame_needed = 1, uses_anonymous_args = 0
 1137              		@ link register save eliminated.
 1138 0000 80B4     		push	{r7}
 1139              		.cfi_def_cfa_offset 4
 1140              		.cfi_offset 7, -4
 1141 0002 83B0     		sub	sp, sp, #12
 1142              		.cfi_def_cfa_offset 16
 1143 0004 00AF     		add	r7, sp, #0
 1144              		.cfi_def_cfa_register 7
 1145 0006 7860     		str	r0, [r7, #4]
6050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
 1146              		.loc 1 6050 12
 1147 0008 7B68     		ldr	r3, [r7, #4]
 1148 000a 9B68     		ldr	r3, [r3, #8]
 1149 000c 03F00103 		and	r3, r3, #1
 1150              		.loc 1 6050 68
 1151 0010 012B     		cmp	r3, #1
 1152 0012 01D1     		bne	.L44
 1153              		.loc 1 6050 68 is_stmt 0 discriminator 1
 1154 0014 0123     		movs	r3, #1
 1155 0016 00E0     		b	.L46
 1156              	.L44:
 1157              		.loc 1 6050 68 discriminator 2
 1158 0018 0023     		movs	r3, #0
 1159              	.L46:
6051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1160              		.loc 1 6051 1 is_stmt 1 discriminator 5
 1161 001a 1846     		mov	r0, r3
 1162 001c 0C37     		adds	r7, r7, #12
 1163              		.cfi_def_cfa_offset 4
 1164 001e BD46     		mov	sp, r7
 1165              		.cfi_def_cfa_register 13
 1166              		@ sp needed
 1167 0020 5DF8047B 		ldr	r7, [sp], #4
 1168              		.cfi_restore 7
 1169              		.cfi_def_cfa_offset 0
 1170 0024 7047     		bx	lr
 1171              		.cfi_endproc
 1172              	.LFE221:
 1174              		.section	.text.LL_ADC_IsDisableOngoing,"ax",%progbits
 1175              		.align	1
 1176              		.syntax unified
 1177              		.thumb
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 127


 1178              		.thumb_func
 1180              	LL_ADC_IsDisableOngoing:
 1181              	.LFB222:
6052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
6055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
6056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
6058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
6060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1182              		.loc 1 6060 1
 1183              		.cfi_startproc
 1184              		@ args = 0, pretend = 0, frame = 8
 1185              		@ frame_needed = 1, uses_anonymous_args = 0
 1186              		@ link register save eliminated.
 1187 0000 80B4     		push	{r7}
 1188              		.cfi_def_cfa_offset 4
 1189              		.cfi_offset 7, -4
 1190 0002 83B0     		sub	sp, sp, #12
 1191              		.cfi_def_cfa_offset 16
 1192 0004 00AF     		add	r7, sp, #0
 1193              		.cfi_def_cfa_register 7
 1194 0006 7860     		str	r0, [r7, #4]
6061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
 1195              		.loc 1 6061 12
 1196 0008 7B68     		ldr	r3, [r7, #4]
 1197 000a 9B68     		ldr	r3, [r3, #8]
 1198 000c 03F00203 		and	r3, r3, #2
 1199              		.loc 1 6061 70
 1200 0010 022B     		cmp	r3, #2
 1201 0012 01D1     		bne	.L48
 1202              		.loc 1 6061 70 is_stmt 0 discriminator 1
 1203 0014 0123     		movs	r3, #1
 1204 0016 00E0     		b	.L50
 1205              	.L48:
 1206              		.loc 1 6061 70 discriminator 2
 1207 0018 0023     		movs	r3, #0
 1208              	.L50:
6062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1209              		.loc 1 6062 1 is_stmt 1 discriminator 5
 1210 001a 1846     		mov	r0, r3
 1211 001c 0C37     		adds	r7, r7, #12
 1212              		.cfi_def_cfa_offset 4
 1213 001e BD46     		mov	sp, r7
 1214              		.cfi_def_cfa_register 13
 1215              		@ sp needed
 1216 0020 5DF8047B 		ldr	r7, [sp], #4
 1217              		.cfi_restore 7
 1218              		.cfi_def_cfa_offset 0
 1219 0024 7047     		bx	lr
 1220              		.cfi_endproc
 1221              	.LFE222:
 1223              		.section	.text.LL_ADC_REG_StartConversion,"ax",%progbits
 1224              		.align	1
 1225              		.syntax unified
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 128


 1226              		.thumb
 1227              		.thumb_func
 1229              	LL_ADC_REG_StartConversion:
 1230              	.LFB225:
6063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
6066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
6067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
6068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
6069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
6070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
6071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
6072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
6073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (calibration run must be performed for each of these
6074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
6075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         requires their calibration).
6076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
6080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration
6081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
6083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
6084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
6085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx, uint32_t SingleDiff)
6088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADCALDIF | ADC_CR_BITS_PROPERTY_RS,
6094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADCAL | (SingleDiff & ADC_SINGLEDIFF_CALIB_START_MASK));
6095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC calibration state.
6099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
6100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
6102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
6104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
6106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
6110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
6113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
6114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 129


6116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
6118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
6119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           starts immediately.
6122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           following the ADC start conversion command.
6125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
6131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
6135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1231              		.loc 1 6135 1
 1232              		.cfi_startproc
 1233              		@ args = 0, pretend = 0, frame = 8
 1234              		@ frame_needed = 1, uses_anonymous_args = 0
 1235              		@ link register save eliminated.
 1236 0000 80B4     		push	{r7}
 1237              		.cfi_def_cfa_offset 4
 1238              		.cfi_offset 7, -4
 1239 0002 83B0     		sub	sp, sp, #12
 1240              		.cfi_def_cfa_offset 16
 1241 0004 00AF     		add	r7, sp, #0
 1242              		.cfi_def_cfa_register 7
 1243 0006 7860     		str	r0, [r7, #4]
6136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 1244              		.loc 1 6139 3
 1245 0008 7B68     		ldr	r3, [r7, #4]
 1246 000a 9B68     		ldr	r3, [r3, #8]
 1247 000c 23F00043 		bic	r3, r3, #-2147483648
 1248 0010 23F03F03 		bic	r3, r3, #63
 1249 0014 43F00402 		orr	r2, r3, #4
 1250 0018 7B68     		ldr	r3, [r7, #4]
 1251 001a 9A60     		str	r2, [r3, #8]
6140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADSTART);
6142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1252              		.loc 1 6142 1
 1253 001c 00BF     		nop
 1254 001e 0C37     		adds	r7, r7, #12
 1255              		.cfi_def_cfa_offset 4
 1256 0020 BD46     		mov	sp, r7
 1257              		.cfi_def_cfa_register 13
 1258              		@ sp needed
 1259 0022 5DF8047B 		ldr	r7, [sp], #4
 1260              		.cfi_restore 7
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 130


 1261              		.cfi_def_cfa_offset 0
 1262 0026 7047     		bx	lr
 1263              		.cfi_endproc
 1264              	.LFE225:
 1266              		.section	.text.LL_ADC_REG_StopConversion,"ax",%progbits
 1267              		.align	1
 1268              		.syntax unified
 1269              		.thumb
 1270              		.thumb_func
 1272              	LL_ADC_REG_StopConversion:
 1273              	.LFB226:
6143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
6146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
6149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
6151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
6155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1274              		.loc 1 6155 1
 1275              		.cfi_startproc
 1276              		@ args = 0, pretend = 0, frame = 8
 1277              		@ frame_needed = 1, uses_anonymous_args = 0
 1278              		@ link register save eliminated.
 1279 0000 80B4     		push	{r7}
 1280              		.cfi_def_cfa_offset 4
 1281              		.cfi_offset 7, -4
 1282 0002 83B0     		sub	sp, sp, #12
 1283              		.cfi_def_cfa_offset 16
 1284 0004 00AF     		add	r7, sp, #0
 1285              		.cfi_def_cfa_register 7
 1286 0006 7860     		str	r0, [r7, #4]
6156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 1287              		.loc 1 6159 3
 1288 0008 7B68     		ldr	r3, [r7, #4]
 1289 000a 9B68     		ldr	r3, [r3, #8]
 1290 000c 23F00043 		bic	r3, r3, #-2147483648
 1291 0010 23F03F03 		bic	r3, r3, #63
 1292 0014 43F01002 		orr	r2, r3, #16
 1293 0018 7B68     		ldr	r3, [r7, #4]
 1294 001a 9A60     		str	r2, [r3, #8]
6160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADSTP);
6162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1295              		.loc 1 6162 1
 1296 001c 00BF     		nop
 1297 001e 0C37     		adds	r7, r7, #12
 1298              		.cfi_def_cfa_offset 4
 1299 0020 BD46     		mov	sp, r7
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 131


 1300              		.cfi_def_cfa_register 13
 1301              		@ sp needed
 1302 0022 5DF8047B 		ldr	r7, [sp], #4
 1303              		.cfi_restore 7
 1304              		.cfi_def_cfa_offset 0
 1305 0026 7047     		bx	lr
 1306              		.cfi_endproc
 1307              	.LFE226:
 1309              		.section	.text.LL_ADC_REG_IsConversionOngoing,"ax",%progbits
 1310              		.align	1
 1311              		.syntax unified
 1312              		.thumb
 1313              		.thumb_func
 1315              	LL_ADC_REG_IsConversionOngoing:
 1316              	.LFB227:
6163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
6166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
6167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
6169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
6171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1317              		.loc 1 6171 1
 1318              		.cfi_startproc
 1319              		@ args = 0, pretend = 0, frame = 8
 1320              		@ frame_needed = 1, uses_anonymous_args = 0
 1321              		@ link register save eliminated.
 1322 0000 80B4     		push	{r7}
 1323              		.cfi_def_cfa_offset 4
 1324              		.cfi_offset 7, -4
 1325 0002 83B0     		sub	sp, sp, #12
 1326              		.cfi_def_cfa_offset 16
 1327 0004 00AF     		add	r7, sp, #0
 1328              		.cfi_def_cfa_register 7
 1329 0006 7860     		str	r0, [r7, #4]
6172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 1330              		.loc 1 6172 12
 1331 0008 7B68     		ldr	r3, [r7, #4]
 1332 000a 9B68     		ldr	r3, [r3, #8]
 1333 000c 03F00403 		and	r3, r3, #4
 1334              		.loc 1 6172 74
 1335 0010 042B     		cmp	r3, #4
 1336 0012 01D1     		bne	.L54
 1337              		.loc 1 6172 74 is_stmt 0 discriminator 1
 1338 0014 0123     		movs	r3, #1
 1339 0016 00E0     		b	.L56
 1340              	.L54:
 1341              		.loc 1 6172 74 discriminator 2
 1342 0018 0023     		movs	r3, #0
 1343              	.L56:
6173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1344              		.loc 1 6173 1 is_stmt 1 discriminator 5
 1345 001a 1846     		mov	r0, r3
 1346 001c 0C37     		adds	r7, r7, #12
 1347              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 132


 1348 001e BD46     		mov	sp, r7
 1349              		.cfi_def_cfa_register 13
 1350              		@ sp needed
 1351 0020 5DF8047B 		ldr	r7, [sp], #4
 1352              		.cfi_restore 7
 1353              		.cfi_def_cfa_offset 0
 1354 0024 7047     		bx	lr
 1355              		.cfi_endproc
 1356              	.LFE227:
 1358              		.section	.text.LL_ADC_INJ_StopConversion,"ax",%progbits
 1359              		.align	1
 1360              		.syntax unified
 1361              		.thumb
 1362              		.thumb_func
 1364              	LL_ADC_INJ_StopConversion:
 1365              	.LFB236:
6174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
6177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
6178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
6180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(ADC_TypeDef *ADCx)
6182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
6184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
6189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         all oversampling increased data width (for devices
6190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with feature oversampling).
6191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData32
6192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef *ADCx)
6196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 12 bits.
6203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData12
6207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
6211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 133


6215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 10 bits.
6218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData10
6222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
6224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(ADC_TypeDef *ADCx)
6226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 8 bits.
6233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData8
6237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
6239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(ADC_TypeDef *ADCx)
6241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 6 bits.
6248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData6
6252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
6254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(ADC_TypeDef *ADCx)
6256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
6261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data of ADC master, ADC slave
6263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or raw data with ADC master and slave concatenated.
6264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If raw data with ADC master and slave concatenated is retrieved,
6265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a macro is available to get the conversion data of
6266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (however this macro is mainly intended for multimode
6269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         transfer by DMA, because this function can do the same
6270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         by getting multimode conversion data of ADC master or ADC slave
6271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         separately).
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 134


6272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CDR      RDATA_MST      LL_ADC_REG_ReadMultiConversionData32\n
6273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_REG_ReadMultiConversionData32
6274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ConversionData This parameter can be one of the following values:
6277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
6278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
6279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER_SLAVE
6280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadMultiConversionData32(ADC_Common_TypeDef *ADCxy_COMMON, uin
6283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CDR,
6285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ConversionData)
6286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                     >> (POSITION_VAL(ConversionData) & 0x1FUL)
6287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
6288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
6290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
6293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Injected Operation on ADC hierarchical scope: group inj
6296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
6297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Start ADC group injected conversion.
6301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
6302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           starts immediately.
6305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           following the ADC start conversion command.
6308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group injected,
6311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without conversion stop command on going on group injected,
6312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_StartConversion
6314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StartConversion(ADC_TypeDef *ADCx)
6318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_JADSTART);
6325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Stop ADC group injected conversion.
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 135


6329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group injected,
6332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_StopConversion
6334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StopConversion(ADC_TypeDef *ADCx)
6338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1366              		.loc 1 6338 1
 1367              		.cfi_startproc
 1368              		@ args = 0, pretend = 0, frame = 8
 1369              		@ frame_needed = 1, uses_anonymous_args = 0
 1370              		@ link register save eliminated.
 1371 0000 80B4     		push	{r7}
 1372              		.cfi_def_cfa_offset 4
 1373              		.cfi_offset 7, -4
 1374 0002 83B0     		sub	sp, sp, #12
 1375              		.cfi_def_cfa_offset 16
 1376 0004 00AF     		add	r7, sp, #0
 1377              		.cfi_def_cfa_register 7
 1378 0006 7860     		str	r0, [r7, #4]
6339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 1379              		.loc 1 6342 3
 1380 0008 7B68     		ldr	r3, [r7, #4]
 1381 000a 9B68     		ldr	r3, [r3, #8]
 1382 000c 23F00043 		bic	r3, r3, #-2147483648
 1383 0010 23F03F03 		bic	r3, r3, #63
 1384 0014 43F02002 		orr	r2, r3, #32
 1385 0018 7B68     		ldr	r3, [r7, #4]
 1386 001a 9A60     		str	r2, [r3, #8]
6343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_JADSTP);
6345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1387              		.loc 1 6345 1
 1388 001c 00BF     		nop
 1389 001e 0C37     		adds	r7, r7, #12
 1390              		.cfi_def_cfa_offset 4
 1391 0020 BD46     		mov	sp, r7
 1392              		.cfi_def_cfa_register 13
 1393              		@ sp needed
 1394 0022 5DF8047B 		ldr	r7, [sp], #4
 1395              		.cfi_restore 7
 1396              		.cfi_def_cfa_offset 0
 1397 0026 7047     		bx	lr
 1398              		.cfi_endproc
 1399              	.LFE236:
 1401              		.section	.text.LL_ADC_INJ_IsConversionOngoing,"ax",%progbits
 1402              		.align	1
 1403              		.syntax unified
 1404              		.thumb
 1405              		.thumb_func
 1407              	LL_ADC_INJ_IsConversionOngoing:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 136


 1408              	.LFB237:
6346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion state.
6349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
6350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group injected.
6352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(ADC_TypeDef *ADCx)
6354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1409              		.loc 1 6354 1
 1410              		.cfi_startproc
 1411              		@ args = 0, pretend = 0, frame = 8
 1412              		@ frame_needed = 1, uses_anonymous_args = 0
 1413              		@ link register save eliminated.
 1414 0000 80B4     		push	{r7}
 1415              		.cfi_def_cfa_offset 4
 1416              		.cfi_offset 7, -4
 1417 0002 83B0     		sub	sp, sp, #12
 1418              		.cfi_def_cfa_offset 16
 1419 0004 00AF     		add	r7, sp, #0
 1420              		.cfi_def_cfa_register 7
 1421 0006 7860     		str	r0, [r7, #4]
6355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 1422              		.loc 1 6355 12
 1423 0008 7B68     		ldr	r3, [r7, #4]
 1424 000a 9B68     		ldr	r3, [r3, #8]
 1425 000c 03F00803 		and	r3, r3, #8
 1426              		.loc 1 6355 76
 1427 0010 082B     		cmp	r3, #8
 1428 0012 01D1     		bne	.L59
 1429              		.loc 1 6355 76 is_stmt 0 discriminator 1
 1430 0014 0123     		movs	r3, #1
 1431 0016 00E0     		b	.L61
 1432              	.L59:
 1433              		.loc 1 6355 76 discriminator 2
 1434 0018 0023     		movs	r3, #0
 1435              	.L61:
6356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1436              		.loc 1 6356 1 is_stmt 1 discriminator 5
 1437 001a 1846     		mov	r0, r3
 1438 001c 0C37     		adds	r7, r7, #12
 1439              		.cfi_def_cfa_offset 4
 1440 001e BD46     		mov	sp, r7
 1441              		.cfi_def_cfa_register 13
 1442              		@ sp needed
 1443 0020 5DF8047B 		ldr	r7, [sp], #4
 1444              		.cfi_restore 7
 1445              		.cfi_def_cfa_offset 0
 1446 0024 7047     		bx	lr
 1447              		.cfi_endproc
 1448              	.LFE237:
 1450              		.section	.text.LL_ADC_ClearFlag_AWD1,"ax",%progbits
 1451              		.align	1
 1452              		.syntax unified
 1453              		.thumb
 1454              		.thumb_func
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 137


 1456              	LL_ADC_ClearFlag_AWD1:
 1457              	.LFB263:
6357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected command of conversion stop state
6360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_IsStopConversionOngoing
6361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group injected.
6363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsStopConversionOngoing(ADC_TypeDef *ADCx)
6365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTP) == (ADC_CR_JADSTP)) ? 1UL : 0UL);
6367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
6371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
6372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         all oversampling increased data width (for devices
6373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with feature oversampling).
6374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData32\n
6375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData32\n
6376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData32\n
6377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData32
6378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
6380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
6381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
6382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
6383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
6384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_ReadConversionData32(ADC_TypeDef *ADCx, uint32_t Rank)
6387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
6389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
6391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
6392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
6393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
6397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 12 bits.
6398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
6401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData12\n
6402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData12\n
6403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData12\n
6404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData12
6405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
6407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
6408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
6409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
6410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
6411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 138


6412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData12(ADC_TypeDef *ADCx, uint32_t Rank)
6414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
6416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
6418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
6419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
6420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
6424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 10 bits.
6425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
6428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData10\n
6429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData10\n
6430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData10\n
6431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData10
6432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
6434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
6435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
6436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
6437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
6438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
6439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData10(ADC_TypeDef *ADCx, uint32_t Rank)
6441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
6443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
6445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
6446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
6447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
6451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 8 bits.
6452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
6455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData8\n
6456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData8\n
6457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData8\n
6458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData8
6459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
6461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
6462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
6463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
6464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
6465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
6466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData8(ADC_TypeDef *ADCx, uint32_t Rank)
6468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 139


6469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
6470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
6472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                             ADC_JDR1_JDATA)
6473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                   );
6474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
6478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 6 bits.
6479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
6482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData6\n
6483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData6\n
6484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData6\n
6485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData6
6486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
6488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
6489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
6490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
6491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
6492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
6493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData6(ADC_TypeDef *ADCx, uint32_t Rank)
6495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
6497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
6499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                             ADC_JDR1_JDATA)
6500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                   );
6501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
6505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
6508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
6509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC ready.
6513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_IsActiveFlag_ADRDY
6517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(ADC_TypeDef *ADCx)
6521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY)) ? 1UL : 0UL);
6523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 140


6526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of unitary conversion.
6527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_IsActiveFlag_EOC
6528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(ADC_TypeDef *ADCx)
6532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC)) ? 1UL : 0UL);
6534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
6538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_IsActiveFlag_EOS
6539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(ADC_TypeDef *ADCx)
6543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS)) ? 1UL : 0UL);
6545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group regular overrun.
6549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_IsActiveFlag_OVR
6550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_OVR(ADC_TypeDef *ADCx)
6554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR)) ? 1UL : 0UL);
6556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sampling phase.
6560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_IsActiveFlag_EOSMP
6561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOSMP(ADC_TypeDef *ADCx)
6565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOSMP) == (LL_ADC_FLAG_EOSMP)) ? 1UL : 0UL);
6567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of unitary conversion.
6571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_IsActiveFlag_JEOC
6572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOC(ADC_TypeDef *ADCx)
6576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOC) == (LL_ADC_FLAG_JEOC)) ? 1UL : 0UL);
6578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of sequence conversions.
6582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_IsActiveFlag_JEOS
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 141


6583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOS(ADC_TypeDef *ADCx)
6587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOS) == (LL_ADC_FLAG_JEOS)) ? 1UL : 0UL);
6589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group injected contexts queue overflow.
6593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_IsActiveFlag_JQOVF
6594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JQOVF(ADC_TypeDef *ADCx)
6598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JQOVF) == (LL_ADC_FLAG_JQOVF)) ? 1UL : 0UL);
6600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
6604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_IsActiveFlag_AWD1
6605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(ADC_TypeDef *ADCx)
6609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1)) ? 1UL : 0UL);
6611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 2.
6615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_IsActiveFlag_AWD2
6616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD2(ADC_TypeDef *ADCx)
6620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD2) == (LL_ADC_FLAG_AWD2)) ? 1UL : 0UL);
6622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 3.
6626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_IsActiveFlag_AWD3
6627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD3(ADC_TypeDef *ADCx)
6631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD3) == (LL_ADC_FLAG_AWD3)) ? 1UL : 0UL);
6633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC ready.
6637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 142


6640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_ClearFlag_ADRDY
6641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_ADRDY(ADC_TypeDef *ADCx)
6645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_ADRDY);
6647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of unitary conversion.
6651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_ClearFlag_EOC
6652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOC(ADC_TypeDef *ADCx)
6656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOC);
6658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sequence conversions.
6662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_ClearFlag_EOS
6663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOS(ADC_TypeDef *ADCx)
6667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOS);
6669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular overrun.
6673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_ClearFlag_OVR
6674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_OVR(ADC_TypeDef *ADCx)
6678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_OVR);
6680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sampling phase.
6684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_ClearFlag_EOSMP
6685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOSMP(ADC_TypeDef *ADCx)
6689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOSMP);
6691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of unitary conversion.
6695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_ClearFlag_JEOC
6696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 143


6697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOC(ADC_TypeDef *ADCx)
6700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOC);
6702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of sequence conversions.
6706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_ClearFlag_JEOS
6707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOS(ADC_TypeDef *ADCx)
6711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOS);
6713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected contexts queue overflow.
6717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_ClearFlag_JQOVF
6718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JQOVF(ADC_TypeDef *ADCx)
6722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JQOVF);
6724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 1.
6728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_ClearFlag_AWD1
6729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD1(ADC_TypeDef *ADCx)
6733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1458              		.loc 1 6733 1
 1459              		.cfi_startproc
 1460              		@ args = 0, pretend = 0, frame = 8
 1461              		@ frame_needed = 1, uses_anonymous_args = 0
 1462              		@ link register save eliminated.
 1463 0000 80B4     		push	{r7}
 1464              		.cfi_def_cfa_offset 4
 1465              		.cfi_offset 7, -4
 1466 0002 83B0     		sub	sp, sp, #12
 1467              		.cfi_def_cfa_offset 16
 1468 0004 00AF     		add	r7, sp, #0
 1469              		.cfi_def_cfa_register 7
 1470 0006 7860     		str	r0, [r7, #4]
6734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD1);
 1471              		.loc 1 6734 3
 1472 0008 7B68     		ldr	r3, [r7, #4]
 1473 000a 8022     		movs	r2, #128
 1474 000c 1A60     		str	r2, [r3]
6735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1475              		.loc 1 6735 1
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 144


 1476 000e 00BF     		nop
 1477 0010 0C37     		adds	r7, r7, #12
 1478              		.cfi_def_cfa_offset 4
 1479 0012 BD46     		mov	sp, r7
 1480              		.cfi_def_cfa_register 13
 1481              		@ sp needed
 1482 0014 5DF8047B 		ldr	r7, [sp], #4
 1483              		.cfi_restore 7
 1484              		.cfi_def_cfa_offset 0
 1485 0018 7047     		bx	lr
 1486              		.cfi_endproc
 1487              	.LFE263:
 1489              		.section	.text.LL_ADC_ClearFlag_AWD2,"ax",%progbits
 1490              		.align	1
 1491              		.syntax unified
 1492              		.thumb
 1493              		.thumb_func
 1495              	LL_ADC_ClearFlag_AWD2:
 1496              	.LFB264:
6736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 2.
6739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_ClearFlag_AWD2
6740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD2(ADC_TypeDef *ADCx)
6744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1497              		.loc 1 6744 1
 1498              		.cfi_startproc
 1499              		@ args = 0, pretend = 0, frame = 8
 1500              		@ frame_needed = 1, uses_anonymous_args = 0
 1501              		@ link register save eliminated.
 1502 0000 80B4     		push	{r7}
 1503              		.cfi_def_cfa_offset 4
 1504              		.cfi_offset 7, -4
 1505 0002 83B0     		sub	sp, sp, #12
 1506              		.cfi_def_cfa_offset 16
 1507 0004 00AF     		add	r7, sp, #0
 1508              		.cfi_def_cfa_register 7
 1509 0006 7860     		str	r0, [r7, #4]
6745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD2);
 1510              		.loc 1 6745 3
 1511 0008 7B68     		ldr	r3, [r7, #4]
 1512 000a 4FF48072 		mov	r2, #256
 1513 000e 1A60     		str	r2, [r3]
6746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1514              		.loc 1 6746 1
 1515 0010 00BF     		nop
 1516 0012 0C37     		adds	r7, r7, #12
 1517              		.cfi_def_cfa_offset 4
 1518 0014 BD46     		mov	sp, r7
 1519              		.cfi_def_cfa_register 13
 1520              		@ sp needed
 1521 0016 5DF8047B 		ldr	r7, [sp], #4
 1522              		.cfi_restore 7
 1523              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 145


 1524 001a 7047     		bx	lr
 1525              		.cfi_endproc
 1526              	.LFE264:
 1528              		.section	.text.LL_ADC_ClearFlag_AWD3,"ax",%progbits
 1529              		.align	1
 1530              		.syntax unified
 1531              		.thumb
 1532              		.thumb_func
 1534              	LL_ADC_ClearFlag_AWD3:
 1535              	.LFB265:
6747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 3.
6750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_ClearFlag_AWD3
6751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD3(ADC_TypeDef *ADCx)
6755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1536              		.loc 1 6755 1
 1537              		.cfi_startproc
 1538              		@ args = 0, pretend = 0, frame = 8
 1539              		@ frame_needed = 1, uses_anonymous_args = 0
 1540              		@ link register save eliminated.
 1541 0000 80B4     		push	{r7}
 1542              		.cfi_def_cfa_offset 4
 1543              		.cfi_offset 7, -4
 1544 0002 83B0     		sub	sp, sp, #12
 1545              		.cfi_def_cfa_offset 16
 1546 0004 00AF     		add	r7, sp, #0
 1547              		.cfi_def_cfa_register 7
 1548 0006 7860     		str	r0, [r7, #4]
6756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD3);
 1549              		.loc 1 6756 3
 1550 0008 7B68     		ldr	r3, [r7, #4]
 1551 000a 4FF40072 		mov	r2, #512
 1552 000e 1A60     		str	r2, [r3]
6757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1553              		.loc 1 6757 1
 1554 0010 00BF     		nop
 1555 0012 0C37     		adds	r7, r7, #12
 1556              		.cfi_def_cfa_offset 4
 1557 0014 BD46     		mov	sp, r7
 1558              		.cfi_def_cfa_register 13
 1559              		@ sp needed
 1560 0016 5DF8047B 		ldr	r7, [sp], #4
 1561              		.cfi_restore 7
 1562              		.cfi_def_cfa_offset 0
 1563 001a 7047     		bx	lr
 1564              		.cfi_endproc
 1565              	.LFE265:
 1567              		.section	.text.LL_ADC_EnableIT_AWD1,"ax",%progbits
 1568              		.align	1
 1569              		.syntax unified
 1570              		.thumb
 1571              		.thumb_func
 1573              	LL_ADC_EnableIT_AWD1:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 146


 1574              	.LFB296:
6758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
6760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC ready of the ADC master.
6762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      ADRDY_MST      LL_ADC_IsActiveFlag_MST_ADRDY
6763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_ADRDY(ADC_Common_TypeDef *ADCxy_COMMON)
6768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_ADRDY_MST) == (LL_ADC_FLAG_ADRDY_MST)) ? 1UL : 0
6770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC ready of the ADC slave.
6774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      ADRDY_SLV      LL_ADC_IsActiveFlag_SLV_ADRDY
6775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_ADRDY(ADC_Common_TypeDef *ADCxy_COMMON)
6780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_ADRDY_SLV) == (LL_ADC_FLAG_ADRDY_SLV)) ? 1UL : 0
6782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of unitary conversion of the ADC master.
6786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOC_MST        LL_ADC_IsActiveFlag_MST_EOC
6787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOC(ADC_Common_TypeDef *ADCxy_COMMON)
6792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOC_SLV) == (LL_ADC_FLAG_EOC_SLV)) ? 1UL : 0UL);
6794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of unitary conversion of the ADC slave.
6798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOC_SLV        LL_ADC_IsActiveFlag_SLV_EOC
6799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOC(ADC_Common_TypeDef *ADCxy_COMMON)
6804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOC_SLV) == (LL_ADC_FLAG_EOC_SLV)) ? 1UL : 0UL);
6806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sequence conversions of the ADC master.
6810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOS_MST        LL_ADC_IsActiveFlag_MST_EOS
6811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 147


6814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOS(ADC_Common_TypeDef *ADCxy_COMMON)
6816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOS_MST) == (LL_ADC_FLAG_EOS_MST)) ? 1UL : 0UL);
6818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sequence conversions of the ADC slave.
6822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOS_SLV        LL_ADC_IsActiveFlag_SLV_EOS
6823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOS(ADC_Common_TypeDef *ADCxy_COMMON)
6828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOS_SLV) == (LL_ADC_FLAG_EOS_SLV)) ? 1UL : 0UL);
6830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular overrun of the ADC master.
6834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      OVR_MST        LL_ADC_IsActiveFlag_MST_OVR
6835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_OVR(ADC_Common_TypeDef *ADCxy_COMMON)
6840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_OVR_MST) == (LL_ADC_FLAG_OVR_MST)) ? 1UL : 0UL);
6842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular overrun of the ADC slave.
6846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      OVR_SLV        LL_ADC_IsActiveFlag_SLV_OVR
6847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_OVR(ADC_Common_TypeDef *ADCxy_COMMON)
6852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_OVR_SLV) == (LL_ADC_FLAG_OVR_SLV)) ? 1UL : 0UL);
6854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sampling of the ADC master.
6858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOSMP_MST      LL_ADC_IsActiveFlag_MST_EOSMP
6859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOSMP(ADC_Common_TypeDef *ADCxy_COMMON)
6864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOSMP_MST) == (LL_ADC_FLAG_EOSMP_MST)) ? 1UL : 0
6866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sampling of the ADC slave.
6870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOSMP_SLV      LL_ADC_IsActiveFlag_SLV_EOSMP
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 148


6871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOSMP(ADC_Common_TypeDef *ADCxy_COMMON)
6876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOSMP_SLV) == (LL_ADC_FLAG_EOSMP_SLV)) ? 1UL : 0
6878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of unitary conversion of the ADC master.
6882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JEOC_MST       LL_ADC_IsActiveFlag_MST_JEOC
6883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JEOC(ADC_Common_TypeDef *ADCxy_COMMON)
6888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOC_MST) == (LL_ADC_FLAG_JEOC_MST)) ? 1UL : 0UL
6890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of unitary conversion of the ADC slave.
6894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JEOC_SLV       LL_ADC_IsActiveFlag_SLV_JEOC
6895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JEOC(ADC_Common_TypeDef *ADCxy_COMMON)
6900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOC_SLV) == (LL_ADC_FLAG_JEOC_SLV)) ? 1UL : 0UL
6902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of sequence conversions of the ADC master.
6906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JEOS_MST       LL_ADC_IsActiveFlag_MST_JEOS
6907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JEOS(ADC_Common_TypeDef *ADCxy_COMMON)
6912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOS_MST) == (LL_ADC_FLAG_JEOS_MST)) ? 1UL : 0UL
6914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of sequence conversions of the ADC slave.
6918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JEOS_SLV       LL_ADC_IsActiveFlag_SLV_JEOS
6919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JEOS(ADC_Common_TypeDef *ADCxy_COMMON)
6924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOS_SLV) == (LL_ADC_FLAG_JEOS_SLV)) ? 1UL : 0UL
6926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 149


6928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected context queue overflow of the ADC master.
6930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JQOVF_MST      LL_ADC_IsActiveFlag_MST_JQOVF
6931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JQOVF(ADC_Common_TypeDef *ADCxy_COMMON)
6936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JQOVF_MST) == (LL_ADC_FLAG_JQOVF_MST)) ? 1UL : 0
6938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected context queue overflow of the ADC slave.
6942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JQOVF_SLV      LL_ADC_IsActiveFlag_SLV_JQOVF
6943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JQOVF(ADC_Common_TypeDef *ADCxy_COMMON)
6948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JQOVF_SLV) == (LL_ADC_FLAG_JQOVF_SLV)) ? 1UL : 0
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 1 of the ADC master.
6954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD1_MST       LL_ADC_IsActiveFlag_MST_AWD1
6955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD1(ADC_Common_TypeDef *ADCxy_COMMON)
6960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD1_MST) == (LL_ADC_FLAG_AWD1_MST)) ? 1UL : 0UL
6962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode analog watchdog 1 of the ADC slave.
6966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD1_SLV       LL_ADC_IsActiveFlag_SLV_AWD1
6967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD1(ADC_Common_TypeDef *ADCxy_COMMON)
6972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD1_SLV) == (LL_ADC_FLAG_AWD1_SLV)) ? 1UL : 0UL
6974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 2 of the ADC master.
6978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD2_MST       LL_ADC_IsActiveFlag_MST_AWD2
6979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD2(ADC_Common_TypeDef *ADCxy_COMMON)
6984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 150


6985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD2_MST) == (LL_ADC_FLAG_AWD2_MST)) ? 1UL : 0UL
6986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 2 of the ADC slave.
6990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD2_SLV       LL_ADC_IsActiveFlag_SLV_AWD2
6991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD2(ADC_Common_TypeDef *ADCxy_COMMON)
6996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD2_SLV) == (LL_ADC_FLAG_AWD2_SLV)) ? 1UL : 0UL
6998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 3 of the ADC master.
7002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD3_MST       LL_ADC_IsActiveFlag_MST_AWD3
7003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD3(ADC_Common_TypeDef *ADCxy_COMMON)
7008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD3_MST) == (LL_ADC_FLAG_AWD3_MST)) ? 1UL : 0UL
7010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 3 of the ADC slave.
7014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD3_SLV       LL_ADC_IsActiveFlag_SLV_AWD3
7015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD3(ADC_Common_TypeDef *ADCxy_COMMON)
7020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD3_SLV) == (LL_ADC_FLAG_AWD3_SLV)) ? 1UL : 0UL
7022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
7024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
7027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_IT_Management ADC IT management
7030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
7031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable ADC ready.
7035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_ADRDY
7036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_ADRDY(ADC_TypeDef *ADCx)
7040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 151


7042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of unitary conversion.
7046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_EnableIT_EOC
7047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOC(ADC_TypeDef *ADCx)
7051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOC);
7053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sequence conversions.
7057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_EnableIT_EOS
7058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOS(ADC_TypeDef *ADCx)
7062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOS);
7064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable ADC group regular interruption overrun.
7068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_EnableIT_OVR
7069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
7073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_OVR);
7075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sampling.
7079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_EnableIT_EOSMP
7080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOSMP(ADC_TypeDef *ADCx)
7084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
7086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of unitary conversion.
7090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_EnableIT_JEOC
7091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOC(ADC_TypeDef *ADCx)
7095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOC);
7097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 152


7099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of sequence conversions.
7101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_EnableIT_JEOS
7102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOS(ADC_TypeDef *ADCx)
7106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOS);
7108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected context queue overflow.
7112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_EnableIT_JQOVF
7113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JQOVF(ADC_TypeDef *ADCx)
7117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
7119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 1.
7123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_EnableIT_AWD1
7124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD1(ADC_TypeDef *ADCx)
7128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1575              		.loc 1 7128 1
 1576              		.cfi_startproc
 1577              		@ args = 0, pretend = 0, frame = 8
 1578              		@ frame_needed = 1, uses_anonymous_args = 0
 1579              		@ link register save eliminated.
 1580 0000 80B4     		push	{r7}
 1581              		.cfi_def_cfa_offset 4
 1582              		.cfi_offset 7, -4
 1583 0002 83B0     		sub	sp, sp, #12
 1584              		.cfi_def_cfa_offset 16
 1585 0004 00AF     		add	r7, sp, #0
 1586              		.cfi_def_cfa_register 7
 1587 0006 7860     		str	r0, [r7, #4]
7129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD1);
 1588              		.loc 1 7129 3
 1589 0008 7B68     		ldr	r3, [r7, #4]
 1590 000a 5B68     		ldr	r3, [r3, #4]
 1591 000c 43F08002 		orr	r2, r3, #128
 1592 0010 7B68     		ldr	r3, [r7, #4]
 1593 0012 5A60     		str	r2, [r3, #4]
7130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1594              		.loc 1 7130 1
 1595 0014 00BF     		nop
 1596 0016 0C37     		adds	r7, r7, #12
 1597              		.cfi_def_cfa_offset 4
 1598 0018 BD46     		mov	sp, r7
 1599              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 153


 1600              		@ sp needed
 1601 001a 5DF8047B 		ldr	r7, [sp], #4
 1602              		.cfi_restore 7
 1603              		.cfi_def_cfa_offset 0
 1604 001e 7047     		bx	lr
 1605              		.cfi_endproc
 1606              	.LFE296:
 1608              		.section	.text.LL_ADC_EnableIT_AWD2,"ax",%progbits
 1609              		.align	1
 1610              		.syntax unified
 1611              		.thumb
 1612              		.thumb_func
 1614              	LL_ADC_EnableIT_AWD2:
 1615              	.LFB297:
7131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 2.
7134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_EnableIT_AWD2
7135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD2(ADC_TypeDef *ADCx)
7139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1616              		.loc 1 7139 1
 1617              		.cfi_startproc
 1618              		@ args = 0, pretend = 0, frame = 8
 1619              		@ frame_needed = 1, uses_anonymous_args = 0
 1620              		@ link register save eliminated.
 1621 0000 80B4     		push	{r7}
 1622              		.cfi_def_cfa_offset 4
 1623              		.cfi_offset 7, -4
 1624 0002 83B0     		sub	sp, sp, #12
 1625              		.cfi_def_cfa_offset 16
 1626 0004 00AF     		add	r7, sp, #0
 1627              		.cfi_def_cfa_register 7
 1628 0006 7860     		str	r0, [r7, #4]
7140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD2);
 1629              		.loc 1 7140 3
 1630 0008 7B68     		ldr	r3, [r7, #4]
 1631 000a 5B68     		ldr	r3, [r3, #4]
 1632 000c 43F48072 		orr	r2, r3, #256
 1633 0010 7B68     		ldr	r3, [r7, #4]
 1634 0012 5A60     		str	r2, [r3, #4]
7141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1635              		.loc 1 7141 1
 1636 0014 00BF     		nop
 1637 0016 0C37     		adds	r7, r7, #12
 1638              		.cfi_def_cfa_offset 4
 1639 0018 BD46     		mov	sp, r7
 1640              		.cfi_def_cfa_register 13
 1641              		@ sp needed
 1642 001a 5DF8047B 		ldr	r7, [sp], #4
 1643              		.cfi_restore 7
 1644              		.cfi_def_cfa_offset 0
 1645 001e 7047     		bx	lr
 1646              		.cfi_endproc
 1647              	.LFE297:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 154


 1649              		.section	.text.LL_ADC_EnableIT_AWD3,"ax",%progbits
 1650              		.align	1
 1651              		.syntax unified
 1652              		.thumb
 1653              		.thumb_func
 1655              	LL_ADC_EnableIT_AWD3:
 1656              	.LFB298:
7142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 3.
7145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_EnableIT_AWD3
7146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD3(ADC_TypeDef *ADCx)
7150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1657              		.loc 1 7150 1
 1658              		.cfi_startproc
 1659              		@ args = 0, pretend = 0, frame = 8
 1660              		@ frame_needed = 1, uses_anonymous_args = 0
 1661              		@ link register save eliminated.
 1662 0000 80B4     		push	{r7}
 1663              		.cfi_def_cfa_offset 4
 1664              		.cfi_offset 7, -4
 1665 0002 83B0     		sub	sp, sp, #12
 1666              		.cfi_def_cfa_offset 16
 1667 0004 00AF     		add	r7, sp, #0
 1668              		.cfi_def_cfa_register 7
 1669 0006 7860     		str	r0, [r7, #4]
7151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD3);
 1670              		.loc 1 7151 3
 1671 0008 7B68     		ldr	r3, [r7, #4]
 1672 000a 5B68     		ldr	r3, [r3, #4]
 1673 000c 43F40072 		orr	r2, r3, #512
 1674 0010 7B68     		ldr	r3, [r7, #4]
 1675 0012 5A60     		str	r2, [r3, #4]
7152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1676              		.loc 1 7152 1
 1677 0014 00BF     		nop
 1678 0016 0C37     		adds	r7, r7, #12
 1679              		.cfi_def_cfa_offset 4
 1680 0018 BD46     		mov	sp, r7
 1681              		.cfi_def_cfa_register 13
 1682              		@ sp needed
 1683 001a 5DF8047B 		ldr	r7, [sp], #4
 1684              		.cfi_restore 7
 1685              		.cfi_def_cfa_offset 0
 1686 001e 7047     		bx	lr
 1687              		.cfi_endproc
 1688              	.LFE298:
 1690              		.section	.text.LL_ADC_DisableIT_AWD1,"ax",%progbits
 1691              		.align	1
 1692              		.syntax unified
 1693              		.thumb
 1694              		.thumb_func
 1696              	LL_ADC_DisableIT_AWD1:
 1697              	.LFB307:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 155


7153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC ready.
7156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_ADRDY
7157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_ADRDY(ADC_TypeDef *ADCx)
7161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
7163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
7167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_DisableIT_EOC
7168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOC(ADC_TypeDef *ADCx)
7172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOC);
7174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sequence conversions.
7178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_DisableIT_EOS
7179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOS(ADC_TypeDef *ADCx)
7183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOS);
7185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular overrun.
7189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_DisableIT_OVR
7190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_OVR(ADC_TypeDef *ADCx)
7194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_OVR);
7196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sampling.
7200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_DisableIT_EOSMP
7201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOSMP(ADC_TypeDef *ADCx)
7205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
7207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 156


7210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
7211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_DisableIT_JEOC
7212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOC(ADC_TypeDef *ADCx)
7216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOC);
7218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group injected end of sequence conversions.
7222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_DisableIT_JEOS
7223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOS(ADC_TypeDef *ADCx)
7227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOS);
7229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group injected context queue overflow.
7233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_DisableIT_JQOVF
7234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JQOVF(ADC_TypeDef *ADCx)
7238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
7240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 1.
7244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_DisableIT_AWD1
7245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD1(ADC_TypeDef *ADCx)
7249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1698              		.loc 1 7249 1
 1699              		.cfi_startproc
 1700              		@ args = 0, pretend = 0, frame = 8
 1701              		@ frame_needed = 1, uses_anonymous_args = 0
 1702              		@ link register save eliminated.
 1703 0000 80B4     		push	{r7}
 1704              		.cfi_def_cfa_offset 4
 1705              		.cfi_offset 7, -4
 1706 0002 83B0     		sub	sp, sp, #12
 1707              		.cfi_def_cfa_offset 16
 1708 0004 00AF     		add	r7, sp, #0
 1709              		.cfi_def_cfa_register 7
 1710 0006 7860     		str	r0, [r7, #4]
7250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD1);
 1711              		.loc 1 7250 3
 1712 0008 7B68     		ldr	r3, [r7, #4]
 1713 000a 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 157


 1714 000c 23F08002 		bic	r2, r3, #128
 1715 0010 7B68     		ldr	r3, [r7, #4]
 1716 0012 5A60     		str	r2, [r3, #4]
7251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1717              		.loc 1 7251 1
 1718 0014 00BF     		nop
 1719 0016 0C37     		adds	r7, r7, #12
 1720              		.cfi_def_cfa_offset 4
 1721 0018 BD46     		mov	sp, r7
 1722              		.cfi_def_cfa_register 13
 1723              		@ sp needed
 1724 001a 5DF8047B 		ldr	r7, [sp], #4
 1725              		.cfi_restore 7
 1726              		.cfi_def_cfa_offset 0
 1727 001e 7047     		bx	lr
 1728              		.cfi_endproc
 1729              	.LFE307:
 1731              		.section	.text.LL_ADC_DisableIT_AWD2,"ax",%progbits
 1732              		.align	1
 1733              		.syntax unified
 1734              		.thumb
 1735              		.thumb_func
 1737              	LL_ADC_DisableIT_AWD2:
 1738              	.LFB308:
7252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 2.
7255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_DisableIT_AWD2
7256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD2(ADC_TypeDef *ADCx)
7260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1739              		.loc 1 7260 1
 1740              		.cfi_startproc
 1741              		@ args = 0, pretend = 0, frame = 8
 1742              		@ frame_needed = 1, uses_anonymous_args = 0
 1743              		@ link register save eliminated.
 1744 0000 80B4     		push	{r7}
 1745              		.cfi_def_cfa_offset 4
 1746              		.cfi_offset 7, -4
 1747 0002 83B0     		sub	sp, sp, #12
 1748              		.cfi_def_cfa_offset 16
 1749 0004 00AF     		add	r7, sp, #0
 1750              		.cfi_def_cfa_register 7
 1751 0006 7860     		str	r0, [r7, #4]
7261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD2);
 1752              		.loc 1 7261 3
 1753 0008 7B68     		ldr	r3, [r7, #4]
 1754 000a 5B68     		ldr	r3, [r3, #4]
 1755 000c 23F48072 		bic	r2, r3, #256
 1756 0010 7B68     		ldr	r3, [r7, #4]
 1757 0012 5A60     		str	r2, [r3, #4]
7262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1758              		.loc 1 7262 1
 1759 0014 00BF     		nop
 1760 0016 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 158


 1761              		.cfi_def_cfa_offset 4
 1762 0018 BD46     		mov	sp, r7
 1763              		.cfi_def_cfa_register 13
 1764              		@ sp needed
 1765 001a 5DF8047B 		ldr	r7, [sp], #4
 1766              		.cfi_restore 7
 1767              		.cfi_def_cfa_offset 0
 1768 001e 7047     		bx	lr
 1769              		.cfi_endproc
 1770              	.LFE308:
 1772              		.section	.text.LL_ADC_DisableIT_AWD3,"ax",%progbits
 1773              		.align	1
 1774              		.syntax unified
 1775              		.thumb
 1776              		.thumb_func
 1778              	LL_ADC_DisableIT_AWD3:
 1779              	.LFB309:
7263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 3.
7266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_DisableIT_AWD3
7267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD3(ADC_TypeDef *ADCx)
7271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1780              		.loc 1 7271 1
 1781              		.cfi_startproc
 1782              		@ args = 0, pretend = 0, frame = 8
 1783              		@ frame_needed = 1, uses_anonymous_args = 0
 1784              		@ link register save eliminated.
 1785 0000 80B4     		push	{r7}
 1786              		.cfi_def_cfa_offset 4
 1787              		.cfi_offset 7, -4
 1788 0002 83B0     		sub	sp, sp, #12
 1789              		.cfi_def_cfa_offset 16
 1790 0004 00AF     		add	r7, sp, #0
 1791              		.cfi_def_cfa_register 7
 1792 0006 7860     		str	r0, [r7, #4]
7272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD3);
 1793              		.loc 1 7272 3
 1794 0008 7B68     		ldr	r3, [r7, #4]
 1795 000a 5B68     		ldr	r3, [r3, #4]
 1796 000c 23F40072 		bic	r2, r3, #512
 1797 0010 7B68     		ldr	r3, [r7, #4]
 1798 0012 5A60     		str	r2, [r3, #4]
7273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1799              		.loc 1 7273 1
 1800 0014 00BF     		nop
 1801 0016 0C37     		adds	r7, r7, #12
 1802              		.cfi_def_cfa_offset 4
 1803 0018 BD46     		mov	sp, r7
 1804              		.cfi_def_cfa_register 13
 1805              		@ sp needed
 1806 001a 5DF8047B 		ldr	r7, [sp], #4
 1807              		.cfi_restore 7
 1808              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 159


 1809 001e 7047     		bx	lr
 1810              		.cfi_endproc
 1811              	.LFE309:
 1813              		.section	.text.HAL_ADC_Init,"ax",%progbits
 1814              		.align	1
 1815              		.global	HAL_ADC_Init
 1816              		.syntax unified
 1817              		.thumb
 1818              		.thumb_func
 1820              	HAL_ADC_Init:
 1821              	.LFB321:
 1822              		.file 2 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @file    stm32l4xx_hal_adc.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          peripheral:
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           + Peripheral State functions
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          Other functions (extended functions) are available in file
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          "stm32l4xx_hal_adc_ex.c".
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ******************************************************************************
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @attention
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * Copyright (c) 2017 STMicroelectronics.
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * All rights reserved.
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * in the root directory of this software component.
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ******************************************************************************
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   @verbatim
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ==============================================================================
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                      ##### ADC peripheral features #####
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ==============================================================================
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   [..]
  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion and in case of
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       analog watchdog or overrun events.
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Single and continuous conversion modes.
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Programmable sampling time (channel wise)
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) External trigger (timer or EXTI) with configurable polarity
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 160


  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Configurable delay between conversions in Dual interleaved mode.
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC channels selectable single/differential input.
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC offset shared on 4 offset instances.
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC calibration
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC conversion of regular group.
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC supply requirements: 1.62 V to 3.6 V.
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       Vdda or to an external voltage reference).
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                      ##### How to use this driver #####
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ==============================================================================
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ============================================================
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Enable the ADC interface
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) As prerequisite, ADC clock must be configured at RCC top level.
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) Two clock settings are mandatory:
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              (+++) ADC clock (core clock, also possibly conversion clock).
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              (+++) ADC clock (conversions clock).
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    Two possible clock sources: synchronous clock derived from APB clock
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    or asynchronous clock derived from system clock, PLLSAI1 or the PLLSAI2
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    running up to 80MHz.
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              (+++) Example:
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    other device clock parameters configuration:
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_ENABLE();                  (mandatory)
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                RCC_ADCCLKSOURCE_PLL enable:                       (optional: if asynchronous clock 
  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) RCC_PeriphClkInitTypeDef   RCC_PeriphClkInit;
  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection    = RCC_ADCCLKSOURCE_PLL;
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC clock source and clock prescaler are configured at ADC level with
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              parameter "ClockPrescaler" using function HAL_ADC_Init().
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) ADC pins configuration
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_GPIO_Init()
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Configure the NVIC for ADC
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 161


 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               into the function of corresponding ADC interruption vector
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               ADCx_IRQHandler().
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_DMA_Init().
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Configure the NVIC for DMA
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               into the function of corresponding DMA interruption vector
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      *** Configuration of ADC, group regular, channels parameters ***
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ================================================================
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         using function HAL_ADC_Init().
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number,
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         monitored, thresholds, ...)
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      *** Execution of ADC conversions ***
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ====================================
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         conversion accuracy
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         transfer by DMA.
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC conversion by polling:
 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Start()
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Retrieve conversion results
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Stop()
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC conversion by interruption:
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 (this function must be implemented in user program)
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 162


 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Retrieve conversion results
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 (these functions must be implemented in user program)
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 destination variable address.
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      *** Deinitialization of ADC ***
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ============================================================
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Disable the ADC interface
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC clock disable
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              (+++) Example:
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    other device clock parameters configuration:
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI14;
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSI14State = RCC_HSI14_OFF; (if not used for system clock
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) ADC pins configuration
 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Disable the NVIC for ADC
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Deinitialize the DMA
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_DMA_Init().
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Disable the NVIC for DMA
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 163


 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     *** Callback registration ***
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     =============================================
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Use Functions HAL_ADC_RegisterCallback()
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      to register an interrupt callback.
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Function HAL_ADC_RegisterCallback() allows to register following callbacks:
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      and a pointer to the user callback function.
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Use function HAL_ADC_UnRegisterCallback to reset a callback to the default
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      weak function.
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      and the Callback ID.
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      This function allows to reset following callbacks:
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      By default, after the HAL_ADC_Init() and when the state is HAL_ADC_STATE_RESET
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      examples HAL_ADC_ConvCpltCallback(), HAL_ADC_ErrorCallback().
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      reset to the legacy weak functions in the HAL_ADC_Init()/ HAL_ADC_DeInit() only when
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      If MspInit or MspDeInit are not null, the HAL_ADC_Init()/ HAL_ADC_DeInit()
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 164


 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Callbacks can be registered/unregistered in HAL_ADC_STATE_READY state only.
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      in HAL_ADC_STATE_READY or HAL_ADC_STATE_RESET state,
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      using HAL_ADC_RegisterCallback() before calling HAL_ADC_DeInit()
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      or HAL_ADC_Init() function.
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      are set to the corresponding weak functions.
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   @endverbatim
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ******************************************************************************
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #include "stm32l4xx_hal.h"
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @addtogroup STM32L4xx_HAL_Driver
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC ADC
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief ADC HAL module driver
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #define ADC_CFGR_FIELDS_1  ((ADC_CFGR_RES    | ADC_CFGR_ALIGN   |\
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                              ADC_CFGR_CONT   | ADC_CFGR_OVRMOD  |\
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                              ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM |\
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                              ADC_CFGR_EXTEN  | ADC_CFGR_EXTSEL))   /*!< ADC_CFGR fields of paramete
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Timeout values for ADC operations (enable settling time,                   */
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   disable settling time, ...).                                             */
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   Values defined to be higher than worst cases: low clock frequency,       */
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   maximum prescalers.                                                      */
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #define ADC_ENABLE_TIMEOUT              (2UL)    /*!< ADC enable time-out value  */
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #define ADC_DISABLE_TIMEOUT             (2UL)    /*!< ADC disable time-out value */
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Timeout to wait for current conversion on going to be completed.           */
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Timeout fixed to longest ADC conversion possible, for 1 channel:           */
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   - maximum sampling time (640.5 adc_clk)                                  */
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   - ADC resolution (Tsar 12 bits= 12.5 adc_clk)                            */
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 165


 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   - System clock / ADC clock <= 4096 (hypothesis of maximum clock ratio)   */
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   - ADC oversampling ratio 256                                             */
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   Calculation: 653 * 4096 * 256 CPU clock cycles max                       */
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Unit: cycles of CPU clock.                                                 */
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #define ADC_CONVERSION_TIME_MAX_CPU_CYCLES (653UL * 4096UL * 256UL)  /*!< ADC conversion completion
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief    ADC Initialization and Configuration functions
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @verbatim
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Initialize and configure the ADC.
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) De-initialize the ADC.
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @endverbatim
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Initialize the ADC peripheral and regular group according to
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (refer to description of RCC configuration for ADC
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         in header of this file).
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         before HAL_ADC_Init().
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         "ADC_InitTypeDef".
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Parameters related to common ADC registers (ADC clock mode) are set
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         only if all ADCs are disabled.
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         If this is not the case, these common parameters setting are
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behaviour in
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 166


 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of update of a parameter of ADC_InitTypeDef on the fly,
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         without  disabling the other ADCs.
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 1823              		.loc 2 394 1
 1824              		.cfi_startproc
 1825              		@ args = 0, pretend = 0, frame = 32
 1826              		@ frame_needed = 1, uses_anonymous_args = 0
 1827 0000 90B5     		push	{r4, r7, lr}
 1828              		.cfi_def_cfa_offset 12
 1829              		.cfi_offset 4, -12
 1830              		.cfi_offset 7, -8
 1831              		.cfi_offset 14, -4
 1832 0002 89B0     		sub	sp, sp, #36
 1833              		.cfi_def_cfa_offset 48
 1834 0004 00AF     		add	r7, sp, #0
 1835              		.cfi_def_cfa_register 7
 1836 0006 7860     		str	r0, [r7, #4]
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1837              		.loc 2 395 21
 1838 0008 0023     		movs	r3, #0
 1839 000a FB77     		strb	r3, [r7, #31]
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpCFGR;
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 1840              		.loc 2 398 17
 1841 000c 0023     		movs	r3, #0
 1842 000e BB60     		str	r3, [r7, #8]
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check ADC handle */
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc == NULL)
 1843              		.loc 2 403 6
 1844 0010 7B68     		ldr	r3, [r7, #4]
 1845 0012 002B     		cmp	r3, #0
 1846 0014 01D1     		bne	.L72
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     return HAL_ERROR;
 1847              		.loc 2 405 12
 1848 0016 0123     		movs	r3, #1
 1849 0018 34E1     		b	.L73
 1850              	.L72:
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_DFSDMCFG_MODE(hadc));
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 167


 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc, hadc->Init.ExternalTrigConv));
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 1851              		.loc 2 426 17
 1852 001a 7B68     		ldr	r3, [r7, #4]
 1853 001c 1B69     		ldr	r3, [r3, #16]
 1854              		.loc 2 426 6
 1855 001e 002B     		cmp	r3, #0
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* DISCEN and CONT bits cannot be set at the same time */
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == 
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 1856              		.loc 2 442 11
 1857 0020 7B68     		ldr	r3, [r7, #4]
 1858 0022 9B6D     		ldr	r3, [r3, #88]
 1859              		.loc 2 442 6
 1860 0024 002B     		cmp	r3, #0
 1861 0026 09D1     		bne	.L75
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Init the ADC Callback settings */
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->InjectedConvCpltCallback      = HAL_ADCEx_InjectedConvCpltCallback;       /* Legacy weak 
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;  /* Legacy weak 
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback     = HAL_ADCEx_LevelOutOfWindow2Callback;      /* Legacy weak 
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback     = HAL_ADCEx_LevelOutOfWindow3Callback;      /* Legacy weak 
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->EndOfSamplingCallback         = HAL_ADCEx_EndOfSamplingCallback;          /* Legacy weak 
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Init the low level hardware */
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->MspInitCallback(hadc);
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 168


 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Init the low level hardware */
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 1862              		.loc 2 465 5
 1863 0028 7868     		ldr	r0, [r7, #4]
 1864 002a FFF7FEFF 		bl	HAL_ADC_MspInit
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC error code to none */
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 1865              		.loc 2 469 5
 1866 002e 7B68     		ldr	r3, [r7, #4]
 1867 0030 0022     		movs	r2, #0
 1868 0032 DA65     		str	r2, [r3, #92]
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Initialize Lock */
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 1869              		.loc 2 472 16
 1870 0034 7B68     		ldr	r3, [r7, #4]
 1871 0036 0022     		movs	r2, #0
 1872 0038 83F85420 		strb	r2, [r3, #84]
 1873              	.L75:
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* - Exit from deep-power-down mode and ADC voltage regulator enable        */
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_IsDeepPowerDownEnabled(hadc->Instance) != 0UL)
 1874              		.loc 2 476 7
 1875 003c 7B68     		ldr	r3, [r7, #4]
 1876 003e 1B68     		ldr	r3, [r3]
 1877 0040 1846     		mov	r0, r3
 1878 0042 FFF7FEFF 		bl	LL_ADC_IsDeepPowerDownEnabled
 1879 0046 0346     		mov	r3, r0
 1880              		.loc 2 476 6
 1881 0048 002B     		cmp	r3, #0
 1882 004a 04D0     		beq	.L76
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable ADC deep power down mode */
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     LL_ADC_DisableDeepPowerDown(hadc->Instance);
 1883              		.loc 2 479 5
 1884 004c 7B68     		ldr	r3, [r7, #4]
 1885 004e 1B68     		ldr	r3, [r3]
 1886 0050 1846     		mov	r0, r3
 1887 0052 FFF7FEFF 		bl	LL_ADC_DisableDeepPowerDown
 1888              	.L76:
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* System was in deep power down mode, calibration must
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      be relaunched or a previously saved calibration factor
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      re-applied once the ADC voltage regulator is enabled */
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 1889              		.loc 2 486 7
 1890 0056 7B68     		ldr	r3, [r7, #4]
 1891 0058 1B68     		ldr	r3, [r3]
 1892 005a 1846     		mov	r0, r3
 1893 005c FFF7FEFF 		bl	LL_ADC_IsInternalRegulatorEnabled
 1894 0060 0346     		mov	r3, r0
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 169


 1895              		.loc 2 486 6
 1896 0062 002B     		cmp	r3, #0
 1897 0064 15D1     		bne	.L77
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable ADC internal voltage regulator */
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     LL_ADC_EnableInternalRegulator(hadc->Instance);
 1898              		.loc 2 489 5
 1899 0066 7B68     		ldr	r3, [r7, #4]
 1900 0068 1B68     		ldr	r3, [r3]
 1901 006a 1846     		mov	r0, r3
 1902 006c FFF7FEFF 		bl	LL_ADC_EnableInternalRegulator
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: Variable divided by 2 to compensate partially              */
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       CPU processing cycles, scaling in us split to not          */
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       exceed 32 bits register capacity and handle low frequency. */
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * ((SystemCoreClock / (100000UL
 1903              		.loc 2 494 89
 1904 0070 864B     		ldr	r3, .L90
 1905 0072 1B68     		ldr	r3, [r3]
 1906 0074 9B09     		lsrs	r3, r3, #6
 1907 0076 864A     		ldr	r2, .L90+4
 1908 0078 A2FB0323 		umull	r2, r3, r2, r3
 1909 007c 9B09     		lsrs	r3, r3, #6
 1910              		.loc 2 494 109
 1911 007e 0133     		adds	r3, r3, #1
 1912              		.loc 2 494 69
 1913 0080 5B00     		lsls	r3, r3, #1
 1914              		.loc 2 494 21
 1915 0082 BB60     		str	r3, [r7, #8]
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 1916              		.loc 2 495 11
 1917 0084 02E0     		b	.L78
 1918              	.L79:
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       wait_loop_index--;
 1919              		.loc 2 497 22
 1920 0086 BB68     		ldr	r3, [r7, #8]
 1921 0088 013B     		subs	r3, r3, #1
 1922 008a BB60     		str	r3, [r7, #8]
 1923              	.L78:
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 1924              		.loc 2 495 28
 1925 008c BB68     		ldr	r3, [r7, #8]
 1926 008e 002B     		cmp	r3, #0
 1927 0090 F9D1     		bne	.L79
 1928              	.L77:
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verification that ADC voltage regulator is correctly enabled, whether    */
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* or not ADC is coming from state reset (if any potential problem of       */
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* clocking, voltage regulator would not be enabled).                       */
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 1929              		.loc 2 504 7
 1930 0092 7B68     		ldr	r3, [r7, #4]
 1931 0094 1B68     		ldr	r3, [r3]
 1932 0096 1846     		mov	r0, r3
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 170


 1933 0098 FFF7FEFF 		bl	LL_ADC_IsInternalRegulatorEnabled
 1934 009c 0346     		mov	r3, r0
 1935              		.loc 2 504 6
 1936 009e 002B     		cmp	r3, #0
 1937 00a0 0DD1     		bne	.L80
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update ADC state machine to error */
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 1938              		.loc 2 507 5
 1939 00a2 7B68     		ldr	r3, [r7, #4]
 1940 00a4 9B6D     		ldr	r3, [r3, #88]
 1941 00a6 43F01002 		orr	r2, r3, #16
 1942 00aa 7B68     		ldr	r3, [r7, #4]
 1943 00ac 9A65     		str	r2, [r3, #88]
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC error code to ADC peripheral internal error */
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 1944              		.loc 2 510 5
 1945 00ae 7B68     		ldr	r3, [r7, #4]
 1946 00b0 DB6D     		ldr	r3, [r3, #92]
 1947 00b2 43F00102 		orr	r2, r3, #1
 1948 00b6 7B68     		ldr	r3, [r7, #4]
 1949 00b8 DA65     		str	r2, [r3, #92]
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 1950              		.loc 2 512 20
 1951 00ba 0123     		movs	r3, #1
 1952 00bc FB77     		strb	r3, [r7, #31]
 1953              	.L80:
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* correctly completed and if there is no conversion on going on regular    */
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* called to update a parameter on the fly).                                */
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_reg_is_conversion_on_going = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 1954              		.loc 2 519 40
 1955 00be 7B68     		ldr	r3, [r7, #4]
 1956 00c0 1B68     		ldr	r3, [r3]
 1957 00c2 1846     		mov	r0, r3
 1958 00c4 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 1959 00c8 7861     		str	r0, [r7, #20]
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 1960              		.loc 2 521 13
 1961 00ca 7B68     		ldr	r3, [r7, #4]
 1962 00cc 9B6D     		ldr	r3, [r3, #88]
 1963              		.loc 2 521 21
 1964 00ce 03F01003 		and	r3, r3, #16
 1965              		.loc 2 521 6
 1966 00d2 002B     		cmp	r3, #0
 1967 00d4 40F0CD80 		bne	.L81
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 1968              		.loc 2 522 7
 1969 00d8 7B69     		ldr	r3, [r7, #20]
 1970 00da 002B     		cmp	r3, #0
 1971 00dc 40F0C980 		bne	.L81
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 171


 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 1972              		.loc 2 526 5
 1973 00e0 7B68     		ldr	r3, [r7, #4]
 1974 00e2 9B6D     		ldr	r3, [r3, #88]
 1975 00e4 23F48173 		bic	r3, r3, #258
 1976 00e8 43F00202 		orr	r2, r3, #2
 1977 00ec 7B68     		ldr	r3, [r7, #4]
 1978 00ee 9A65     		str	r2, [r3, #88]
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Configuration of common ADC parameters                                 */
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - clock configuration                                                 */
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 1979              		.loc 2 535 9
 1980 00f0 7B68     		ldr	r3, [r7, #4]
 1981 00f2 1B68     		ldr	r3, [r3]
 1982 00f4 1846     		mov	r0, r3
 1983 00f6 FFF7FEFF 		bl	LL_ADC_IsEnabled
 1984 00fa 0346     		mov	r3, r0
 1985              		.loc 2 535 8
 1986 00fc 002B     		cmp	r3, #0
 1987 00fe 10D1     		bne	.L82
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 1988              		.loc 2 537 11
 1989 0100 6448     		ldr	r0, .L90+8
 1990 0102 FFF7FEFF 		bl	LL_ADC_IsEnabled
 1991 0106 0446     		mov	r4, r0
 1992 0108 6348     		ldr	r0, .L90+12
 1993 010a FFF7FEFF 		bl	LL_ADC_IsEnabled
 1994 010e 0346     		mov	r3, r0
 1995 0110 2343     		orrs	r3, r3, r4
 1996              		.loc 2 537 10
 1997 0112 002B     		cmp	r3, #0
 1998 0114 05D1     		bne	.L82
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset configuration of ADC common register CCR:                      */
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*                                                                      */
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*   - ADC clock mode and ACC prescaler (CKMODE and PRESC bits)are set  */
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*     according to adc->Init.ClockPrescaler. It selects the clock      */
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*    source and sets the clock division factor.                        */
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*                                                                      */
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Some parameters of this register are not reset, since they are set   */
 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* by other functions and must be kept in case of usage of this         */
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* without needing to reconfigure all other ADC groups/channels         */
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* parameters):                                                         */
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*   - when multimode feature is available, multimode-related           */
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*     parameters: MDMA, DMACFG, DELAY, DUAL (set by API                */
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*     HAL_ADCEx_MultiModeConfigChannel() )                             */
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 172


 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*     (set into HAL_ADC_ConfigChannel() or                             */
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*     HAL_ADCEx_InjectedConfigChannel() )                              */
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetCommonClock(__LL_ADC_COMMON_INSTANCE(hadc->Instance), hadc->Init.ClockPrescaler);
 1999              		.loc 2 556 9
 2000 0116 7B68     		ldr	r3, [r7, #4]
 2001 0118 5B68     		ldr	r3, [r3, #4]
 2002 011a 1946     		mov	r1, r3
 2003 011c 5F48     		ldr	r0, .L90+16
 2004 011e FFF7FEFF 		bl	LL_ADC_SetCommonClock
 2005              	.L82:
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - resolution                               Init.Resolution            */
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - data alignment                           Init.DataAlign             */
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - external trigger to start conversion     Init.ExternalTrigConv      */
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - external trigger polarity                Init.ExternalTrigConvEdge  */
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - continuous conversion mode               Init.ContinuousConvMode    */
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - overrun                                  Init.Overrun               */
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - discontinuous mode                       Init.DiscontinuousConvMode */
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - discontinuous mode channel count         Init.NbrOfDiscConversion   */
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)           |
 2006              		.loc 2 569 17
 2007 0122 7B68     		ldr	r3, [r7, #4]
 2008 0124 5B7E     		ldrb	r3, [r3, #25]	@ zero_extendqisi2
 2009 0126 5A03     		lsls	r2, r3, #13
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 2010              		.loc 2 570 27
 2011 0128 7B68     		ldr	r3, [r7, #4]
 2012 012a 5B6B     		ldr	r3, [r3, #52]
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 2013              		.loc 2 569 88
 2014 012c 1A43     		orrs	r2, r2, r3
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.DataAlign                                                   |
 2015              		.loc 2 571 27
 2016 012e 7B68     		ldr	r3, [r7, #4]
 2017 0130 DB68     		ldr	r3, [r3, #12]
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 2018              		.loc 2 570 88
 2019 0132 1A43     		orrs	r2, r2, r3
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 2020              		.loc 2 572 27
 2021 0134 7B68     		ldr	r3, [r7, #4]
 2022 0136 9B68     		ldr	r3, [r3, #8]
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.DataAlign                                                   |
 2023              		.loc 2 571 88
 2024 0138 1A43     		orrs	r2, r2, r3
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 2025              		.loc 2 573 17
 2026 013a 7B68     		ldr	r3, [r7, #4]
 2027 013c 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2028 0140 1B04     		lsls	r3, r3, #16
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 2029              		.loc 2 569 14
 2030 0142 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 173


 2031 0144 BB61     		str	r3, [r7, #24]
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 2032              		.loc 2 575 19
 2033 0146 7B68     		ldr	r3, [r7, #4]
 2034 0148 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2035              		.loc 2 575 8
 2036 014c 012B     		cmp	r3, #1
 2037 014e 06D1     		bne	.L83
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpCFGR |= ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion);
 2038              		.loc 2 577 18
 2039 0150 7B68     		ldr	r3, [r7, #4]
 2040 0152 5B6A     		ldr	r3, [r3, #36]
 2041 0154 013B     		subs	r3, r3, #1
 2042 0156 5B04     		lsls	r3, r3, #17
 2043              		.loc 2 577 15
 2044 0158 BA69     		ldr	r2, [r7, #24]
 2045 015a 1343     		orrs	r3, r3, r2
 2046 015c BB61     		str	r3, [r7, #24]
 2047              	.L83:
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable external trigger if trigger selection is different of software  */
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* start.                                                                 */
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: This configuration keeps the hardware feature of parameter       */
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       software start.                                                  */
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 2048              		.loc 2 585 19
 2049 015e 7B68     		ldr	r3, [r7, #4]
 2050 0160 9B6A     		ldr	r3, [r3, #40]
 2051              		.loc 2 585 8
 2052 0162 002B     		cmp	r3, #0
 2053 0164 09D0     		beq	.L84
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 2054              		.loc 2 587 30
 2055 0166 7B68     		ldr	r3, [r7, #4]
 2056 0168 9B6A     		ldr	r3, [r3, #40]
 2057              		.loc 2 587 48
 2058 016a 03F47072 		and	r2, r3, #960
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 2059              		.loc 2 588 31
 2060 016e 7B68     		ldr	r3, [r7, #4]
 2061 0170 DB6A     		ldr	r3, [r3, #44]
 2062              		.loc 2 588 19
 2063 0172 1343     		orrs	r3, r3, r2
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 2064              		.loc 2 587 15
 2065 0174 BA69     		ldr	r2, [r7, #24]
 2066 0176 1343     		orrs	r3, r3, r2
 2067 0178 BB61     		str	r3, [r7, #24]
 2068              	.L84:
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  );
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 174


 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update Configuration Register CFGR */
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmpCFGR);
 2069              		.loc 2 593 5
 2070 017a 7B68     		ldr	r3, [r7, #4]
 2071 017c 1B68     		ldr	r3, [r3]
 2072 017e DA68     		ldr	r2, [r3, #12]
 2073 0180 474B     		ldr	r3, .L90+20
 2074 0182 1340     		ands	r3, r3, r2
 2075 0184 7A68     		ldr	r2, [r7, #4]
 2076 0186 1268     		ldr	r2, [r2]
 2077 0188 B969     		ldr	r1, [r7, #24]
 2078 018a 0B43     		orrs	r3, r3, r1
 2079 018c D360     		str	r3, [r2, #12]
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without */
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* conversion on going on regular and injected groups:                    */
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - DMA continuous request          Init.DMAContinuousRequests          */
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - LowPowerAutoWait feature        Init.LowPowerAutoWait               */
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - Oversampling parameters         Init.Oversampling                   */
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 2080              		.loc 2 601 46
 2081 018e 7B68     		ldr	r3, [r7, #4]
 2082 0190 1B68     		ldr	r3, [r3]
 2083 0192 1846     		mov	r0, r3
 2084 0194 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 2085 0198 3861     		str	r0, [r7, #16]
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 2086              		.loc 2 602 47
 2087 019a 7B68     		ldr	r3, [r7, #4]
 2088 019c 1B68     		ldr	r3, [r3]
 2089 019e 1846     		mov	r0, r3
 2090 01a0 FFF7FEFF 		bl	LL_ADC_INJ_IsConversionOngoing
 2091 01a4 F860     		str	r0, [r7, #12]
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 2092              		.loc 2 603 8
 2093 01a6 3B69     		ldr	r3, [r7, #16]
 2094 01a8 002B     		cmp	r3, #0
 2095 01aa 40D1     		bne	.L85
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 2096              		.loc 2 604 9
 2097 01ac FB68     		ldr	r3, [r7, #12]
 2098 01ae 002B     		cmp	r3, #0
 2099 01b0 3DD1     		bne	.L85
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpCFGR = (ADC_CFGR_DFSDM(hadc)                                            |
 2100              		.loc 2 607 18
 2101 01b2 7B68     		ldr	r3, [r7, #4]
 2102 01b4 DA6C     		ldr	r2, [r3, #76]
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 2103              		.loc 2 608 18
 2104 01b6 7B68     		ldr	r3, [r7, #4]
 2105 01b8 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 2106 01ba 9B03     		lsls	r3, r3, #14
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 2107              		.loc 2 607 82
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 175


 2108 01bc 1A43     		orrs	r2, r2, r3
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 2109              		.loc 2 609 18
 2110 01be 7B68     		ldr	r3, [r7, #4]
 2111 01c0 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 2112 01c4 5B00     		lsls	r3, r3, #1
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 2113              		.loc 2 607 15
 2114 01c6 1343     		orrs	r3, r3, r2
 2115 01c8 BB61     		str	r3, [r7, #24]
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_2, tmpCFGR);
 2116              		.loc 2 611 7
 2117 01ca 7B68     		ldr	r3, [r7, #4]
 2118 01cc 1B68     		ldr	r3, [r3]
 2119 01ce DB68     		ldr	r3, [r3, #12]
 2120 01d0 23F48043 		bic	r3, r3, #16384
 2121 01d4 23F00603 		bic	r3, r3, #6
 2122 01d8 7A68     		ldr	r2, [r7, #4]
 2123 01da 1268     		ldr	r2, [r2]
 2124 01dc B969     		ldr	r1, [r7, #24]
 2125 01de 0B43     		orrs	r3, r3, r1
 2126 01e0 D360     		str	r3, [r2, #12]
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (hadc->Init.OversamplingMode == ENABLE)
 2127              		.loc 2 613 21
 2128 01e2 7B68     		ldr	r3, [r7, #4]
 2129 01e4 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 2130              		.loc 2 613 10
 2131 01e8 012B     		cmp	r3, #1
 2132 01ea 18D1     		bne	.L86
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_OVERSAMPLING_RATIO(hadc->Init.Oversampling.Ratio));
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Configuration of Oversampler:                                      */
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*  - Oversampling Ratio                                              */
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*  - Right bit shift                                                 */
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*  - Triggered mode                                                  */
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*  - Oversampling mode (continued/resumed)                           */
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->CFGR2,
 2133              		.loc 2 625 9
 2134 01ec 7B68     		ldr	r3, [r7, #4]
 2135 01ee 1B68     		ldr	r3, [r3]
 2136 01f0 1B69     		ldr	r3, [r3, #16]
 2137 01f2 23F4FF63 		bic	r3, r3, #2040
 2138 01f6 23F00403 		bic	r3, r3, #4
 2139 01fa 7A68     		ldr	r2, [r7, #4]
 2140 01fc D16B     		ldr	r1, [r2, #60]
 2141 01fe 7A68     		ldr	r2, [r7, #4]
 2142 0200 126C     		ldr	r2, [r2, #64]
 2143 0202 1143     		orrs	r1, r1, r2
 2144 0204 7A68     		ldr	r2, [r7, #4]
 2145 0206 526C     		ldr	r2, [r2, #68]
 2146 0208 1143     		orrs	r1, r1, r2
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 176


 2147 020a 7A68     		ldr	r2, [r7, #4]
 2148 020c 926C     		ldr	r2, [r2, #72]
 2149 020e 0A43     		orrs	r2, r2, r1
 2150 0210 1A43     		orrs	r2, r2, r3
 2151 0212 7B68     		ldr	r3, [r7, #4]
 2152 0214 1B68     		ldr	r3, [r3]
 2153 0216 42F00102 		orr	r2, r2, #1
 2154 021a 1A61     		str	r2, [r3, #16]
 2155 021c 07E0     		b	.L85
 2156              	.L86:
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_OVSR  |
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_OVSS  |
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_TROVS |
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_ROVSM,
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_ROVSE                       |
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    hadc->Init.Oversampling.Ratio         |
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    hadc->Init.Oversampling.RightBitShift |
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    hadc->Init.Oversampling.TriggeredMode |
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    hadc->Init.Oversampling.OversamplingStopReset
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   );
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Disable ADC oversampling scope on ADC group regular */
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE);
 2157              		.loc 2 640 9
 2158 021e 7B68     		ldr	r3, [r7, #4]
 2159 0220 1B68     		ldr	r3, [r3]
 2160 0222 1A69     		ldr	r2, [r3, #16]
 2161 0224 7B68     		ldr	r3, [r7, #4]
 2162 0226 1B68     		ldr	r3, [r3]
 2163 0228 22F00102 		bic	r2, r2, #1
 2164 022c 1A61     		str	r2, [r3, #16]
 2165              	.L85:
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   parameter "NbrOfConversion".                                         */
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 2166              		.loc 2 654 19
 2167 022e 7B68     		ldr	r3, [r7, #4]
 2168 0230 1B69     		ldr	r3, [r3, #16]
 2169              		.loc 2 654 8
 2170 0232 012B     		cmp	r3, #1
 2171 0234 0CD1     		bne	.L87
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set number of ranks in regular group sequencer */
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->SQR1, ADC_SQR1_L, (hadc->Init.NbrOfConversion - (uint8_t)1));
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 177


 2172              		.loc 2 657 7
 2173 0236 7B68     		ldr	r3, [r7, #4]
 2174 0238 1B68     		ldr	r3, [r3]
 2175 023a 1B6B     		ldr	r3, [r3, #48]
 2176 023c 23F00F01 		bic	r1, r3, #15
 2177 0240 7B68     		ldr	r3, [r7, #4]
 2178 0242 DB69     		ldr	r3, [r3, #28]
 2179 0244 5A1E     		subs	r2, r3, #1
 2180 0246 7B68     		ldr	r3, [r7, #4]
 2181 0248 1B68     		ldr	r3, [r3]
 2182 024a 0A43     		orrs	r2, r2, r1
 2183 024c 1A63     		str	r2, [r3, #48]
 2184 024e 07E0     		b	.L88
 2185              	.L87:
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
 2186              		.loc 2 661 7
 2187 0250 7B68     		ldr	r3, [r7, #4]
 2188 0252 1B68     		ldr	r3, [r3]
 2189 0254 1A6B     		ldr	r2, [r3, #48]
 2190 0256 7B68     		ldr	r3, [r7, #4]
 2191 0258 1B68     		ldr	r3, [r3]
 2192 025a 22F00F02 		bic	r2, r2, #15
 2193 025e 1A63     		str	r2, [r3, #48]
 2194              	.L88:
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Initialize the ADC state */
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear HAL_ADC_STATE_BUSY_INTERNAL bit, set HAL_ADC_STATE_READY bit */
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_READY);
 2195              		.loc 2 666 5
 2196 0260 7B68     		ldr	r3, [r7, #4]
 2197 0262 9B6D     		ldr	r3, [r3, #88]
 2198 0264 23F00303 		bic	r3, r3, #3
 2199 0268 43F00102 		orr	r2, r3, #1
 2200 026c 7B68     		ldr	r3, [r7, #4]
 2201 026e 9A65     		str	r2, [r3, #88]
 2202 0270 07E0     		b	.L89
 2203              	.L81:
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update ADC state machine to error */
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 2204              		.loc 2 671 5
 2205 0272 7B68     		ldr	r3, [r7, #4]
 2206 0274 9B6D     		ldr	r3, [r3, #88]
 2207 0276 43F01002 		orr	r2, r3, #16
 2208 027a 7B68     		ldr	r3, [r7, #4]
 2209 027c 9A65     		str	r2, [r3, #88]
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 2210              		.loc 2 673 20
 2211 027e 0123     		movs	r3, #1
 2212 0280 FB77     		strb	r3, [r7, #31]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 178


 2213              	.L89:
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 2214              		.loc 2 677 10
 2215 0282 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2216              	.L73:
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 2217              		.loc 2 678 1
 2218 0284 1846     		mov	r0, r3
 2219 0286 2437     		adds	r7, r7, #36
 2220              		.cfi_def_cfa_offset 12
 2221 0288 BD46     		mov	sp, r7
 2222              		.cfi_def_cfa_register 13
 2223              		@ sp needed
 2224 028a 90BD     		pop	{r4, r7, pc}
 2225              	.L91:
 2226              		.align	2
 2227              	.L90:
 2228 028c 00000000 		.word	SystemCoreClock
 2229 0290 632D3E05 		.word	87960931
 2230 0294 00000450 		.word	1342439424
 2231 0298 00010450 		.word	1342439680
 2232 029c 00030450 		.word	1342440192
 2233 02a0 07C0F0FF 		.word	-999417
 2234              		.cfi_endproc
 2235              	.LFE321:
 2237              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 2238              		.align	1
 2239              		.global	HAL_ADC_DeInit
 2240              		.syntax unified
 2241              		.thumb
 2242              		.thumb_func
 2244              	HAL_ADC_DeInit:
 2245              	.LFB322:
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         only if all ADCs sharing the same common group are disabled.
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (function "HAL_ADC_MspDeInit()" is also called under the same conditions:
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         all ADC instances use the same core clock at RCC level, disabling
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         If this is not the case, reset of these common parameters reset is
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behavior in
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of reset of a single ADC while the other ADCs sharing the same
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         common group is still running.
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   By default, HAL_ADC_DeInit() set ADC in mode deep power-down:
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         this saves more power by reducing leakage currents
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         and is particularly interesting before entering MCU low-power modes.
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef *hadc)
 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 179


 2246              		.loc 2 699 1
 2247              		.cfi_startproc
 2248              		@ args = 0, pretend = 0, frame = 16
 2249              		@ frame_needed = 1, uses_anonymous_args = 0
 2250 0000 90B5     		push	{r4, r7, lr}
 2251              		.cfi_def_cfa_offset 12
 2252              		.cfi_offset 4, -12
 2253              		.cfi_offset 7, -8
 2254              		.cfi_offset 14, -4
 2255 0002 85B0     		sub	sp, sp, #20
 2256              		.cfi_def_cfa_offset 32
 2257 0004 00AF     		add	r7, sp, #0
 2258              		.cfi_def_cfa_register 7
 2259 0006 7860     		str	r0, [r7, #4]
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check ADC handle */
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc == NULL)
 2260              		.loc 2 703 6
 2261 0008 7B68     		ldr	r3, [r7, #4]
 2262 000a 002B     		cmp	r3, #0
 2263 000c 01D1     		bne	.L93
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     return HAL_ERROR;
 2264              		.loc 2 705 12
 2265 000e 0123     		movs	r3, #1
 2266 0010 11E1     		b	.L94
 2267              	.L93:
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC state */
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 2268              		.loc 2 712 3
 2269 0012 7B68     		ldr	r3, [r7, #4]
 2270 0014 9B6D     		ldr	r3, [r3, #88]
 2271 0016 43F00202 		orr	r2, r3, #2
 2272 001a 7B68     		ldr	r3, [r7, #4]
 2273 001c 9A65     		str	r2, [r3, #88]
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Stop potential conversion on going */
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 2274              		.loc 2 715 20
 2275 001e 0321     		movs	r1, #3
 2276 0020 7868     		ldr	r0, [r7, #4]
 2277 0022 FFF7FEFF 		bl	ADC_ConversionStop
 2278 0026 0346     		mov	r3, r0
 2279 0028 FB73     		strb	r3, [r7, #15]
 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped            */
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Flush register JSQR: reset the queue sequencer when injected             */
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* queue sequencer is enabled and ADC disabled.                             */
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* The software and hardware triggers of the injected sequence are both     */
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* internally disabled just after the completion of the last valid          */
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* injected sequence.                                                       */
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 180


 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQM);
 2280              		.loc 2 723 3
 2281 002a 7B68     		ldr	r3, [r7, #4]
 2282 002c 1B68     		ldr	r3, [r3]
 2283 002e DA68     		ldr	r2, [r3, #12]
 2284 0030 7B68     		ldr	r3, [r7, #4]
 2285 0032 1B68     		ldr	r3, [r3]
 2286 0034 42F40012 		orr	r2, r2, #2097152
 2287 0038 DA60     		str	r2, [r3, #12]
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 2288              		.loc 2 726 6
 2289 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2290 003c 002B     		cmp	r3, #0
 2291 003e 0AD1     		bne	.L95
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable the ADC peripheral */
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 2292              		.loc 2 729 22
 2293 0040 7868     		ldr	r0, [r7, #4]
 2294 0042 FFF7FEFF 		bl	ADC_Disable
 2295 0046 0346     		mov	r3, r0
 2296 0048 FB73     		strb	r3, [r7, #15]
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 2297              		.loc 2 732 8
 2298 004a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2299 004c 002B     		cmp	r3, #0
 2300 004e 02D1     		bne	.L95
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Change ADC state */
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       hadc->State = HAL_ADC_STATE_READY;
 2301              		.loc 2 735 19
 2302 0050 7B68     		ldr	r3, [r7, #4]
 2303 0052 0122     		movs	r2, #1
 2304 0054 9A65     		str	r2, [r3, #88]
 2305              	.L95:
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Note: HAL ADC deInit is done independently of ADC conversion stop        */
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       and disable return status. In case of status fail, attempt to      */
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       perform deinitialization anyway and it is up user code in          */
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       in HAL_ADC_MspDeInit() to reset the ADC peripheral using           */
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       system RCC hard reset.                                             */
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Reset ADC registers ========== */
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register IER */
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD3  | ADC_IT_AWD2 | ADC_IT_AWD1 |
 2306              		.loc 2 747 3
 2307 0056 7B68     		ldr	r3, [r7, #4]
 2308 0058 1B68     		ldr	r3, [r3]
 2309 005a 5B68     		ldr	r3, [r3, #4]
 2310 005c 7A68     		ldr	r2, [r7, #4]
 2311 005e 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 181


 2312 0060 23F4FF63 		bic	r3, r3, #2040
 2313 0064 23F00703 		bic	r3, r3, #7
 2314 0068 5360     		str	r3, [r2, #4]
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_IT_JEOS  | ADC_IT_JEOC |
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_IT_EOS   | ADC_IT_EOC  |
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_IT_EOSMP | ADC_IT_RDY));
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register ISR */
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD3  | ADC_FLAG_AWD2 | ADC_FLAG_AWD1 |
 2315              		.loc 2 754 3
 2316 006a 7B68     		ldr	r3, [r7, #4]
 2317 006c 1B68     		ldr	r3, [r3]
 2318 006e 40F2FF72 		movw	r2, #2047
 2319 0072 1A60     		str	r2, [r3]
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_FLAG_JEOS  | ADC_FLAG_JEOC |
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register CR */
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Bits ADC_CR_JADSTP, ADC_CR_ADSTP, ADC_CR_JADSTART, ADC_CR_ADSTART,
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ADC_CR_ADCAL, ADC_CR_ADDIS and ADC_CR_ADEN are in access mode "read-set":
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      no direct reset applicable.
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Update CR register to reset value where doable by software */
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN | ADC_CR_ADCALDIF);
 2320              		.loc 2 765 3
 2321 0074 7B68     		ldr	r3, [r7, #4]
 2322 0076 1B68     		ldr	r3, [r3]
 2323 0078 9A68     		ldr	r2, [r3, #8]
 2324 007a 7B68     		ldr	r3, [r7, #4]
 2325 007c 1B68     		ldr	r3, [r3]
 2326 007e 22F0A042 		bic	r2, r2, #1342177280
 2327 0082 9A60     		str	r2, [r3, #8]
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 2328              		.loc 2 766 3
 2329 0084 7B68     		ldr	r3, [r7, #4]
 2330 0086 1B68     		ldr	r3, [r3]
 2331 0088 9A68     		ldr	r2, [r3, #8]
 2332 008a 7B68     		ldr	r3, [r7, #4]
 2333 008c 1B68     		ldr	r3, [r3]
 2334 008e 42F00052 		orr	r2, r2, #536870912
 2335 0092 9A60     		str	r2, [r3, #8]
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register CFGR */
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_FIELDS);
 2336              		.loc 2 769 3
 2337 0094 7B68     		ldr	r3, [r7, #4]
 2338 0096 1B68     		ldr	r3, [r3]
 2339 0098 DA68     		ldr	r2, [r3, #12]
 2340 009a 7B68     		ldr	r3, [r7, #4]
 2341 009c 1B68     		ldr	r3, [r3]
 2342 009e 02F08022 		and	r2, r2, #-2147450880
 2343 00a2 DA60     		str	r2, [r3, #12]
 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 2344              		.loc 2 770 3
 2345 00a4 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 182


 2346 00a6 1B68     		ldr	r3, [r3]
 2347 00a8 DA68     		ldr	r2, [r3, #12]
 2348 00aa 7B68     		ldr	r3, [r7, #4]
 2349 00ac 1B68     		ldr	r3, [r3]
 2350 00ae 42F00042 		orr	r2, r2, #-2147483648
 2351 00b2 DA60     		str	r2, [r3, #12]
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register CFGR2 */
 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSM  | ADC_CFGR2_TROVS   | ADC_CFGR2_OVSS |
 2352              		.loc 2 773 3
 2353 00b4 7B68     		ldr	r3, [r7, #4]
 2354 00b6 1B68     		ldr	r3, [r3]
 2355 00b8 1B69     		ldr	r3, [r3, #16]
 2356 00ba 7A68     		ldr	r2, [r7, #4]
 2357 00bc 1268     		ldr	r2, [r2]
 2358 00be 23F4FF63 		bic	r3, r3, #2040
 2359 00c2 23F00703 		bic	r3, r3, #7
 2360 00c6 1361     		str	r3, [r2, #16]
 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SMPR1 */
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR1, ADC_SMPR1_FIELDS);
 2361              		.loc 2 777 3
 2362 00c8 7B68     		ldr	r3, [r7, #4]
 2363 00ca 1B68     		ldr	r3, [r3]
 2364 00cc 5A69     		ldr	r2, [r3, #20]
 2365 00ce 7B68     		ldr	r3, [r7, #4]
 2366 00d0 1B68     		ldr	r3, [r3]
 2367 00d2 02F08042 		and	r2, r2, #1073741824
 2368 00d6 5A61     		str	r2, [r3, #20]
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SMPR2 */
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR2, ADC_SMPR2_SMP18 | ADC_SMPR2_SMP17 | ADC_SMPR2_SMP16 |
 2369              		.loc 2 780 3
 2370 00d8 7B68     		ldr	r3, [r7, #4]
 2371 00da 1B68     		ldr	r3, [r3]
 2372 00dc 9A69     		ldr	r2, [r3, #24]
 2373 00de 7B68     		ldr	r3, [r7, #4]
 2374 00e0 1B68     		ldr	r3, [r3]
 2375 00e2 02F07842 		and	r2, r2, #-134217728
 2376 00e6 9A61     		str	r2, [r3, #24]
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SMPR2_SMP12 | ADC_SMPR2_SMP11 | ADC_SMPR2_SMP10);
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register TR1 */
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR1, ADC_TR1_HT1 | ADC_TR1_LT1);
 2377              		.loc 2 785 3
 2378 00e8 7B68     		ldr	r3, [r7, #4]
 2379 00ea 1B68     		ldr	r3, [r3]
 2380 00ec 1A6A     		ldr	r2, [r3, #32]
 2381 00ee 7B68     		ldr	r3, [r7, #4]
 2382 00f0 1B68     		ldr	r3, [r3]
 2383 00f2 02F0F022 		and	r2, r2, #-268374016
 2384 00f6 1A62     		str	r2, [r3, #32]
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register TR2 */
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR2, ADC_TR2_HT2 | ADC_TR2_LT2);
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 183


 2385              		.loc 2 788 3
 2386 00f8 7B68     		ldr	r3, [r7, #4]
 2387 00fa 1B68     		ldr	r3, [r3]
 2388 00fc 5A6A     		ldr	r2, [r3, #36]
 2389 00fe 7B68     		ldr	r3, [r7, #4]
 2390 0100 1B68     		ldr	r3, [r3]
 2391 0102 02F0FF22 		and	r2, r2, #-16711936
 2392 0106 5A62     		str	r2, [r3, #36]
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register TR3 */
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR3, ADC_TR3_HT3 | ADC_TR3_LT3);
 2393              		.loc 2 791 3
 2394 0108 7B68     		ldr	r3, [r7, #4]
 2395 010a 1B68     		ldr	r3, [r3]
 2396 010c 9A6A     		ldr	r2, [r3, #40]
 2397 010e 7B68     		ldr	r3, [r7, #4]
 2398 0110 1B68     		ldr	r3, [r3]
 2399 0112 02F0FF22 		and	r2, r2, #-16711936
 2400 0116 9A62     		str	r2, [r3, #40]
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SQR1 */
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_SQ4 | ADC_SQR1_SQ3 | ADC_SQR1_SQ2 |
 2401              		.loc 2 794 3
 2402 0118 7B68     		ldr	r3, [r7, #4]
 2403 011a 1B68     		ldr	r3, [r3]
 2404 011c 196B     		ldr	r1, [r3, #48]
 2405 011e 7B68     		ldr	r3, [r7, #4]
 2406 0120 1A68     		ldr	r2, [r3]
 2407 0122 474B     		ldr	r3, .L97
 2408 0124 0B40     		ands	r3, r3, r1
 2409 0126 1363     		str	r3, [r2, #48]
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SQR2 */
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ9 | ADC_SQR2_SQ8 | ADC_SQR2_SQ7 |
 2410              		.loc 2 798 3
 2411 0128 7B68     		ldr	r3, [r7, #4]
 2412 012a 1B68     		ldr	r3, [r3]
 2413 012c 596B     		ldr	r1, [r3, #52]
 2414 012e 7B68     		ldr	r3, [r7, #4]
 2415 0130 1A68     		ldr	r2, [r3]
 2416 0132 444B     		ldr	r3, .L97+4
 2417 0134 0B40     		ands	r3, r3, r1
 2418 0136 5363     		str	r3, [r2, #52]
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SQR3 */
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ14 | ADC_SQR3_SQ13 | ADC_SQR3_SQ12 |
 2419              		.loc 2 802 3
 2420 0138 7B68     		ldr	r3, [r7, #4]
 2421 013a 1B68     		ldr	r3, [r3]
 2422 013c 996B     		ldr	r1, [r3, #56]
 2423 013e 7B68     		ldr	r3, [r7, #4]
 2424 0140 1A68     		ldr	r2, [r3]
 2425 0142 404B     		ldr	r3, .L97+4
 2426 0144 0B40     		ands	r3, r3, r1
 2427 0146 9363     		str	r3, [r2, #56]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 184


 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SQR4 */
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR4, ADC_SQR4_SQ16 | ADC_SQR4_SQ15);
 2428              		.loc 2 806 3
 2429 0148 7B68     		ldr	r3, [r7, #4]
 2430 014a 1B68     		ldr	r3, [r3]
 2431 014c DB6B     		ldr	r3, [r3, #60]
 2432 014e 7A68     		ldr	r2, [r7, #4]
 2433 0150 1268     		ldr	r2, [r2]
 2434 0152 23F4FB63 		bic	r3, r3, #2008
 2435 0156 23F00703 		bic	r3, r3, #7
 2436 015a D363     		str	r3, [r2, #60]
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Register JSQR was reset when the ADC was disabled */
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register DR */
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR1 */
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1);
 2437              		.loc 2 814 3
 2438 015c 7B68     		ldr	r3, [r7, #4]
 2439 015e 1B68     		ldr	r3, [r3]
 2440 0160 196E     		ldr	r1, [r3, #96]
 2441 0162 7B68     		ldr	r3, [r7, #4]
 2442 0164 1A68     		ldr	r2, [r3]
 2443 0166 384B     		ldr	r3, .L97+8
 2444 0168 0B40     		ands	r3, r3, r1
 2445 016a 1366     		str	r3, [r2, #96]
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR2 */
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_OFFSET2_EN | ADC_OFR2_OFFSET2_CH | ADC_OFR2_OFFSET2);
 2446              		.loc 2 816 3
 2447 016c 7B68     		ldr	r3, [r7, #4]
 2448 016e 1B68     		ldr	r3, [r3]
 2449 0170 596E     		ldr	r1, [r3, #100]
 2450 0172 7B68     		ldr	r3, [r7, #4]
 2451 0174 1A68     		ldr	r2, [r3]
 2452 0176 344B     		ldr	r3, .L97+8
 2453 0178 0B40     		ands	r3, r3, r1
 2454 017a 5366     		str	r3, [r2, #100]
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR3 */
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_OFFSET3_EN | ADC_OFR3_OFFSET3_CH | ADC_OFR3_OFFSET3);
 2455              		.loc 2 818 3
 2456 017c 7B68     		ldr	r3, [r7, #4]
 2457 017e 1B68     		ldr	r3, [r3]
 2458 0180 996E     		ldr	r1, [r3, #104]
 2459 0182 7B68     		ldr	r3, [r7, #4]
 2460 0184 1A68     		ldr	r2, [r3]
 2461 0186 304B     		ldr	r3, .L97+8
 2462 0188 0B40     		ands	r3, r3, r1
 2463 018a 9366     		str	r3, [r2, #104]
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR4 */
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_OFFSET4_EN | ADC_OFR4_OFFSET4_CH | ADC_OFR4_OFFSET4);
 2464              		.loc 2 820 3
 2465 018c 7B68     		ldr	r3, [r7, #4]
 2466 018e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 185


 2467 0190 D96E     		ldr	r1, [r3, #108]
 2468 0192 7B68     		ldr	r3, [r7, #4]
 2469 0194 1A68     		ldr	r2, [r3]
 2470 0196 2C4B     		ldr	r3, .L97+8
 2471 0198 0B40     		ands	r3, r3, r1
 2472 019a D366     		str	r3, [r2, #108]
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset registers JDR1, JDR2, JDR3, JDR4 */
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register AWD2CR */
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD2CR, ADC_AWD2CR_AWD2CH);
 2473              		.loc 2 826 3
 2474 019c 7B68     		ldr	r3, [r7, #4]
 2475 019e 1B68     		ldr	r3, [r3]
 2476 01a0 D3F8A030 		ldr	r3, [r3, #160]
 2477 01a4 7A68     		ldr	r2, [r7, #4]
 2478 01a6 1268     		ldr	r2, [r2]
 2479 01a8 DB0C     		lsrs	r3, r3, #19
 2480 01aa DB04     		lsls	r3, r3, #19
 2481 01ac C2F8A030 		str	r3, [r2, #160]
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register AWD3CR */
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD3CR, ADC_AWD3CR_AWD3CH);
 2482              		.loc 2 829 3
 2483 01b0 7B68     		ldr	r3, [r7, #4]
 2484 01b2 1B68     		ldr	r3, [r3]
 2485 01b4 D3F8A430 		ldr	r3, [r3, #164]
 2486 01b8 7A68     		ldr	r2, [r7, #4]
 2487 01ba 1268     		ldr	r2, [r2]
 2488 01bc DB0C     		lsrs	r3, r3, #19
 2489 01be DB04     		lsls	r3, r3, #19
 2490 01c0 C2F8A430 		str	r3, [r2, #164]
 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register DIFSEL */
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_DIFSEL);
 2491              		.loc 2 832 3
 2492 01c4 7B68     		ldr	r3, [r7, #4]
 2493 01c6 1B68     		ldr	r3, [r3]
 2494 01c8 D3F8B030 		ldr	r3, [r3, #176]
 2495 01cc 7A68     		ldr	r2, [r7, #4]
 2496 01ce 1268     		ldr	r2, [r2]
 2497 01d0 DB0C     		lsrs	r3, r3, #19
 2498 01d2 DB04     		lsls	r3, r3, #19
 2499 01d4 C2F8B030 		str	r3, [r2, #176]
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register CALFACT */
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CALFACT, ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S);
 2500              		.loc 2 835 3
 2501 01d8 7B68     		ldr	r3, [r7, #4]
 2502 01da 1B68     		ldr	r3, [r3]
 2503 01dc D3F8B420 		ldr	r2, [r3, #180]
 2504 01e0 7B68     		ldr	r3, [r7, #4]
 2505 01e2 1B68     		ldr	r3, [r3]
 2506 01e4 22F07F12 		bic	r2, r2, #8323199
 2507 01e8 C3F8B420 		str	r2, [r3, #180]
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 186


 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Reset common ADC registers ========== */
 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Software is allowed to change common parameters only when all the other
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ADCs are disabled.   */
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 2508              		.loc 2 842 7
 2509 01ec 1748     		ldr	r0, .L97+12
 2510 01ee FFF7FEFF 		bl	LL_ADC_IsEnabled
 2511 01f2 0446     		mov	r4, r0
 2512 01f4 1648     		ldr	r0, .L97+16
 2513 01f6 FFF7FEFF 		bl	LL_ADC_IsEnabled
 2514 01fa 0346     		mov	r3, r0
 2515 01fc 2343     		orrs	r3, r3, r4
 2516              		.loc 2 842 6
 2517 01fe 002B     		cmp	r3, #0
 2518 0200 08D1     		bne	.L96
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Reset configuration of ADC common register CCR:
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       - clock mode: CKMODE, PRESCEN
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       - multimode related parameters (when this feature is available): MDMA,
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         DMACFG, DELAY, DUAL (set by HAL_ADCEx_MultiModeConfigChannel() API)
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       - internal measurement paths: Vbat, temperature sensor, Vref (set into
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         HAL_ADC_ConfigChannel() or HAL_ADCEx_InjectedConfigChannel() )
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     */
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     ADC_CLEAR_COMMON_CONTROL_REGISTER(hadc);
 2519              		.loc 2 851 5
 2520 0202 144B     		ldr	r3, .L97+20
 2521 0204 9A68     		ldr	r2, [r3, #8]
 2522 0206 1349     		ldr	r1, .L97+20
 2523 0208 134B     		ldr	r3, .L97+24
 2524 020a 1340     		ands	r3, r3, r2
 2525 020c 8B60     		str	r3, [r1, #8]
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* ========== Hard reset ADC peripheral ========== */
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Performs a global reset of the entire ADC peripherals instances        */
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* sharing the same common ADC instance: ADC state is forced to           */
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* a similar state as after device power-on.                              */
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: A possible implementation is to add RCC bus reset of ADC         */
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* (for example, using macro                                              */
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  __HAL_RCC_ADC..._FORCE_RESET()/..._RELEASE_RESET()/..._CLK_DISABLE()) */
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* in function "void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)":         */
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->MspDeInitCallback == NULL)
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* DeInit the low level hardware */
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->MspDeInitCallback(hadc);
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* DeInit the low level hardware */
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADC_MspDeInit(hadc);
 2526              		.loc 2 871 5
 2527 020e 7868     		ldr	r0, [r7, #4]
 2528 0210 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 2529              	.L96:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 187


 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC error code to none */
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_CLEAR_ERRORCODE(hadc);
 2530              		.loc 2 876 3
 2531 0214 7B68     		ldr	r3, [r7, #4]
 2532 0216 0022     		movs	r2, #0
 2533 0218 DA65     		str	r2, [r3, #92]
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset injected channel configuration parameters */
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->InjectionConfig.ContextQueue = 0;
 2534              		.loc 2 879 38
 2535 021a 7B68     		ldr	r3, [r7, #4]
 2536 021c 0022     		movs	r2, #0
 2537 021e 1A66     		str	r2, [r3, #96]
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 2538              		.loc 2 880 38
 2539 0220 7B68     		ldr	r3, [r7, #4]
 2540 0222 0022     		movs	r2, #0
 2541 0224 5A66     		str	r2, [r3, #100]
 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC state */
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_RESET;
 2542              		.loc 2 883 15
 2543 0226 7B68     		ldr	r3, [r7, #4]
 2544 0228 0022     		movs	r2, #0
 2545 022a 9A65     		str	r2, [r3, #88]
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 2546              		.loc 2 886 3
 2547 022c 7B68     		ldr	r3, [r7, #4]
 2548 022e 0022     		movs	r2, #0
 2549 0230 83F85420 		strb	r2, [r3, #84]
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 2550              		.loc 2 889 10
 2551 0234 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2552              	.L94:
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 2553              		.loc 2 890 1
 2554 0236 1846     		mov	r0, r3
 2555 0238 1437     		adds	r7, r7, #20
 2556              		.cfi_def_cfa_offset 12
 2557 023a BD46     		mov	sp, r7
 2558              		.cfi_def_cfa_register 13
 2559              		@ sp needed
 2560 023c 90BD     		pop	{r4, r7, pc}
 2561              	.L98:
 2562 023e 00BF     		.align	2
 2563              	.L97:
 2564 0240 300882E0 		.word	-528349136
 2565 0244 200882E0 		.word	-528349152
 2566 0248 00F0FF03 		.word	67104768
 2567 024c 00000450 		.word	1342439424
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 188


 2568 0250 00010450 		.word	1342439680
 2569 0254 00030450 		.word	1342440192
 2570 0258 E01000FE 		.word	-33550112
 2571              		.cfi_endproc
 2572              	.LFE322:
 2574              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 2575              		.align	1
 2576              		.weak	HAL_ADC_MspInit
 2577              		.syntax unified
 2578              		.thumb
 2579              		.thumb_func
 2581              	HAL_ADC_MspInit:
 2582              	.LFB323:
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Initialize the ADC MSP.
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef *hadc)
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 2583              		.loc 2 898 1
 2584              		.cfi_startproc
 2585              		@ args = 0, pretend = 0, frame = 8
 2586              		@ frame_needed = 1, uses_anonymous_args = 0
 2587              		@ link register save eliminated.
 2588 0000 80B4     		push	{r7}
 2589              		.cfi_def_cfa_offset 4
 2590              		.cfi_offset 7, -4
 2591 0002 83B0     		sub	sp, sp, #12
 2592              		.cfi_def_cfa_offset 16
 2593 0004 00AF     		add	r7, sp, #0
 2594              		.cfi_def_cfa_register 7
 2595 0006 7860     		str	r0, [r7, #4]
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****    */
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 2596              		.loc 2 905 1
 2597 0008 00BF     		nop
 2598 000a 0C37     		adds	r7, r7, #12
 2599              		.cfi_def_cfa_offset 4
 2600 000c BD46     		mov	sp, r7
 2601              		.cfi_def_cfa_register 13
 2602              		@ sp needed
 2603 000e 5DF8047B 		ldr	r7, [sp], #4
 2604              		.cfi_restore 7
 2605              		.cfi_def_cfa_offset 0
 2606 0012 7047     		bx	lr
 2607              		.cfi_endproc
 2608              	.LFE323:
 2610              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 2611              		.align	1
 2612              		.weak	HAL_ADC_MspDeInit
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 189


 2613              		.syntax unified
 2614              		.thumb
 2615              		.thumb_func
 2617              	HAL_ADC_MspDeInit:
 2618              	.LFB324:
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  DeInitialize the ADC MSP.
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   All ADC instances use the same core clock at RCC level, disabling
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 2619              		.loc 2 915 1
 2620              		.cfi_startproc
 2621              		@ args = 0, pretend = 0, frame = 8
 2622              		@ frame_needed = 1, uses_anonymous_args = 0
 2623              		@ link register save eliminated.
 2624 0000 80B4     		push	{r7}
 2625              		.cfi_def_cfa_offset 4
 2626              		.cfi_offset 7, -4
 2627 0002 83B0     		sub	sp, sp, #12
 2628              		.cfi_def_cfa_offset 16
 2629 0004 00AF     		add	r7, sp, #0
 2630              		.cfi_def_cfa_register 7
 2631 0006 7860     		str	r0, [r7, #4]
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****    */
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 2632              		.loc 2 922 1
 2633 0008 00BF     		nop
 2634 000a 0C37     		adds	r7, r7, #12
 2635              		.cfi_def_cfa_offset 4
 2636 000c BD46     		mov	sp, r7
 2637              		.cfi_def_cfa_register 13
 2638              		@ sp needed
 2639 000e 5DF8047B 		ldr	r7, [sp], #4
 2640              		.cfi_restore 7
 2641              		.cfi_def_cfa_offset 0
 2642 0012 7047     		bx	lr
 2643              		.cfi_endproc
 2644              	.LFE324:
 2646              		.section	.text.HAL_ADC_Start,"ax",%progbits
 2647              		.align	1
 2648              		.global	HAL_ADC_Start
 2649              		.syntax unified
 2650              		.thumb
 2651              		.thumb_func
 2653              	HAL_ADC_Start:
 2654              	.LFB325:
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 190


 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Register a User ADC Callback
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         To be used instead of the weak predefined callback
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         This parameter can be one of the following values:
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                            pADC_CallbackTypeDef pCallback)
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (pCallback == NULL)
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update the error code */
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     return HAL_ERROR;
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     switch (CallbackID)
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 191


 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = pCallback;
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = pCallback;
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = pCallback;
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = pCallback;
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->EndOfSamplingCallback = pCallback;
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       default :
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update the error code */
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Return error status */
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         status = HAL_ERROR;
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     switch (CallbackID)
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       default :
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update the error code */
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Return error status */
1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         status = HAL_ERROR;
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 192


1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update the error code */
1042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Return error status */
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     status =  HAL_ERROR;
1046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return status;
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Unregister a ADC Callback
1053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *                the configuration information for the specified ADC.
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         This parameter can be one of the following values:
1058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
1060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
1066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
1072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     switch (CallbackID)
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 193


1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = HAL_ADCEx_InjectedConvCpltCallback;
1099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
1102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = HAL_ADCEx_LevelOutOfWindow2Callback;
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = HAL_ADCEx_LevelOutOfWindow3Callback;
1111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->EndOfSamplingCallback = HAL_ADCEx_EndOfSamplingCallback;
1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
1119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       default :
1126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update the error code */
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Return error status */
1130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         status =  HAL_ERROR;
1131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     switch (CallbackID)
1137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
1140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
1144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       default :
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update the error code */
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Return error status */
1151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         status =  HAL_ERROR;
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 194


1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update the error code */
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Return error status */
1161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     status =  HAL_ERROR;
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return status;
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
1166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 ADC Input and Output operation functions
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief    ADC IO operation functions
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @verbatim
1177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
1178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                       ##### IO operation functions #####
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
1180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Start conversion of regular group.
1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Stop conversion of regular group.
1183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
1184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Poll for conversion event.
1185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Get result of regular channel conversion.
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
1187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Handle ADC interrupt request
1189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
1191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @endverbatim
1192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group.
1197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Interruptions enabled in this function: None.
1198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           if ADC is Slave, ADC is enabled but conversion is not started,
1200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           if ADC is master, ADC is enabled and multimode conversion is started.
1201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
1203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef *hadc)
1205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 2655              		.loc 2 1205 1
 2656              		.cfi_startproc
 2657              		@ args = 0, pretend = 0, frame = 24
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 195


 2658              		@ frame_needed = 1, uses_anonymous_args = 0
 2659 0000 80B5     		push	{r7, lr}
 2660              		.cfi_def_cfa_offset 8
 2661              		.cfi_offset 7, -8
 2662              		.cfi_offset 14, -4
 2663 0002 86B0     		sub	sp, sp, #24
 2664              		.cfi_def_cfa_offset 32
 2665 0004 00AF     		add	r7, sp, #0
 2666              		.cfi_def_cfa_register 7
 2667 0006 7860     		str	r0, [r7, #4]
1206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 2668              		.loc 2 1209 35
 2669 0008 5748     		ldr	r0, .L121
 2670 000a FFF7FEFF 		bl	LL_ADC_GetMultimode
 2671 000e 3861     		str	r0, [r7, #16]
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 2672              		.loc 2 1216 7
 2673 0010 7B68     		ldr	r3, [r7, #4]
 2674 0012 1B68     		ldr	r3, [r3]
 2675 0014 1846     		mov	r0, r3
 2676 0016 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 2677 001a 0346     		mov	r3, r0
 2678              		.loc 2 1216 6
 2679 001c 002B     		cmp	r3, #0
 2680 001e 40F09C80 		bne	.L102
1217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Process locked */
1219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_LOCK(hadc);
 2681              		.loc 2 1219 5
 2682 0022 7B68     		ldr	r3, [r7, #4]
 2683 0024 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 2684 0028 012B     		cmp	r3, #1
 2685 002a 01D1     		bne	.L103
 2686              		.loc 2 1219 5 is_stmt 0 discriminator 1
 2687 002c 0223     		movs	r3, #2
 2688 002e 97E0     		b	.L104
 2689              	.L103:
 2690              		.loc 2 1219 5 discriminator 2
 2691 0030 7B68     		ldr	r3, [r7, #4]
 2692 0032 0122     		movs	r2, #1
 2693 0034 83F85420 		strb	r2, [r3, #84]
1220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable the ADC peripheral */
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
 2694              		.loc 2 1222 22 is_stmt 1 discriminator 2
 2695 0038 7868     		ldr	r0, [r7, #4]
 2696 003a FFF7FEFF 		bl	ADC_Enable
 2697 003e 0346     		mov	r3, r0
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 196


 2698 0040 FB75     		strb	r3, [r7, #23]
1223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 2699              		.loc 2 1225 8 discriminator 2
 2700 0042 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2701 0044 002B     		cmp	r3, #0
 2702 0046 40F08380 		bne	.L105
1226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state                                                        */
1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 2703              		.loc 2 1230 7
 2704 004a 7B68     		ldr	r3, [r7, #4]
 2705 004c 9B6D     		ldr	r3, [r3, #88]
 2706 004e 23F47063 		bic	r3, r3, #3840
 2707 0052 23F00103 		bic	r3, r3, #1
 2708 0056 43F48072 		orr	r2, r3, #256
 2709 005a 7B68     		ldr	r3, [r7, #4]
 2710 005c 9A65     		str	r2, [r3, #88]
1231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         - if ADC instance is master or if multimode feature is not available
1237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
1238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 2711              		.loc 2 1238 12
 2712 005e 7B68     		ldr	r3, [r7, #4]
 2713 0060 1B68     		ldr	r3, [r3]
 2714 0062 424A     		ldr	r2, .L121+4
 2715 0064 9342     		cmp	r3, r2
 2716 0066 02D0     		beq	.L106
 2717              		.loc 2 1238 12 is_stmt 0 discriminator 1
 2718 0068 7B68     		ldr	r3, [r7, #4]
 2719 006a 1B68     		ldr	r3, [r3]
 2720 006c 00E0     		b	.L107
 2721              	.L106:
 2722              		.loc 2 1238 12 discriminator 2
 2723 006e 404B     		ldr	r3, .L121+8
 2724              	.L107:
 2725              		.loc 2 1238 66 is_stmt 1 discriminator 4
 2726 0070 7A68     		ldr	r2, [r7, #4]
 2727 0072 1268     		ldr	r2, [r2]
 2728              		.loc 2 1238 10 discriminator 4
 2729 0074 9342     		cmp	r3, r2
 2730 0076 02D0     		beq	.L108
1239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 2731              		.loc 2 1239 11
 2732 0078 3B69     		ldr	r3, [r7, #16]
 2733 007a 002B     		cmp	r3, #0
 2734 007c 05D1     		bne	.L109
 2735              	.L108:
1240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          )
1241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 197


1242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 2736              		.loc 2 1242 9
 2737 007e 7B68     		ldr	r3, [r7, #4]
 2738 0080 9B6D     		ldr	r3, [r3, #88]
 2739 0082 23F48012 		bic	r2, r3, #1048576
 2740 0086 7B68     		ldr	r3, [r7, #4]
 2741 0088 9A65     		str	r2, [r3, #88]
 2742              	.L109:
1243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code */
1247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 2743              		.loc 2 1248 11
 2744 008a 7B68     		ldr	r3, [r7, #4]
 2745 008c 9B6D     		ldr	r3, [r3, #88]
 2746 008e 03F48053 		and	r3, r3, #4096
 2747              		.loc 2 1248 10
 2748 0092 B3F5805F 		cmp	r3, #4096
 2749 0096 06D1     		bne	.L110
1249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 2750              		.loc 2 1251 9
 2751 0098 7B68     		ldr	r3, [r7, #4]
 2752 009a DB6D     		ldr	r3, [r3, #92]
 2753 009c 23F00602 		bic	r2, r3, #6
 2754 00a0 7B68     		ldr	r3, [r7, #4]
 2755 00a2 DA65     		str	r2, [r3, #92]
 2756 00a4 02E0     		b	.L111
 2757              	.L110:
1252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset all ADC error code fields */
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
 2758              		.loc 2 1256 9
 2759 00a6 7B68     		ldr	r3, [r7, #4]
 2760 00a8 0022     		movs	r2, #0
 2761 00aa DA65     		str	r2, [r3, #92]
 2762              	.L111:
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 2763              		.loc 2 1261 7
 2764 00ac 7B68     		ldr	r3, [r7, #4]
 2765 00ae 1B68     		ldr	r3, [r3]
 2766 00b0 1C22     		movs	r2, #28
 2767 00b2 1A60     		str	r2, [r3]
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
1264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 198


 2768              		.loc 2 1266 7
 2769 00b4 7B68     		ldr	r3, [r7, #4]
 2770 00b6 0022     		movs	r2, #0
 2771 00b8 83F85420 		strb	r2, [r3, #84]
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* trigger event.                                                       */
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */
1273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
1274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
1275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 2772              		.loc 2 1277 12
 2773 00bc 7B68     		ldr	r3, [r7, #4]
 2774 00be 1B68     		ldr	r3, [r3]
 2775 00c0 2A4A     		ldr	r2, .L121+4
 2776 00c2 9342     		cmp	r3, r2
 2777 00c4 02D0     		beq	.L112
 2778              		.loc 2 1277 12 is_stmt 0 discriminator 1
 2779 00c6 7B68     		ldr	r3, [r7, #4]
 2780 00c8 1B68     		ldr	r3, [r3]
 2781 00ca 00E0     		b	.L113
 2782              	.L112:
 2783              		.loc 2 1277 12 discriminator 2
 2784 00cc 284B     		ldr	r3, .L121+8
 2785              	.L113:
 2786              		.loc 2 1277 66 is_stmt 1 discriminator 4
 2787 00ce 7A68     		ldr	r2, [r7, #4]
 2788 00d0 1268     		ldr	r2, [r2]
 2789              		.loc 2 1277 10 discriminator 4
 2790 00d2 9342     		cmp	r3, r2
 2791 00d4 08D0     		beq	.L114
1278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 2792              		.loc 2 1278 11
 2793 00d6 3B69     		ldr	r3, [r7, #16]
 2794 00d8 002B     		cmp	r3, #0
 2795 00da 05D0     		beq	.L114
1279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 2796              		.loc 2 1279 11
 2797 00dc 3B69     		ldr	r3, [r7, #16]
 2798 00de 052B     		cmp	r3, #5
 2799 00e0 02D0     		beq	.L114
1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 2800              		.loc 2 1280 11
 2801 00e2 3B69     		ldr	r3, [r7, #16]
 2802 00e4 092B     		cmp	r3, #9
 2803 00e6 14D1     		bne	.L115
 2804              	.L114:
1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          )
1282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* ADC instance is not a multimode slave instance with multimode regular conversions enable
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
 2805              		.loc 2 1284 13
 2806 00e8 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 199


 2807 00ea 1B68     		ldr	r3, [r3]
 2808 00ec DB68     		ldr	r3, [r3, #12]
 2809 00ee 03F00073 		and	r3, r3, #33554432
 2810              		.loc 2 1284 12
 2811 00f2 002B     		cmp	r3, #0
 2812 00f4 07D0     		beq	.L116
1285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 2813              		.loc 2 1286 11
 2814 00f6 7B68     		ldr	r3, [r7, #4]
 2815 00f8 9B6D     		ldr	r3, [r3, #88]
 2816 00fa 23F44053 		bic	r3, r3, #12288
 2817 00fe 43F48052 		orr	r2, r3, #4096
 2818 0102 7B68     		ldr	r3, [r7, #4]
 2819 0104 9A65     		str	r2, [r3, #88]
 2820              	.L116:
1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Start ADC group regular conversion */
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
 2821              		.loc 2 1290 9
 2822 0106 7B68     		ldr	r3, [r7, #4]
 2823 0108 1B68     		ldr	r3, [r3]
 2824 010a 1846     		mov	r0, r3
 2825 010c FFF7FEFF 		bl	LL_ADC_REG_StartConversion
 2826 0110 25E0     		b	.L120
 2827              	.L115:
1291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* ADC instance is a multimode slave instance with multimode regular conversions enabled */
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 2828              		.loc 2 1295 9
 2829 0112 7B68     		ldr	r3, [r7, #4]
 2830 0114 9B6D     		ldr	r3, [r3, #88]
 2831 0116 43F48012 		orr	r2, r3, #1048576
 2832 011a 7B68     		ldr	r3, [r7, #4]
 2833 011c 9A65     		str	r2, [r3, #88]
1296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, update Slave State in setting
1297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            HAL_ADC_STATE_INJ_BUSY bit and in resetting HAL_ADC_STATE_INJ_EOC bit */
1298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
 2834              		.loc 2 1298 25
 2835 011e 7B68     		ldr	r3, [r7, #4]
 2836 0120 1B68     		ldr	r3, [r3]
 2837 0122 124A     		ldr	r2, .L121+4
 2838 0124 9342     		cmp	r3, r2
 2839 0126 02D0     		beq	.L118
 2840              		.loc 2 1298 25 is_stmt 0 discriminator 1
 2841 0128 7B68     		ldr	r3, [r7, #4]
 2842 012a 1B68     		ldr	r3, [r3]
 2843 012c 00E0     		b	.L119
 2844              	.L118:
 2845              		.loc 2 1298 25 discriminator 2
 2846 012e 104B     		ldr	r3, .L121+8
 2847              	.L119:
 2848              		.loc 2 1298 23 is_stmt 1 discriminator 4
 2849 0130 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 200


1299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
 2850              		.loc 2 1299 13 discriminator 4
 2851 0132 FB68     		ldr	r3, [r7, #12]
 2852 0134 DB68     		ldr	r3, [r3, #12]
 2853 0136 03F00073 		and	r3, r3, #33554432
 2854              		.loc 2 1299 12 discriminator 4
 2855 013a 002B     		cmp	r3, #0
 2856 013c 0FD0     		beq	.L120
1300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 2857              		.loc 2 1301 11
 2858 013e 7B68     		ldr	r3, [r7, #4]
 2859 0140 9B6D     		ldr	r3, [r3, #88]
 2860 0142 23F44053 		bic	r3, r3, #12288
 2861 0146 43F48052 		orr	r2, r3, #4096
 2862 014a 7B68     		ldr	r3, [r7, #4]
 2863 014c 9A65     		str	r2, [r3, #88]
 2864 014e 06E0     		b	.L120
 2865              	.L105:
1302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
1306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Start ADC group regular conversion */
1312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
1316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
 2866              		.loc 2 1318 7
 2867 0150 7B68     		ldr	r3, [r7, #4]
 2868 0152 0022     		movs	r2, #0
 2869 0154 83F85420 		strb	r2, [r3, #84]
 2870 0158 01E0     		b	.L120
 2871              	.L102:
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
 2872              		.loc 2 1323 20
 2873 015a 0223     		movs	r3, #2
 2874 015c FB75     		strb	r3, [r7, #23]
 2875              	.L120:
1324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 2876              		.loc 2 1327 10
 2877 015e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 201


 2878              	.L104:
1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 2879              		.loc 2 1328 1
 2880 0160 1846     		mov	r0, r3
 2881 0162 1837     		adds	r7, r7, #24
 2882              		.cfi_def_cfa_offset 8
 2883 0164 BD46     		mov	sp, r7
 2884              		.cfi_def_cfa_register 13
 2885              		@ sp needed
 2886 0166 80BD     		pop	{r7, pc}
 2887              	.L122:
 2888              		.align	2
 2889              	.L121:
 2890 0168 00030450 		.word	1342440192
 2891 016c 00010450 		.word	1342439680
 2892 0170 00000450 		.word	1342439424
 2893              		.cfi_endproc
 2894              	.LFE325:
 2896              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 2897              		.align	1
 2898              		.global	HAL_ADC_Stop
 2899              		.syntax unified
 2900              		.thumb
 2901              		.thumb_func
 2903              	HAL_ADC_Stop:
 2904              	.LFB326:
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
1338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef *hadc)
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 2905              		.loc 2 1340 1
 2906              		.cfi_startproc
 2907              		@ args = 0, pretend = 0, frame = 16
 2908              		@ frame_needed = 1, uses_anonymous_args = 0
 2909 0000 80B5     		push	{r7, lr}
 2910              		.cfi_def_cfa_offset 8
 2911              		.cfi_offset 7, -8
 2912              		.cfi_offset 14, -4
 2913 0002 84B0     		sub	sp, sp, #16
 2914              		.cfi_def_cfa_offset 24
 2915 0004 00AF     		add	r7, sp, #0
 2916              		.cfi_def_cfa_register 7
 2917 0006 7860     		str	r0, [r7, #4]
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 202


1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 2918              		.loc 2 1347 3
 2919 0008 7B68     		ldr	r3, [r7, #4]
 2920 000a 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 2921 000e 012B     		cmp	r3, #1
 2922 0010 01D1     		bne	.L124
 2923              		.loc 2 1347 3 is_stmt 0 discriminator 1
 2924 0012 0223     		movs	r3, #2
 2925 0014 23E0     		b	.L125
 2926              	.L124:
 2927              		.loc 2 1347 3 discriminator 2
 2928 0016 7B68     		ldr	r3, [r7, #4]
 2929 0018 0122     		movs	r2, #1
 2930 001a 83F85420 		strb	r2, [r3, #84]
1348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 2931              		.loc 2 1350 20 is_stmt 1 discriminator 2
 2932 001e 0321     		movs	r1, #3
 2933 0020 7868     		ldr	r0, [r7, #4]
 2934 0022 FFF7FEFF 		bl	ADC_ConversionStop
 2935 0026 0346     		mov	r3, r0
 2936 0028 FB73     		strb	r3, [r7, #15]
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 2937              		.loc 2 1353 6 discriminator 2
 2938 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2939 002c 002B     		cmp	r3, #0
 2940 002e 11D1     		bne	.L126
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 2941              		.loc 2 1356 22
 2942 0030 7868     		ldr	r0, [r7, #4]
 2943 0032 FFF7FEFF 		bl	ADC_Disable
 2944 0036 0346     		mov	r3, r0
 2945 0038 FB73     		strb	r3, [r7, #15]
1357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 2946              		.loc 2 1359 8
 2947 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2948 003c 002B     		cmp	r3, #0
 2949 003e 09D1     		bne	.L126
1360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 2950              		.loc 2 1362 7
 2951 0040 7B68     		ldr	r3, [r7, #4]
 2952 0042 9B6D     		ldr	r3, [r3, #88]
 2953 0044 23F48853 		bic	r3, r3, #4352
 2954 0048 23F00103 		bic	r3, r3, #1
 2955 004c 43F00102 		orr	r2, r3, #1
 2956 0050 7B68     		ldr	r3, [r7, #4]
 2957 0052 9A65     		str	r2, [r3, #88]
 2958              	.L126:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 203


1363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
1369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 2959              		.loc 2 1369 3
 2960 0054 7B68     		ldr	r3, [r7, #4]
 2961 0056 0022     		movs	r2, #0
 2962 0058 83F85420 		strb	r2, [r3, #84]
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 2963              		.loc 2 1372 10
 2964 005c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2965              	.L125:
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 2966              		.loc 2 1373 1
 2967 005e 1846     		mov	r0, r3
 2968 0060 1037     		adds	r7, r7, #16
 2969              		.cfi_def_cfa_offset 8
 2970 0062 BD46     		mov	sp, r7
 2971              		.cfi_def_cfa_register 13
 2972              		@ sp needed
 2973 0064 80BD     		pop	{r7, pc}
 2974              		.cfi_endproc
 2975              	.LFE326:
 2977              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 2978              		.align	1
 2979              		.global	HAL_ADC_PollForConversion
 2980              		.syntax unified
 2981              		.thumb
 2982              		.thumb_func
 2984              	HAL_ADC_PollForConversion:
 2985              	.LFB327:
1374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
1377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
1378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         conversion) are cleared by this function, with an exception:
1379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         not cleared to not interfere with this feature until data register
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         is read using function HAL_ADC_GetValue().
1382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured
1383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
1385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         be performed on the complete sequence (ADC init
1388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
1389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 204


 2986              		.loc 2 1394 1
 2987              		.cfi_startproc
 2988              		@ args = 0, pretend = 0, frame = 32
 2989              		@ frame_needed = 1, uses_anonymous_args = 0
 2990 0000 80B5     		push	{r7, lr}
 2991              		.cfi_def_cfa_offset 8
 2992              		.cfi_offset 7, -8
 2993              		.cfi_offset 14, -4
 2994 0002 88B0     		sub	sp, sp, #32
 2995              		.cfi_def_cfa_offset 40
 2996 0004 00AF     		add	r7, sp, #0
 2997              		.cfi_def_cfa_register 7
 2998 0006 7860     		str	r0, [r7, #4]
 2999 0008 3960     		str	r1, [r7]
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
1396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_Flag_End;
1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_cfgr;
1398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 3000              		.loc 2 1400 35
 3001 000a 6648     		ldr	r0, .L148
 3002 000c FFF7FEFF 		bl	LL_ADC_GetMultimode
 3003 0010 7861     		str	r0, [r7, #20]
1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* If end of conversion selected to end of sequence conversions */
1407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 3004              		.loc 2 1407 17
 3005 0012 7B68     		ldr	r3, [r7, #4]
 3006 0014 5B69     		ldr	r3, [r3, #20]
 3007              		.loc 2 1407 6
 3008 0016 082B     		cmp	r3, #8
 3009 0018 02D1     		bne	.L128
1408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_Flag_End = ADC_FLAG_EOS;
 3010              		.loc 2 1409 18
 3011 001a 0823     		movs	r3, #8
 3012 001c FB61     		str	r3, [r7, #28]
 3013 001e 2AE0     		b	.L129
 3014              	.L128:
1410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* If end of conversion selected to end of unitary conversion */
1412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else /* ADC_EOC_SINGLE_CONV */
1413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Verification that ADC configuration is compliant with polling for      */
1415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* each conversion:                                                       */
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* several ranks and polling for end of each conversion.                  */
1418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* For code simplicity sake, this particular case is generalized to       */
1419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* ADC configured in DMA mode and and polling for end of each conversion. */
1420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 3015              		.loc 2 1421 8
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 205


 3016 0020 7B69     		ldr	r3, [r7, #20]
 3017 0022 002B     		cmp	r3, #0
 3018 0024 05D0     		beq	.L130
1422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 3019              		.loc 2 1422 9
 3020 0026 7B69     		ldr	r3, [r7, #20]
 3021 0028 052B     		cmp	r3, #5
 3022 002a 02D0     		beq	.L130
1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 3023              		.loc 2 1423 9
 3024 002c 7B69     		ldr	r3, [r7, #20]
 3025 002e 092B     		cmp	r3, #9
 3026 0030 11D1     		bne	.L131
 3027              	.L130:
1424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check ADC DMA mode in independent mode on ADC group regular */
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN) != 0UL)
 3028              		.loc 2 1427 11
 3029 0032 7B68     		ldr	r3, [r7, #4]
 3030 0034 1B68     		ldr	r3, [r3]
 3031 0036 DB68     		ldr	r3, [r3, #12]
 3032 0038 03F00103 		and	r3, r3, #1
 3033              		.loc 2 1427 10
 3034 003c 002B     		cmp	r3, #0
 3035 003e 07D0     		beq	.L132
1428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 3036              		.loc 2 1429 9
 3037 0040 7B68     		ldr	r3, [r7, #4]
 3038 0042 9B6D     		ldr	r3, [r3, #88]
 3039 0044 43F02002 		orr	r2, r3, #32
 3040 0048 7B68     		ldr	r3, [r7, #4]
 3041 004a 9A65     		str	r2, [r3, #88]
1430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
 3042              		.loc 2 1430 16
 3043 004c 0123     		movs	r3, #1
 3044 004e A4E0     		b	.L133
 3045              	.L132:
1431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_Flag_End = (ADC_FLAG_EOC);
 3046              		.loc 2 1434 22
 3047 0050 0423     		movs	r3, #4
 3048 0052 FB61     		str	r3, [r7, #28]
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3049              		.loc 2 1427 10
 3050 0054 0FE0     		b	.L129
 3051              	.L131:
1435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
1438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check ADC DMA mode in multimode on ADC group regular */
1440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (LL_ADC_GetMultiDMATransfer(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) != LL_ADC_MULTI_REG_
 3052              		.loc 2 1440 11
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 206


 3053 0056 5348     		ldr	r0, .L148
 3054 0058 FFF7FEFF 		bl	LL_ADC_GetMultiDMATransfer
 3055 005c 0346     		mov	r3, r0
 3056              		.loc 2 1440 10
 3057 005e 002B     		cmp	r3, #0
 3058 0060 07D0     		beq	.L134
1441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 3059              		.loc 2 1442 9
 3060 0062 7B68     		ldr	r3, [r7, #4]
 3061 0064 9B6D     		ldr	r3, [r3, #88]
 3062 0066 43F02002 		orr	r2, r3, #32
 3063 006a 7B68     		ldr	r3, [r7, #4]
 3064 006c 9A65     		str	r2, [r3, #88]
1443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
 3065              		.loc 2 1443 16
 3066 006e 0123     		movs	r3, #1
 3067 0070 93E0     		b	.L133
 3068              	.L134:
1444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_Flag_End = (ADC_FLAG_EOC);
 3069              		.loc 2 1447 22
 3070 0072 0423     		movs	r3, #4
 3071 0074 FB61     		str	r3, [r7, #28]
 3072              	.L129:
1448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
1451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check ADC DMA mode */
1452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN) != 0UL)
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       return HAL_ERROR;
1456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
1458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_Flag_End = (ADC_FLAG_EOC);
1460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Get tick count */
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 3073              		.loc 2 1465 15
 3074 0076 FFF7FEFF 		bl	HAL_GetTick
 3075 007a 3861     		str	r0, [r7, #16]
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Wait until End of unitary conversion or sequence conversions flag is raised */
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   while ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 3076              		.loc 2 1468 9
 3077 007c 21E0     		b	.L135
 3078              	.L137:
1469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 207


 3079              		.loc 2 1471 8
 3080 007e 3B68     		ldr	r3, [r7]
 3081 0080 B3F1FF3F 		cmp	r3, #-1
 3082 0084 1DD0     		beq	.L135
1472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 3083              		.loc 2 1473 13
 3084 0086 FFF7FEFF 		bl	HAL_GetTick
 3085 008a 0246     		mov	r2, r0
 3086              		.loc 2 1473 27
 3087 008c 3B69     		ldr	r3, [r7, #16]
 3088 008e D31A     		subs	r3, r2, r3
 3089              		.loc 2 1473 10
 3090 0090 3A68     		ldr	r2, [r7]
 3091 0092 9A42     		cmp	r2, r3
 3092 0094 02D3     		bcc	.L136
 3093              		.loc 2 1473 51 discriminator 1
 3094 0096 3B68     		ldr	r3, [r7]
 3095 0098 002B     		cmp	r3, #0
 3096 009a 12D1     		bne	.L135
 3097              	.L136:
1474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 3098              		.loc 2 1476 18
 3099 009c 7B68     		ldr	r3, [r7, #4]
 3100 009e 1B68     		ldr	r3, [r3]
 3101              		.loc 2 1476 28
 3102 00a0 1A68     		ldr	r2, [r3]
 3103              		.loc 2 1476 34
 3104 00a2 FB69     		ldr	r3, [r7, #28]
 3105 00a4 1340     		ands	r3, r3, r2
 3106              		.loc 2 1476 12
 3107 00a6 002B     		cmp	r3, #0
 3108 00a8 0BD1     		bne	.L135
1477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 3109              		.loc 2 1479 11
 3110 00aa 7B68     		ldr	r3, [r7, #4]
 3111 00ac 9B6D     		ldr	r3, [r3, #88]
 3112 00ae 43F00402 		orr	r2, r3, #4
 3113 00b2 7B68     		ldr	r3, [r7, #4]
 3114 00b4 9A65     		str	r2, [r3, #88]
1480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Process unlocked */
1482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 3115              		.loc 2 1482 11
 3116 00b6 7B68     		ldr	r3, [r7, #4]
 3117 00b8 0022     		movs	r2, #0
 3118 00ba 83F85420 		strb	r2, [r3, #84]
1483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           return HAL_TIMEOUT;
 3119              		.loc 2 1484 18
 3120 00be 0323     		movs	r3, #3
 3121 00c0 6BE0     		b	.L133
 3122              	.L135:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 208


1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 3123              		.loc 2 1468 15
 3124 00c2 7B68     		ldr	r3, [r7, #4]
 3125 00c4 1B68     		ldr	r3, [r3]
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 3126              		.loc 2 1468 25
 3127 00c6 1A68     		ldr	r2, [r3]
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 3128              		.loc 2 1468 31
 3129 00c8 FB69     		ldr	r3, [r7, #28]
 3130 00ca 1340     		ands	r3, r3, r2
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 3131              		.loc 2 1468 47
 3132 00cc 002B     		cmp	r3, #0
 3133 00ce D6D0     		beq	.L137
1485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Update ADC state machine */
1491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 3134              		.loc 2 1491 3
 3135 00d0 7B68     		ldr	r3, [r7, #4]
 3136 00d2 9B6D     		ldr	r3, [r3, #88]
 3137 00d4 43F40072 		orr	r2, r3, #512
 3138 00d8 7B68     		ldr	r3, [r7, #4]
 3139 00da 9A65     		str	r2, [r3, #88]
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
 3140              		.loc 2 1495 8
 3141 00dc 7B68     		ldr	r3, [r7, #4]
 3142 00de 1B68     		ldr	r3, [r3]
 3143 00e0 1846     		mov	r0, r3
 3144 00e2 FFF7FEFF 		bl	LL_ADC_REG_IsTriggerSourceSWStart
 3145 00e6 0346     		mov	r3, r0
 3146              		.loc 2 1495 6
 3147 00e8 002B     		cmp	r3, #0
 3148 00ea 1CD0     		beq	.L138
1496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (hadc->Init.ContinuousConvMode == DISABLE)
 3149              		.loc 2 1496 21
 3150 00ec 7B68     		ldr	r3, [r7, #4]
 3151 00ee 5B7E     		ldrb	r3, [r3, #25]	@ zero_extendqisi2
 3152              		.loc 2 1496 7
 3153 00f0 002B     		cmp	r3, #0
 3154 00f2 18D1     		bne	.L138
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check whether end of sequence is reached */
1500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
 3155              		.loc 2 1500 9
 3156 00f4 7B68     		ldr	r3, [r7, #4]
 3157 00f6 1B68     		ldr	r3, [r3]
 3158 00f8 1B68     		ldr	r3, [r3]
 3159 00fa 03F00803 		and	r3, r3, #8
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 209


 3160              		.loc 2 1500 8
 3161 00fe 082B     		cmp	r3, #8
 3162 0100 11D1     		bne	.L138
1501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 3163              		.loc 2 1503 7
 3164 0102 7B68     		ldr	r3, [r7, #4]
 3165 0104 9B6D     		ldr	r3, [r3, #88]
 3166 0106 23F48072 		bic	r2, r3, #256
 3167 010a 7B68     		ldr	r3, [r7, #4]
 3168 010c 9A65     		str	r2, [r3, #88]
1504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 3169              		.loc 2 1505 16
 3170 010e 7B68     		ldr	r3, [r7, #4]
 3171 0110 9B6D     		ldr	r3, [r3, #88]
 3172              		.loc 2 1505 24
 3173 0112 03F48053 		and	r3, r3, #4096
 3174              		.loc 2 1505 10
 3175 0116 002B     		cmp	r3, #0
 3176 0118 05D1     		bne	.L138
1506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 3177              		.loc 2 1507 9
 3178 011a 7B68     		ldr	r3, [r7, #4]
 3179 011c 9B6D     		ldr	r3, [r3, #88]
 3180 011e 43F00102 		orr	r2, r3, #1
 3181 0122 7B68     		ldr	r3, [r7, #4]
 3182 0124 9A65     		str	r2, [r3, #88]
 3183              	.L138:
1508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave        */
1513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* in function of multimode state (for devices with multimode               */
1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* available).                                                              */
1515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 3184              		.loc 2 1516 8
 3185 0126 7B68     		ldr	r3, [r7, #4]
 3186 0128 1B68     		ldr	r3, [r3]
 3187 012a 1F4A     		ldr	r2, .L148+4
 3188 012c 9342     		cmp	r3, r2
 3189 012e 02D0     		beq	.L139
 3190              		.loc 2 1516 8 is_stmt 0 discriminator 1
 3191 0130 7B68     		ldr	r3, [r7, #4]
 3192 0132 1B68     		ldr	r3, [r3]
 3193 0134 00E0     		b	.L140
 3194              	.L139:
 3195              		.loc 2 1516 8 discriminator 2
 3196 0136 1D4B     		ldr	r3, .L148+8
 3197              	.L140:
 3198              		.loc 2 1516 62 is_stmt 1 discriminator 4
 3199 0138 7A68     		ldr	r2, [r7, #4]
 3200 013a 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 210


 3201              		.loc 2 1516 6 discriminator 4
 3202 013c 9342     		cmp	r3, r2
 3203 013e 08D0     		beq	.L141
1517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 3204              		.loc 2 1517 7
 3205 0140 7B69     		ldr	r3, [r7, #20]
 3206 0142 002B     		cmp	r3, #0
 3207 0144 05D0     		beq	.L141
1518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 3208              		.loc 2 1518 7
 3209 0146 7B69     		ldr	r3, [r7, #20]
 3210 0148 052B     		cmp	r3, #5
 3211 014a 02D0     		beq	.L141
1519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 3212              		.loc 2 1519 7
 3213 014c 7B69     		ldr	r3, [r7, #20]
 3214 014e 092B     		cmp	r3, #9
 3215 0150 04D1     		bne	.L142
 3216              	.L141:
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
1521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Retrieve handle ADC CFGR register */
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 3217              		.loc 2 1523 16
 3218 0152 7B68     		ldr	r3, [r7, #4]
 3219 0154 1B68     		ldr	r3, [r3]
 3220              		.loc 2 1523 14
 3221 0156 DB68     		ldr	r3, [r3, #12]
 3222 0158 BB61     		str	r3, [r7, #24]
 3223 015a 0CE0     		b	.L143
 3224              	.L142:
1524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Retrieve Master ADC CFGR register */
1528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
 3225              		.loc 2 1528 21
 3226 015c 7B68     		ldr	r3, [r7, #4]
 3227 015e 1B68     		ldr	r3, [r3]
 3228 0160 114A     		ldr	r2, .L148+4
 3229 0162 9342     		cmp	r3, r2
 3230 0164 02D0     		beq	.L144
 3231              		.loc 2 1528 21 is_stmt 0 discriminator 1
 3232 0166 7B68     		ldr	r3, [r7, #4]
 3233 0168 1B68     		ldr	r3, [r3]
 3234 016a 00E0     		b	.L145
 3235              	.L144:
 3236              		.loc 2 1528 21 discriminator 2
 3237 016c 0F4B     		ldr	r3, .L148+8
 3238              	.L145:
 3239              		.loc 2 1528 19 is_stmt 1 discriminator 4
 3240 016e FB60     		str	r3, [r7, #12]
1529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 3241              		.loc 2 1529 14 discriminator 4
 3242 0170 FB68     		ldr	r3, [r7, #12]
 3243 0172 DB68     		ldr	r3, [r3, #12]
 3244 0174 BB61     		str	r3, [r7, #24]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 211


 3245              	.L143:
1530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
1532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Retrieve handle ADC CFGR register */
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_cfgr = READ_REG(hadc->Instance->CFGR);
1534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Clear polled flag */
1537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (tmp_Flag_End == ADC_FLAG_EOS)
 3246              		.loc 2 1537 6
 3247 0176 FB69     		ldr	r3, [r7, #28]
 3248 0178 082B     		cmp	r3, #8
 3249 017a 04D1     		bne	.L146
1538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOS);
 3250              		.loc 2 1539 5
 3251 017c 7B68     		ldr	r3, [r7, #4]
 3252 017e 1B68     		ldr	r3, [r3]
 3253 0180 0822     		movs	r2, #8
 3254 0182 1A60     		str	r2, [r3]
 3255 0184 08E0     		b	.L147
 3256              	.L146:
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear end of conversion EOC flag of regular group if low power feature */
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* "LowPowerAutoWait " is disabled, to not interfere with this feature    */
1545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* until data register is read using function HAL_ADC_GetValue().         */
1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (READ_BIT(tmp_cfgr, ADC_CFGR_AUTDLY) == 0UL)
 3257              		.loc 2 1546 9
 3258 0186 BB69     		ldr	r3, [r7, #24]
 3259 0188 03F48043 		and	r3, r3, #16384
 3260              		.loc 2 1546 8
 3261 018c 002B     		cmp	r3, #0
 3262 018e 03D1     		bne	.L147
1547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
 3263              		.loc 2 1548 7
 3264 0190 7B68     		ldr	r3, [r7, #4]
 3265 0192 1B68     		ldr	r3, [r3]
 3266 0194 0C22     		movs	r2, #12
 3267 0196 1A60     		str	r2, [r3]
 3268              	.L147:
1549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
 3269              		.loc 2 1553 10
 3270 0198 0023     		movs	r3, #0
 3271              	.L133:
1554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 3272              		.loc 2 1554 1
 3273 019a 1846     		mov	r0, r3
 3274 019c 2037     		adds	r7, r7, #32
 3275              		.cfi_def_cfa_offset 8
 3276 019e BD46     		mov	sp, r7
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 212


 3277              		.cfi_def_cfa_register 13
 3278              		@ sp needed
 3279 01a0 80BD     		pop	{r7, pc}
 3280              	.L149:
 3281 01a2 00BF     		.align	2
 3282              	.L148:
 3283 01a4 00030450 		.word	1342440192
 3284 01a8 00010450 		.word	1342439680
 3285 01ac 00000450 		.word	1342439424
 3286              		.cfi_endproc
 3287              	.LFE327:
 3289              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 3290              		.align	1
 3291              		.global	HAL_ADC_PollForEvent
 3292              		.syntax unified
 3293              		.thumb
 3294              		.thumb_func
 3296              	HAL_ADC_PollForEvent:
 3297              	.LFB328:
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Poll for ADC event.
1558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param EventType the ADC event type.
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          This parameter can be one of the following values:
1561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_EOSMP_EVENT  ADC End of Sampling event
1562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_AWD1_EVENT   ADC Analog watchdog 1 event (main analog watchdog, presen
1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_AWD2_EVENT   ADC Analog watchdog 2 event (additional analog watchdog, 
1564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_AWD3_EVENT   ADC Analog watchdog 3 event (additional analog watchdog, 
1565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_OVR_EVENT    ADC Overrun event
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_JQOVF_EVENT  ADC Injected context queue overflow event
1567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   The relevant flag is cleared if found to be set, except for ADC_FLAG_OVR.
1569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Indeed, the latter is reset only if hadc->Init.Overrun field is set
1570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         to ADC_OVR_DATA_OVERWRITTEN. Otherwise, data register may be potentially overwritten
1571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         by a new converted data as soon as OVR is cleared.
1572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         To reset OVR flag once the preserved data is retrieved, the user can resort
1573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         to macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef *hadc, uint32_t EventType, uint32_t Timeou
1577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 3298              		.loc 2 1577 1
 3299              		.cfi_startproc
 3300              		@ args = 0, pretend = 0, frame = 24
 3301              		@ frame_needed = 1, uses_anonymous_args = 0
 3302 0000 80B5     		push	{r7, lr}
 3303              		.cfi_def_cfa_offset 8
 3304              		.cfi_offset 7, -8
 3305              		.cfi_offset 14, -4
 3306 0002 86B0     		sub	sp, sp, #24
 3307              		.cfi_def_cfa_offset 32
 3308 0004 00AF     		add	r7, sp, #0
 3309              		.cfi_def_cfa_register 7
 3310 0006 F860     		str	r0, [r7, #12]
 3311 0008 B960     		str	r1, [r7, #8]
 3312 000a 7A60     		str	r2, [r7, #4]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 213


1578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
1583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Get tick count */
1585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 3313              		.loc 2 1585 15
 3314 000c FFF7FEFF 		bl	HAL_GetTick
 3315 0010 7861     		str	r0, [r7, #20]
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check selected event flag */
1588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   while (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 3316              		.loc 2 1588 9
 3317 0012 22E0     		b	.L151
 3318              	.L154:
1589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 3319              		.loc 2 1591 8
 3320 0014 7B68     		ldr	r3, [r7, #4]
 3321 0016 B3F1FF3F 		cmp	r3, #-1
 3322 001a 1ED0     		beq	.L151
1592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 3323              		.loc 2 1593 13
 3324 001c FFF7FEFF 		bl	HAL_GetTick
 3325 0020 0246     		mov	r2, r0
 3326              		.loc 2 1593 27
 3327 0022 7B69     		ldr	r3, [r7, #20]
 3328 0024 D31A     		subs	r3, r2, r3
 3329              		.loc 2 1593 10
 3330 0026 7A68     		ldr	r2, [r7, #4]
 3331 0028 9A42     		cmp	r2, r3
 3332 002a 02D3     		bcc	.L152
 3333              		.loc 2 1593 51 discriminator 1
 3334 002c 7B68     		ldr	r3, [r7, #4]
 3335 002e 002B     		cmp	r3, #0
 3336 0030 13D1     		bne	.L151
 3337              	.L152:
1594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 3338              		.loc 2 1596 13
 3339 0032 FB68     		ldr	r3, [r7, #12]
 3340 0034 1B68     		ldr	r3, [r3]
 3341 0036 1A68     		ldr	r2, [r3]
 3342 0038 BB68     		ldr	r3, [r7, #8]
 3343 003a 1340     		ands	r3, r3, r2
 3344              		.loc 2 1596 12
 3345 003c BA68     		ldr	r2, [r7, #8]
 3346 003e 9A42     		cmp	r2, r3
 3347 0040 0BD0     		beq	.L151
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 214


 3348              		.loc 2 1599 11
 3349 0042 FB68     		ldr	r3, [r7, #12]
 3350 0044 9B6D     		ldr	r3, [r3, #88]
 3351 0046 43F00402 		orr	r2, r3, #4
 3352 004a FB68     		ldr	r3, [r7, #12]
 3353 004c 9A65     		str	r2, [r3, #88]
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Process unlocked */
1602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 3354              		.loc 2 1602 11
 3355 004e FB68     		ldr	r3, [r7, #12]
 3356 0050 0022     		movs	r2, #0
 3357 0052 83F85420 		strb	r2, [r3, #84]
1603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           return HAL_TIMEOUT;
 3358              		.loc 2 1604 18
 3359 0056 0323     		movs	r3, #3
 3360 0058 7DE0     		b	.L153
 3361              	.L151:
1588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 3362              		.loc 2 1588 10
 3363 005a FB68     		ldr	r3, [r7, #12]
 3364 005c 1B68     		ldr	r3, [r3]
 3365 005e 1A68     		ldr	r2, [r3]
 3366 0060 BB68     		ldr	r3, [r7, #8]
 3367 0062 1340     		ands	r3, r3, r2
1588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 3368              		.loc 2 1588 46
 3369 0064 BA68     		ldr	r2, [r7, #8]
 3370 0066 9A42     		cmp	r2, r3
 3371 0068 D4D1     		bne	.L154
1605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   switch (EventType)
 3372              		.loc 2 1610 3
 3373 006a BB68     		ldr	r3, [r7, #8]
 3374 006c B3F5806F 		cmp	r3, #1024
 3375 0070 48D0     		beq	.L155
 3376 0072 BB68     		ldr	r3, [r7, #8]
 3377 0074 B3F5806F 		cmp	r3, #1024
 3378 0078 56D8     		bhi	.L156
 3379 007a BB68     		ldr	r3, [r7, #8]
 3380 007c B3F5007F 		cmp	r3, #512
 3381 0080 34D0     		beq	.L157
 3382 0082 BB68     		ldr	r3, [r7, #8]
 3383 0084 B3F5007F 		cmp	r3, #512
 3384 0088 4ED8     		bhi	.L156
 3385 008a BB68     		ldr	r3, [r7, #8]
 3386 008c B3F5807F 		cmp	r3, #256
 3387 0090 20D0     		beq	.L158
 3388 0092 BB68     		ldr	r3, [r7, #8]
 3389 0094 B3F5807F 		cmp	r3, #256
 3390 0098 46D8     		bhi	.L156
 3391 009a BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 215


 3392 009c 022B     		cmp	r3, #2
 3393 009e 03D0     		beq	.L159
 3394 00a0 BB68     		ldr	r3, [r7, #8]
 3395 00a2 802B     		cmp	r3, #128
 3396 00a4 0BD0     		beq	.L160
 3397 00a6 3FE0     		b	.L156
 3398              	.L159:
1611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* End Of Sampling event */
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     case ADC_EOSMP_EVENT:
1614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
 3399              		.loc 2 1615 7
 3400 00a8 FB68     		ldr	r3, [r7, #12]
 3401 00aa 9B6D     		ldr	r3, [r3, #88]
 3402 00ac 43F40062 		orr	r2, r3, #2048
 3403 00b0 FB68     		ldr	r3, [r7, #12]
 3404 00b2 9A65     		str	r2, [r3, #88]
1616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear the End Of Sampling flag */
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
 3405              		.loc 2 1618 7
 3406 00b4 FB68     		ldr	r3, [r7, #12]
 3407 00b6 1B68     		ldr	r3, [r3]
 3408 00b8 0222     		movs	r2, #2
 3409 00ba 1A60     		str	r2, [r3]
1619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       break;
 3410              		.loc 2 1620 7
 3411 00bc 4AE0     		b	.L161
 3412              	.L160:
1621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Analog watchdog (level out of window) event */
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: In case of several analog watchdog enabled, if needed to know      */
1624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* which one triggered and on which ADCx, test ADC state of analog watchdog */
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* flags HAL_ADC_STATE_AWD1/2/3 using function "HAL_ADC_GetState()".        */
1626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* For example:                                                             */
1627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "          */
1628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD2) != 0UL) "          */
1629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD3) != 0UL) "          */
1630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check analog watchdog 1 flag */
1632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     case ADC_AWD_EVENT:
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 3413              		.loc 2 1634 7
 3414 00be FB68     		ldr	r3, [r7, #12]
 3415 00c0 9B6D     		ldr	r3, [r3, #88]
 3416 00c2 43F48032 		orr	r2, r3, #65536
 3417 00c6 FB68     		ldr	r3, [r7, #12]
 3418 00c8 9A65     		str	r2, [r3, #88]
1635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
 3419              		.loc 2 1637 7
 3420 00ca FB68     		ldr	r3, [r7, #12]
 3421 00cc 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 216


 3422 00ce 8022     		movs	r2, #128
 3423 00d0 1A60     		str	r2, [r3]
1638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       break;
 3424              		.loc 2 1639 7
 3425 00d2 3FE0     		b	.L161
 3426              	.L158:
1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check analog watchdog 2 flag */
1642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     case ADC_AWD2_EVENT:
1643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
 3427              		.loc 2 1644 7
 3428 00d4 FB68     		ldr	r3, [r7, #12]
 3429 00d6 9B6D     		ldr	r3, [r3, #88]
 3430 00d8 43F40032 		orr	r2, r3, #131072
 3431 00dc FB68     		ldr	r3, [r7, #12]
 3432 00de 9A65     		str	r2, [r3, #88]
1645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
 3433              		.loc 2 1647 7
 3434 00e0 FB68     		ldr	r3, [r7, #12]
 3435 00e2 1B68     		ldr	r3, [r3]
 3436 00e4 4FF48072 		mov	r2, #256
 3437 00e8 1A60     		str	r2, [r3]
1648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       break;
 3438              		.loc 2 1649 7
 3439 00ea 33E0     		b	.L161
 3440              	.L157:
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check analog watchdog 3 flag */
1652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     case ADC_AWD3_EVENT:
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
 3441              		.loc 2 1654 7
 3442 00ec FB68     		ldr	r3, [r7, #12]
 3443 00ee 9B6D     		ldr	r3, [r3, #88]
 3444 00f0 43F48022 		orr	r2, r3, #262144
 3445 00f4 FB68     		ldr	r3, [r7, #12]
 3446 00f6 9A65     		str	r2, [r3, #88]
1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
 3447              		.loc 2 1657 7
 3448 00f8 FB68     		ldr	r3, [r7, #12]
 3449 00fa 1B68     		ldr	r3, [r3]
 3450 00fc 4FF40072 		mov	r2, #512
 3451 0100 1A60     		str	r2, [r3]
1658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       break;
 3452              		.loc 2 1659 7
 3453 0102 27E0     		b	.L161
 3454              	.L155:
1660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Injected context queue overflow event */
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 217


1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     case ADC_JQOVF_EVENT:
1663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
 3455              		.loc 2 1664 7
 3456 0104 FB68     		ldr	r3, [r7, #12]
 3457 0106 9B6D     		ldr	r3, [r3, #88]
 3458 0108 43F48042 		orr	r2, r3, #16384
 3459 010c FB68     		ldr	r3, [r7, #12]
 3460 010e 9A65     		str	r2, [r3, #88]
1665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code to Injected context queue overflow */
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
 3461              		.loc 2 1667 7
 3462 0110 FB68     		ldr	r3, [r7, #12]
 3463 0112 DB6D     		ldr	r3, [r3, #92]
 3464 0114 43F00802 		orr	r2, r3, #8
 3465 0118 FB68     		ldr	r3, [r7, #12]
 3466 011a DA65     		str	r2, [r3, #92]
1668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC Injected context queue overflow flag */
1670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
 3467              		.loc 2 1670 7
 3468 011c FB68     		ldr	r3, [r7, #12]
 3469 011e 1B68     		ldr	r3, [r3]
 3470 0120 4FF48062 		mov	r2, #1024
 3471 0124 1A60     		str	r2, [r3]
1671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       break;
 3472              		.loc 2 1672 7
 3473 0126 15E0     		b	.L161
 3474              	.L156:
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Overrun event */
1675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     default: /* Case ADC_OVR_EVENT */
1676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If overrun is set to overwrite previous data, overrun event is not     */
1677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* considered as an error.                                                */
1678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* (cf ref manual "Managing conversions without using the DMA and without */
1679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* overrun ")                                                             */
1680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
 3475              		.loc 2 1680 21
 3476 0128 FB68     		ldr	r3, [r7, #12]
 3477 012a 5B6B     		ldr	r3, [r3, #52]
 3478              		.loc 2 1680 10
 3479 012c 002B     		cmp	r3, #0
 3480 012e 0CD1     		bne	.L162
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC state */
1683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
 3481              		.loc 2 1683 9
 3482 0130 FB68     		ldr	r3, [r7, #12]
 3483 0132 9B6D     		ldr	r3, [r3, #88]
 3484 0134 43F48062 		orr	r2, r3, #1024
 3485 0138 FB68     		ldr	r3, [r7, #12]
 3486 013a 9A65     		str	r2, [r3, #88]
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC error code to overrun */
1686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 218


 3487              		.loc 2 1686 9
 3488 013c FB68     		ldr	r3, [r7, #12]
 3489 013e DB6D     		ldr	r3, [r3, #92]
 3490 0140 43F00202 		orr	r2, r3, #2
 3491 0144 FB68     		ldr	r3, [r7, #12]
 3492 0146 DA65     		str	r2, [r3, #92]
1687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Clear ADC Overrun flag only if Overrun is set to ADC_OVR_DATA_OVERWRITTEN
1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            otherwise, data register is potentially overwritten by new converted data as soon
1692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            as OVR is cleared. */
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       break;
 3493              		.loc 2 1695 7
 3494 0148 03E0     		b	.L164
 3495              	.L162:
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 3496              		.loc 2 1693 9
 3497 014a FB68     		ldr	r3, [r7, #12]
 3498 014c 1B68     		ldr	r3, [r3]
 3499 014e 1022     		movs	r2, #16
 3500 0150 1A60     		str	r2, [r3]
 3501              	.L164:
 3502              		.loc 2 1695 7
 3503 0152 00BF     		nop
 3504              	.L161:
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
 3505              		.loc 2 1699 10
 3506 0154 0023     		movs	r3, #0
 3507              	.L153:
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 3508              		.loc 2 1700 1
 3509 0156 1846     		mov	r0, r3
 3510 0158 1837     		adds	r7, r7, #24
 3511              		.cfi_def_cfa_offset 8
 3512 015a BD46     		mov	sp, r7
 3513              		.cfi_def_cfa_register 13
 3514              		@ sp needed
 3515 015c 80BD     		pop	{r7, pc}
 3516              		.cfi_endproc
 3517              	.LFE328:
 3519              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 3520              		.align	1
 3521              		.global	HAL_ADC_Start_IT
 3522              		.syntax unified
 3523              		.thumb
 3524              		.thumb_func
 3526              	HAL_ADC_Start_IT:
 3527              	.LFB329:
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group with interruption.
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 219


1704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Interruptions enabled in this function according to initialization
1705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         setting : EOC (end of conversion), EOS (end of sequence),
1706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         OVR overrun.
1707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
1709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         HAL_ADC_Start_IT() must be called for ADC Slave first, then for
1710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         ADC Master.
1711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For ADC Slave, ADC is enabled only (conversion is not started).
1712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For ADC Master, ADC is enabled and multimode conversion is started.
1713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   To guarantee a proper reset of all interruptions once all the needed
1714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         conversions are obtained, HAL_ADC_Stop_IT() must be called to ensure
1715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         a correct stop of the IT-based conversions.
1716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   By default, HAL_ADC_Start_IT() does not enable the End Of Sampling
1717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         interruption. If required (e.g. in case of oversampling with trigger
1718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         mode), the user must:
1719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          1. first clear the EOSMP flag if set with macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EO
1720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          2. then enable the EOSMP interrupt with macro __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOSMP)
1721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          before calling HAL_ADC_Start_IT().
1722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
1724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef *hadc)
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 3528              		.loc 2 1726 1
 3529              		.cfi_startproc
 3530              		@ args = 0, pretend = 0, frame = 24
 3531              		@ frame_needed = 1, uses_anonymous_args = 0
 3532 0000 80B5     		push	{r7, lr}
 3533              		.cfi_def_cfa_offset 8
 3534              		.cfi_offset 7, -8
 3535              		.cfi_offset 14, -4
 3536 0002 86B0     		sub	sp, sp, #24
 3537              		.cfi_def_cfa_offset 32
 3538 0004 00AF     		add	r7, sp, #0
 3539              		.cfi_def_cfa_register 7
 3540 0006 7860     		str	r0, [r7, #4]
1727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 3541              		.loc 2 1730 35
 3542 0008 9148     		ldr	r0, .L190
 3543 000a FFF7FEFF 		bl	LL_ADC_GetMultimode
 3544 000e 3861     		str	r0, [r7, #16]
1731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 3545              		.loc 2 1737 7
 3546 0010 7B68     		ldr	r3, [r7, #4]
 3547 0012 1B68     		ldr	r3, [r3]
 3548 0014 1846     		mov	r0, r3
 3549 0016 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 3550 001a 0346     		mov	r3, r0
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 220


 3551              		.loc 2 1737 6
 3552 001c 002B     		cmp	r3, #0
 3553 001e 40F01081 		bne	.L166
1738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Process locked */
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_LOCK(hadc);
 3554              		.loc 2 1740 5
 3555 0022 7B68     		ldr	r3, [r7, #4]
 3556 0024 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 3557 0028 012B     		cmp	r3, #1
 3558 002a 01D1     		bne	.L167
 3559              		.loc 2 1740 5 is_stmt 0 discriminator 1
 3560 002c 0223     		movs	r3, #2
 3561 002e 0BE1     		b	.L168
 3562              	.L167:
 3563              		.loc 2 1740 5 discriminator 2
 3564 0030 7B68     		ldr	r3, [r7, #4]
 3565 0032 0122     		movs	r2, #1
 3566 0034 83F85420 		strb	r2, [r3, #84]
1741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable the ADC peripheral */
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
 3567              		.loc 2 1743 22 is_stmt 1 discriminator 2
 3568 0038 7868     		ldr	r0, [r7, #4]
 3569 003a FFF7FEFF 		bl	ADC_Enable
 3570 003e 0346     		mov	r3, r0
 3571 0040 FB75     		strb	r3, [r7, #23]
1744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 3572              		.loc 2 1746 8 discriminator 2
 3573 0042 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3574 0044 002B     		cmp	r3, #0
 3575 0046 40F0F780 		bne	.L169
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state                                                        */
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 3576              		.loc 2 1751 7
 3577 004a 7B68     		ldr	r3, [r7, #4]
 3578 004c 9B6D     		ldr	r3, [r3, #88]
 3579 004e 23F47063 		bic	r3, r3, #3840
 3580 0052 23F00103 		bic	r3, r3, #1
 3581 0056 43F48072 		orr	r2, r3, #256
 3582 005a 7B68     		ldr	r3, [r7, #4]
 3583 005c 9A65     		str	r2, [r3, #88]
1752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
1757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         - if ADC instance is master or if multimode feature is not available
1758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
1759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 3584              		.loc 2 1759 12
 3585 005e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 221


 3586 0060 1B68     		ldr	r3, [r3]
 3587 0062 7C4A     		ldr	r2, .L190+4
 3588 0064 9342     		cmp	r3, r2
 3589 0066 02D0     		beq	.L170
 3590              		.loc 2 1759 12 is_stmt 0 discriminator 1
 3591 0068 7B68     		ldr	r3, [r7, #4]
 3592 006a 1B68     		ldr	r3, [r3]
 3593 006c 00E0     		b	.L171
 3594              	.L170:
 3595              		.loc 2 1759 12 discriminator 2
 3596 006e 7A4B     		ldr	r3, .L190+8
 3597              	.L171:
 3598              		.loc 2 1759 66 is_stmt 1 discriminator 4
 3599 0070 7A68     		ldr	r2, [r7, #4]
 3600 0072 1268     		ldr	r2, [r2]
 3601              		.loc 2 1759 10 discriminator 4
 3602 0074 9342     		cmp	r3, r2
 3603 0076 02D0     		beq	.L172
1760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 3604              		.loc 2 1760 11
 3605 0078 3B69     		ldr	r3, [r7, #16]
 3606 007a 002B     		cmp	r3, #0
 3607 007c 05D1     		bne	.L173
 3608              	.L172:
1761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          )
1762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 3609              		.loc 2 1763 9
 3610 007e 7B68     		ldr	r3, [r7, #4]
 3611 0080 9B6D     		ldr	r3, [r3, #88]
 3612 0082 23F48012 		bic	r2, r3, #1048576
 3613 0086 7B68     		ldr	r3, [r7, #4]
 3614 0088 9A65     		str	r2, [r3, #88]
 3615              	.L173:
1764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code */
1768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
 3616              		.loc 2 1769 16
 3617 008a 7B68     		ldr	r3, [r7, #4]
 3618 008c 9B6D     		ldr	r3, [r3, #88]
 3619              		.loc 2 1769 24
 3620 008e 03F48053 		and	r3, r3, #4096
 3621              		.loc 2 1769 10
 3622 0092 002B     		cmp	r3, #0
 3623 0094 06D0     		beq	.L174
1770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 3624              		.loc 2 1772 9
 3625 0096 7B68     		ldr	r3, [r7, #4]
 3626 0098 DB6D     		ldr	r3, [r3, #92]
 3627 009a 23F00602 		bic	r2, r3, #6
 3628 009e 7B68     		ldr	r3, [r7, #4]
 3629 00a0 DA65     		str	r2, [r3, #92]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 222


 3630 00a2 02E0     		b	.L175
 3631              	.L174:
1773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset all ADC error code fields */
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
 3632              		.loc 2 1777 9
 3633 00a4 7B68     		ldr	r3, [r7, #4]
 3634 00a6 0022     		movs	r2, #0
 3635 00a8 DA65     		str	r2, [r3, #92]
 3636              	.L175:
1778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 3637              		.loc 2 1782 7
 3638 00aa 7B68     		ldr	r3, [r7, #4]
 3639 00ac 1B68     		ldr	r3, [r3]
 3640 00ae 1C22     		movs	r2, #28
 3641 00b0 1A60     		str	r2, [r3]
1783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
1785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
 3642              		.loc 2 1787 7
 3643 00b2 7B68     		ldr	r3, [r7, #4]
 3644 00b4 0022     		movs	r2, #0
 3645 00b6 83F85420 		strb	r2, [r3, #84]
1788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Disable all interruptions before enabling the desired ones */
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
 3646              		.loc 2 1790 7
 3647 00ba 7B68     		ldr	r3, [r7, #4]
 3648 00bc 1B68     		ldr	r3, [r3]
 3649 00be 5A68     		ldr	r2, [r3, #4]
 3650 00c0 7B68     		ldr	r3, [r7, #4]
 3651 00c2 1B68     		ldr	r3, [r3]
 3652 00c4 22F01C02 		bic	r2, r2, #28
 3653 00c8 5A60     		str	r2, [r3, #4]
1791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable ADC end of conversion interrupt */
1793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       switch (hadc->Init.EOCSelection)
 3654              		.loc 2 1793 25
 3655 00ca 7B68     		ldr	r3, [r7, #4]
 3656 00cc 5B69     		ldr	r3, [r3, #20]
 3657              		.loc 2 1793 7
 3658 00ce 082B     		cmp	r3, #8
 3659 00d0 08D1     		bne	.L176
1794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_EOC_SEQ_CONV:
1796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOS);
 3660              		.loc 2 1796 11
 3661 00d2 7B68     		ldr	r3, [r7, #4]
 3662 00d4 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 223


 3663 00d6 5A68     		ldr	r2, [r3, #4]
 3664 00d8 7B68     		ldr	r3, [r7, #4]
 3665 00da 1B68     		ldr	r3, [r3]
 3666 00dc 42F00802 		orr	r2, r2, #8
 3667 00e0 5A60     		str	r2, [r3, #4]
1797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 3668              		.loc 2 1797 11
 3669 00e2 08E0     		b	.L177
 3670              	.L176:
1798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
1799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         default:
1800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
 3671              		.loc 2 1800 11
 3672 00e4 7B68     		ldr	r3, [r7, #4]
 3673 00e6 1B68     		ldr	r3, [r3]
 3674 00e8 5A68     		ldr	r2, [r3, #4]
 3675 00ea 7B68     		ldr	r3, [r7, #4]
 3676 00ec 1B68     		ldr	r3, [r3]
 3677 00ee 42F00402 		orr	r2, r2, #4
 3678 00f2 5A60     		str	r2, [r3, #4]
1801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 3679              		.loc 2 1801 11
 3680 00f4 00BF     		nop
 3681              	.L177:
1802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If hadc->Init.Overrun is set to ADC_OVR_DATA_PRESERVED, only then is
1806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          ADC_IT_OVR enabled; otherwise data overwrite is considered as normal
1807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          behavior and no CPU time is lost for a non-processed interruption */
1808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
 3682              		.loc 2 1808 21
 3683 00f6 7B68     		ldr	r3, [r7, #4]
 3684 00f8 5B6B     		ldr	r3, [r3, #52]
 3685              		.loc 2 1808 10
 3686 00fa 002B     		cmp	r3, #0
 3687 00fc 07D1     		bne	.L178
1809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 3688              		.loc 2 1810 9
 3689 00fe 7B68     		ldr	r3, [r7, #4]
 3690 0100 1B68     		ldr	r3, [r3]
 3691 0102 5A68     		ldr	r2, [r3, #4]
 3692 0104 7B68     		ldr	r3, [r7, #4]
 3693 0106 1B68     		ldr	r3, [r3]
 3694 0108 42F01002 		orr	r2, r2, #16
 3695 010c 5A60     		str	r2, [r3, #4]
 3696              	.L178:
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* trigger event.                                                       */
1817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */
1818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
1819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 224


1820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 3697              		.loc 2 1822 12
 3698 010e 7B68     		ldr	r3, [r7, #4]
 3699 0110 1B68     		ldr	r3, [r3]
 3700 0112 504A     		ldr	r2, .L190+4
 3701 0114 9342     		cmp	r3, r2
 3702 0116 02D0     		beq	.L179
 3703              		.loc 2 1822 12 is_stmt 0 discriminator 1
 3704 0118 7B68     		ldr	r3, [r7, #4]
 3705 011a 1B68     		ldr	r3, [r3]
 3706 011c 00E0     		b	.L180
 3707              	.L179:
 3708              		.loc 2 1822 12 discriminator 2
 3709 011e 4E4B     		ldr	r3, .L190+8
 3710              	.L180:
 3711              		.loc 2 1822 66 is_stmt 1 discriminator 4
 3712 0120 7A68     		ldr	r2, [r7, #4]
 3713 0122 1268     		ldr	r2, [r2]
 3714              		.loc 2 1822 10 discriminator 4
 3715 0124 9342     		cmp	r3, r2
 3716 0126 08D0     		beq	.L181
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 3717              		.loc 2 1823 11
 3718 0128 3B69     		ldr	r3, [r7, #16]
 3719 012a 002B     		cmp	r3, #0
 3720 012c 05D0     		beq	.L181
1824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 3721              		.loc 2 1824 11
 3722 012e 3B69     		ldr	r3, [r7, #16]
 3723 0130 052B     		cmp	r3, #5
 3724 0132 02D0     		beq	.L181
1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 3725              		.loc 2 1825 11
 3726 0134 3B69     		ldr	r3, [r7, #16]
 3727 0136 092B     		cmp	r3, #9
 3728 0138 3AD1     		bne	.L182
 3729              	.L181:
1826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          )
1827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* ADC instance is not a multimode slave instance with multimode regular conversions enable
1829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
 3730              		.loc 2 1829 13
 3731 013a 7B68     		ldr	r3, [r7, #4]
 3732 013c 1B68     		ldr	r3, [r3]
 3733 013e DB68     		ldr	r3, [r3, #12]
 3734 0140 03F00073 		and	r3, r3, #33554432
 3735              		.loc 2 1829 12
 3736 0144 002B     		cmp	r3, #0
 3737 0146 2DD0     		beq	.L183
1830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 3738              		.loc 2 1831 11
 3739 0148 7B68     		ldr	r3, [r7, #4]
 3740 014a 9B6D     		ldr	r3, [r3, #88]
 3741 014c 23F44053 		bic	r3, r3, #12288
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 225


 3742 0150 43F48052 		orr	r2, r3, #4096
 3743 0154 7B68     		ldr	r3, [r7, #4]
 3744 0156 9A65     		str	r2, [r3, #88]
1832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Enable as well injected interruptions in case
1834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            HAL_ADCEx_InjectedStart_IT() has not been called beforehand. This
1835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            allows to start regular and injected conversions when JAUTO is
1836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            set with a single call to HAL_ADC_Start_IT() */
1837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           switch (hadc->Init.EOCSelection)
 3745              		.loc 2 1837 29
 3746 0158 7B68     		ldr	r3, [r7, #4]
 3747 015a 5B69     		ldr	r3, [r3, #20]
 3748              		.loc 2 1837 11
 3749 015c 082B     		cmp	r3, #8
 3750 015e 10D1     		bne	.L184
1838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
1839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
1840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 3751              		.loc 2 1840 15
 3752 0160 7B68     		ldr	r3, [r7, #4]
 3753 0162 1B68     		ldr	r3, [r3]
 3754 0164 5A68     		ldr	r2, [r3, #4]
 3755 0166 7B68     		ldr	r3, [r7, #4]
 3756 0168 1B68     		ldr	r3, [r3]
 3757 016a 22F02002 		bic	r2, r2, #32
 3758 016e 5A60     		str	r2, [r3, #4]
1841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 3759              		.loc 2 1841 15
 3760 0170 7B68     		ldr	r3, [r7, #4]
 3761 0172 1B68     		ldr	r3, [r3]
 3762 0174 5A68     		ldr	r2, [r3, #4]
 3763 0176 7B68     		ldr	r3, [r7, #4]
 3764 0178 1B68     		ldr	r3, [r3]
 3765 017a 42F04002 		orr	r2, r2, #64
 3766 017e 5A60     		str	r2, [r3, #4]
1842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               break;
 3767              		.loc 2 1842 15
 3768 0180 10E0     		b	.L183
 3769              	.L184:
1843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
1844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             default:
1845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
 3770              		.loc 2 1845 15
 3771 0182 7B68     		ldr	r3, [r7, #4]
 3772 0184 1B68     		ldr	r3, [r3]
 3773 0186 5A68     		ldr	r2, [r3, #4]
 3774 0188 7B68     		ldr	r3, [r7, #4]
 3775 018a 1B68     		ldr	r3, [r3]
 3776 018c 22F04002 		bic	r2, r2, #64
 3777 0190 5A60     		str	r2, [r3, #4]
1846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 3778              		.loc 2 1846 15
 3779 0192 7B68     		ldr	r3, [r7, #4]
 3780 0194 1B68     		ldr	r3, [r3]
 3781 0196 5A68     		ldr	r2, [r3, #4]
 3782 0198 7B68     		ldr	r3, [r7, #4]
 3783 019a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 226


 3784 019c 42F02002 		orr	r2, r2, #32
 3785 01a0 5A60     		str	r2, [r3, #4]
1847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               break;
 3786              		.loc 2 1847 15
 3787 01a2 00BF     		nop
 3788              	.L183:
1848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
1849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Start ADC group regular conversion */
1852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
 3789              		.loc 2 1852 9
 3790 01a4 7B68     		ldr	r3, [r7, #4]
 3791 01a6 1B68     		ldr	r3, [r3]
 3792 01a8 1846     		mov	r0, r3
 3793 01aa FFF7FEFF 		bl	LL_ADC_REG_StartConversion
 3794 01ae 4AE0     		b	.L189
 3795              	.L182:
1853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* ADC instance is a multimode slave instance with multimode regular conversions enabled */
1857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 3796              		.loc 2 1857 9
 3797 01b0 7B68     		ldr	r3, [r7, #4]
 3798 01b2 9B6D     		ldr	r3, [r3, #88]
 3799 01b4 43F48012 		orr	r2, r3, #1048576
 3800 01b8 7B68     		ldr	r3, [r7, #4]
 3801 01ba 9A65     		str	r2, [r3, #88]
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, Slave injected interruptions
1859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            are enabled nevertheless (for same reason as above) */
1860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
 3802              		.loc 2 1860 25
 3803 01bc 7B68     		ldr	r3, [r7, #4]
 3804 01be 1B68     		ldr	r3, [r3]
 3805 01c0 244A     		ldr	r2, .L190+4
 3806 01c2 9342     		cmp	r3, r2
 3807 01c4 02D0     		beq	.L186
 3808              		.loc 2 1860 25 is_stmt 0 discriminator 1
 3809 01c6 7B68     		ldr	r3, [r7, #4]
 3810 01c8 1B68     		ldr	r3, [r3]
 3811 01ca 00E0     		b	.L187
 3812              	.L186:
 3813              		.loc 2 1860 25 discriminator 2
 3814 01cc 224B     		ldr	r3, .L190+8
 3815              	.L187:
 3816              		.loc 2 1860 23 is_stmt 1 discriminator 4
 3817 01ce FB60     		str	r3, [r7, #12]
1861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
 3818              		.loc 2 1861 13 discriminator 4
 3819 01d0 FB68     		ldr	r3, [r7, #12]
 3820 01d2 DB68     		ldr	r3, [r3, #12]
 3821 01d4 03F00073 		and	r3, r3, #33554432
 3822              		.loc 2 1861 12 discriminator 4
 3823 01d8 002B     		cmp	r3, #0
 3824 01da 34D0     		beq	.L189
1862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 227


1863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* First, update Slave State in setting HAL_ADC_STATE_INJ_BUSY bit
1864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              and in resetting HAL_ADC_STATE_INJ_EOC bit */
1865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 3825              		.loc 2 1865 11
 3826 01dc 7B68     		ldr	r3, [r7, #4]
 3827 01de 9B6D     		ldr	r3, [r3, #88]
 3828 01e0 23F44053 		bic	r3, r3, #12288
 3829 01e4 43F48052 		orr	r2, r3, #4096
 3830 01e8 7B68     		ldr	r3, [r7, #4]
 3831 01ea 9A65     		str	r2, [r3, #88]
1866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Next, set Slave injected interruptions */
1867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           switch (hadc->Init.EOCSelection)
 3832              		.loc 2 1867 29
 3833 01ec 7B68     		ldr	r3, [r7, #4]
 3834 01ee 5B69     		ldr	r3, [r3, #20]
 3835              		.loc 2 1867 11
 3836 01f0 082B     		cmp	r3, #8
 3837 01f2 10D1     		bne	.L188
1868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
1869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
1870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 3838              		.loc 2 1870 15
 3839 01f4 7B68     		ldr	r3, [r7, #4]
 3840 01f6 1B68     		ldr	r3, [r3]
 3841 01f8 5A68     		ldr	r2, [r3, #4]
 3842 01fa 7B68     		ldr	r3, [r7, #4]
 3843 01fc 1B68     		ldr	r3, [r3]
 3844 01fe 22F02002 		bic	r2, r2, #32
 3845 0202 5A60     		str	r2, [r3, #4]
1871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 3846              		.loc 2 1871 15
 3847 0204 7B68     		ldr	r3, [r7, #4]
 3848 0206 1B68     		ldr	r3, [r3]
 3849 0208 5A68     		ldr	r2, [r3, #4]
 3850 020a 7B68     		ldr	r3, [r7, #4]
 3851 020c 1B68     		ldr	r3, [r3]
 3852 020e 42F04002 		orr	r2, r2, #64
 3853 0212 5A60     		str	r2, [r3, #4]
1872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               break;
 3854              		.loc 2 1872 15
 3855 0214 17E0     		b	.L189
 3856              	.L188:
1873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
1874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             default:
1875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
 3857              		.loc 2 1875 15
 3858 0216 7B68     		ldr	r3, [r7, #4]
 3859 0218 1B68     		ldr	r3, [r3]
 3860 021a 5A68     		ldr	r2, [r3, #4]
 3861 021c 7B68     		ldr	r3, [r7, #4]
 3862 021e 1B68     		ldr	r3, [r3]
 3863 0220 22F04002 		bic	r2, r2, #64
 3864 0224 5A60     		str	r2, [r3, #4]
1876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 3865              		.loc 2 1876 15
 3866 0226 7B68     		ldr	r3, [r7, #4]
 3867 0228 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 228


 3868 022a 5A68     		ldr	r2, [r3, #4]
 3869 022c 7B68     		ldr	r3, [r7, #4]
 3870 022e 1B68     		ldr	r3, [r3]
 3871 0230 42F02002 		orr	r2, r2, #32
 3872 0234 5A60     		str	r2, [r3, #4]
1877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               break;
 3873              		.loc 2 1877 15
 3874 0236 06E0     		b	.L189
 3875              	.L169:
1878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
1879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
1882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* ADC instance is not a multimode slave instance with multimode regular conversions enabled 
1883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Enable as well injected interruptions in case
1888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          HAL_ADCEx_InjectedStart_IT() has not been called beforehand. This
1889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          allows to start regular and injected conversions when JAUTO is
1890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          set with a single call to HAL_ADC_Start_IT() */
1891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         switch (hadc->Init.EOCSelection)
1892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           case ADC_EOC_SEQ_CONV:
1894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             break;
1897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* case ADC_EOC_SINGLE_CONV */
1898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           default:
1899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             break;
1902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Start ADC group regular conversion */
1906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
1910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
1912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
 3876              		.loc 2 1912 7
 3877 0238 7B68     		ldr	r3, [r7, #4]
 3878 023a 0022     		movs	r2, #0
 3879 023c 83F85420 		strb	r2, [r3, #84]
 3880 0240 01E0     		b	.L189
 3881              	.L166:
1913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
 3882              		.loc 2 1918 20
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 229


 3883 0242 0223     		movs	r3, #2
 3884 0244 FB75     		strb	r3, [r7, #23]
 3885              	.L189:
1919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 3886              		.loc 2 1922 10
 3887 0246 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3888              	.L168:
1923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 3889              		.loc 2 1923 1
 3890 0248 1846     		mov	r0, r3
 3891 024a 1837     		adds	r7, r7, #24
 3892              		.cfi_def_cfa_offset 8
 3893 024c BD46     		mov	sp, r7
 3894              		.cfi_def_cfa_register 13
 3895              		@ sp needed
 3896 024e 80BD     		pop	{r7, pc}
 3897              	.L191:
 3898              		.align	2
 3899              	.L190:
 3900 0250 00030450 		.word	1342440192
 3901 0254 00010450 		.word	1342439680
 3902 0258 00000450 		.word	1342439424
 3903              		.cfi_endproc
 3904              	.LFE329:
 3906              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 3907              		.align	1
 3908              		.global	HAL_ADC_Stop_IT
 3909              		.syntax unified
 3910              		.thumb
 3911              		.thumb_func
 3913              	HAL_ADC_Stop_IT:
 3914              	.LFB330:
1924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of
1928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
1929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
1931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef *hadc)
1933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 3915              		.loc 2 1933 1
 3916              		.cfi_startproc
 3917              		@ args = 0, pretend = 0, frame = 16
 3918              		@ frame_needed = 1, uses_anonymous_args = 0
 3919 0000 80B5     		push	{r7, lr}
 3920              		.cfi_def_cfa_offset 8
 3921              		.cfi_offset 7, -8
 3922              		.cfi_offset 14, -4
 3923 0002 84B0     		sub	sp, sp, #16
 3924              		.cfi_def_cfa_offset 24
 3925 0004 00AF     		add	r7, sp, #0
 3926              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 230


 3927 0006 7860     		str	r0, [r7, #4]
1934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
1940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 3928              		.loc 2 1940 3
 3929 0008 7B68     		ldr	r3, [r7, #4]
 3930 000a 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 3931 000e 012B     		cmp	r3, #1
 3932 0010 01D1     		bne	.L193
 3933              		.loc 2 1940 3 is_stmt 0 discriminator 1
 3934 0012 0223     		movs	r3, #2
 3935 0014 2BE0     		b	.L194
 3936              	.L193:
 3937              		.loc 2 1940 3 discriminator 2
 3938 0016 7B68     		ldr	r3, [r7, #4]
 3939 0018 0122     		movs	r2, #1
 3940 001a 83F85420 		strb	r2, [r3, #84]
1941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 3941              		.loc 2 1943 20 is_stmt 1 discriminator 2
 3942 001e 0321     		movs	r1, #3
 3943 0020 7868     		ldr	r0, [r7, #4]
 3944 0022 FFF7FEFF 		bl	ADC_ConversionStop
 3945 0026 0346     		mov	r3, r0
 3946 0028 FB73     		strb	r3, [r7, #15]
1944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 3947              		.loc 2 1946 6 discriminator 2
 3948 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3949 002c 002B     		cmp	r3, #0
 3950 002e 19D1     		bne	.L195
1947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
1949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
 3951              		.loc 2 1950 5
 3952 0030 7B68     		ldr	r3, [r7, #4]
 3953 0032 1B68     		ldr	r3, [r3]
 3954 0034 5A68     		ldr	r2, [r3, #4]
 3955 0036 7B68     		ldr	r3, [r7, #4]
 3956 0038 1B68     		ldr	r3, [r3]
 3957 003a 22F01C02 		bic	r2, r2, #28
 3958 003e 5A60     		str	r2, [r3, #4]
1951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 3959              		.loc 2 1953 22
 3960 0040 7868     		ldr	r0, [r7, #4]
 3961 0042 FFF7FEFF 		bl	ADC_Disable
 3962 0046 0346     		mov	r3, r0
 3963 0048 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 231


1954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 3964              		.loc 2 1956 8
 3965 004a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3966 004c 002B     		cmp	r3, #0
 3967 004e 09D1     		bne	.L195
1957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 3968              		.loc 2 1959 7
 3969 0050 7B68     		ldr	r3, [r7, #4]
 3970 0052 9B6D     		ldr	r3, [r3, #88]
 3971 0054 23F48853 		bic	r3, r3, #4352
 3972 0058 23F00103 		bic	r3, r3, #1
 3973 005c 43F00102 		orr	r2, r3, #1
 3974 0060 7B68     		ldr	r3, [r7, #4]
 3975 0062 9A65     		str	r2, [r3, #88]
 3976              	.L195:
1960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
1966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 3977              		.loc 2 1966 3
 3978 0064 7B68     		ldr	r3, [r7, #4]
 3979 0066 0022     		movs	r2, #0
 3980 0068 83F85420 		strb	r2, [r3, #84]
1967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 3981              		.loc 2 1969 10
 3982 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3983              	.L194:
1970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 3984              		.loc 2 1970 1
 3985 006e 1846     		mov	r0, r3
 3986 0070 1037     		adds	r7, r7, #16
 3987              		.cfi_def_cfa_offset 8
 3988 0072 BD46     		mov	sp, r7
 3989              		.cfi_def_cfa_register 13
 3990              		@ sp needed
 3991 0074 80BD     		pop	{r7, pc}
 3992              		.cfi_endproc
 3993              	.LFE330:
 3995              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 3996              		.align	1
 3997              		.global	HAL_ADC_Start_DMA
 3998              		.syntax unified
 3999              		.thumb
 4000              		.thumb_func
 4002              	HAL_ADC_Start_DMA:
 4003              	.LFB331:
1971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 232


1973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group and transfer result through DMA.
1974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Interruptions enabled in this function:
1975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         overrun (if applicable), DMA half transfer, DMA transfer complete.
1976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available): HAL_ADC_Start_DMA()
1978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         is designed for single-ADC mode only. For multimode, the dedicated
1979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         HAL_ADCEx_MultiModeStart_DMA() function must be used.
1980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param pData Destination Buffer address.
1982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param Length Number of data to be transferred from ADC peripheral to memory
1983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
1984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
1986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 4004              		.loc 2 1986 1
 4005              		.cfi_startproc
 4006              		@ args = 0, pretend = 0, frame = 24
 4007              		@ frame_needed = 1, uses_anonymous_args = 0
 4008 0000 80B5     		push	{r7, lr}
 4009              		.cfi_def_cfa_offset 8
 4010              		.cfi_offset 7, -8
 4011              		.cfi_offset 14, -4
 4012 0002 86B0     		sub	sp, sp, #24
 4013              		.cfi_def_cfa_offset 32
 4014 0004 00AF     		add	r7, sp, #0
 4015              		.cfi_def_cfa_register 7
 4016 0006 F860     		str	r0, [r7, #12]
 4017 0008 B960     		str	r1, [r7, #8]
 4018 000a 7A60     		str	r2, [r7, #4]
1987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 4019              		.loc 2 1989 35
 4020 000c 5048     		ldr	r0, .L212
 4021 000e FFF7FEFF 		bl	LL_ADC_GetMultimode
 4022 0012 3861     		str	r0, [r7, #16]
1990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 4023              		.loc 2 1996 7
 4024 0014 FB68     		ldr	r3, [r7, #12]
 4025 0016 1B68     		ldr	r3, [r3]
 4026 0018 1846     		mov	r0, r3
 4027 001a FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 4028 001e 0346     		mov	r3, r0
 4029              		.loc 2 1996 6
 4030 0020 002B     		cmp	r3, #0
 4031 0022 40F08E80 		bne	.L197
1997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Process locked */
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_LOCK(hadc);
 4032              		.loc 2 1999 5
 4033 0026 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 233


 4034 0028 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 4035 002c 012B     		cmp	r3, #1
 4036 002e 01D1     		bne	.L198
 4037              		.loc 2 1999 5 is_stmt 0 discriminator 1
 4038 0030 0223     		movs	r3, #2
 4039 0032 89E0     		b	.L199
 4040              	.L198:
 4041              		.loc 2 1999 5 discriminator 2
 4042 0034 FB68     		ldr	r3, [r7, #12]
 4043 0036 0122     		movs	r2, #1
 4044 0038 83F85420 		strb	r2, [r3, #84]
2000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Ensure that multimode regular conversions are not enabled.   */
2003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Otherwise, dedicated API HAL_ADCEx_MultiModeStart_DMA() must be used.  */
2004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((ADC_IS_INDEPENDENT(hadc) != RESET)
 4045              		.loc 2 2004 8 is_stmt 1 discriminator 2
 4046 003c 3B69     		ldr	r3, [r7, #16]
 4047 003e 002B     		cmp	r3, #0
 4048 0040 05D0     		beq	.L200
2005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 4049              		.loc 2 2006 9
 4050 0042 3B69     		ldr	r3, [r7, #16]
 4051 0044 052B     		cmp	r3, #5
 4052 0046 02D0     		beq	.L200
2007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 4053              		.loc 2 2007 9
 4054 0048 3B69     		ldr	r3, [r7, #16]
 4055 004a 092B     		cmp	r3, #9
 4056 004c 72D1     		bne	.L201
 4057              	.L200:
2008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
2009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
2010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable the ADC peripheral */
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_hal_status = ADC_Enable(hadc);
 4058              		.loc 2 2012 24
 4059 004e F868     		ldr	r0, [r7, #12]
 4060 0050 FFF7FEFF 		bl	ADC_Enable
 4061 0054 0346     		mov	r3, r0
 4062 0056 FB75     		strb	r3, [r7, #23]
2013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Start conversion if ADC is effectively enabled */
2015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (tmp_hal_status == HAL_OK)
 4063              		.loc 2 2015 10
 4064 0058 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4065 005a 002B     		cmp	r3, #0
 4066 005c 65D1     		bne	.L202
2016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC state                                                        */
2018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* - Clear state bitfield related to regular group conversion results   */
2019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* - Set state bitfield related to regular operation                    */
2020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State,
 4067              		.loc 2 2020 9
 4068 005e FB68     		ldr	r3, [r7, #12]
 4069 0060 9B6D     		ldr	r3, [r3, #88]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 234


 4070 0062 23F47063 		bic	r3, r3, #3840
 4071 0066 23F00103 		bic	r3, r3, #1
 4072 006a 43F48072 		orr	r2, r3, #256
 4073 006e FB68     		ldr	r3, [r7, #12]
 4074 0070 9A65     		str	r2, [r3, #88]
2021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
2022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY);
2023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
2026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           - if ADC instance is master or if multimode feature is not available
2027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           - if multimode setting is disabled (ADC instance slave in independent mode) */
2028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 4075              		.loc 2 2028 14
 4076 0072 FB68     		ldr	r3, [r7, #12]
 4077 0074 1B68     		ldr	r3, [r3]
 4078 0076 374A     		ldr	r2, .L212+4
 4079 0078 9342     		cmp	r3, r2
 4080 007a 02D0     		beq	.L203
 4081              		.loc 2 2028 14 is_stmt 0 discriminator 1
 4082 007c FB68     		ldr	r3, [r7, #12]
 4083 007e 1B68     		ldr	r3, [r3]
 4084 0080 00E0     		b	.L204
 4085              	.L203:
 4086              		.loc 2 2028 14 discriminator 2
 4087 0082 354B     		ldr	r3, .L212+8
 4088              	.L204:
 4089              		.loc 2 2028 68 is_stmt 1 discriminator 4
 4090 0084 FA68     		ldr	r2, [r7, #12]
 4091 0086 1268     		ldr	r2, [r2]
 4092              		.loc 2 2028 12 discriminator 4
 4093 0088 9342     		cmp	r3, r2
 4094 008a 02D0     		beq	.L205
2029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4095              		.loc 2 2029 13
 4096 008c 3B69     		ldr	r3, [r7, #16]
 4097 008e 002B     		cmp	r3, #0
 4098 0090 05D1     		bne	.L206
 4099              	.L205:
2030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            )
2031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 4100              		.loc 2 2032 11
 4101 0092 FB68     		ldr	r3, [r7, #12]
 4102 0094 9B6D     		ldr	r3, [r3, #88]
 4103 0096 23F48012 		bic	r2, r3, #1048576
 4104 009a FB68     		ldr	r3, [r7, #12]
 4105 009c 9A65     		str	r2, [r3, #88]
 4106              	.L206:
2033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Check if a conversion is on going on ADC group injected */
2037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
 4107              		.loc 2 2037 18
 4108 009e FB68     		ldr	r3, [r7, #12]
 4109 00a0 9B6D     		ldr	r3, [r3, #88]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 235


 4110              		.loc 2 2037 26
 4111 00a2 03F48053 		and	r3, r3, #4096
 4112              		.loc 2 2037 12
 4113 00a6 002B     		cmp	r3, #0
 4114 00a8 06D0     		beq	.L207
2038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Reset ADC error code fields related to regular conversions only */
2040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 4115              		.loc 2 2040 11
 4116 00aa FB68     		ldr	r3, [r7, #12]
 4117 00ac DB6D     		ldr	r3, [r3, #92]
 4118 00ae 23F00602 		bic	r2, r3, #6
 4119 00b2 FB68     		ldr	r3, [r7, #12]
 4120 00b4 DA65     		str	r2, [r3, #92]
 4121 00b6 02E0     		b	.L208
 4122              	.L207:
2041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         else
2043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Reset all ADC error code fields */
2045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_CLEAR_ERRORCODE(hadc);
 4123              		.loc 2 2045 11
 4124 00b8 FB68     		ldr	r3, [r7, #12]
 4125 00ba 0022     		movs	r2, #0
 4126 00bc DA65     		str	r2, [r3, #92]
 4127              	.L208:
2046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set the DMA transfer complete callback */
2049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 4128              		.loc 2 2049 13
 4129 00be FB68     		ldr	r3, [r7, #12]
 4130 00c0 1B6D     		ldr	r3, [r3, #80]
 4131              		.loc 2 2049 44
 4132 00c2 264A     		ldr	r2, .L212+12
 4133 00c4 DA62     		str	r2, [r3, #44]
2050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set the DMA half transfer complete callback */
2052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 4134              		.loc 2 2052 13
 4135 00c6 FB68     		ldr	r3, [r7, #12]
 4136 00c8 1B6D     		ldr	r3, [r3, #80]
 4137              		.loc 2 2052 48
 4138 00ca 254A     		ldr	r2, .L212+16
 4139 00cc 1A63     		str	r2, [r3, #48]
2053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set the DMA error callback */
2055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 4140              		.loc 2 2055 13
 4141 00ce FB68     		ldr	r3, [r7, #12]
 4142 00d0 1B6D     		ldr	r3, [r3, #80]
 4143              		.loc 2 2055 45
 4144 00d2 244A     		ldr	r2, .L212+20
 4145 00d4 5A63     		str	r2, [r3, #52]
2056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Manage ADC and DMA start: ADC overrun interruption, DMA start,     */
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 236


2059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* ADC start (in case of SW start):                                   */
2060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Clear regular group conversion flag and overrun flag               */
2062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* (To ensure of no unknown state from potential previous ADC         */
2063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* operations)                                                        */
2064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 4146              		.loc 2 2064 9
 4147 00d6 FB68     		ldr	r3, [r7, #12]
 4148 00d8 1B68     		ldr	r3, [r3]
 4149 00da 1C22     		movs	r2, #28
 4150 00dc 1A60     		str	r2, [r3]
2065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Process unlocked */
2067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Unlock before starting ADC conversions: in case of potential         */
2068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* interruption, to let the process to ADC IRQ Handler.                 */
2069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 4151              		.loc 2 2069 9
 4152 00de FB68     		ldr	r3, [r7, #12]
 4153 00e0 0022     		movs	r2, #0
 4154 00e2 83F85420 		strb	r2, [r3, #84]
2070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* With DMA, overrun event is always considered as an error even if
2072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            hadc->Init.Overrun is set to ADC_OVR_DATA_OVERWRITTEN. Therefore,
2073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            ADC_IT_OVR is enabled. */
2074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 4155              		.loc 2 2074 9
 4156 00e6 FB68     		ldr	r3, [r7, #12]
 4157 00e8 1B68     		ldr	r3, [r3]
 4158 00ea 5A68     		ldr	r2, [r3, #4]
 4159 00ec FB68     		ldr	r3, [r7, #12]
 4160 00ee 1B68     		ldr	r3, [r3]
 4161 00f0 42F01002 		orr	r2, r2, #16
 4162 00f4 5A60     		str	r2, [r3, #4]
2075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Enable ADC DMA mode */
2077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
 4163              		.loc 2 2077 9
 4164 00f6 FB68     		ldr	r3, [r7, #12]
 4165 00f8 1B68     		ldr	r3, [r3]
 4166 00fa DA68     		ldr	r2, [r3, #12]
 4167 00fc FB68     		ldr	r3, [r7, #12]
 4168 00fe 1B68     		ldr	r3, [r3]
 4169 0100 42F00102 		orr	r2, r2, #1
 4170 0104 DA60     		str	r2, [r3, #12]
2078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Start the DMA channel */
2080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_
 4171              		.loc 2 2080 26
 4172 0106 FB68     		ldr	r3, [r7, #12]
 4173 0108 186D     		ldr	r0, [r3, #80]
 4174              		.loc 2 2080 76
 4175 010a FB68     		ldr	r3, [r7, #12]
 4176 010c 1B68     		ldr	r3, [r3]
 4177              		.loc 2 2080 71
 4178 010e 4033     		adds	r3, r3, #64
 4179              		.loc 2 2080 26
 4180 0110 1946     		mov	r1, r3
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 237


 4181 0112 BA68     		ldr	r2, [r7, #8]
 4182 0114 7B68     		ldr	r3, [r7, #4]
 4183 0116 FFF7FEFF 		bl	HAL_DMA_Start_IT
 4184 011a 0346     		mov	r3, r0
 4185 011c FB75     		strb	r3, [r7, #23]
2081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Enable conversion of regular group.                                  */
2083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* If software start has been selected, conversion starts immediately.  */
2084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* If external trigger has been selected, conversion will start at next */
2085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* trigger event.                                                       */
2086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Start ADC group regular conversion */
2087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
 4186              		.loc 2 2087 9
 4187 011e FB68     		ldr	r3, [r7, #12]
 4188 0120 1B68     		ldr	r3, [r3]
 4189 0122 1846     		mov	r0, r3
 4190 0124 FFF7FEFF 		bl	LL_ADC_REG_StartConversion
2015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4191              		.loc 2 2015 10
 4192 0128 0DE0     		b	.L211
 4193              	.L202:
2088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Process unlocked */
2092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 4194              		.loc 2 2092 9
 4195 012a FB68     		ldr	r3, [r7, #12]
 4196 012c 0022     		movs	r2, #0
 4197 012e 83F85420 		strb	r2, [r3, #84]
2015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4198              		.loc 2 2015 10
 4199 0132 08E0     		b	.L211
 4200              	.L201:
2093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
2098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
 4201              		.loc 2 2099 22
 4202 0134 0123     		movs	r3, #1
 4203 0136 FB75     		strb	r3, [r7, #23]
2100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
2101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
 4204              		.loc 2 2101 7
 4205 0138 FB68     		ldr	r3, [r7, #12]
 4206 013a 0022     		movs	r2, #0
 4207 013c 83F85420 		strb	r2, [r3, #84]
 4208 0140 01E0     		b	.L211
 4209              	.L197:
2102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
2106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 238


2107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
 4210              		.loc 2 2107 20
 4211 0142 0223     		movs	r3, #2
 4212 0144 FB75     		strb	r3, [r7, #23]
 4213              	.L211:
2108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
2111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 4214              		.loc 2 2111 10
 4215 0146 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4216              	.L199:
2112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 4217              		.loc 2 2112 1
 4218 0148 1846     		mov	r0, r3
 4219 014a 1837     		adds	r7, r7, #24
 4220              		.cfi_def_cfa_offset 8
 4221 014c BD46     		mov	sp, r7
 4222              		.cfi_def_cfa_register 13
 4223              		@ sp needed
 4224 014e 80BD     		pop	{r7, pc}
 4225              	.L213:
 4226              		.align	2
 4227              	.L212:
 4228 0150 00030450 		.word	1342440192
 4229 0154 00010450 		.word	1342439680
 4230 0158 00000450 		.word	1342439424
 4231 015c 00000000 		.word	ADC_DMAConvCplt
 4232 0160 00000000 		.word	ADC_DMAHalfConvCplt
 4233 0164 00000000 		.word	ADC_DMAError
 4234              		.cfi_endproc
 4235              	.LFE331:
 4237              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 4238              		.align	1
 4239              		.global	HAL_ADC_Stop_DMA
 4240              		.syntax unified
 4241              		.thumb
 4242              		.thumb_func
 4244              	HAL_ADC_Stop_DMA:
 4245              	.LFB332:
2113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
2116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
2117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         ADC peripheral.
2118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
2119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         conversion on ADC group injected. If ADC group injected is under use, it
2120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
2121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
2122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         HAL_ADC_Stop_DMA() function is dedicated to single-ADC mode only.
2123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For multimode, the dedicated HAL_ADCEx_MultiModeStop_DMA() API must be used.
2124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
2126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef *hadc)
2128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 4246              		.loc 2 2128 1
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 239


 4247              		.cfi_startproc
 4248              		@ args = 0, pretend = 0, frame = 16
 4249              		@ frame_needed = 1, uses_anonymous_args = 0
 4250 0000 80B5     		push	{r7, lr}
 4251              		.cfi_def_cfa_offset 8
 4252              		.cfi_offset 7, -8
 4253              		.cfi_offset 14, -4
 4254 0002 84B0     		sub	sp, sp, #16
 4255              		.cfi_def_cfa_offset 24
 4256 0004 00AF     		add	r7, sp, #0
 4257              		.cfi_def_cfa_register 7
 4258 0006 7860     		str	r0, [r7, #4]
2129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
2130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
2135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 4259              		.loc 2 2135 3
 4260 0008 7B68     		ldr	r3, [r7, #4]
 4261 000a 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 4262 000e 012B     		cmp	r3, #1
 4263 0010 01D1     		bne	.L215
 4264              		.loc 2 2135 3 is_stmt 0 discriminator 1
 4265 0012 0223     		movs	r3, #2
 4266 0014 51E0     		b	.L216
 4267              	.L215:
 4268              		.loc 2 2135 3 discriminator 2
 4269 0016 7B68     		ldr	r3, [r7, #4]
 4270 0018 0122     		movs	r2, #1
 4271 001a 83F85420 		strb	r2, [r3, #84]
2136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* 1. Stop potential ADC group regular conversion on going */
2138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 4272              		.loc 2 2138 20 is_stmt 1 discriminator 2
 4273 001e 0321     		movs	r1, #3
 4274 0020 7868     		ldr	r0, [r7, #4]
 4275 0022 FFF7FEFF 		bl	ADC_ConversionStop
 4276 0026 0346     		mov	r3, r0
 4277 0028 FB73     		strb	r3, [r7, #15]
2139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
2141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 4278              		.loc 2 2141 6 discriminator 2
 4279 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4280 002c 002B     		cmp	r3, #0
 4281 002e 3FD1     		bne	.L217
2142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable ADC DMA (ADC DMA configuration of continuous requests is kept) */
2144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
 4282              		.loc 2 2144 5
 4283 0030 7B68     		ldr	r3, [r7, #4]
 4284 0032 1B68     		ldr	r3, [r3]
 4285 0034 DA68     		ldr	r2, [r3, #12]
 4286 0036 7B68     		ldr	r3, [r7, #4]
 4287 0038 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 240


 4288 003a 22F00102 		bic	r2, r2, #1
 4289 003e DA60     		str	r2, [r3, #12]
2145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
2147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* while DMA transfer is on going)                                        */
2148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->DMA_Handle->State == HAL_DMA_STATE_BUSY)
 4290              		.loc 2 2148 13
 4291 0040 7B68     		ldr	r3, [r7, #4]
 4292 0042 1B6D     		ldr	r3, [r3, #80]
 4293              		.loc 2 2148 25
 4294 0044 93F82530 		ldrb	r3, [r3, #37]
 4295 0048 DBB2     		uxtb	r3, r3
 4296              		.loc 2 2148 8
 4297 004a 022B     		cmp	r3, #2
 4298 004c 0FD1     		bne	.L218
2149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
 4299              		.loc 2 2150 24
 4300 004e 7B68     		ldr	r3, [r7, #4]
 4301 0050 1B6D     		ldr	r3, [r3, #80]
 4302 0052 1846     		mov	r0, r3
 4303 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 4304 0058 0346     		mov	r3, r0
 4305 005a FB73     		strb	r3, [r7, #15]
2151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check if DMA channel effectively disabled */
2153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (tmp_hal_status != HAL_OK)
 4306              		.loc 2 2153 10
 4307 005c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4308 005e 002B     		cmp	r3, #0
 4309 0060 05D0     		beq	.L218
2154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update ADC state machine to error */
2156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 4310              		.loc 2 2156 9
 4311 0062 7B68     		ldr	r3, [r7, #4]
 4312 0064 9B6D     		ldr	r3, [r3, #88]
 4313 0066 43F04002 		orr	r2, r3, #64
 4314 006a 7B68     		ldr	r3, [r7, #4]
 4315 006c 9A65     		str	r2, [r3, #88]
 4316              	.L218:
2157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
2161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 4317              		.loc 2 2161 5
 4318 006e 7B68     		ldr	r3, [r7, #4]
 4319 0070 1B68     		ldr	r3, [r3]
 4320 0072 5A68     		ldr	r2, [r3, #4]
 4321 0074 7B68     		ldr	r3, [r7, #4]
 4322 0076 1B68     		ldr	r3, [r3]
 4323 0078 22F01002 		bic	r2, r2, #16
 4324 007c 5A60     		str	r2, [r3, #4]
2162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
2164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 241


2165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* to keep in memory a potential failing status.                          */
2166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 4325              		.loc 2 2166 8
 4326 007e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4327 0080 002B     		cmp	r3, #0
 4328 0082 05D1     		bne	.L219
2167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_hal_status = ADC_Disable(hadc);
 4329              		.loc 2 2168 24
 4330 0084 7868     		ldr	r0, [r7, #4]
 4331 0086 FFF7FEFF 		bl	ADC_Disable
 4332 008a 0346     		mov	r3, r0
 4333 008c FB73     		strb	r3, [r7, #15]
 4334 008e 02E0     		b	.L220
 4335              	.L219:
2169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
2171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (void)ADC_Disable(hadc);
 4336              		.loc 2 2172 13
 4337 0090 7868     		ldr	r0, [r7, #4]
 4338 0092 FFF7FEFF 		bl	ADC_Disable
 4339              	.L220:
2173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
2176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 4340              		.loc 2 2176 8
 4341 0096 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4342 0098 002B     		cmp	r3, #0
 4343 009a 09D1     		bne	.L217
2177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
2179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 4344              		.loc 2 2179 7
 4345 009c 7B68     		ldr	r3, [r7, #4]
 4346 009e 9B6D     		ldr	r3, [r3, #88]
 4347 00a0 23F48853 		bic	r3, r3, #4352
 4348 00a4 23F00103 		bic	r3, r3, #1
 4349 00a8 43F00102 		orr	r2, r3, #1
 4350 00ac 7B68     		ldr	r3, [r7, #4]
 4351 00ae 9A65     		str	r2, [r3, #88]
 4352              	.L217:
2180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
2182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
2187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 4353              		.loc 2 2187 3
 4354 00b0 7B68     		ldr	r3, [r7, #4]
 4355 00b2 0022     		movs	r2, #0
 4356 00b4 83F85420 		strb	r2, [r3, #84]
2188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 242


2190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 4357              		.loc 2 2190 10
 4358 00b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4359              	.L216:
2191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 4360              		.loc 2 2191 1
 4361 00ba 1846     		mov	r0, r3
 4362 00bc 1037     		adds	r7, r7, #16
 4363              		.cfi_def_cfa_offset 8
 4364 00be BD46     		mov	sp, r7
 4365              		.cfi_def_cfa_register 13
 4366              		@ sp needed
 4367 00c0 80BD     		pop	{r7, pc}
 4368              		.cfi_endproc
 4369              	.LFE332:
 4371              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 4372              		.align	1
 4373              		.global	HAL_ADC_GetValue
 4374              		.syntax unified
 4375              		.thumb
 4376              		.thumb_func
 4378              	HAL_ADC_GetValue:
 4379              	.LFB333:
2192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
2195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
2196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
2197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS
2198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
2199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Occurrence of flag EOS rising:
2200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
2201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            to flag EOC.
2202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
2203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
2204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            both flags EOC and EOS are raised.
2205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         To clear this flag, either use function:
2206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
2207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion()
2208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
2209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval ADC group regular conversion data
2211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef *hadc)
2213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 4380              		.loc 2 2213 1
 4381              		.cfi_startproc
 4382              		@ args = 0, pretend = 0, frame = 8
 4383              		@ frame_needed = 1, uses_anonymous_args = 0
 4384              		@ link register save eliminated.
 4385 0000 80B4     		push	{r7}
 4386              		.cfi_def_cfa_offset 4
 4387              		.cfi_offset 7, -4
 4388 0002 83B0     		sub	sp, sp, #12
 4389              		.cfi_def_cfa_offset 16
 4390 0004 00AF     		add	r7, sp, #0
 4391              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 243


 4392 0006 7860     		str	r0, [r7, #4]
2214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
2218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
2219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return ADC converted value */
2221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return hadc->Instance->DR;
 4393              		.loc 2 2221 14
 4394 0008 7B68     		ldr	r3, [r7, #4]
 4395 000a 1B68     		ldr	r3, [r3]
 4396              		.loc 2 2221 24
 4397 000c 1B6C     		ldr	r3, [r3, #64]
2222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 4398              		.loc 2 2222 1
 4399 000e 1846     		mov	r0, r3
 4400 0010 0C37     		adds	r7, r7, #12
 4401              		.cfi_def_cfa_offset 4
 4402 0012 BD46     		mov	sp, r7
 4403              		.cfi_def_cfa_register 13
 4404              		@ sp needed
 4405 0014 5DF8047B 		ldr	r7, [sp], #4
 4406              		.cfi_restore 7
 4407              		.cfi_def_cfa_offset 0
 4408 0018 7047     		bx	lr
 4409              		.cfi_endproc
 4410              	.LFE333:
 4412              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 4413              		.align	1
 4414              		.global	HAL_ADC_IRQHandler
 4415              		.syntax unified
 4416              		.thumb
 4417              		.thumb_func
 4419              	HAL_ADC_IRQHandler:
 4420              	.LFB334:
2223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Handle ADC interrupt request.
2226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
2228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef *hadc)
2230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 4421              		.loc 2 2230 1
 4422              		.cfi_startproc
 4423              		@ args = 0, pretend = 0, frame = 40
 4424              		@ frame_needed = 1, uses_anonymous_args = 0
 4425 0000 80B5     		push	{r7, lr}
 4426              		.cfi_def_cfa_offset 8
 4427              		.cfi_offset 7, -8
 4428              		.cfi_offset 14, -4
 4429 0002 8AB0     		sub	sp, sp, #40
 4430              		.cfi_def_cfa_offset 48
 4431 0004 00AF     		add	r7, sp, #0
 4432              		.cfi_def_cfa_register 7
 4433 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 244


2231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 4434              		.loc 2 2231 12
 4435 0008 0023     		movs	r3, #0
 4436 000a 7B62     		str	r3, [r7, #36]
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
 4437              		.loc 2 2232 26
 4438 000c 7B68     		ldr	r3, [r7, #4]
 4439 000e 1B68     		ldr	r3, [r3]
 4440              		.loc 2 2232 12
 4441 0010 1B68     		ldr	r3, [r3]
 4442 0012 FB61     		str	r3, [r7, #28]
2233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 4443              		.loc 2 2233 26
 4444 0014 7B68     		ldr	r3, [r7, #4]
 4445 0016 1B68     		ldr	r3, [r3]
 4446              		.loc 2 2233 12
 4447 0018 5B68     		ldr	r3, [r3, #4]
 4448 001a BB61     		str	r3, [r7, #24]
2234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
2235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
2236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_cfgr;
2237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
2239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 4449              		.loc 2 2239 35
 4450 001c 8248     		ldr	r0, .L263
 4451 001e FFF7FEFF 		bl	LL_ADC_GetMultimode
 4452 0022 7861     		str	r0, [r7, #20]
2240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
2245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check End of Sampling flag for ADC group regular ========== */
2247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_EOSMP) == ADC_FLAG_EOSMP) && ((tmp_ier & ADC_IT_EOSMP) == ADC_IT_EOSMP))
 4453              		.loc 2 2247 17
 4454 0024 FB69     		ldr	r3, [r7, #28]
 4455 0026 03F00203 		and	r3, r3, #2
 4456              		.loc 2 2247 6
 4457 002a 002B     		cmp	r3, #0
 4458 002c 17D0     		beq	.L224
 4459              		.loc 2 2247 67 discriminator 1
 4460 002e BB69     		ldr	r3, [r7, #24]
 4461 0030 03F00203 		and	r3, r3, #2
 4462              		.loc 2 2247 54 discriminator 1
 4463 0034 002B     		cmp	r3, #0
 4464 0036 12D0     		beq	.L224
2248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update state machine on end of sampling status if not in error state */
2250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 4465              		.loc 2 2250 14
 4466 0038 7B68     		ldr	r3, [r7, #4]
 4467 003a 9B6D     		ldr	r3, [r3, #88]
 4468              		.loc 2 2250 22
 4469 003c 03F01003 		and	r3, r3, #16
 4470              		.loc 2 2250 8
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 245


 4471 0040 002B     		cmp	r3, #0
 4472 0042 05D1     		bne	.L225
2251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
2253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
 4473              		.loc 2 2253 7
 4474 0044 7B68     		ldr	r3, [r7, #4]
 4475 0046 9B6D     		ldr	r3, [r3, #88]
 4476 0048 43F40062 		orr	r2, r3, #2048
 4477 004c 7B68     		ldr	r3, [r7, #4]
 4478 004e 9A65     		str	r2, [r3, #88]
 4479              	.L225:
2254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* End Of Sampling callback */
2257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->EndOfSamplingCallback(hadc);
2259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADCEx_EndOfSamplingCallback(hadc);
 4480              		.loc 2 2260 5
 4481 0050 7868     		ldr	r0, [r7, #4]
 4482 0052 FFF7FEFF 		bl	HAL_ADCEx_EndOfSamplingCallback
2261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear regular group conversion flag */
2264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
 4483              		.loc 2 2264 5
 4484 0056 7B68     		ldr	r3, [r7, #4]
 4485 0058 1B68     		ldr	r3, [r3]
 4486 005a 0222     		movs	r2, #2
 4487 005c 1A60     		str	r2, [r3]
 4488              	.L224:
2265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ====== Check ADC group regular end of unitary conversion sequence conversions ===== */
2268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_EOC) == ADC_FLAG_EOC) && ((tmp_ier & ADC_IT_EOC) == ADC_IT_EOC)) ||
 4489              		.loc 2 2268 18
 4490 005e FB69     		ldr	r3, [r7, #28]
 4491 0060 03F00403 		and	r3, r3, #4
 4492              		.loc 2 2268 6
 4493 0064 002B     		cmp	r3, #0
 4494 0066 04D0     		beq	.L226
 4495              		.loc 2 2268 64 discriminator 1
 4496 0068 BB69     		ldr	r3, [r7, #24]
 4497 006a 03F00403 		and	r3, r3, #4
 4498              		.loc 2 2268 51 discriminator 1
 4499 006e 002B     		cmp	r3, #0
 4500 0070 0AD1     		bne	.L227
 4501              	.L226:
2269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 4502              		.loc 2 2269 18 discriminator 3
 4503 0072 FB69     		ldr	r3, [r7, #28]
 4504 0074 03F00803 		and	r3, r3, #8
2268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 4505              		.loc 2 2268 94 discriminator 3
 4506 0078 002B     		cmp	r3, #0
 4507 007a 00F08380 		beq	.L228
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 246


 4508              		.loc 2 2269 64
 4509 007e BB69     		ldr	r3, [r7, #24]
 4510 0080 03F00803 		and	r3, r3, #8
 4511              		.loc 2 2269 51
 4512 0084 002B     		cmp	r3, #0
 4513 0086 7DD0     		beq	.L228
 4514              	.L227:
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
2272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 4515              		.loc 2 2272 14
 4516 0088 7B68     		ldr	r3, [r7, #4]
 4517 008a 9B6D     		ldr	r3, [r3, #88]
 4518              		.loc 2 2272 22
 4519 008c 03F01003 		and	r3, r3, #16
 4520              		.loc 2 2272 8
 4521 0090 002B     		cmp	r3, #0
 4522 0092 05D1     		bne	.L229
2273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
2275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 4523              		.loc 2 2275 7
 4524 0094 7B68     		ldr	r3, [r7, #4]
 4525 0096 9B6D     		ldr	r3, [r3, #88]
 4526 0098 43F40072 		orr	r2, r3, #512
 4527 009c 7B68     		ldr	r3, [r7, #4]
 4528 009e 9A65     		str	r2, [r3, #88]
 4529              	.L229:
2276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
2279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
2280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* to disable interruption.                                               */
2281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
 4530              		.loc 2 2281 9
 4531 00a0 7B68     		ldr	r3, [r7, #4]
 4532 00a2 1B68     		ldr	r3, [r3]
 4533 00a4 1846     		mov	r0, r3
 4534 00a6 FFF7FEFF 		bl	LL_ADC_REG_IsTriggerSourceSWStart
 4535 00aa 0346     		mov	r3, r0
 4536              		.loc 2 2281 8
 4537 00ac 002B     		cmp	r3, #0
 4538 00ae 62D0     		beq	.L230
2282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Get relevant register CFGR in ADC instance of ADC master or slave    */
2284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* in function of multimode state (for devices with multimode           */
2285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* available).                                                          */
2286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 4539              		.loc 2 2287 12
 4540 00b0 7B68     		ldr	r3, [r7, #4]
 4541 00b2 1B68     		ldr	r3, [r3]
 4542 00b4 5D4A     		ldr	r2, .L263+4
 4543 00b6 9342     		cmp	r3, r2
 4544 00b8 02D0     		beq	.L231
 4545              		.loc 2 2287 12 is_stmt 0 discriminator 1
 4546 00ba 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 247


 4547 00bc 1B68     		ldr	r3, [r3]
 4548 00be 00E0     		b	.L232
 4549              	.L231:
 4550              		.loc 2 2287 12 discriminator 2
 4551 00c0 5B4B     		ldr	r3, .L263+8
 4552              	.L232:
 4553              		.loc 2 2287 66 is_stmt 1 discriminator 4
 4554 00c2 7A68     		ldr	r2, [r7, #4]
 4555 00c4 1268     		ldr	r2, [r2]
 4556              		.loc 2 2287 10 discriminator 4
 4557 00c6 9342     		cmp	r3, r2
 4558 00c8 08D0     		beq	.L233
2288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4559              		.loc 2 2288 11
 4560 00ca 7B69     		ldr	r3, [r7, #20]
 4561 00cc 002B     		cmp	r3, #0
 4562 00ce 05D0     		beq	.L233
2289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 4563              		.loc 2 2289 11
 4564 00d0 7B69     		ldr	r3, [r7, #20]
 4565 00d2 052B     		cmp	r3, #5
 4566 00d4 02D0     		beq	.L233
2290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 4567              		.loc 2 2290 11
 4568 00d6 7B69     		ldr	r3, [r7, #20]
 4569 00d8 092B     		cmp	r3, #9
 4570 00da 04D1     		bne	.L234
 4571              	.L233:
2291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          )
2292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* check CONT bit directly in handle ADC CFGR register */
2294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 4572              		.loc 2 2294 20
 4573 00dc 7B68     		ldr	r3, [r7, #4]
 4574 00de 1B68     		ldr	r3, [r3]
 4575              		.loc 2 2294 18
 4576 00e0 DB68     		ldr	r3, [r3, #12]
 4577 00e2 3B62     		str	r3, [r7, #32]
 4578 00e4 0CE0     		b	.L235
 4579              	.L234:
2295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* else need to check Master ADC CONT bit */
2299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
 4580              		.loc 2 2299 25
 4581 00e6 7B68     		ldr	r3, [r7, #4]
 4582 00e8 1B68     		ldr	r3, [r3]
 4583 00ea 504A     		ldr	r2, .L263+4
 4584 00ec 9342     		cmp	r3, r2
 4585 00ee 02D0     		beq	.L236
 4586              		.loc 2 2299 25 is_stmt 0 discriminator 1
 4587 00f0 7B68     		ldr	r3, [r7, #4]
 4588 00f2 1B68     		ldr	r3, [r3]
 4589 00f4 00E0     		b	.L237
 4590              	.L236:
 4591              		.loc 2 2299 25 discriminator 2
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 248


 4592 00f6 4E4B     		ldr	r3, .L263+8
 4593              	.L237:
 4594              		.loc 2 2299 23 is_stmt 1 discriminator 4
 4595 00f8 3B61     		str	r3, [r7, #16]
2300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 4596              		.loc 2 2300 18 discriminator 4
 4597 00fa 3B69     		ldr	r3, [r7, #16]
 4598 00fc DB68     		ldr	r3, [r3, #12]
 4599 00fe 3B62     		str	r3, [r7, #32]
 4600              	.L235:
2301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Carry on if continuous mode is disabled */
2307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) != ADC_CFGR_CONT)
 4601              		.loc 2 2307 11
 4602 0100 3B6A     		ldr	r3, [r7, #32]
 4603 0102 03F40053 		and	r3, r3, #8192
 4604              		.loc 2 2307 10
 4605 0106 002B     		cmp	r3, #0
 4606 0108 35D1     		bne	.L230
2308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* If End of Sequence is reached, disable interrupts */
2310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
 4607              		.loc 2 2310 13
 4608 010a 7B68     		ldr	r3, [r7, #4]
 4609 010c 1B68     		ldr	r3, [r3]
 4610 010e 1B68     		ldr	r3, [r3]
 4611 0110 03F00803 		and	r3, r3, #8
 4612              		.loc 2 2310 12
 4613 0114 082B     		cmp	r3, #8
 4614 0116 2ED1     		bne	.L230
2311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit         */
2313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* ADSTART==0 (no conversion on going)                              */
2314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 4615              		.loc 2 2314 15
 4616 0118 7B68     		ldr	r3, [r7, #4]
 4617 011a 1B68     		ldr	r3, [r3]
 4618 011c 1846     		mov	r0, r3
 4619 011e FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 4620 0122 0346     		mov	r3, r0
 4621              		.loc 2 2314 14
 4622 0124 002B     		cmp	r3, #0
 4623 0126 1AD1     		bne	.L238
2315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
2316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Disable ADC end of sequence conversion interrupt */
2317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Note: Overrun interrupt was enabled with EOC interrupt in      */
2318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* HAL_Start_IT(), but is not disabled here because can be used   */
2319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* by overrun IRQ process below.                                  */
2320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
 4624              		.loc 2 2320 13
 4625 0128 7B68     		ldr	r3, [r7, #4]
 4626 012a 1B68     		ldr	r3, [r3]
 4627 012c 5A68     		ldr	r2, [r3, #4]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 249


 4628 012e 7B68     		ldr	r3, [r7, #4]
 4629 0130 1B68     		ldr	r3, [r3]
 4630 0132 22F00C02 		bic	r2, r2, #12
 4631 0136 5A60     		str	r2, [r3, #4]
2321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Set ADC state */
2323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 4632              		.loc 2 2323 13
 4633 0138 7B68     		ldr	r3, [r7, #4]
 4634 013a 9B6D     		ldr	r3, [r3, #88]
 4635 013c 23F48072 		bic	r2, r3, #256
 4636 0140 7B68     		ldr	r3, [r7, #4]
 4637 0142 9A65     		str	r2, [r3, #88]
2324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 4638              		.loc 2 2325 22
 4639 0144 7B68     		ldr	r3, [r7, #4]
 4640 0146 9B6D     		ldr	r3, [r3, #88]
 4641              		.loc 2 2325 30
 4642 0148 03F48053 		and	r3, r3, #4096
 4643              		.loc 2 2325 16
 4644 014c 002B     		cmp	r3, #0
 4645 014e 12D1     		bne	.L230
2326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
2327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 4646              		.loc 2 2327 15
 4647 0150 7B68     		ldr	r3, [r7, #4]
 4648 0152 9B6D     		ldr	r3, [r3, #88]
 4649 0154 43F00102 		orr	r2, r3, #1
 4650 0158 7B68     		ldr	r3, [r7, #4]
 4651 015a 9A65     		str	r2, [r3, #88]
 4652 015c 0BE0     		b	.L230
 4653              	.L238:
2328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             }
2329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
2330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           else
2331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
2332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Change ADC state to error state */
2333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 4654              		.loc 2 2333 13
 4655 015e 7B68     		ldr	r3, [r7, #4]
 4656 0160 9B6D     		ldr	r3, [r3, #88]
 4657 0162 43F01002 		orr	r2, r3, #16
 4658 0166 7B68     		ldr	r3, [r7, #4]
 4659 0168 9A65     		str	r2, [r3, #88]
2334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Set ADC error code to ADC peripheral internal error */
2336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 4660              		.loc 2 2336 13
 4661 016a 7B68     		ldr	r3, [r7, #4]
 4662 016c DB6D     		ldr	r3, [r3, #92]
 4663 016e 43F00102 		orr	r2, r3, #1
 4664 0172 7B68     		ldr	r3, [r7, #4]
 4665 0174 DA65     		str	r2, [r3, #92]
 4666              	.L230:
2337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
2338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 250


2339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Conversion complete callback */
2343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: Into callback function "HAL_ADC_ConvCpltCallback()",             */
2344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       to determine if conversion has been triggered from EOC or EOS,   */
2345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       possibility to use:                                              */
2346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*        " if ( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) "               */
2347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
2349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
 4667              		.loc 2 2350 5
 4668 0176 7868     		ldr	r0, [r7, #4]
 4669 0178 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
2351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear regular group conversion flag */
2354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: in case of overrun set to ADC_OVR_DATA_PRESERVED, end of         */
2355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       conversion flags clear induces the release of the preserved data.*/
2356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       Therefore, if the preserved data value is needed, it must be     */
2357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       read preliminarily into HAL_ADC_ConvCpltCallback().              */
2358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
 4670              		.loc 2 2358 5
 4671 017c 7B68     		ldr	r3, [r7, #4]
 4672 017e 1B68     		ldr	r3, [r3]
 4673 0180 0C22     		movs	r2, #12
 4674 0182 1A60     		str	r2, [r3]
 4675              	.L228:
2359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ====== Check ADC group injected end of unitary conversion sequence conversions ===== */
2362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_JEOC) == ADC_FLAG_JEOC) && ((tmp_ier & ADC_IT_JEOC) == ADC_IT_JEOC)) ||
 4676              		.loc 2 2362 18
 4677 0184 FB69     		ldr	r3, [r7, #28]
 4678 0186 03F02003 		and	r3, r3, #32
 4679              		.loc 2 2362 6
 4680 018a 002B     		cmp	r3, #0
 4681 018c 04D0     		beq	.L239
 4682              		.loc 2 2362 66 discriminator 1
 4683 018e BB69     		ldr	r3, [r7, #24]
 4684 0190 03F02003 		and	r3, r3, #32
 4685              		.loc 2 2362 53 discriminator 1
 4686 0194 002B     		cmp	r3, #0
 4687 0196 0BD1     		bne	.L240
 4688              	.L239:
2363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 4689              		.loc 2 2363 18 discriminator 3
 4690 0198 FB69     		ldr	r3, [r7, #28]
 4691 019a 03F04003 		and	r3, r3, #64
2362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 4692              		.loc 2 2362 98 discriminator 3
 4693 019e 002B     		cmp	r3, #0
 4694 01a0 00F09F80 		beq	.L241
 4695              		.loc 2 2363 66
 4696 01a4 BB69     		ldr	r3, [r7, #24]
 4697 01a6 03F04003 		and	r3, r3, #64
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 251


 4698              		.loc 2 2363 53
 4699 01aa 002B     		cmp	r3, #0
 4700 01ac 00F09980 		beq	.L241
 4701              	.L240:
2364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
2366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 4702              		.loc 2 2366 14
 4703 01b0 7B68     		ldr	r3, [r7, #4]
 4704 01b2 9B6D     		ldr	r3, [r3, #88]
 4705              		.loc 2 2366 22
 4706 01b4 03F01003 		and	r3, r3, #16
 4707              		.loc 2 2366 8
 4708 01b8 002B     		cmp	r3, #0
 4709 01ba 05D1     		bne	.L242
2367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
2369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 4710              		.loc 2 2369 7
 4711 01bc 7B68     		ldr	r3, [r7, #4]
 4712 01be 9B6D     		ldr	r3, [r3, #88]
 4713 01c0 43F40052 		orr	r2, r3, #8192
 4714 01c4 7B68     		ldr	r3, [r7, #4]
 4715 01c6 9A65     		str	r2, [r3, #88]
 4716              	.L242:
2370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Retrieve ADC configuration */
2373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_inj_is_trigger_source_sw_start = LL_ADC_INJ_IsTriggerSourceSWStart(hadc->Instance);
 4717              		.loc 2 2373 46
 4718 01c8 7B68     		ldr	r3, [r7, #4]
 4719 01ca 1B68     		ldr	r3, [r3]
 4720 01cc 1846     		mov	r0, r3
 4721 01ce FFF7FEFF 		bl	LL_ADC_INJ_IsTriggerSourceSWStart
 4722 01d2 F860     		str	r0, [r7, #12]
2374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 4723              		.loc 2 2374 46
 4724 01d4 7B68     		ldr	r3, [r7, #4]
 4725 01d6 1B68     		ldr	r3, [r3]
 4726 01d8 1846     		mov	r0, r3
 4727 01da FFF7FEFF 		bl	LL_ADC_REG_IsTriggerSourceSWStart
 4728 01de B860     		str	r0, [r7, #8]
2375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Get relevant register CFGR in ADC instance of ADC master or slave  */
2376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* in function of multimode state (for devices with multimode         */
2377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* available).                                                        */
2378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 4729              		.loc 2 2379 10
 4730 01e0 7B68     		ldr	r3, [r7, #4]
 4731 01e2 1B68     		ldr	r3, [r3]
 4732 01e4 114A     		ldr	r2, .L263+4
 4733 01e6 9342     		cmp	r3, r2
 4734 01e8 02D0     		beq	.L243
 4735              		.loc 2 2379 10 is_stmt 0 discriminator 1
 4736 01ea 7B68     		ldr	r3, [r7, #4]
 4737 01ec 1B68     		ldr	r3, [r3]
 4738 01ee 00E0     		b	.L244
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 252


 4739              	.L243:
 4740              		.loc 2 2379 10 discriminator 2
 4741 01f0 0F4B     		ldr	r3, .L263+8
 4742              	.L244:
 4743              		.loc 2 2379 64 is_stmt 1 discriminator 4
 4744 01f2 7A68     		ldr	r2, [r7, #4]
 4745 01f4 1268     		ldr	r2, [r2]
 4746              		.loc 2 2379 8 discriminator 4
 4747 01f6 9342     		cmp	r3, r2
 4748 01f8 08D0     		beq	.L245
2380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4749              		.loc 2 2380 9
 4750 01fa 7B69     		ldr	r3, [r7, #20]
 4751 01fc 002B     		cmp	r3, #0
 4752 01fe 05D0     		beq	.L245
2381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 4753              		.loc 2 2381 9
 4754 0200 7B69     		ldr	r3, [r7, #20]
 4755 0202 062B     		cmp	r3, #6
 4756 0204 02D0     		beq	.L245
2382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 4757              		.loc 2 2382 9
 4758 0206 7B69     		ldr	r3, [r7, #20]
 4759 0208 072B     		cmp	r3, #7
 4760 020a 04D1     		bne	.L246
 4761              	.L245:
2383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
2384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 4762              		.loc 2 2385 18
 4763 020c 7B68     		ldr	r3, [r7, #4]
 4764 020e 1B68     		ldr	r3, [r3]
 4765              		.loc 2 2385 16
 4766 0210 DB68     		ldr	r3, [r3, #12]
 4767 0212 3B62     		str	r3, [r7, #32]
 4768 0214 13E0     		b	.L247
 4769              	.L246:
2386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
2388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
 4770              		.loc 2 2389 23
 4771 0216 7B68     		ldr	r3, [r7, #4]
 4772 0218 1B68     		ldr	r3, [r3]
 4773 021a 044A     		ldr	r2, .L263+4
 4774 021c 9342     		cmp	r3, r2
 4775 021e 09D0     		beq	.L248
 4776              		.loc 2 2389 23 is_stmt 0 discriminator 1
 4777 0220 7B68     		ldr	r3, [r7, #4]
 4778 0222 1B68     		ldr	r3, [r3]
 4779 0224 07E0     		b	.L249
 4780              	.L264:
 4781 0226 00BF     		.align	2
 4782              	.L263:
 4783 0228 00030450 		.word	1342440192
 4784 022c 00010450 		.word	1342439680
 4785 0230 00000450 		.word	1342439424
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 253


 4786              	.L248:
 4787              		.loc 2 2389 23 discriminator 2
 4788 0234 7D4B     		ldr	r3, .L265
 4789              	.L249:
 4790              		.loc 2 2389 21 is_stmt 1 discriminator 4
 4791 0236 3B61     		str	r3, [r7, #16]
2390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 4792              		.loc 2 2390 16 discriminator 4
 4793 0238 3B69     		ldr	r3, [r7, #16]
 4794 023a DB68     		ldr	r3, [r3, #12]
 4795 023c 3B62     		str	r3, [r7, #32]
 4796              	.L247:
2391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable interruption if no further conversion upcoming by injected     */
2397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* external trigger or by automatic injected conversion with regular      */
2398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* group having no further conversion upcoming (same conditions as        */
2399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* regular group interruption disabling above),                           */
2400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* and if injected scan sequence is completed.                            */
2401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_adc_inj_is_trigger_source_sw_start != 0UL)
 4797              		.loc 2 2401 8
 4798 023e FB68     		ldr	r3, [r7, #12]
 4799 0240 002B     		cmp	r3, #0
 4800 0242 47D0     		beq	.L250
2402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL) ||
 4801              		.loc 2 2403 12
 4802 0244 3B6A     		ldr	r3, [r7, #32]
 4803 0246 03F00073 		and	r3, r3, #33554432
 4804              		.loc 2 2403 10
 4805 024a 002B     		cmp	r3, #0
 4806 024c 07D0     		beq	.L251
 4807              		.loc 2 2403 55 discriminator 1
 4808 024e BB68     		ldr	r3, [r7, #8]
 4809 0250 002B     		cmp	r3, #0
 4810 0252 3FD0     		beq	.L250
2404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
2405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL)))
 4811              		.loc 2 2405 13
 4812 0254 3B6A     		ldr	r3, [r7, #32]
 4813 0256 03F40053 		and	r3, r3, #8192
2404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
 4814              		.loc 2 2404 60
 4815 025a 002B     		cmp	r3, #0
 4816 025c 3AD1     		bne	.L250
 4817              	.L251:
2406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* If End of Sequence is reached, disable interrupts */
2408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
 4818              		.loc 2 2408 13
 4819 025e 7B68     		ldr	r3, [r7, #4]
 4820 0260 1B68     		ldr	r3, [r3]
 4821 0262 1B68     		ldr	r3, [r3]
 4822 0264 03F04003 		and	r3, r3, #64
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 254


 4823              		.loc 2 2408 12
 4824 0268 402B     		cmp	r3, #64
 4825 026a 33D1     		bne	.L250
2409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Particular case if injected contexts queue is enabled:             */
2411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* when the last context has been fully processed, JSQR is reset      */
2412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* by the hardware. Even if no injected conversion is planned to come */
2413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* (queue empty, triggers are ignored), it can start again            */
2414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* immediately after setting a new context (JADSTART is still set).   */
2415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Therefore, state of HAL ADC injected group is kept to busy.        */
2416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           if (READ_BIT(tmp_cfgr, ADC_CFGR_JQM) == 0UL)
 4826              		.loc 2 2416 15
 4827 026c 3B6A     		ldr	r3, [r7, #32]
 4828 026e 03F40013 		and	r3, r3, #2097152
 4829              		.loc 2 2416 14
 4830 0272 002B     		cmp	r3, #0
 4831 0274 2ED1     		bne	.L250
2417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
2418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Allowed to modify bits ADC_IT_JEOC/ADC_IT_JEOS only if bit       */
2419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* JADSTART==0 (no conversion on going)                             */
2420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 4832              		.loc 2 2420 17
 4833 0276 7B68     		ldr	r3, [r7, #4]
 4834 0278 1B68     		ldr	r3, [r3]
 4835 027a 1846     		mov	r0, r3
 4836 027c FFF7FEFF 		bl	LL_ADC_INJ_IsConversionOngoing
 4837 0280 0346     		mov	r3, r0
 4838              		.loc 2 2420 16
 4839 0282 002B     		cmp	r3, #0
 4840 0284 1AD1     		bne	.L252
2421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
2422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               /* Disable ADC end of sequence conversion interrupt  */
2423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC | ADC_IT_JEOS);
 4841              		.loc 2 2423 15
 4842 0286 7B68     		ldr	r3, [r7, #4]
 4843 0288 1B68     		ldr	r3, [r3]
 4844 028a 5A68     		ldr	r2, [r3, #4]
 4845 028c 7B68     		ldr	r3, [r7, #4]
 4846 028e 1B68     		ldr	r3, [r3]
 4847 0290 22F06002 		bic	r2, r2, #96
 4848 0294 5A60     		str	r2, [r3, #4]
2424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               /* Set ADC state */
2426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 4849              		.loc 2 2426 15
 4850 0296 7B68     		ldr	r3, [r7, #4]
 4851 0298 9B6D     		ldr	r3, [r3, #88]
 4852 029a 23F48052 		bic	r2, r3, #4096
 4853 029e 7B68     		ldr	r3, [r7, #4]
 4854 02a0 9A65     		str	r2, [r3, #88]
2427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               if ((hadc->State & HAL_ADC_STATE_REG_BUSY) == 0UL)
 4855              		.loc 2 2428 24
 4856 02a2 7B68     		ldr	r3, [r7, #4]
 4857 02a4 9B6D     		ldr	r3, [r3, #88]
 4858              		.loc 2 2428 32
 4859 02a6 03F48073 		and	r3, r3, #256
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 255


 4860              		.loc 2 2428 18
 4861 02aa 002B     		cmp	r3, #0
 4862 02ac 12D1     		bne	.L250
2429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               {
2430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 4863              		.loc 2 2430 17
 4864 02ae 7B68     		ldr	r3, [r7, #4]
 4865 02b0 9B6D     		ldr	r3, [r3, #88]
 4866 02b2 43F00102 		orr	r2, r3, #1
 4867 02b6 7B68     		ldr	r3, [r7, #4]
 4868 02b8 9A65     		str	r2, [r3, #88]
 4869 02ba 0BE0     		b	.L250
 4870              	.L252:
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               }
2432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             }
2433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             else
2434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
2435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               /* Update ADC state machine to error */
2436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 4871              		.loc 2 2436 15
 4872 02bc 7B68     		ldr	r3, [r7, #4]
 4873 02be 9B6D     		ldr	r3, [r3, #88]
 4874 02c0 43F01002 		orr	r2, r3, #16
 4875 02c4 7B68     		ldr	r3, [r7, #4]
 4876 02c6 9A65     		str	r2, [r3, #88]
2437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               /* Set ADC error code to ADC peripheral internal error */
2439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 4877              		.loc 2 2439 15
 4878 02c8 7B68     		ldr	r3, [r7, #4]
 4879 02ca DB6D     		ldr	r3, [r3, #92]
 4880 02cc 43F00102 		orr	r2, r3, #1
 4881 02d0 7B68     		ldr	r3, [r7, #4]
 4882 02d2 DA65     		str	r2, [r3, #92]
 4883              	.L250:
2440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             }
2441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
2442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Injected Conversion complete callback */
2447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note:  HAL_ADCEx_InjectedConvCpltCallback can resort to
2448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               if (__HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOS)) or
2449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               if (__HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOC)) to determine whether
2450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               interruption has been triggered by end of conversion or end of
2451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               sequence.    */
2452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->InjectedConvCpltCallback(hadc);
2454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADCEx_InjectedConvCpltCallback(hadc);
 4884              		.loc 2 2455 5
 4885 02d4 7868     		ldr	r0, [r7, #4]
 4886 02d6 FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
2456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear injected group conversion flag */
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 256


2459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC | ADC_FLAG_JEOS);
 4887              		.loc 2 2459 5
 4888 02da 7B68     		ldr	r3, [r7, #4]
 4889 02dc 1B68     		ldr	r3, [r3]
 4890 02de 6022     		movs	r2, #96
 4891 02e0 1A60     		str	r2, [r3]
 4892              	.L241:
2460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check Analog watchdog 1 flag ========== */
2463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD1) == ADC_FLAG_AWD1) && ((tmp_ier & ADC_IT_AWD1) == ADC_IT_AWD1))
 4893              		.loc 2 2463 17
 4894 02e2 FB69     		ldr	r3, [r7, #28]
 4895 02e4 03F08003 		and	r3, r3, #128
 4896              		.loc 2 2463 6
 4897 02e8 002B     		cmp	r3, #0
 4898 02ea 11D0     		beq	.L253
 4899              		.loc 2 2463 65 discriminator 1
 4900 02ec BB69     		ldr	r3, [r7, #24]
 4901 02ee 03F08003 		and	r3, r3, #128
 4902              		.loc 2 2463 52 discriminator 1
 4903 02f2 002B     		cmp	r3, #0
 4904 02f4 0CD0     		beq	.L253
2464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
2466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 4905              		.loc 2 2466 5
 4906 02f6 7B68     		ldr	r3, [r7, #4]
 4907 02f8 9B6D     		ldr	r3, [r3, #88]
 4908 02fa 43F48032 		orr	r2, r3, #65536
 4909 02fe 7B68     		ldr	r3, [r7, #4]
 4910 0300 9A65     		str	r2, [r3, #88]
2467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Level out of window 1 callback */
2469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback(hadc);
2471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
 4911              		.loc 2 2472 5
 4912 0302 7868     		ldr	r0, [r7, #4]
 4913 0304 FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
2473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
 4914              		.loc 2 2476 5
 4915 0308 7B68     		ldr	r3, [r7, #4]
 4916 030a 1B68     		ldr	r3, [r3]
 4917 030c 8022     		movs	r2, #128
 4918 030e 1A60     		str	r2, [r3]
 4919              	.L253:
2477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check analog watchdog 2 flag ========== */
2480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD2) == ADC_FLAG_AWD2) && ((tmp_ier & ADC_IT_AWD2) == ADC_IT_AWD2))
 4920              		.loc 2 2480 17
 4921 0310 FB69     		ldr	r3, [r7, #28]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 257


 4922 0312 03F48073 		and	r3, r3, #256
 4923              		.loc 2 2480 6
 4924 0316 002B     		cmp	r3, #0
 4925 0318 12D0     		beq	.L254
 4926              		.loc 2 2480 65 discriminator 1
 4927 031a BB69     		ldr	r3, [r7, #24]
 4928 031c 03F48073 		and	r3, r3, #256
 4929              		.loc 2 2480 52 discriminator 1
 4930 0320 002B     		cmp	r3, #0
 4931 0322 0DD0     		beq	.L254
2481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
2483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
 4932              		.loc 2 2483 5
 4933 0324 7B68     		ldr	r3, [r7, #4]
 4934 0326 9B6D     		ldr	r3, [r3, #88]
 4935 0328 43F40032 		orr	r2, r3, #131072
 4936 032c 7B68     		ldr	r3, [r7, #4]
 4937 032e 9A65     		str	r2, [r3, #88]
2484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Level out of window 2 callback */
2486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback(hadc);
2488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow2Callback(hadc);
 4938              		.loc 2 2489 5
 4939 0330 7868     		ldr	r0, [r7, #4]
 4940 0332 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow2Callback
2490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
 4941              		.loc 2 2493 5
 4942 0336 7B68     		ldr	r3, [r7, #4]
 4943 0338 1B68     		ldr	r3, [r3]
 4944 033a 4FF48072 		mov	r2, #256
 4945 033e 1A60     		str	r2, [r3]
 4946              	.L254:
2494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check analog watchdog 3 flag ========== */
2497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD3) == ADC_FLAG_AWD3) && ((tmp_ier & ADC_IT_AWD3) == ADC_IT_AWD3))
 4947              		.loc 2 2497 17
 4948 0340 FB69     		ldr	r3, [r7, #28]
 4949 0342 03F40073 		and	r3, r3, #512
 4950              		.loc 2 2497 6
 4951 0346 002B     		cmp	r3, #0
 4952 0348 12D0     		beq	.L255
 4953              		.loc 2 2497 65 discriminator 1
 4954 034a BB69     		ldr	r3, [r7, #24]
 4955 034c 03F40073 		and	r3, r3, #512
 4956              		.loc 2 2497 52 discriminator 1
 4957 0350 002B     		cmp	r3, #0
 4958 0352 0DD0     		beq	.L255
2498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
2500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 258


 4959              		.loc 2 2500 5
 4960 0354 7B68     		ldr	r3, [r7, #4]
 4961 0356 9B6D     		ldr	r3, [r3, #88]
 4962 0358 43F48022 		orr	r2, r3, #262144
 4963 035c 7B68     		ldr	r3, [r7, #4]
 4964 035e 9A65     		str	r2, [r3, #88]
2501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Level out of window 3 callback */
2503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback(hadc);
2505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow3Callback(hadc);
 4965              		.loc 2 2506 5
 4966 0360 7868     		ldr	r0, [r7, #4]
 4967 0362 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow3Callback
2507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
 4968              		.loc 2 2510 5
 4969 0366 7B68     		ldr	r3, [r7, #4]
 4970 0368 1B68     		ldr	r3, [r3]
 4971 036a 4FF40072 		mov	r2, #512
 4972 036e 1A60     		str	r2, [r3]
 4973              	.L255:
2511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check Overrun flag ========== */
2514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_OVR) == ADC_FLAG_OVR) && ((tmp_ier & ADC_IT_OVR) == ADC_IT_OVR))
 4974              		.loc 2 2514 17
 4975 0370 FB69     		ldr	r3, [r7, #28]
 4976 0372 03F01003 		and	r3, r3, #16
 4977              		.loc 2 2514 6
 4978 0376 002B     		cmp	r3, #0
 4979 0378 36D0     		beq	.L256
 4980              		.loc 2 2514 63 discriminator 1
 4981 037a BB69     		ldr	r3, [r7, #24]
 4982 037c 03F01003 		and	r3, r3, #16
 4983              		.loc 2 2514 50 discriminator 1
 4984 0380 002B     		cmp	r3, #0
 4985 0382 31D0     		beq	.L256
2515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* If overrun is set to overwrite previous data (default setting),        */
2517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* overrun event is not considered as an error.                           */
2518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
2519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* overrun ")                                                             */
2520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Exception for usage with DMA overrun event always considered as an     */
2521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* error.                                                                 */
2522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
 4986              		.loc 2 2522 19
 4987 0384 7B68     		ldr	r3, [r7, #4]
 4988 0386 5B6B     		ldr	r3, [r3, #52]
 4989              		.loc 2 2522 8
 4990 0388 002B     		cmp	r3, #0
 4991 038a 02D1     		bne	.L257
2523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       overrun_error = 1UL;
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 259


 4992              		.loc 2 2524 21
 4993 038c 0123     		movs	r3, #1
 4994 038e 7B62     		str	r3, [r7, #36]
 4995 0390 14E0     		b	.L258
 4996              	.L257:
2525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
2527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check DMA configuration */
2529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (tmp_multimode_config != LL_ADC_MULTI_INDEPENDENT)
 4997              		.loc 2 2530 10
 4998 0392 7B69     		ldr	r3, [r7, #20]
 4999 0394 002B     		cmp	r3, #0
 5000 0396 08D0     		beq	.L259
2531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Multimode (when feature is available) is enabled,
2533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            Common Control Register MDMA bits must be checked. */
2534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (LL_ADC_GetMultiDMATransfer(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) != LL_ADC_MULTI_RE
 5001              		.loc 2 2534 13
 5002 0398 2548     		ldr	r0, .L265+4
 5003 039a FFF7FEFF 		bl	LL_ADC_GetMultiDMATransfer
 5004 039e 0346     		mov	r3, r0
 5005              		.loc 2 2534 12
 5006 03a0 002B     		cmp	r3, #0
 5007 03a2 0BD0     		beq	.L258
2535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           overrun_error = 1UL;
 5008              		.loc 2 2536 25
 5009 03a4 0123     		movs	r3, #1
 5010 03a6 7B62     		str	r3, [r7, #36]
 5011 03a8 08E0     		b	.L258
 5012              	.L259:
2537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Multimode not set or feature not available or ADC independent */
2543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((hadc->Instance->CFGR & ADC_CFGR_DMAEN) != 0UL)
 5013              		.loc 2 2543 18
 5014 03aa 7B68     		ldr	r3, [r7, #4]
 5015 03ac 1B68     		ldr	r3, [r3]
 5016              		.loc 2 2543 28
 5017 03ae DB68     		ldr	r3, [r3, #12]
 5018              		.loc 2 2543 35
 5019 03b0 03F00103 		and	r3, r3, #1
 5020              		.loc 2 2543 12
 5021 03b4 002B     		cmp	r3, #0
 5022 03b6 01D0     		beq	.L258
2544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           overrun_error = 1UL;
 5023              		.loc 2 2545 25
 5024 03b8 0123     		movs	r3, #1
 5025 03ba 7B62     		str	r3, [r7, #36]
 5026              	.L258:
2546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 260


2547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (overrun_error == 1UL)
 5027              		.loc 2 2550 8
 5028 03bc 7B6A     		ldr	r3, [r7, #36]
 5029 03be 012B     		cmp	r3, #1
 5030 03c0 0ED1     		bne	.L260
2551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Change ADC state to error state */
2553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
 5031              		.loc 2 2553 7
 5032 03c2 7B68     		ldr	r3, [r7, #4]
 5033 03c4 9B6D     		ldr	r3, [r3, #88]
 5034 03c6 43F48062 		orr	r2, r3, #1024
 5035 03ca 7B68     		ldr	r3, [r7, #4]
 5036 03cc 9A65     		str	r2, [r3, #88]
2554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code to overrun */
2556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 5037              		.loc 2 2556 7
 5038 03ce 7B68     		ldr	r3, [r7, #4]
 5039 03d0 DB6D     		ldr	r3, [r3, #92]
 5040 03d2 43F00202 		orr	r2, r3, #2
 5041 03d6 7B68     		ldr	r3, [r7, #4]
 5042 03d8 DA65     		str	r2, [r3, #92]
2557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Error callback */
2559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Note: In case of overrun, ADC conversion data is preserved until     */
2560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       flag OVR is reset.                                             */
2561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       Therefore, old ADC conversion data can be retrieved in         */
2562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       function "HAL_ADC_ErrorCallback()".                            */
2563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
 5043              		.loc 2 2566 7
 5044 03da 7868     		ldr	r0, [r7, #4]
 5045 03dc FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 5046              	.L260:
2567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC overrun flag */
2571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 5047              		.loc 2 2571 5
 5048 03e0 7B68     		ldr	r3, [r7, #4]
 5049 03e2 1B68     		ldr	r3, [r3]
 5050 03e4 1022     		movs	r2, #16
 5051 03e6 1A60     		str	r2, [r3]
 5052              	.L256:
2572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check Injected context queue overflow flag ========== */
2575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_JQOVF) == ADC_FLAG_JQOVF) && ((tmp_ier & ADC_IT_JQOVF) == ADC_IT_JQOVF))
 5053              		.loc 2 2575 17
 5054 03e8 FB69     		ldr	r3, [r7, #28]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 261


 5055 03ea 03F48063 		and	r3, r3, #1024
 5056              		.loc 2 2575 6
 5057 03ee 002B     		cmp	r3, #0
 5058 03f0 18D0     		beq	.L262
 5059              		.loc 2 2575 67 discriminator 1
 5060 03f2 BB69     		ldr	r3, [r7, #24]
 5061 03f4 03F48063 		and	r3, r3, #1024
 5062              		.loc 2 2575 54 discriminator 1
 5063 03f8 002B     		cmp	r3, #0
 5064 03fa 13D0     		beq	.L262
2576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Change ADC state to overrun state */
2578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
 5065              		.loc 2 2578 5
 5066 03fc 7B68     		ldr	r3, [r7, #4]
 5067 03fe 9B6D     		ldr	r3, [r3, #88]
 5068 0400 43F48042 		orr	r2, r3, #16384
 5069 0404 7B68     		ldr	r3, [r7, #4]
 5070 0406 9A65     		str	r2, [r3, #88]
2579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC error code to Injected context queue overflow */
2581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
 5071              		.loc 2 2581 5
 5072 0408 7B68     		ldr	r3, [r7, #4]
 5073 040a DB6D     		ldr	r3, [r3, #92]
 5074 040c 43F00802 		orr	r2, r3, #8
 5075 0410 7B68     		ldr	r3, [r7, #4]
 5076 0412 DA65     		str	r2, [r3, #92]
2582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear the Injected context queue overflow flag */
2584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
 5077              		.loc 2 2584 5
 5078 0414 7B68     		ldr	r3, [r7, #4]
 5079 0416 1B68     		ldr	r3, [r3]
 5080 0418 4FF48062 		mov	r2, #1024
 5081 041c 1A60     		str	r2, [r3]
2585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Injected context queue overflow callback */
2587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback(hadc);
2589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADCEx_InjectedQueueOverflowCallback(hadc);
 5082              		.loc 2 2590 5
 5083 041e 7868     		ldr	r0, [r7, #4]
 5084 0420 FFF7FEFF 		bl	HAL_ADCEx_InjectedQueueOverflowCallback
 5085              	.L262:
2591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 5086              		.loc 2 2594 1
 5087 0424 00BF     		nop
 5088 0426 2837     		adds	r7, r7, #40
 5089              		.cfi_def_cfa_offset 8
 5090 0428 BD46     		mov	sp, r7
 5091              		.cfi_def_cfa_register 13
 5092              		@ sp needed
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 262


 5093 042a 80BD     		pop	{r7, pc}
 5094              	.L266:
 5095              		.align	2
 5096              	.L265:
 5097 042c 00000450 		.word	1342439424
 5098 0430 00030450 		.word	1342440192
 5099              		.cfi_endproc
 5100              	.LFE334:
 5102              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 5103              		.align	1
 5104              		.weak	HAL_ADC_ConvCpltCallback
 5105              		.syntax unified
 5106              		.thumb
 5107              		.thumb_func
 5109              	HAL_ADC_ConvCpltCallback:
 5110              	.LFB335:
2595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Conversion complete callback in non-blocking mode.
2598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
2600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
2602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 5111              		.loc 2 2602 1
 5112              		.cfi_startproc
 5113              		@ args = 0, pretend = 0, frame = 8
 5114              		@ frame_needed = 1, uses_anonymous_args = 0
 5115              		@ link register save eliminated.
 5116 0000 80B4     		push	{r7}
 5117              		.cfi_def_cfa_offset 4
 5118              		.cfi_offset 7, -4
 5119 0002 83B0     		sub	sp, sp, #12
 5120              		.cfi_def_cfa_offset 16
 5121 0004 00AF     		add	r7, sp, #0
 5122              		.cfi_def_cfa_register 7
 5123 0006 7860     		str	r0, [r7, #4]
2603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
2605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
2608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****    */
2609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 5124              		.loc 2 2609 1
 5125 0008 00BF     		nop
 5126 000a 0C37     		adds	r7, r7, #12
 5127              		.cfi_def_cfa_offset 4
 5128 000c BD46     		mov	sp, r7
 5129              		.cfi_def_cfa_register 13
 5130              		@ sp needed
 5131 000e 5DF8047B 		ldr	r7, [sp], #4
 5132              		.cfi_restore 7
 5133              		.cfi_def_cfa_offset 0
 5134 0012 7047     		bx	lr
 5135              		.cfi_endproc
 5136              	.LFE335:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 263


 5138              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 5139              		.align	1
 5140              		.weak	HAL_ADC_ConvHalfCpltCallback
 5141              		.syntax unified
 5142              		.thumb
 5143              		.thumb_func
 5145              	HAL_ADC_ConvHalfCpltCallback:
 5146              	.LFB336:
2610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non-blocking mode.
2613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
2615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
2617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 5147              		.loc 2 2617 1
 5148              		.cfi_startproc
 5149              		@ args = 0, pretend = 0, frame = 8
 5150              		@ frame_needed = 1, uses_anonymous_args = 0
 5151              		@ link register save eliminated.
 5152 0000 80B4     		push	{r7}
 5153              		.cfi_def_cfa_offset 4
 5154              		.cfi_offset 7, -4
 5155 0002 83B0     		sub	sp, sp, #12
 5156              		.cfi_def_cfa_offset 16
 5157 0004 00AF     		add	r7, sp, #0
 5158              		.cfi_def_cfa_register 7
 5159 0006 7860     		str	r0, [r7, #4]
2618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
2620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
2623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 5160              		.loc 2 2624 1
 5161 0008 00BF     		nop
 5162 000a 0C37     		adds	r7, r7, #12
 5163              		.cfi_def_cfa_offset 4
 5164 000c BD46     		mov	sp, r7
 5165              		.cfi_def_cfa_register 13
 5166              		@ sp needed
 5167 000e 5DF8047B 		ldr	r7, [sp], #4
 5168              		.cfi_restore 7
 5169              		.cfi_def_cfa_offset 0
 5170 0012 7047     		bx	lr
 5171              		.cfi_endproc
 5172              	.LFE336:
 5174              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 5175              		.align	1
 5176              		.weak	HAL_ADC_LevelOutOfWindowCallback
 5177              		.syntax unified
 5178              		.thumb
 5179              		.thumb_func
 5181              	HAL_ADC_LevelOutOfWindowCallback:
 5182              	.LFB337:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 264


2625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Analog watchdog 1 callback in non-blocking mode.
2628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
2630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef *hadc)
2632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 5183              		.loc 2 2632 1
 5184              		.cfi_startproc
 5185              		@ args = 0, pretend = 0, frame = 8
 5186              		@ frame_needed = 1, uses_anonymous_args = 0
 5187              		@ link register save eliminated.
 5188 0000 80B4     		push	{r7}
 5189              		.cfi_def_cfa_offset 4
 5190              		.cfi_offset 7, -4
 5191 0002 83B0     		sub	sp, sp, #12
 5192              		.cfi_def_cfa_offset 16
 5193 0004 00AF     		add	r7, sp, #0
 5194              		.cfi_def_cfa_register 7
 5195 0006 7860     		str	r0, [r7, #4]
2633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
2635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
2638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 5196              		.loc 2 2639 1
 5197 0008 00BF     		nop
 5198 000a 0C37     		adds	r7, r7, #12
 5199              		.cfi_def_cfa_offset 4
 5200 000c BD46     		mov	sp, r7
 5201              		.cfi_def_cfa_register 13
 5202              		@ sp needed
 5203 000e 5DF8047B 		ldr	r7, [sp], #4
 5204              		.cfi_restore 7
 5205              		.cfi_def_cfa_offset 0
 5206 0012 7047     		bx	lr
 5207              		.cfi_endproc
 5208              	.LFE337:
 5210              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 5211              		.align	1
 5212              		.weak	HAL_ADC_ErrorCallback
 5213              		.syntax unified
 5214              		.thumb
 5215              		.thumb_func
 5217              	HAL_ADC_ErrorCallback:
 5218              	.LFB338:
2640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  ADC error callback in non-blocking mode
2643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (ADC conversion with interruption or transfer by DMA).
2644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer
2645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (HAL ADC handle parameter "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
2646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
2647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 265


2648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
2649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
2650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
2652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
2654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 5219              		.loc 2 2654 1
 5220              		.cfi_startproc
 5221              		@ args = 0, pretend = 0, frame = 8
 5222              		@ frame_needed = 1, uses_anonymous_args = 0
 5223              		@ link register save eliminated.
 5224 0000 80B4     		push	{r7}
 5225              		.cfi_def_cfa_offset 4
 5226              		.cfi_offset 7, -4
 5227 0002 83B0     		sub	sp, sp, #12
 5228              		.cfi_def_cfa_offset 16
 5229 0004 00AF     		add	r7, sp, #0
 5230              		.cfi_def_cfa_register 7
 5231 0006 7860     		str	r0, [r7, #4]
2655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
2657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
2660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 5232              		.loc 2 2661 1
 5233 0008 00BF     		nop
 5234 000a 0C37     		adds	r7, r7, #12
 5235              		.cfi_def_cfa_offset 4
 5236 000c BD46     		mov	sp, r7
 5237              		.cfi_def_cfa_register 13
 5238              		@ sp needed
 5239 000e 5DF8047B 		ldr	r7, [sp], #4
 5240              		.cfi_restore 7
 5241              		.cfi_def_cfa_offset 0
 5242 0012 7047     		bx	lr
 5243              		.cfi_endproc
 5244              	.LFE338:
 5246              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 5247              		.align	1
 5248              		.global	HAL_ADC_ConfigChannel
 5249              		.syntax unified
 5250              		.thumb
 5251              		.thumb_func
 5253              	HAL_ADC_ConfigChannel:
 5254              	.LFB339:
2662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
2665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
2668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief    Peripheral Control functions
2669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
2670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @verbatim
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 266


2671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
2672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              ##### Peripheral Control functions #####
2673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
2674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
2675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Configure channels on regular group
2676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Configure the analog watchdog
2677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @endverbatim
2679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
2680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Configure a channel to be assigned to ADC group regular.
2684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
2685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
2686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         These internal paths can be disabled using function
2687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         HAL_ADC_DeInit().
2688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         This function initializes channel into ADC group regular,
2690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         following calls to this function can be used to reconfigure
2691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         some parameters of structure "ADC_ChannelConfTypeDef" on the fly,
2692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         without resetting the ADC.
2693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state:
2694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Refer to comments of structure "ADC_ChannelConfTypeDef".
2695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param sConfig Structure of ADC channel assigned to ADC group regular.
2697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
2698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
2700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 5255              		.loc 2 2700 1
 5256              		.cfi_startproc
 5257              		@ args = 0, pretend = 0, frame = 216
 5258              		@ frame_needed = 1, uses_anonymous_args = 0
 5259 0000 80B5     		push	{r7, lr}
 5260              		.cfi_def_cfa_offset 8
 5261              		.cfi_offset 7, -8
 5262              		.cfi_offset 14, -4
 5263 0002 B6B0     		sub	sp, sp, #216
 5264              		.cfi_def_cfa_offset 224
 5265 0004 00AF     		add	r7, sp, #0
 5266              		.cfi_def_cfa_register 7
 5267 0006 7860     		str	r0, [r7, #4]
 5268 0008 3960     		str	r1, [r7]
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 5269              		.loc 2 2701 21
 5270 000a 0023     		movs	r3, #0
 5271 000c 87F8D730 		strb	r3, [r7, #215]
2702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
2703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
2704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 5272              		.loc 2 2704 17
 5273 0010 0023     		movs	r3, #0
 5274 0012 FB60     		str	r3, [r7, #12]
2705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
2706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
2707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 267


2708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
2711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
2712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
2713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
2714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
2715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* if ROVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
2717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ignored (considered as reset) */
2718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(!((sConfig->OffsetNumber != ADC_OFFSET_NONE) && (hadc->Init.OversamplingMode == ENAB
2719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verification of channel number */
2721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
2722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(hadc, sConfig->Channel));
2724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
2726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_DIFF_CHANNEL(hadc, sConfig->Channel));
2728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
2731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 5275              		.loc 2 2731 3
 5276 0014 7B68     		ldr	r3, [r7, #4]
 5277 0016 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 5278 001a 012B     		cmp	r3, #1
 5279 001c 01D1     		bne	.L272
 5280              		.loc 2 2731 3 is_stmt 0 discriminator 1
 5281 001e 0223     		movs	r3, #2
 5282 0020 D3E3     		b	.L273
 5283              	.L272:
 5284              		.loc 2 2731 3 discriminator 2
 5285 0022 7B68     		ldr	r3, [r7, #4]
 5286 0024 0122     		movs	r2, #1
 5287 0026 83F85420 		strb	r2, [r3, #84]
2732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* conversion on going on regular group:                                    */
2736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*  - Channel number                                                        */
2737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*  - Channel rank                                                          */
2738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 5288              		.loc 2 2738 7 is_stmt 1 discriminator 2
 5289 002a 7B68     		ldr	r3, [r7, #4]
 5290 002c 1B68     		ldr	r3, [r3]
 5291 002e 1846     		mov	r0, r3
 5292 0030 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 5293 0034 0346     		mov	r3, r0
 5294              		.loc 2 2738 6 discriminator 2
 5295 0036 002B     		cmp	r3, #0
 5296 0038 40F0B883 		bne	.L274
2739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if !defined (USE_FULL_ASSERT)
2741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Correspondence for compatibility with legacy definition of             */
2742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* sequencer ranks in direct number format. This correspondence can       */
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 268


2743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* be done only on ranks 1 to 5 due to literal values.                    */
2744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: Sequencer ranks in direct number format are no more used         */
2745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       and are detected by activating USE_FULL_ASSERT feature.          */
2746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (sConfig->Rank <= 5U)
 5297              		.loc 2 2746 16
 5298 003c 3B68     		ldr	r3, [r7]
 5299 003e 5B68     		ldr	r3, [r3, #4]
 5300              		.loc 2 2746 8
 5301 0040 052B     		cmp	r3, #5
 5302 0042 24D8     		bhi	.L275
2747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       switch (sConfig->Rank)
 5303              		.loc 2 2748 22
 5304 0044 3B68     		ldr	r3, [r7]
 5305 0046 5B68     		ldr	r3, [r3, #4]
 5306              		.loc 2 2748 7
 5307 0048 023B     		subs	r3, r3, #2
 5308 004a 032B     		cmp	r3, #3
 5309 004c 1BD8     		bhi	.L276
 5310 004e 01A2     		adr	r2, .L278
 5311 0050 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5312              		.p2align 2
 5313              	.L278:
 5314 0054 65000000 		.word	.L281+1
 5315 0058 6D000000 		.word	.L280+1
 5316 005c 75000000 		.word	.L279+1
 5317 0060 7D000000 		.word	.L277+1
 5318              		.p2align 1
 5319              	.L281:
2749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case 2U:
2751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           sConfig->Rank = ADC_REGULAR_RANK_2;
 5320              		.loc 2 2751 25
 5321 0064 3B68     		ldr	r3, [r7]
 5322 0066 0C22     		movs	r2, #12
 5323 0068 5A60     		str	r2, [r3, #4]
2752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 5324              		.loc 2 2752 11
 5325 006a 10E0     		b	.L275
 5326              	.L280:
2753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case 3U:
2754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           sConfig->Rank = ADC_REGULAR_RANK_3;
 5327              		.loc 2 2754 25
 5328 006c 3B68     		ldr	r3, [r7]
 5329 006e 1222     		movs	r2, #18
 5330 0070 5A60     		str	r2, [r3, #4]
2755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 5331              		.loc 2 2755 11
 5332 0072 0CE0     		b	.L275
 5333              	.L279:
2756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case 4U:
2757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           sConfig->Rank = ADC_REGULAR_RANK_4;
 5334              		.loc 2 2757 25
 5335 0074 3B68     		ldr	r3, [r7]
 5336 0076 1822     		movs	r2, #24
 5337 0078 5A60     		str	r2, [r3, #4]
2758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 269


 5338              		.loc 2 2758 11
 5339 007a 08E0     		b	.L275
 5340              	.L277:
2759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case 5U:
2760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           sConfig->Rank = ADC_REGULAR_RANK_5;
 5341              		.loc 2 2760 25
 5342 007c 3B68     		ldr	r3, [r7]
 5343 007e 4FF48072 		mov	r2, #256
 5344 0082 5A60     		str	r2, [r3, #4]
2761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 5345              		.loc 2 2761 11
 5346 0084 03E0     		b	.L275
 5347              	.L276:
2762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* case 1U */
2763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         default:
2764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           sConfig->Rank = ADC_REGULAR_RANK_1;
 5348              		.loc 2 2764 25
 5349 0086 3B68     		ldr	r3, [r7]
 5350 0088 0622     		movs	r2, #6
 5351 008a 5A60     		str	r2, [r3, #4]
2765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 5352              		.loc 2 2765 11
 5353 008c 00BF     		nop
 5354              	.L275:
2766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC group regular sequence: channel on the selected scan sequence rank */
2771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     LL_ADC_REG_SetSequencerRanks(hadc->Instance, sConfig->Rank, sConfig->Channel);
 5355              		.loc 2 2771 5
 5356 008e 7B68     		ldr	r3, [r7, #4]
 5357 0090 1868     		ldr	r0, [r3]
 5358 0092 3B68     		ldr	r3, [r7]
 5359 0094 5968     		ldr	r1, [r3, #4]
 5360 0096 3B68     		ldr	r3, [r7]
 5361 0098 1B68     		ldr	r3, [r3]
 5362 009a 1A46     		mov	r2, r3
 5363 009c FFF7FEFF 		bl	LL_ADC_REG_SetSequencerRanks
2772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without   */
2775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* conversion on going on regular group:                                    */
2776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - Channel sampling time                                                 */
2777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - Channel offset                                                        */
2778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 5364              		.loc 2 2778 46
 5365 00a0 7B68     		ldr	r3, [r7, #4]
 5366 00a2 1B68     		ldr	r3, [r3]
 5367 00a4 1846     		mov	r0, r3
 5368 00a6 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 5369 00aa C7F8D000 		str	r0, [r7, #208]
2779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 5370              		.loc 2 2779 47
 5371 00ae 7B68     		ldr	r3, [r7, #4]
 5372 00b0 1B68     		ldr	r3, [r3]
 5373 00b2 1846     		mov	r0, r3
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 270


 5374 00b4 FFF7FEFF 		bl	LL_ADC_INJ_IsConversionOngoing
 5375 00b8 C7F8CC00 		str	r0, [r7, #204]
2780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 5376              		.loc 2 2780 8
 5377 00bc D7F8D030 		ldr	r3, [r7, #208]
 5378 00c0 002B     		cmp	r3, #0
 5379 00c2 40F0C181 		bne	.L282
2781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 5380              		.loc 2 2781 9
 5381 00c6 D7F8CC30 		ldr	r3, [r7, #204]
 5382 00ca 002B     		cmp	r3, #0
 5383 00cc 40F0BC81 		bne	.L282
2782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
2783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_SMPR1_SMPPLUS)
2785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Manage specific case of sampling time 3.5 cycles replacing 2.5 cyles */
2786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (sConfig->SamplingTime == ADC_SAMPLETIME_3CYCLES_5)
 5384              		.loc 2 2786 18
 5385 00d0 3B68     		ldr	r3, [r7]
 5386 00d2 9B68     		ldr	r3, [r3, #8]
 5387              		.loc 2 2786 10
 5388 00d4 B3F1004F 		cmp	r3, #-2147483648
 5389 00d8 0FD1     		bne	.L283
2787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, LL_ADC_SAMPLINGTIME_2CYCLES
 5390              		.loc 2 2789 9
 5391 00da 7B68     		ldr	r3, [r7, #4]
 5392 00dc 1868     		ldr	r0, [r3]
 5393 00de 3B68     		ldr	r3, [r7]
 5394 00e0 1B68     		ldr	r3, [r3]
 5395 00e2 0022     		movs	r2, #0
 5396 00e4 1946     		mov	r1, r3
 5397 00e6 FFF7FEFF 		bl	LL_ADC_SetChannelSamplingTime
2790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC sampling time common configuration */
2792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5)
 5398              		.loc 2 2792 9
 5399 00ea 7B68     		ldr	r3, [r7, #4]
 5400 00ec 1B68     		ldr	r3, [r3]
 5401 00ee 4FF00041 		mov	r1, #-2147483648
 5402 00f2 1846     		mov	r0, r3
 5403 00f4 FFF7FEFF 		bl	LL_ADC_SetSamplingTimeCommonConfig
 5404 00f8 0EE0     		b	.L284
 5405              	.L283:
2793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
 5406              		.loc 2 2797 9
 5407 00fa 7B68     		ldr	r3, [r7, #4]
 5408 00fc 1868     		ldr	r0, [r3]
 5409 00fe 3B68     		ldr	r3, [r7]
 5410 0100 1968     		ldr	r1, [r3]
 5411 0102 3B68     		ldr	r3, [r7]
 5412 0104 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 271


 5413 0106 1A46     		mov	r2, r3
 5414 0108 FFF7FEFF 		bl	LL_ADC_SetChannelSamplingTime
2798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC sampling time common configuration */
2800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_DEFAULT);
 5415              		.loc 2 2800 9
 5416 010c 7B68     		ldr	r3, [r7, #4]
 5417 010e 1B68     		ldr	r3, [r3]
 5418 0110 0021     		movs	r1, #0
 5419 0112 1846     		mov	r0, r3
 5420 0114 FFF7FEFF 		bl	LL_ADC_SetSamplingTimeCommonConfig
 5421              	.L284:
2801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set sampling time of the selected ADC channel */
2804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
2805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Configure the offset: offset enable/disable, channel, offset value */
2808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Shift the offset with respect to the selected ADC resolution. */
2810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
2811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
 5422              		.loc 2 2811 26
 5423 0118 3B68     		ldr	r3, [r7]
 5424 011a 5A69     		ldr	r2, [r3, #20]
 5425 011c 7B68     		ldr	r3, [r7, #4]
 5426 011e 1B68     		ldr	r3, [r3]
 5427 0120 DB68     		ldr	r3, [r3, #12]
 5428 0122 DB08     		lsrs	r3, r3, #3
 5429 0124 03F00303 		and	r3, r3, #3
 5430 0128 5B00     		lsls	r3, r3, #1
 5431              		.loc 2 2811 24
 5432 012a 02FA03F3 		lsl	r3, r2, r3
 5433 012e C7F8C830 		str	r3, [r7, #200]
2812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (sConfig->OffsetNumber != ADC_OFFSET_NONE)
 5434              		.loc 2 2813 18
 5435 0132 3B68     		ldr	r3, [r7]
 5436 0134 1B69     		ldr	r3, [r3, #16]
 5437              		.loc 2 2813 10
 5438 0136 042B     		cmp	r3, #4
 5439 0138 0AD0     		beq	.L285
2814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC selected offset number */
2816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetOffset(hadc->Instance, sConfig->OffsetNumber, sConfig->Channel, tmpOffsetShifted)
 5440              		.loc 2 2816 9
 5441 013a 7B68     		ldr	r3, [r7, #4]
 5442 013c 1868     		ldr	r0, [r3]
 5443 013e 3B68     		ldr	r3, [r7]
 5444 0140 1969     		ldr	r1, [r3, #16]
 5445 0142 3B68     		ldr	r3, [r7]
 5446 0144 1A68     		ldr	r2, [r3]
 5447 0146 D7F8C830 		ldr	r3, [r7, #200]
 5448 014a FFF7FEFF 		bl	LL_ADC_SetOffset
 5449 014e 7BE1     		b	.L282
 5450              	.L285:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 272


2817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Scan each offset register to check if the selected channel is targeted. */
2822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* If this is the case, the corresponding offset number is disabled.       */
2823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1)
 5451              		.loc 2 2823 13
 5452 0150 7B68     		ldr	r3, [r7, #4]
 5453 0152 1B68     		ldr	r3, [r3]
 5454 0154 0021     		movs	r1, #0
 5455 0156 1846     		mov	r0, r3
 5456 0158 FFF7FEFF 		bl	LL_ADC_GetOffsetChannel
 5457 015c 0346     		mov	r3, r0
 5458 015e C3F31203 		ubfx	r3, r3, #0, #19
 5459 0162 002B     		cmp	r3, #0
 5460 0164 0AD1     		bne	.L286
 5461              		.loc 2 2823 13 is_stmt 0 discriminator 1
 5462 0166 7B68     		ldr	r3, [r7, #4]
 5463 0168 1B68     		ldr	r3, [r3]
 5464 016a 0021     		movs	r1, #0
 5465 016c 1846     		mov	r0, r3
 5466 016e FFF7FEFF 		bl	LL_ADC_GetOffsetChannel
 5467 0172 0346     		mov	r3, r0
 5468 0174 9B0E     		lsrs	r3, r3, #26
 5469 0176 03F01F02 		and	r2, r3, #31
 5470 017a 1EE0     		b	.L287
 5471              	.L286:
 5472              		.loc 2 2823 13 discriminator 2
 5473 017c 7B68     		ldr	r3, [r7, #4]
 5474 017e 1B68     		ldr	r3, [r3]
 5475 0180 0021     		movs	r1, #0
 5476 0182 1846     		mov	r0, r3
 5477 0184 FFF7FEFF 		bl	LL_ADC_GetOffsetChannel
 5478 0188 0346     		mov	r3, r0
 5479 018a C7F8BC30 		str	r3, [r7, #188]
 5480              	.LBB70:
 5481              	.LBB71:
 5482              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 273


  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 274


  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 275


 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 276


 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 277


 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 278


 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 279


 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 280


 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 281


 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 282


 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 283


 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 284


 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 285


 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 286


 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 287


 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 288


 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 289


 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 290


 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 291


1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 5483              		.loc 3 1055 4 is_stmt 1 discriminator 2
 5484 018e D7F8BC30 		ldr	r3, [r7, #188]
 5485              		.syntax unified
 5486              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5487 0192 93FAA3F3 		rbit r3, r3
 5488              	@ 0 "" 2
 5489              		.thumb
 5490              		.syntax unified
 5491 0196 C7F8B830 		str	r3, [r7, #184]
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 5492              		.loc 3 1068 10 discriminator 2
 5493 019a D7F8B830 		ldr	r3, [r7, #184]
 5494 019e C7F8C030 		str	r3, [r7, #192]
 5495              	.LBE71:
 5496              	.LBE70:
 5497              	.LBB72:
 5498              	.LBB73:
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 292


1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 5499              		.loc 3 1089 6 discriminator 2
 5500 01a2 D7F8C030 		ldr	r3, [r7, #192]
 5501 01a6 002B     		cmp	r3, #0
 5502 01a8 01D1     		bne	.L289
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 5503              		.loc 3 1091 12
 5504 01aa 2023     		movs	r3, #32
 5505 01ac 04E0     		b	.L290
 5506              	.L289:
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 5507              		.loc 3 1093 10
 5508 01ae D7F8C030 		ldr	r3, [r7, #192]
 5509 01b2 B3FA83F3 		clz	r3, r3
 5510 01b6 DBB2     		uxtb	r3, r3
 5511              	.L290:
 5512              	.LBE73:
 5513              	.LBE72:
 5514              		.loc 2 2823 13
 5515 01b8 1A46     		mov	r2, r3
 5516              	.L287:
2824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 5517              		.loc 2 2824 16
 5518 01ba 3B68     		ldr	r3, [r7]
 5519 01bc 1B68     		ldr	r3, [r3]
 5520 01be C3F31203 		ubfx	r3, r3, #0, #19
 5521 01c2 002B     		cmp	r3, #0
 5522 01c4 05D1     		bne	.L291
 5523              		.loc 2 2824 16 is_stmt 0 discriminator 1
 5524 01c6 3B68     		ldr	r3, [r7]
 5525 01c8 1B68     		ldr	r3, [r3]
 5526 01ca 9B0E     		lsrs	r3, r3, #26
 5527 01cc 03F01F03 		and	r3, r3, #31
 5528 01d0 18E0     		b	.L292
 5529              	.L291:
 5530              		.loc 2 2824 16 discriminator 2
 5531 01d2 3B68     		ldr	r3, [r7]
 5532 01d4 1B68     		ldr	r3, [r3]
 5533 01d6 C7F8B030 		str	r3, [r7, #176]
 5534              	.LBB74:
 5535              	.LBB75:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5536              		.loc 3 1055 4 is_stmt 1 discriminator 2
 5537 01da D7F8B030 		ldr	r3, [r7, #176]
 5538              		.syntax unified
 5539              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5540 01de 93FAA3F3 		rbit r3, r3
 5541              	@ 0 "" 2
 5542              		.thumb
 5543              		.syntax unified
 5544 01e2 C7F8AC30 		str	r3, [r7, #172]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 293


 5545              		.loc 3 1068 10 discriminator 2
 5546 01e6 D7F8AC30 		ldr	r3, [r7, #172]
 5547 01ea C7F8B430 		str	r3, [r7, #180]
 5548              	.LBE75:
 5549              	.LBE74:
 5550              	.LBB76:
 5551              	.LBB77:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5552              		.loc 3 1089 6 discriminator 2
 5553 01ee D7F8B430 		ldr	r3, [r7, #180]
 5554 01f2 002B     		cmp	r3, #0
 5555 01f4 01D1     		bne	.L294
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5556              		.loc 3 1091 12
 5557 01f6 2023     		movs	r3, #32
 5558 01f8 04E0     		b	.L292
 5559              	.L294:
 5560              		.loc 3 1093 10
 5561 01fa D7F8B430 		ldr	r3, [r7, #180]
 5562 01fe B3FA83F3 		clz	r3, r3
 5563 0202 DBB2     		uxtb	r3, r3
 5564              	.L292:
 5565              	.LBE77:
 5566              	.LBE76:
2823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 5567              		.loc 2 2823 12
 5568 0204 9A42     		cmp	r2, r3
 5569 0206 06D1     		bne	.L296
2825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
 5570              		.loc 2 2826 11
 5571 0208 7B68     		ldr	r3, [r7, #4]
 5572 020a 1B68     		ldr	r3, [r3]
 5573 020c 0022     		movs	r2, #0
 5574 020e 0021     		movs	r1, #0
 5575 0210 1846     		mov	r0, r3
 5576 0212 FFF7FEFF 		bl	LL_ADC_SetOffsetState
 5577              	.L296:
2827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2)
 5578              		.loc 2 2828 13
 5579 0216 7B68     		ldr	r3, [r7, #4]
 5580 0218 1B68     		ldr	r3, [r3]
 5581 021a 0121     		movs	r1, #1
 5582 021c 1846     		mov	r0, r3
 5583 021e FFF7FEFF 		bl	LL_ADC_GetOffsetChannel
 5584 0222 0346     		mov	r3, r0
 5585 0224 C3F31203 		ubfx	r3, r3, #0, #19
 5586 0228 002B     		cmp	r3, #0
 5587 022a 0AD1     		bne	.L297
 5588              		.loc 2 2828 13 is_stmt 0 discriminator 1
 5589 022c 7B68     		ldr	r3, [r7, #4]
 5590 022e 1B68     		ldr	r3, [r3]
 5591 0230 0121     		movs	r1, #1
 5592 0232 1846     		mov	r0, r3
 5593 0234 FFF7FEFF 		bl	LL_ADC_GetOffsetChannel
 5594 0238 0346     		mov	r3, r0
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 294


 5595 023a 9B0E     		lsrs	r3, r3, #26
 5596 023c 03F01F02 		and	r2, r3, #31
 5597 0240 1EE0     		b	.L298
 5598              	.L297:
 5599              		.loc 2 2828 13 discriminator 2
 5600 0242 7B68     		ldr	r3, [r7, #4]
 5601 0244 1B68     		ldr	r3, [r3]
 5602 0246 0121     		movs	r1, #1
 5603 0248 1846     		mov	r0, r3
 5604 024a FFF7FEFF 		bl	LL_ADC_GetOffsetChannel
 5605 024e 0346     		mov	r3, r0
 5606 0250 C7F8A430 		str	r3, [r7, #164]
 5607              	.LBB78:
 5608              	.LBB79:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5609              		.loc 3 1055 4 is_stmt 1 discriminator 2
 5610 0254 D7F8A430 		ldr	r3, [r7, #164]
 5611              		.syntax unified
 5612              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5613 0258 93FAA3F3 		rbit r3, r3
 5614              	@ 0 "" 2
 5615              		.thumb
 5616              		.syntax unified
 5617 025c C7F8A030 		str	r3, [r7, #160]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5618              		.loc 3 1068 10 discriminator 2
 5619 0260 D7F8A030 		ldr	r3, [r7, #160]
 5620 0264 C7F8A830 		str	r3, [r7, #168]
 5621              	.LBE79:
 5622              	.LBE78:
 5623              	.LBB80:
 5624              	.LBB81:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5625              		.loc 3 1089 6 discriminator 2
 5626 0268 D7F8A830 		ldr	r3, [r7, #168]
 5627 026c 002B     		cmp	r3, #0
 5628 026e 01D1     		bne	.L300
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5629              		.loc 3 1091 12
 5630 0270 2023     		movs	r3, #32
 5631 0272 04E0     		b	.L301
 5632              	.L300:
 5633              		.loc 3 1093 10
 5634 0274 D7F8A830 		ldr	r3, [r7, #168]
 5635 0278 B3FA83F3 		clz	r3, r3
 5636 027c DBB2     		uxtb	r3, r3
 5637              	.L301:
 5638              	.LBE81:
 5639              	.LBE80:
 5640              		.loc 2 2828 13
 5641 027e 1A46     		mov	r2, r3
 5642              	.L298:
2829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 5643              		.loc 2 2829 16
 5644 0280 3B68     		ldr	r3, [r7]
 5645 0282 1B68     		ldr	r3, [r3]
 5646 0284 C3F31203 		ubfx	r3, r3, #0, #19
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 295


 5647 0288 002B     		cmp	r3, #0
 5648 028a 05D1     		bne	.L302
 5649              		.loc 2 2829 16 is_stmt 0 discriminator 1
 5650 028c 3B68     		ldr	r3, [r7]
 5651 028e 1B68     		ldr	r3, [r3]
 5652 0290 9B0E     		lsrs	r3, r3, #26
 5653 0292 03F01F03 		and	r3, r3, #31
 5654 0296 18E0     		b	.L303
 5655              	.L302:
 5656              		.loc 2 2829 16 discriminator 2
 5657 0298 3B68     		ldr	r3, [r7]
 5658 029a 1B68     		ldr	r3, [r3]
 5659 029c C7F89830 		str	r3, [r7, #152]
 5660              	.LBB82:
 5661              	.LBB83:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5662              		.loc 3 1055 4 is_stmt 1 discriminator 2
 5663 02a0 D7F89830 		ldr	r3, [r7, #152]
 5664              		.syntax unified
 5665              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5666 02a4 93FAA3F3 		rbit r3, r3
 5667              	@ 0 "" 2
 5668              		.thumb
 5669              		.syntax unified
 5670 02a8 C7F89430 		str	r3, [r7, #148]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5671              		.loc 3 1068 10 discriminator 2
 5672 02ac D7F89430 		ldr	r3, [r7, #148]
 5673 02b0 C7F89C30 		str	r3, [r7, #156]
 5674              	.LBE83:
 5675              	.LBE82:
 5676              	.LBB84:
 5677              	.LBB85:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5678              		.loc 3 1089 6 discriminator 2
 5679 02b4 D7F89C30 		ldr	r3, [r7, #156]
 5680 02b8 002B     		cmp	r3, #0
 5681 02ba 01D1     		bne	.L305
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5682              		.loc 3 1091 12
 5683 02bc 2023     		movs	r3, #32
 5684 02be 04E0     		b	.L303
 5685              	.L305:
 5686              		.loc 3 1093 10
 5687 02c0 D7F89C30 		ldr	r3, [r7, #156]
 5688 02c4 B3FA83F3 		clz	r3, r3
 5689 02c8 DBB2     		uxtb	r3, r3
 5690              	.L303:
 5691              	.LBE85:
 5692              	.LBE84:
2828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 5693              		.loc 2 2828 12
 5694 02ca 9A42     		cmp	r2, r3
 5695 02cc 06D1     		bne	.L307
2830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
 5696              		.loc 2 2831 11
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 296


 5697 02ce 7B68     		ldr	r3, [r7, #4]
 5698 02d0 1B68     		ldr	r3, [r3]
 5699 02d2 0022     		movs	r2, #0
 5700 02d4 0121     		movs	r1, #1
 5701 02d6 1846     		mov	r0, r3
 5702 02d8 FFF7FEFF 		bl	LL_ADC_SetOffsetState
 5703              	.L307:
2832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3)
 5704              		.loc 2 2833 13
 5705 02dc 7B68     		ldr	r3, [r7, #4]
 5706 02de 1B68     		ldr	r3, [r3]
 5707 02e0 0221     		movs	r1, #2
 5708 02e2 1846     		mov	r0, r3
 5709 02e4 FFF7FEFF 		bl	LL_ADC_GetOffsetChannel
 5710 02e8 0346     		mov	r3, r0
 5711 02ea C3F31203 		ubfx	r3, r3, #0, #19
 5712 02ee 002B     		cmp	r3, #0
 5713 02f0 0AD1     		bne	.L308
 5714              		.loc 2 2833 13 is_stmt 0 discriminator 1
 5715 02f2 7B68     		ldr	r3, [r7, #4]
 5716 02f4 1B68     		ldr	r3, [r3]
 5717 02f6 0221     		movs	r1, #2
 5718 02f8 1846     		mov	r0, r3
 5719 02fa FFF7FEFF 		bl	LL_ADC_GetOffsetChannel
 5720 02fe 0346     		mov	r3, r0
 5721 0300 9B0E     		lsrs	r3, r3, #26
 5722 0302 03F01F02 		and	r2, r3, #31
 5723 0306 1EE0     		b	.L309
 5724              	.L308:
 5725              		.loc 2 2833 13 discriminator 2
 5726 0308 7B68     		ldr	r3, [r7, #4]
 5727 030a 1B68     		ldr	r3, [r3]
 5728 030c 0221     		movs	r1, #2
 5729 030e 1846     		mov	r0, r3
 5730 0310 FFF7FEFF 		bl	LL_ADC_GetOffsetChannel
 5731 0314 0346     		mov	r3, r0
 5732 0316 C7F88C30 		str	r3, [r7, #140]
 5733              	.LBB86:
 5734              	.LBB87:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5735              		.loc 3 1055 4 is_stmt 1 discriminator 2
 5736 031a D7F88C30 		ldr	r3, [r7, #140]
 5737              		.syntax unified
 5738              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5739 031e 93FAA3F3 		rbit r3, r3
 5740              	@ 0 "" 2
 5741              		.thumb
 5742              		.syntax unified
 5743 0322 C7F88830 		str	r3, [r7, #136]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5744              		.loc 3 1068 10 discriminator 2
 5745 0326 D7F88830 		ldr	r3, [r7, #136]
 5746 032a C7F89030 		str	r3, [r7, #144]
 5747              	.LBE87:
 5748              	.LBE86:
 5749              	.LBB88:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 297


 5750              	.LBB89:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5751              		.loc 3 1089 6 discriminator 2
 5752 032e D7F89030 		ldr	r3, [r7, #144]
 5753 0332 002B     		cmp	r3, #0
 5754 0334 01D1     		bne	.L311
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5755              		.loc 3 1091 12
 5756 0336 2023     		movs	r3, #32
 5757 0338 04E0     		b	.L312
 5758              	.L311:
 5759              		.loc 3 1093 10
 5760 033a D7F89030 		ldr	r3, [r7, #144]
 5761 033e B3FA83F3 		clz	r3, r3
 5762 0342 DBB2     		uxtb	r3, r3
 5763              	.L312:
 5764              	.LBE89:
 5765              	.LBE88:
 5766              		.loc 2 2833 13
 5767 0344 1A46     		mov	r2, r3
 5768              	.L309:
2834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 5769              		.loc 2 2834 16
 5770 0346 3B68     		ldr	r3, [r7]
 5771 0348 1B68     		ldr	r3, [r3]
 5772 034a C3F31203 		ubfx	r3, r3, #0, #19
 5773 034e 002B     		cmp	r3, #0
 5774 0350 05D1     		bne	.L313
 5775              		.loc 2 2834 16 is_stmt 0 discriminator 1
 5776 0352 3B68     		ldr	r3, [r7]
 5777 0354 1B68     		ldr	r3, [r3]
 5778 0356 9B0E     		lsrs	r3, r3, #26
 5779 0358 03F01F03 		and	r3, r3, #31
 5780 035c 16E0     		b	.L314
 5781              	.L313:
 5782              		.loc 2 2834 16 discriminator 2
 5783 035e 3B68     		ldr	r3, [r7]
 5784 0360 1B68     		ldr	r3, [r3]
 5785 0362 C7F88030 		str	r3, [r7, #128]
 5786              	.LBB90:
 5787              	.LBB91:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5788              		.loc 3 1055 4 is_stmt 1 discriminator 2
 5789 0366 D7F88030 		ldr	r3, [r7, #128]
 5790              		.syntax unified
 5791              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5792 036a 93FAA3F3 		rbit r3, r3
 5793              	@ 0 "" 2
 5794              		.thumb
 5795              		.syntax unified
 5796 036e FB67     		str	r3, [r7, #124]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5797              		.loc 3 1068 10 discriminator 2
 5798 0370 FB6F     		ldr	r3, [r7, #124]
 5799 0372 C7F88430 		str	r3, [r7, #132]
 5800              	.LBE91:
 5801              	.LBE90:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 298


 5802              	.LBB92:
 5803              	.LBB93:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5804              		.loc 3 1089 6 discriminator 2
 5805 0376 D7F88430 		ldr	r3, [r7, #132]
 5806 037a 002B     		cmp	r3, #0
 5807 037c 01D1     		bne	.L316
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5808              		.loc 3 1091 12
 5809 037e 2023     		movs	r3, #32
 5810 0380 04E0     		b	.L314
 5811              	.L316:
 5812              		.loc 3 1093 10
 5813 0382 D7F88430 		ldr	r3, [r7, #132]
 5814 0386 B3FA83F3 		clz	r3, r3
 5815 038a DBB2     		uxtb	r3, r3
 5816              	.L314:
 5817              	.LBE93:
 5818              	.LBE92:
2833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 5819              		.loc 2 2833 12
 5820 038c 9A42     		cmp	r2, r3
 5821 038e 06D1     		bne	.L318
2835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
 5822              		.loc 2 2836 11
 5823 0390 7B68     		ldr	r3, [r7, #4]
 5824 0392 1B68     		ldr	r3, [r3]
 5825 0394 0022     		movs	r2, #0
 5826 0396 0221     		movs	r1, #2
 5827 0398 1846     		mov	r0, r3
 5828 039a FFF7FEFF 		bl	LL_ADC_SetOffsetState
 5829              	.L318:
2837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4)
 5830              		.loc 2 2838 13
 5831 039e 7B68     		ldr	r3, [r7, #4]
 5832 03a0 1B68     		ldr	r3, [r3]
 5833 03a2 0321     		movs	r1, #3
 5834 03a4 1846     		mov	r0, r3
 5835 03a6 FFF7FEFF 		bl	LL_ADC_GetOffsetChannel
 5836 03aa 0346     		mov	r3, r0
 5837 03ac C3F31203 		ubfx	r3, r3, #0, #19
 5838 03b0 002B     		cmp	r3, #0
 5839 03b2 0AD1     		bne	.L319
 5840              		.loc 2 2838 13 is_stmt 0 discriminator 1
 5841 03b4 7B68     		ldr	r3, [r7, #4]
 5842 03b6 1B68     		ldr	r3, [r3]
 5843 03b8 0321     		movs	r1, #3
 5844 03ba 1846     		mov	r0, r3
 5845 03bc FFF7FEFF 		bl	LL_ADC_GetOffsetChannel
 5846 03c0 0346     		mov	r3, r0
 5847 03c2 9B0E     		lsrs	r3, r3, #26
 5848 03c4 03F01F02 		and	r2, r3, #31
 5849 03c8 17E0     		b	.L320
 5850              	.L319:
 5851              		.loc 2 2838 13 discriminator 2
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 299


 5852 03ca 7B68     		ldr	r3, [r7, #4]
 5853 03cc 1B68     		ldr	r3, [r3]
 5854 03ce 0321     		movs	r1, #3
 5855 03d0 1846     		mov	r0, r3
 5856 03d2 FFF7FEFF 		bl	LL_ADC_GetOffsetChannel
 5857 03d6 0346     		mov	r3, r0
 5858 03d8 7B67     		str	r3, [r7, #116]
 5859              	.LBB94:
 5860              	.LBB95:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5861              		.loc 3 1055 4 is_stmt 1 discriminator 2
 5862 03da 7B6F     		ldr	r3, [r7, #116]
 5863              		.syntax unified
 5864              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5865 03dc 93FAA3F3 		rbit r3, r3
 5866              	@ 0 "" 2
 5867              		.thumb
 5868              		.syntax unified
 5869 03e0 3B67     		str	r3, [r7, #112]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5870              		.loc 3 1068 10 discriminator 2
 5871 03e2 3B6F     		ldr	r3, [r7, #112]
 5872 03e4 BB67     		str	r3, [r7, #120]
 5873              	.LBE95:
 5874              	.LBE94:
 5875              	.LBB96:
 5876              	.LBB97:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5877              		.loc 3 1089 6 discriminator 2
 5878 03e6 BB6F     		ldr	r3, [r7, #120]
 5879 03e8 002B     		cmp	r3, #0
 5880 03ea 01D1     		bne	.L322
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5881              		.loc 3 1091 12
 5882 03ec 2023     		movs	r3, #32
 5883 03ee 03E0     		b	.L323
 5884              	.L322:
 5885              		.loc 3 1093 10
 5886 03f0 BB6F     		ldr	r3, [r7, #120]
 5887 03f2 B3FA83F3 		clz	r3, r3
 5888 03f6 DBB2     		uxtb	r3, r3
 5889              	.L323:
 5890              	.LBE97:
 5891              	.LBE96:
 5892              		.loc 2 2838 13
 5893 03f8 1A46     		mov	r2, r3
 5894              	.L320:
2839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 5895              		.loc 2 2839 16
 5896 03fa 3B68     		ldr	r3, [r7]
 5897 03fc 1B68     		ldr	r3, [r3]
 5898 03fe C3F31203 		ubfx	r3, r3, #0, #19
 5899 0402 002B     		cmp	r3, #0
 5900 0404 05D1     		bne	.L324
 5901              		.loc 2 2839 16 is_stmt 0 discriminator 1
 5902 0406 3B68     		ldr	r3, [r7]
 5903 0408 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 300


 5904 040a 9B0E     		lsrs	r3, r3, #26
 5905 040c 03F01F03 		and	r3, r3, #31
 5906 0410 11E0     		b	.L325
 5907              	.L324:
 5908              		.loc 2 2839 16 discriminator 2
 5909 0412 3B68     		ldr	r3, [r7]
 5910 0414 1B68     		ldr	r3, [r3]
 5911 0416 BB66     		str	r3, [r7, #104]
 5912              	.LBB98:
 5913              	.LBB99:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5914              		.loc 3 1055 4 is_stmt 1 discriminator 2
 5915 0418 BB6E     		ldr	r3, [r7, #104]
 5916              		.syntax unified
 5917              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5918 041a 93FAA3F3 		rbit r3, r3
 5919              	@ 0 "" 2
 5920              		.thumb
 5921              		.syntax unified
 5922 041e 7B66     		str	r3, [r7, #100]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5923              		.loc 3 1068 10 discriminator 2
 5924 0420 7B6E     		ldr	r3, [r7, #100]
 5925 0422 FB66     		str	r3, [r7, #108]
 5926              	.LBE99:
 5927              	.LBE98:
 5928              	.LBB100:
 5929              	.LBB101:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5930              		.loc 3 1089 6 discriminator 2
 5931 0424 FB6E     		ldr	r3, [r7, #108]
 5932 0426 002B     		cmp	r3, #0
 5933 0428 01D1     		bne	.L327
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5934              		.loc 3 1091 12
 5935 042a 2023     		movs	r3, #32
 5936 042c 03E0     		b	.L325
 5937              	.L327:
 5938              		.loc 3 1093 10
 5939 042e FB6E     		ldr	r3, [r7, #108]
 5940 0430 B3FA83F3 		clz	r3, r3
 5941 0434 DBB2     		uxtb	r3, r3
 5942              	.L325:
 5943              	.LBE101:
 5944              	.LBE100:
2838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 5945              		.loc 2 2838 12
 5946 0436 9A42     		cmp	r2, r3
 5947 0438 06D1     		bne	.L282
2840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
 5948              		.loc 2 2841 11
 5949 043a 7B68     		ldr	r3, [r7, #4]
 5950 043c 1B68     		ldr	r3, [r3]
 5951 043e 0022     		movs	r2, #0
 5952 0440 0321     		movs	r1, #3
 5953 0442 1846     		mov	r0, r3
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 301


 5954 0444 FFF7FEFF 		bl	LL_ADC_SetOffsetState
 5955              	.L282:
2842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:                */
2848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - Single or differential mode                                           */
2849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 5956              		.loc 2 2849 9
 5957 0448 7B68     		ldr	r3, [r7, #4]
 5958 044a 1B68     		ldr	r3, [r3]
 5959 044c 1846     		mov	r0, r3
 5960 044e FFF7FEFF 		bl	LL_ADC_IsEnabled
 5961 0452 0346     		mov	r3, r0
 5962              		.loc 2 2849 8
 5963 0454 002B     		cmp	r3, #0
 5964 0456 40F03F81 		bne	.L329
2850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set mode single-ended or differential input of the selected ADC channel */
2852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_SetChannelSingleDiff(hadc->Instance, sConfig->Channel, sConfig->SingleDiff);
 5965              		.loc 2 2852 7
 5966 045a 7B68     		ldr	r3, [r7, #4]
 5967 045c 1868     		ldr	r0, [r3]
 5968 045e 3B68     		ldr	r3, [r7]
 5969 0460 1968     		ldr	r1, [r3]
 5970 0462 3B68     		ldr	r3, [r7]
 5971 0464 DB68     		ldr	r3, [r3, #12]
 5972 0466 1A46     		mov	r2, r3
 5973 0468 FFF7FEFF 		bl	LL_ADC_SetChannelSingleDiff
2853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Configuration of differential mode */
2855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (sConfig->SingleDiff == ADC_DIFFERENTIAL_ENDED)
 5974              		.loc 2 2855 18
 5975 046c 3B68     		ldr	r3, [r7]
 5976 046e DB68     		ldr	r3, [r3, #12]
 5977              		.loc 2 2855 10
 5978 0470 8E4A     		ldr	r2, .L375
 5979 0472 9342     		cmp	r3, r2
 5980 0474 40F03081 		bne	.L329
2856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits r
2859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance,
 5981              		.loc 2 2859 9
 5982 0478 7B68     		ldr	r3, [r7, #4]
 5983 047a 1868     		ldr	r0, [r3]
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 5984              		.loc 2 2860 50
 5985 047c 3B68     		ldr	r3, [r7]
 5986 047e 1B68     		ldr	r3, [r3]
 5987 0480 C3F31203 		ubfx	r3, r3, #0, #19
 5988 0484 002B     		cmp	r3, #0
 5989 0486 0BD1     		bne	.L330
 5990              		.loc 2 2860 50 is_stmt 0 discriminator 1
 5991 0488 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 302


 5992 048a 1B68     		ldr	r3, [r3]
 5993 048c 9B0E     		lsrs	r3, r3, #26
 5994 048e 0133     		adds	r3, r3, #1
 5995 0490 03F01F03 		and	r3, r3, #31
 5996 0494 092B     		cmp	r3, #9
 5997 0496 94BF     		ite	ls
 5998 0498 0123     		movls	r3, #1
 5999 049a 0023     		movhi	r3, #0
 6000 049c DBB2     		uxtb	r3, r3
 6001 049e 19E0     		b	.L331
 6002              	.L330:
 6003              		.loc 2 2860 50 discriminator 2
 6004 04a0 3B68     		ldr	r3, [r7]
 6005 04a2 1B68     		ldr	r3, [r3]
 6006 04a4 FB65     		str	r3, [r7, #92]
 6007              	.LBB102:
 6008              	.LBB103:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 6009              		.loc 3 1055 4 is_stmt 1 discriminator 2
 6010 04a6 FB6D     		ldr	r3, [r7, #92]
 6011              		.syntax unified
 6012              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6013 04a8 93FAA3F3 		rbit r3, r3
 6014              	@ 0 "" 2
 6015              		.thumb
 6016              		.syntax unified
 6017 04ac BB65     		str	r3, [r7, #88]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6018              		.loc 3 1068 10 discriminator 2
 6019 04ae BB6D     		ldr	r3, [r7, #88]
 6020 04b0 3B66     		str	r3, [r7, #96]
 6021              	.LBE103:
 6022              	.LBE102:
 6023              	.LBB104:
 6024              	.LBB105:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6025              		.loc 3 1089 6 discriminator 2
 6026 04b2 3B6E     		ldr	r3, [r7, #96]
 6027 04b4 002B     		cmp	r3, #0
 6028 04b6 01D1     		bne	.L333
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6029              		.loc 3 1091 12
 6030 04b8 2023     		movs	r3, #32
 6031 04ba 03E0     		b	.L334
 6032              	.L333:
 6033              		.loc 3 1093 10
 6034 04bc 3B6E     		ldr	r3, [r7, #96]
 6035 04be B3FA83F3 		clz	r3, r3
 6036 04c2 DBB2     		uxtb	r3, r3
 6037              	.L334:
 6038              	.LBE105:
 6039              	.LBE104:
 6040              		.loc 2 2860 50
 6041 04c4 0133     		adds	r3, r3, #1
 6042 04c6 03F01F03 		and	r3, r3, #31
 6043 04ca 092B     		cmp	r3, #9
 6044 04cc 94BF     		ite	ls
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 303


 6045 04ce 0123     		movls	r3, #1
 6046 04d0 0023     		movhi	r3, #0
 6047 04d2 DBB2     		uxtb	r3, r3
 6048              	.L331:
2859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 6049              		.loc 2 2859 9
 6050 04d4 002B     		cmp	r3, #0
 6051 04d6 79D0     		beq	.L335
 6052              		.loc 2 2860 50
 6053 04d8 3B68     		ldr	r3, [r7]
 6054 04da 1B68     		ldr	r3, [r3]
 6055 04dc C3F31203 		ubfx	r3, r3, #0, #19
 6056 04e0 002B     		cmp	r3, #0
 6057 04e2 07D1     		bne	.L336
 6058              		.loc 2 2860 50 is_stmt 0 discriminator 3
 6059 04e4 3B68     		ldr	r3, [r7]
 6060 04e6 1B68     		ldr	r3, [r3]
 6061 04e8 9B0E     		lsrs	r3, r3, #26
 6062 04ea 0133     		adds	r3, r3, #1
 6063 04ec 9B06     		lsls	r3, r3, #26
 6064 04ee 03F0F842 		and	r2, r3, #2080374784
 6065 04f2 15E0     		b	.L337
 6066              	.L336:
 6067              		.loc 2 2860 50 discriminator 4
 6068 04f4 3B68     		ldr	r3, [r7]
 6069 04f6 1B68     		ldr	r3, [r3]
 6070 04f8 3B65     		str	r3, [r7, #80]
 6071              	.LBB106:
 6072              	.LBB107:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 6073              		.loc 3 1055 4 is_stmt 1 discriminator 4
 6074 04fa 3B6D     		ldr	r3, [r7, #80]
 6075              		.syntax unified
 6076              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6077 04fc 93FAA3F3 		rbit r3, r3
 6078              	@ 0 "" 2
 6079              		.thumb
 6080              		.syntax unified
 6081 0500 FB64     		str	r3, [r7, #76]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6082              		.loc 3 1068 10 discriminator 4
 6083 0502 FB6C     		ldr	r3, [r7, #76]
 6084 0504 7B65     		str	r3, [r7, #84]
 6085              	.LBE107:
 6086              	.LBE106:
 6087              	.LBB108:
 6088              	.LBB109:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6089              		.loc 3 1089 6 discriminator 4
 6090 0506 7B6D     		ldr	r3, [r7, #84]
 6091 0508 002B     		cmp	r3, #0
 6092 050a 01D1     		bne	.L339
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6093              		.loc 3 1091 12
 6094 050c 2023     		movs	r3, #32
 6095 050e 03E0     		b	.L340
 6096              	.L339:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 304


 6097              		.loc 3 1093 10
 6098 0510 7B6D     		ldr	r3, [r7, #84]
 6099 0512 B3FA83F3 		clz	r3, r3
 6100 0516 DBB2     		uxtb	r3, r3
 6101              	.L340:
 6102              	.LBE109:
 6103              	.LBE108:
 6104              		.loc 2 2860 50
 6105 0518 0133     		adds	r3, r3, #1
 6106 051a 9B06     		lsls	r3, r3, #26
 6107 051c 03F0F842 		and	r2, r3, #2080374784
 6108              	.L337:
 6109              		.loc 2 2860 50 is_stmt 0 discriminator 6
 6110 0520 3B68     		ldr	r3, [r7]
 6111 0522 1B68     		ldr	r3, [r3]
 6112 0524 C3F31203 		ubfx	r3, r3, #0, #19
 6113 0528 002B     		cmp	r3, #0
 6114 052a 09D1     		bne	.L341
 6115              		.loc 2 2860 50 discriminator 7
 6116 052c 3B68     		ldr	r3, [r7]
 6117 052e 1B68     		ldr	r3, [r3]
 6118 0530 9B0E     		lsrs	r3, r3, #26
 6119 0532 0133     		adds	r3, r3, #1
 6120 0534 03F01F03 		and	r3, r3, #31
 6121 0538 0121     		movs	r1, #1
 6122 053a 01FA03F3 		lsl	r3, r1, r3
 6123 053e 17E0     		b	.L342
 6124              	.L341:
 6125              		.loc 2 2860 50 discriminator 8
 6126 0540 3B68     		ldr	r3, [r7]
 6127 0542 1B68     		ldr	r3, [r3]
 6128 0544 7B64     		str	r3, [r7, #68]
 6129              	.LBB110:
 6130              	.LBB111:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 6131              		.loc 3 1055 4 is_stmt 1 discriminator 8
 6132 0546 7B6C     		ldr	r3, [r7, #68]
 6133              		.syntax unified
 6134              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6135 0548 93FAA3F3 		rbit r3, r3
 6136              	@ 0 "" 2
 6137              		.thumb
 6138              		.syntax unified
 6139 054c 3B64     		str	r3, [r7, #64]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6140              		.loc 3 1068 10 discriminator 8
 6141 054e 3B6C     		ldr	r3, [r7, #64]
 6142 0550 BB64     		str	r3, [r7, #72]
 6143              	.LBE111:
 6144              	.LBE110:
 6145              	.LBB112:
 6146              	.LBB113:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6147              		.loc 3 1089 6 discriminator 8
 6148 0552 BB6C     		ldr	r3, [r7, #72]
 6149 0554 002B     		cmp	r3, #0
 6150 0556 01D1     		bne	.L344
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 305


1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6151              		.loc 3 1091 12
 6152 0558 2023     		movs	r3, #32
 6153 055a 03E0     		b	.L345
 6154              	.L344:
 6155              		.loc 3 1093 10
 6156 055c BB6C     		ldr	r3, [r7, #72]
 6157 055e B3FA83F3 		clz	r3, r3
 6158 0562 DBB2     		uxtb	r3, r3
 6159              	.L345:
 6160              	.LBE113:
 6161              	.LBE112:
 6162              		.loc 2 2860 50
 6163 0564 0133     		adds	r3, r3, #1
 6164 0566 03F01F03 		and	r3, r3, #31
 6165 056a 0121     		movs	r1, #1
 6166 056c 01FA03F3 		lsl	r3, r1, r3
 6167              	.L342:
 6168              		.loc 2 2860 50 is_stmt 0 discriminator 10
 6169 0570 42EA0301 		orr	r1, r2, r3
 6170 0574 3B68     		ldr	r3, [r7]
 6171 0576 1B68     		ldr	r3, [r3]
 6172 0578 C3F31203 		ubfx	r3, r3, #0, #19
 6173 057c 002B     		cmp	r3, #0
 6174 057e 0AD1     		bne	.L346
 6175              		.loc 2 2860 50 discriminator 11
 6176 0580 3B68     		ldr	r3, [r7]
 6177 0582 1B68     		ldr	r3, [r3]
 6178 0584 9B0E     		lsrs	r3, r3, #26
 6179 0586 0133     		adds	r3, r3, #1
 6180 0588 03F01F02 		and	r2, r3, #31
 6181 058c 1346     		mov	r3, r2
 6182 058e 5B00     		lsls	r3, r3, #1
 6183 0590 1344     		add	r3, r3, r2
 6184 0592 1B05     		lsls	r3, r3, #20
 6185 0594 18E0     		b	.L347
 6186              	.L346:
 6187              		.loc 2 2860 50 discriminator 12
 6188 0596 3B68     		ldr	r3, [r7]
 6189 0598 1B68     		ldr	r3, [r3]
 6190 059a BB63     		str	r3, [r7, #56]
 6191              	.LBB114:
 6192              	.LBB115:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 6193              		.loc 3 1055 4 is_stmt 1 discriminator 12
 6194 059c BB6B     		ldr	r3, [r7, #56]
 6195              		.syntax unified
 6196              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6197 059e 93FAA3F3 		rbit r3, r3
 6198              	@ 0 "" 2
 6199              		.thumb
 6200              		.syntax unified
 6201 05a2 7B63     		str	r3, [r7, #52]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6202              		.loc 3 1068 10 discriminator 12
 6203 05a4 7B6B     		ldr	r3, [r7, #52]
 6204 05a6 FB63     		str	r3, [r7, #60]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 306


 6205              	.LBE115:
 6206              	.LBE114:
 6207              	.LBB116:
 6208              	.LBB117:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6209              		.loc 3 1089 6 discriminator 12
 6210 05a8 FB6B     		ldr	r3, [r7, #60]
 6211 05aa 002B     		cmp	r3, #0
 6212 05ac 01D1     		bne	.L349
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6213              		.loc 3 1091 12
 6214 05ae 2023     		movs	r3, #32
 6215 05b0 03E0     		b	.L350
 6216              	.L349:
 6217              		.loc 3 1093 10
 6218 05b2 FB6B     		ldr	r3, [r7, #60]
 6219 05b4 B3FA83F3 		clz	r3, r3
 6220 05b8 DBB2     		uxtb	r3, r3
 6221              	.L350:
 6222              	.LBE117:
 6223              	.LBE116:
 6224              		.loc 2 2860 50
 6225 05ba 0133     		adds	r3, r3, #1
 6226 05bc 03F01F02 		and	r2, r3, #31
 6227 05c0 1346     		mov	r3, r2
 6228 05c2 5B00     		lsls	r3, r3, #1
 6229 05c4 1344     		add	r3, r3, r2
 6230 05c6 1B05     		lsls	r3, r3, #20
 6231              	.L347:
2859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 6232              		.loc 2 2859 9
 6233 05c8 0B43     		orrs	r3, r3, r1
 6234 05ca 80E0     		b	.L351
 6235              	.L335:
 6236              		.loc 2 2860 50
 6237 05cc 3B68     		ldr	r3, [r7]
 6238 05ce 1B68     		ldr	r3, [r3]
 6239 05d0 C3F31203 		ubfx	r3, r3, #0, #19
 6240 05d4 002B     		cmp	r3, #0
 6241 05d6 07D1     		bne	.L352
 6242              		.loc 2 2860 50 is_stmt 0 discriminator 13
 6243 05d8 3B68     		ldr	r3, [r7]
 6244 05da 1B68     		ldr	r3, [r3]
 6245 05dc 9B0E     		lsrs	r3, r3, #26
 6246 05de 0133     		adds	r3, r3, #1
 6247 05e0 9B06     		lsls	r3, r3, #26
 6248 05e2 03F0F842 		and	r2, r3, #2080374784
 6249 05e6 15E0     		b	.L353
 6250              	.L352:
 6251              		.loc 2 2860 50 discriminator 14
 6252 05e8 3B68     		ldr	r3, [r7]
 6253 05ea 1B68     		ldr	r3, [r3]
 6254 05ec FB62     		str	r3, [r7, #44]
 6255              	.LBB118:
 6256              	.LBB119:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 6257              		.loc 3 1055 4 is_stmt 1 discriminator 14
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 307


 6258 05ee FB6A     		ldr	r3, [r7, #44]
 6259              		.syntax unified
 6260              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6261 05f0 93FAA3F3 		rbit r3, r3
 6262              	@ 0 "" 2
 6263              		.thumb
 6264              		.syntax unified
 6265 05f4 BB62     		str	r3, [r7, #40]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6266              		.loc 3 1068 10 discriminator 14
 6267 05f6 BB6A     		ldr	r3, [r7, #40]
 6268 05f8 3B63     		str	r3, [r7, #48]
 6269              	.LBE119:
 6270              	.LBE118:
 6271              	.LBB120:
 6272              	.LBB121:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6273              		.loc 3 1089 6 discriminator 14
 6274 05fa 3B6B     		ldr	r3, [r7, #48]
 6275 05fc 002B     		cmp	r3, #0
 6276 05fe 01D1     		bne	.L355
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6277              		.loc 3 1091 12
 6278 0600 2023     		movs	r3, #32
 6279 0602 03E0     		b	.L356
 6280              	.L355:
 6281              		.loc 3 1093 10
 6282 0604 3B6B     		ldr	r3, [r7, #48]
 6283 0606 B3FA83F3 		clz	r3, r3
 6284 060a DBB2     		uxtb	r3, r3
 6285              	.L356:
 6286              	.LBE121:
 6287              	.LBE120:
 6288              		.loc 2 2860 50
 6289 060c 0133     		adds	r3, r3, #1
 6290 060e 9B06     		lsls	r3, r3, #26
 6291 0610 03F0F842 		and	r2, r3, #2080374784
 6292              	.L353:
 6293              		.loc 2 2860 50 is_stmt 0 discriminator 16
 6294 0614 3B68     		ldr	r3, [r7]
 6295 0616 1B68     		ldr	r3, [r3]
 6296 0618 C3F31203 		ubfx	r3, r3, #0, #19
 6297 061c 002B     		cmp	r3, #0
 6298 061e 09D1     		bne	.L357
 6299              		.loc 2 2860 50 discriminator 17
 6300 0620 3B68     		ldr	r3, [r7]
 6301 0622 1B68     		ldr	r3, [r3]
 6302 0624 9B0E     		lsrs	r3, r3, #26
 6303 0626 0133     		adds	r3, r3, #1
 6304 0628 03F01F03 		and	r3, r3, #31
 6305 062c 0121     		movs	r1, #1
 6306 062e 01FA03F3 		lsl	r3, r1, r3
 6307 0632 17E0     		b	.L358
 6308              	.L357:
 6309              		.loc 2 2860 50 discriminator 18
 6310 0634 3B68     		ldr	r3, [r7]
 6311 0636 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 308


 6312 0638 3B62     		str	r3, [r7, #32]
 6313              	.LBB122:
 6314              	.LBB123:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 6315              		.loc 3 1055 4 is_stmt 1 discriminator 18
 6316 063a 3B6A     		ldr	r3, [r7, #32]
 6317              		.syntax unified
 6318              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6319 063c 93FAA3F3 		rbit r3, r3
 6320              	@ 0 "" 2
 6321              		.thumb
 6322              		.syntax unified
 6323 0640 FB61     		str	r3, [r7, #28]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6324              		.loc 3 1068 10 discriminator 18
 6325 0642 FB69     		ldr	r3, [r7, #28]
 6326 0644 7B62     		str	r3, [r7, #36]
 6327              	.LBE123:
 6328              	.LBE122:
 6329              	.LBB124:
 6330              	.LBB125:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6331              		.loc 3 1089 6 discriminator 18
 6332 0646 7B6A     		ldr	r3, [r7, #36]
 6333 0648 002B     		cmp	r3, #0
 6334 064a 01D1     		bne	.L360
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6335              		.loc 3 1091 12
 6336 064c 2023     		movs	r3, #32
 6337 064e 03E0     		b	.L361
 6338              	.L360:
 6339              		.loc 3 1093 10
 6340 0650 7B6A     		ldr	r3, [r7, #36]
 6341 0652 B3FA83F3 		clz	r3, r3
 6342 0656 DBB2     		uxtb	r3, r3
 6343              	.L361:
 6344              	.LBE125:
 6345              	.LBE124:
 6346              		.loc 2 2860 50
 6347 0658 0133     		adds	r3, r3, #1
 6348 065a 03F01F03 		and	r3, r3, #31
 6349 065e 0121     		movs	r1, #1
 6350 0660 01FA03F3 		lsl	r3, r1, r3
 6351              	.L358:
 6352              		.loc 2 2860 50 is_stmt 0 discriminator 20
 6353 0664 42EA0301 		orr	r1, r2, r3
 6354 0668 3B68     		ldr	r3, [r7]
 6355 066a 1B68     		ldr	r3, [r3]
 6356 066c C3F31203 		ubfx	r3, r3, #0, #19
 6357 0670 002B     		cmp	r3, #0
 6358 0672 0DD1     		bne	.L362
 6359              		.loc 2 2860 50 discriminator 21
 6360 0674 3B68     		ldr	r3, [r7]
 6361 0676 1B68     		ldr	r3, [r3]
 6362 0678 9B0E     		lsrs	r3, r3, #26
 6363 067a 0133     		adds	r3, r3, #1
 6364 067c 03F01F02 		and	r2, r3, #31
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 309


 6365 0680 1346     		mov	r3, r2
 6366 0682 5B00     		lsls	r3, r3, #1
 6367 0684 1344     		add	r3, r3, r2
 6368 0686 1E3B     		subs	r3, r3, #30
 6369 0688 1B05     		lsls	r3, r3, #20
 6370 068a 43F00073 		orr	r3, r3, #33554432
 6371 068e 1DE0     		b	.L363
 6372              	.L362:
 6373              		.loc 2 2860 50 discriminator 22
 6374 0690 3B68     		ldr	r3, [r7]
 6375 0692 1B68     		ldr	r3, [r3]
 6376 0694 7B61     		str	r3, [r7, #20]
 6377              	.LBB126:
 6378              	.LBB127:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 6379              		.loc 3 1055 4 is_stmt 1 discriminator 22
 6380 0696 7B69     		ldr	r3, [r7, #20]
 6381              		.syntax unified
 6382              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6383 0698 93FAA3F3 		rbit r3, r3
 6384              	@ 0 "" 2
 6385              		.thumb
 6386              		.syntax unified
 6387 069c 3B61     		str	r3, [r7, #16]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6388              		.loc 3 1068 10 discriminator 22
 6389 069e 3B69     		ldr	r3, [r7, #16]
 6390 06a0 BB61     		str	r3, [r7, #24]
 6391              	.LBE127:
 6392              	.LBE126:
 6393              	.LBB128:
 6394              	.LBB129:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6395              		.loc 3 1089 6 discriminator 22
 6396 06a2 BB69     		ldr	r3, [r7, #24]
 6397 06a4 002B     		cmp	r3, #0
 6398 06a6 03D1     		bne	.L365
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6399              		.loc 3 1091 12
 6400 06a8 2023     		movs	r3, #32
 6401 06aa 05E0     		b	.L366
 6402              	.L376:
 6403              		.align	2
 6404              	.L375:
 6405 06ac 00007F40 		.word	1082064896
 6406              	.L365:
 6407              		.loc 3 1093 10
 6408 06b0 BB69     		ldr	r3, [r7, #24]
 6409 06b2 B3FA83F3 		clz	r3, r3
 6410 06b6 DBB2     		uxtb	r3, r3
 6411              	.L366:
 6412              	.LBE129:
 6413              	.LBE128:
 6414              		.loc 2 2860 50
 6415 06b8 0133     		adds	r3, r3, #1
 6416 06ba 03F01F02 		and	r2, r3, #31
 6417 06be 1346     		mov	r3, r2
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 310


 6418 06c0 5B00     		lsls	r3, r3, #1
 6419 06c2 1344     		add	r3, r3, r2
 6420 06c4 1E3B     		subs	r3, r3, #30
 6421 06c6 1B05     		lsls	r3, r3, #20
 6422 06c8 43F00073 		orr	r3, r3, #33554432
 6423              	.L363:
2859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 6424              		.loc 2 2859 9 discriminator 2
 6425 06cc 0B43     		orrs	r3, r3, r1
 6426              	.L351:
2859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 6427              		.loc 2 2859 9 is_stmt 0 discriminator 1
 6428 06ce 3A68     		ldr	r2, [r7]
 6429 06d0 9268     		ldr	r2, [r2, #8]
 6430 06d2 1946     		mov	r1, r3
 6431 06d4 FFF7FEFF 		bl	LL_ADC_SetChannelSamplingTime
 6432              	.L329:
2861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
2862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Management of internal measurement channels: Vbat/VrefInt/TempSensor.  */
2867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* If internal channel selected, enable dedicated internal buffers and    */
2868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* paths.                                                                 */
2869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: these internal measurement paths can be disabled using           */
2870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* HAL_ADC_DeInit().                                                      */
2871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
 6433              		.loc 2 2872 9 is_stmt 1
 6434 06d8 3B68     		ldr	r3, [r7]
 6435 06da 1A68     		ldr	r2, [r3]
 6436 06dc 3D4B     		ldr	r3, .L377
 6437 06de 1340     		ands	r3, r3, r2
 6438              		.loc 2 2872 8
 6439 06e0 002B     		cmp	r3, #0
 6440 06e2 6CD0     		beq	.L374
2873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->I
 6441              		.loc 2 2874 37
 6442 06e4 3C48     		ldr	r0, .L377+4
 6443 06e6 FFF7FEFF 		bl	LL_ADC_GetCommonPathInternalCh
 6444 06ea C7F8C400 		str	r0, [r7, #196]
2875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If the requested internal measurement path has already been enabled, */
2877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* bypass the configuration processing.                                 */
2878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 6445              		.loc 2 2878 19
 6446 06ee 3B68     		ldr	r3, [r7]
 6447 06f0 1B68     		ldr	r3, [r3]
 6448              		.loc 2 2878 10
 6449 06f2 3A4A     		ldr	r2, .L377+8
 6450 06f4 9342     		cmp	r3, r2
 6451 06f6 27D1     		bne	.L368
2879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 6452              		.loc 2 2879 44
 6453 06f8 D7F8C430 		ldr	r3, [r7, #196]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 311


 6454 06fc 03F40003 		and	r3, r3, #8388608
 6455              		.loc 2 2879 11
 6456 0700 002B     		cmp	r3, #0
 6457 0702 21D1     		bne	.L368
2880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
 6458              		.loc 2 2881 13
 6459 0704 7B68     		ldr	r3, [r7, #4]
 6460 0706 1B68     		ldr	r3, [r3]
 6461              		.loc 2 2881 12
 6462 0708 354A     		ldr	r2, .L377+12
 6463 070a 9342     		cmp	r3, r2
 6464 070c 57D1     		bne	.L374
2882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
 6465              		.loc 2 2883 11
 6466 070e D7F8C430 		ldr	r3, [r7, #196]
 6467 0712 43F40003 		orr	r3, r3, #8388608
 6468 0716 1946     		mov	r1, r3
 6469 0718 2F48     		ldr	r0, .L377+4
 6470 071a FFF7FEFF 		bl	LL_ADC_SetCommonPathInternalCh
2884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
2885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Delay for temperature sensor stabilization time */
2887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Wait loop initialization and execution */
2888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Note: Variable divided by 2 to compensate partially              */
2889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /*       CPU processing cycles, scaling in us split to not          */
2890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /*       exceed 32 bits register capacity and handle low frequency. */
2891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (100000
 6471              		.loc 2 2891 91
 6472 071e 314B     		ldr	r3, .L377+16
 6473 0720 1B68     		ldr	r3, [r3]
 6474 0722 9B09     		lsrs	r3, r3, #6
 6475 0724 304A     		ldr	r2, .L377+20
 6476 0726 A2FB0323 		umull	r2, r3, r2, r3
 6477 072a 9B09     		lsrs	r3, r3, #6
 6478              		.loc 2 2891 71
 6479 072c 5A1C     		adds	r2, r3, #1
 6480 072e 1346     		mov	r3, r2
 6481 0730 5B00     		lsls	r3, r3, #1
 6482 0732 1344     		add	r3, r3, r2
 6483 0734 9B00     		lsls	r3, r3, #2
 6484              		.loc 2 2891 27
 6485 0736 FB60     		str	r3, [r7, #12]
2892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 6486              		.loc 2 2892 17
 6487 0738 02E0     		b	.L370
 6488              	.L371:
2893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
2894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             wait_loop_index--;
 6489              		.loc 2 2894 28
 6490 073a FB68     		ldr	r3, [r7, #12]
 6491 073c 013B     		subs	r3, r3, #1
 6492 073e FB60     		str	r3, [r7, #12]
 6493              	.L370:
2892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 6494              		.loc 2 2892 34
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 312


 6495 0740 FB68     		ldr	r3, [r7, #12]
 6496 0742 002B     		cmp	r3, #0
 6497 0744 F9D1     		bne	.L371
2881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 6498              		.loc 2 2881 12
 6499 0746 3AE0     		b	.L374
 6500              	.L368:
2895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
2896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_channel & LL_ADC_PAT
 6501              		.loc 2 2898 24
 6502 0748 3B68     		ldr	r3, [r7]
 6503 074a 1B68     		ldr	r3, [r3]
 6504              		.loc 2 2898 15
 6505 074c 274A     		ldr	r2, .L377+24
 6506 074e 9342     		cmp	r3, r2
 6507 0750 13D1     		bne	.L372
 6508              		.loc 2 2898 88 discriminator 1
 6509 0752 D7F8C430 		ldr	r3, [r7, #196]
 6510 0756 03F08073 		and	r3, r3, #16777216
 6511              		.loc 2 2898 55 discriminator 1
 6512 075a 002B     		cmp	r3, #0
 6513 075c 0DD1     		bne	.L372
2899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
 6514              		.loc 2 2900 13
 6515 075e 7B68     		ldr	r3, [r7, #4]
 6516 0760 1B68     		ldr	r3, [r3]
 6517              		.loc 2 2900 12
 6518 0762 1F4A     		ldr	r2, .L377+12
 6519 0764 9342     		cmp	r3, r2
 6520 0766 2AD1     		bne	.L374
2901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
 6521              		.loc 2 2902 11
 6522 0768 D7F8C430 		ldr	r3, [r7, #196]
 6523 076c 43F08073 		orr	r3, r3, #16777216
 6524 0770 1946     		mov	r1, r3
 6525 0772 1948     		ldr	r0, .L377+4
 6526 0774 FFF7FEFF 		bl	LL_ADC_SetCommonPathInternalCh
2900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 6527              		.loc 2 2900 12
 6528 0778 21E0     		b	.L374
 6529              	.L372:
2903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
2904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else if ((sConfig->Channel == ADC_CHANNEL_VREFINT)
 6530              		.loc 2 2906 24
 6531 077a 3B68     		ldr	r3, [r7]
 6532 077c 1B68     		ldr	r3, [r3]
 6533              		.loc 2 2906 15
 6534 077e 1C4A     		ldr	r2, .L377+28
 6535 0780 9342     		cmp	r3, r2
 6536 0782 1CD1     		bne	.L374
2907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 313


 6537              		.loc 2 2907 49
 6538 0784 D7F8C430 		ldr	r3, [r7, #196]
 6539 0788 03F48003 		and	r3, r3, #4194304
 6540              		.loc 2 2907 16
 6541 078c 002B     		cmp	r3, #0
 6542 078e 16D1     		bne	.L374
2908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (ADC_VREFINT_INSTANCE(hadc))
 6543              		.loc 2 2909 13
 6544 0790 7B68     		ldr	r3, [r7, #4]
 6545 0792 1B68     		ldr	r3, [r3]
 6546              		.loc 2 2909 12
 6547 0794 124A     		ldr	r2, .L377+12
 6548 0796 9342     		cmp	r3, r2
 6549 0798 11D1     		bne	.L374
2910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
 6550              		.loc 2 2911 11
 6551 079a D7F8C430 		ldr	r3, [r7, #196]
 6552 079e 43F48003 		orr	r3, r3, #4194304
 6553 07a2 1946     		mov	r1, r3
 6554 07a4 0C48     		ldr	r0, .L377+4
 6555 07a6 FFF7FEFF 		bl	LL_ADC_SetCommonPathInternalCh
 6556 07aa 08E0     		b	.L374
 6557              	.L274:
2912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
2913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* nothing to do */
2918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* If a conversion is on going on regular group, no update on regular       */
2923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* channel could be done on neither of the channel configuration structure  */
2924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* parameters.                                                              */
2925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
2926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update ADC state machine to error */
2928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 6558              		.loc 2 2928 5
 6559 07ac 7B68     		ldr	r3, [r7, #4]
 6560 07ae 9B6D     		ldr	r3, [r3, #88]
 6561 07b0 43F02002 		orr	r2, r3, #32
 6562 07b4 7B68     		ldr	r3, [r7, #4]
 6563 07b6 9A65     		str	r2, [r3, #88]
2929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 6564              		.loc 2 2930 20
 6565 07b8 0123     		movs	r3, #1
 6566 07ba 87F8D730 		strb	r3, [r7, #215]
 6567              	.L374:
2931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 314


2934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 6568              		.loc 2 2934 3
 6569 07be 7B68     		ldr	r3, [r7, #4]
 6570 07c0 0022     		movs	r2, #0
 6571 07c2 83F85420 		strb	r2, [r3, #84]
2935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
2937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 6572              		.loc 2 2937 10
 6573 07c6 97F8D730 		ldrb	r3, [r7, #215]	@ zero_extendqisi2
 6574              	.L273:
2938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 6575              		.loc 2 2938 1
 6576 07ca 1846     		mov	r0, r3
 6577 07cc D837     		adds	r7, r7, #216
 6578              		.cfi_def_cfa_offset 8
 6579 07ce BD46     		mov	sp, r7
 6580              		.cfi_def_cfa_register 13
 6581              		@ sp needed
 6582 07d0 80BD     		pop	{r7, pc}
 6583              	.L378:
 6584 07d2 00BF     		.align	2
 6585              	.L377:
 6586 07d4 00000880 		.word	-2146959360
 6587 07d8 00030450 		.word	1342440192
 6588 07dc 000052C7 		.word	-950927360
 6589 07e0 00000450 		.word	1342439424
 6590 07e4 00000000 		.word	SystemCoreClock
 6591 07e8 632D3E05 		.word	87960931
 6592 07ec 000084CB 		.word	-880541696
 6593 07f0 01000080 		.word	-2147483647
 6594              		.cfi_endproc
 6595              	.LFE339:
 6597              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 6598              		.align	1
 6599              		.global	HAL_ADC_AnalogWDGConfig
 6600              		.syntax unified
 6601              		.thumb
 6602              		.thumb_func
 6604              	HAL_ADC_AnalogWDGConfig:
 6605              	.LFB340:
2939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Configure the analog watchdog.
2942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         This function initializes the selected analog watchdog, successive
2944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters
2945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without resetting
2946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         the ADC.
2947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
2948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
2949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         "ADC_AnalogWDGConfTypeDef".
2950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   On this STM32 series, analog watchdog thresholds cannot be modified
2951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         while ADC conversion is on going.
2952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param AnalogWDGConfig Structure of ADC analog watchdog configuration
2954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 315


2955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef *hadc, ADC_AnalogWDGConfTypeDef *Analog
2957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 6606              		.loc 2 2957 1
 6607              		.cfi_startproc
 6608              		@ args = 0, pretend = 0, frame = 56
 6609              		@ frame_needed = 1, uses_anonymous_args = 0
 6610 0000 80B5     		push	{r7, lr}
 6611              		.cfi_def_cfa_offset 8
 6612              		.cfi_offset 7, -8
 6613              		.cfi_offset 14, -4
 6614 0002 8EB0     		sub	sp, sp, #56
 6615              		.cfi_def_cfa_offset 64
 6616 0004 00AF     		add	r7, sp, #0
 6617              		.cfi_def_cfa_register 7
 6618 0006 7860     		str	r0, [r7, #4]
 6619 0008 3960     		str	r1, [r7]
2958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 6620              		.loc 2 2958 21
 6621 000a 0023     		movs	r3, #0
 6622 000c 87F83730 		strb	r3, [r7, #55]
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
2960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
2961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
2962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
2963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
2967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
2968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
2969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
 6623              		.loc 2 2970 23
 6624 0010 3B68     		ldr	r3, [r7]
 6625 0012 5B68     		ldr	r3, [r3, #4]
 6626              		.loc 2 2970 6
 6627 0014 B3F5400F 		cmp	r3, #12582912
 6628 0018 03D0     		beq	.L380
2971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
 6629              		.loc 2 2971 23 discriminator 1
 6630 001a 3B68     		ldr	r3, [r7]
 6631 001c 5B68     		ldr	r3, [r3, #4]
2970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
 6632              		.loc 2 2970 76 discriminator 1
 6633 001e B3F1A07F 		cmp	r3, #20971520
 6634              	.L380:
2972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC))
2973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(hadc, AnalogWDGConfig->Channel));
2975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verify thresholds range */
2978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
2979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Case of oversampling enabled: depending on ratio and shift configuration,
2981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        analog watchdog thresholds can be higher than ADC resolution.
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 316


2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        Verify if thresholds are within maximum thresholds range. */
2983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->HighThreshold));
2984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->LowThreshold));
2985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
2987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Verify if thresholds are within the selected ADC resolution */
2989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold));
2990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
2991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
2994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 6635              		.loc 2 2994 3
 6636 0022 7B68     		ldr	r3, [r7, #4]
 6637 0024 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 6638 0028 012B     		cmp	r3, #1
 6639 002a 01D1     		bne	.L381
 6640              		.loc 2 2994 3 is_stmt 0 discriminator 1
 6641 002c 0223     		movs	r3, #2
 6642 002e ECE1     		b	.L382
 6643              	.L381:
 6644              		.loc 2 2994 3 discriminator 2
 6645 0030 7B68     		ldr	r3, [r7, #4]
 6646 0032 0122     		movs	r2, #1
 6647 0034 83F85420 		strb	r2, [r3, #84]
2995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* conversion on going on ADC groups regular and injected:                  */
2999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*  - Analog watchdog channels                                              */
3000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*  - Analog watchdog thresholds                                            */
3001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 6648              		.loc 2 3001 44 is_stmt 1 discriminator 2
 6649 0038 7B68     		ldr	r3, [r7, #4]
 6650 003a 1B68     		ldr	r3, [r3]
 6651 003c 1846     		mov	r0, r3
 6652 003e FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 6653 0042 3863     		str	r0, [r7, #48]
3002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 6654              		.loc 2 3002 45 discriminator 2
 6655 0044 7B68     		ldr	r3, [r7, #4]
 6656 0046 1B68     		ldr	r3, [r3]
 6657 0048 1846     		mov	r0, r3
 6658 004a FFF7FEFF 		bl	LL_ADC_INJ_IsConversionOngoing
 6659 004e F862     		str	r0, [r7, #44]
3003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 6660              		.loc 2 3003 6 discriminator 2
 6661 0050 3B6B     		ldr	r3, [r7, #48]
 6662 0052 002B     		cmp	r3, #0
 6663 0054 40F0CA81 		bne	.L383
3004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 6664              		.loc 2 3004 7
 6665 0058 FB6A     		ldr	r3, [r7, #44]
 6666 005a 002B     		cmp	r3, #0
 6667 005c 40F0C681 		bne	.L383
3005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 317


3006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Analog watchdog configuration */
3008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
 6668              		.loc 2 3008 24
 6669 0060 3B68     		ldr	r3, [r7]
 6670 0062 1B68     		ldr	r3, [r3]
 6671              		.loc 2 3008 8
 6672 0064 9B4A     		ldr	r2, .L418
 6673 0066 9342     		cmp	r3, r2
 6674 0068 40F0A280 		bne	.L384
3009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Configuration of analog watchdog:                                    */
3011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - Set the analog watchdog enable mode: one or overall group of      */
3012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*    channels, on groups regular and-or injected.                      */
3013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       switch (AnalogWDGConfig->WatchdogMode)
 6675              		.loc 2 3013 30
 6676 006c 3B68     		ldr	r3, [r7]
 6677 006e 5B68     		ldr	r3, [r3, #4]
 6678              		.loc 2 3013 7
 6679 0070 B3F1E07F 		cmp	r3, #29360128
 6680 0074 34D0     		beq	.L385
 6681 0076 B3F1E07F 		cmp	r3, #29360128
 6682 007a 56D8     		bhi	.L386
 6683 007c B3F1C07F 		cmp	r3, #25165824
 6684 0080 4BD0     		beq	.L387
 6685 0082 B3F1C07F 		cmp	r3, #25165824
 6686 0086 50D8     		bhi	.L386
 6687 0088 B3F1A07F 		cmp	r3, #20971520
 6688 008c 1BD0     		beq	.L388
 6689 008e B3F1A07F 		cmp	r3, #20971520
 6690 0092 4AD8     		bhi	.L386
 6691 0094 B3F1807F 		cmp	r3, #16777216
 6692 0098 37D0     		beq	.L389
 6693 009a B3F1807F 		cmp	r3, #16777216
 6694 009e 44D8     		bhi	.L386
 6695 00a0 B3F5000F 		cmp	r3, #8388608
 6696 00a4 29D0     		beq	.L390
 6697 00a6 B3F5400F 		cmp	r3, #12582912
 6698 00aa 3ED1     		bne	.L386
3014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
 6699              		.loc 2 3016 11
 6700 00ac 7B68     		ldr	r3, [r7, #4]
 6701 00ae 1868     		ldr	r0, [r3]
 6702              		.loc 2 3016 72
 6703 00b0 3B68     		ldr	r3, [r7]
 6704 00b2 9B68     		ldr	r3, [r3, #8]
 6705 00b4 23F07C73 		bic	r3, r3, #66060288
 6706              		.loc 2 3016 11
 6707 00b8 43F44003 		orr	r3, r3, #12582912
 6708 00bc 1A46     		mov	r2, r3
 6709 00be 8549     		ldr	r1, .L418
 6710 00c0 FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
3017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
3018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 6711              		.loc 2 3018 11
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 318


 6712 00c4 39E0     		b	.L391
 6713              	.L388:
3019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
 6714              		.loc 2 3021 11
 6715 00c6 7B68     		ldr	r3, [r7, #4]
 6716 00c8 1868     		ldr	r0, [r3]
 6717              		.loc 2 3021 72
 6718 00ca 3B68     		ldr	r3, [r7]
 6719 00cc 9B68     		ldr	r3, [r3, #8]
 6720 00ce 23F07C73 		bic	r3, r3, #66060288
 6721              		.loc 2 3021 11
 6722 00d2 43F0A073 		orr	r3, r3, #20971520
 6723 00d6 1A46     		mov	r2, r3
 6724 00d8 7E49     		ldr	r1, .L418
 6725 00da FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
3022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
3023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 6726              		.loc 2 3023 11
 6727 00de 2CE0     		b	.L391
 6728              	.L385:
3024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
 6729              		.loc 2 3026 11
 6730 00e0 7B68     		ldr	r3, [r7, #4]
 6731 00e2 1868     		ldr	r0, [r3]
 6732              		.loc 2 3026 72
 6733 00e4 3B68     		ldr	r3, [r7]
 6734 00e6 9B68     		ldr	r3, [r3, #8]
 6735 00e8 23F07C73 		bic	r3, r3, #66060288
 6736              		.loc 2 3026 11
 6737 00ec 43F0E073 		orr	r3, r3, #29360128
 6738 00f0 1A46     		mov	r2, r3
 6739 00f2 7849     		ldr	r1, .L418
 6740 00f4 FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
3027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
3028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 6741              		.loc 2 3028 11
 6742 00f8 1FE0     		b	.L391
 6743              	.L390:
3029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG)
 6744              		.loc 2 3031 11
 6745 00fa 7B68     		ldr	r3, [r7, #4]
 6746 00fc 1B68     		ldr	r3, [r3]
 6747 00fe 764A     		ldr	r2, .L418+4
 6748 0100 7449     		ldr	r1, .L418
 6749 0102 1846     		mov	r0, r3
 6750 0104 FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
3032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 6751              		.loc 2 3032 11
 6752 0108 17E0     		b	.L391
 6753              	.L389:
3033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 319


3034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
3035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_INJ)
 6754              		.loc 2 3035 11
 6755 010a 7B68     		ldr	r3, [r7, #4]
 6756 010c 1B68     		ldr	r3, [r3]
 6757 010e 734A     		ldr	r2, .L418+8
 6758 0110 7049     		ldr	r1, .L418
 6759 0112 1846     		mov	r0, r3
 6760 0114 FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
3036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 6761              		.loc 2 3036 11
 6762 0118 0FE0     		b	.L391
 6763              	.L387:
3037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG_
 6764              		.loc 2 3039 11
 6765 011a 7B68     		ldr	r3, [r7, #4]
 6766 011c 1B68     		ldr	r3, [r3]
 6767 011e 704A     		ldr	r2, .L418+12
 6768 0120 6C49     		ldr	r1, .L418
 6769 0122 1846     		mov	r0, r3
 6770 0124 FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
3040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 6771              		.loc 2 3040 11
 6772 0128 07E0     		b	.L391
 6773              	.L386:
3041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_DISABLE);
 6774              		.loc 2 3043 11
 6775 012a 7B68     		ldr	r3, [r7, #4]
 6776 012c 1B68     		ldr	r3, [r3]
 6777 012e 0022     		movs	r2, #0
 6778 0130 6849     		ldr	r1, .L418
 6779 0132 1846     		mov	r0, r3
 6780 0134 FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
3044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 6781              		.loc 2 3044 11
 6782 0138 00BF     		nop
 6783              	.L391:
3045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Shift the offset in function of the selected ADC resolution:         */
3048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
3049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* are set to 0                                                         */
3050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDHighThresholdShifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighTh
 6784              		.loc 2 3050 36
 6785 013a 3B68     		ldr	r3, [r7]
 6786 013c 1A69     		ldr	r2, [r3, #16]
 6787 013e 7B68     		ldr	r3, [r7, #4]
 6788 0140 1B68     		ldr	r3, [r3]
 6789 0142 DB68     		ldr	r3, [r3, #12]
 6790 0144 DB08     		lsrs	r3, r3, #3
 6791 0146 03F00303 		and	r3, r3, #3
 6792 014a 5B00     		lsls	r3, r3, #1
 6793              		.loc 2 3050 34
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 320


 6794 014c 02FA03F3 		lsl	r3, r2, r3
 6795 0150 BB62     		str	r3, [r7, #40]
3051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 6796              		.loc 2 3051 36
 6797 0152 3B68     		ldr	r3, [r7]
 6798 0154 5A69     		ldr	r2, [r3, #20]
 6799 0156 7B68     		ldr	r3, [r7, #4]
 6800 0158 1B68     		ldr	r3, [r3]
 6801 015a DB68     		ldr	r3, [r3, #12]
 6802 015c DB08     		lsrs	r3, r3, #3
 6803 015e 03F00303 		and	r3, r3, #3
 6804 0162 5B00     		lsls	r3, r3, #1
 6805              		.loc 2 3051 34
 6806 0164 02FA03F3 		lsl	r3, r2, r3
 6807 0168 7B62     		str	r3, [r7, #36]
3052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, AnalogWDGConfig->WatchdogNumber, tmpAWDHighTh
 6808              		.loc 2 3054 7
 6809 016a 7B68     		ldr	r3, [r7, #4]
 6810 016c 1868     		ldr	r0, [r3]
 6811 016e 3B68     		ldr	r3, [r7]
 6812 0170 1968     		ldr	r1, [r3]
 6813 0172 7B6A     		ldr	r3, [r7, #36]
 6814 0174 BA6A     		ldr	r2, [r7, #40]
 6815 0176 FFF7FEFF 		bl	LL_ADC_ConfigAnalogWDThresholds
3055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       tmpAWDLowThresholdShifted);
3056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Update state, clear previous result related to AWD1 */
3058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 6816              		.loc 2 3058 7
 6817 017a 7B68     		ldr	r3, [r7, #4]
 6818 017c 9B6D     		ldr	r3, [r3, #88]
 6819 017e 23F48032 		bic	r2, r3, #65536
 6820 0182 7B68     		ldr	r3, [r7, #4]
 6821 0184 9A65     		str	r2, [r3, #88]
3059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear flag ADC analog watchdog */
3061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* (in case left enabled by previous ADC operations).                 */
3064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_ClearFlag_AWD1(hadc->Instance);
 6822              		.loc 2 3064 7
 6823 0186 7B68     		ldr	r3, [r7, #4]
 6824 0188 1B68     		ldr	r3, [r3]
 6825 018a 1846     		mov	r0, r3
 6826 018c FFF7FEFF 		bl	LL_ADC_ClearFlag_AWD1
3065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Configure ADC analog watchdog interrupt */
3067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (AnalogWDGConfig->ITMode == ENABLE)
 6827              		.loc 2 3067 26
 6828 0190 3B68     		ldr	r3, [r7]
 6829 0192 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 6830              		.loc 2 3067 10
 6831 0194 012B     		cmp	r3, #1
 6832 0196 05D1     		bne	.L392
3068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 321


3069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_EnableIT_AWD1(hadc->Instance);
 6833              		.loc 2 3069 9
 6834 0198 7B68     		ldr	r3, [r7, #4]
 6835 019a 1B68     		ldr	r3, [r3]
 6836 019c 1846     		mov	r0, r3
 6837 019e FFF7FEFF 		bl	LL_ADC_EnableIT_AWD1
3008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 6838              		.loc 2 3008 8
 6839 01a2 2CE1     		b	.L417
 6840              	.L392:
3070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
3072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_DisableIT_AWD1(hadc->Instance);
 6841              		.loc 2 3073 9
 6842 01a4 7B68     		ldr	r3, [r7, #4]
 6843 01a6 1B68     		ldr	r3, [r3]
 6844 01a8 1846     		mov	r0, r3
 6845 01aa FFF7FEFF 		bl	LL_ADC_DisableIT_AWD1
3008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 6846              		.loc 2 3008 8
 6847 01ae 26E1     		b	.L417
 6848              	.L384:
3074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Case of ADC_ANALOGWATCHDOG_2 or ADC_ANALOGWATCHDOG_3 */
3077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
3078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       switch (AnalogWDGConfig->WatchdogMode)
 6849              		.loc 2 3079 30
 6850 01b0 3B68     		ldr	r3, [r7]
 6851 01b2 5B68     		ldr	r3, [r3, #4]
 6852              		.loc 2 3079 7
 6853 01b4 B3F1E07F 		cmp	r3, #29360128
 6854 01b8 1DD0     		beq	.L394
 6855 01ba B3F1E07F 		cmp	r3, #29360128
 6856 01be 00F29380 		bhi	.L395
 6857 01c2 B3F1C07F 		cmp	r3, #25165824
 6858 01c6 7BD0     		beq	.L396
 6859 01c8 B3F1C07F 		cmp	r3, #25165824
 6860 01cc 00F28C80 		bhi	.L395
 6861 01d0 B3F1A07F 		cmp	r3, #20971520
 6862 01d4 0FD0     		beq	.L394
 6863 01d6 B3F1A07F 		cmp	r3, #20971520
 6864 01da 00F28580 		bhi	.L395
 6865 01de B3F1807F 		cmp	r3, #16777216
 6866 01e2 6DD0     		beq	.L396
 6867 01e4 B3F1807F 		cmp	r3, #16777216
 6868 01e8 7ED8     		bhi	.L395
 6869 01ea B3F5000F 		cmp	r3, #8388608
 6870 01ee 67D0     		beq	.L396
 6871 01f0 B3F5400F 		cmp	r3, #12582912
 6872 01f4 78D1     		bne	.L395
 6873              	.L394:
3080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 322


3083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Update AWD by bitfield to keep the possibility to monitor        */
3085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* several channels by successive calls of this function.           */
3086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
 6874              		.loc 2 3086 30
 6875 01f6 3B68     		ldr	r3, [r7]
 6876 01f8 1B68     		ldr	r3, [r3]
 6877              		.loc 2 3086 14
 6878 01fa 3A4A     		ldr	r2, .L418+16
 6879 01fc 9342     		cmp	r3, r2
 6880 01fe 2FD1     		bne	.L397
3087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
3088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD2CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig
 6881              		.loc 2 3088 13
 6882 0200 3B68     		ldr	r3, [r7]
 6883 0202 9B68     		ldr	r3, [r3, #8]
 6884 0204 C3F31203 		ubfx	r3, r3, #0, #19
 6885 0208 002B     		cmp	r3, #0
 6886 020a 08D1     		bne	.L398
 6887              		.loc 2 3088 13 is_stmt 0 discriminator 1
 6888 020c 3B68     		ldr	r3, [r7]
 6889 020e 9B68     		ldr	r3, [r3, #8]
 6890 0210 9B0E     		lsrs	r3, r3, #26
 6891 0212 03F01F03 		and	r3, r3, #31
 6892 0216 0122     		movs	r2, #1
 6893 0218 02FA03F3 		lsl	r3, r2, r3
 6894 021c 16E0     		b	.L399
 6895              	.L398:
 6896              		.loc 2 3088 13 discriminator 2
 6897 021e 3B68     		ldr	r3, [r7]
 6898 0220 9B68     		ldr	r3, [r3, #8]
 6899 0222 FB61     		str	r3, [r7, #28]
 6900              	.LBB130:
 6901              	.LBB131:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 6902              		.loc 3 1055 4 is_stmt 1 discriminator 2
 6903 0224 FB69     		ldr	r3, [r7, #28]
 6904              		.syntax unified
 6905              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6906 0226 93FAA3F3 		rbit r3, r3
 6907              	@ 0 "" 2
 6908              		.thumb
 6909              		.syntax unified
 6910 022a BB61     		str	r3, [r7, #24]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6911              		.loc 3 1068 10 discriminator 2
 6912 022c BB69     		ldr	r3, [r7, #24]
 6913 022e 3B62     		str	r3, [r7, #32]
 6914              	.LBE131:
 6915              	.LBE130:
 6916              	.LBB132:
 6917              	.LBB133:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6918              		.loc 3 1089 6 discriminator 2
 6919 0230 3B6A     		ldr	r3, [r7, #32]
 6920 0232 002B     		cmp	r3, #0
 6921 0234 01D1     		bne	.L401
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 323


1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6922              		.loc 3 1091 12
 6923 0236 2023     		movs	r3, #32
 6924 0238 03E0     		b	.L402
 6925              	.L401:
 6926              		.loc 3 1093 10
 6927 023a 3B6A     		ldr	r3, [r7, #32]
 6928 023c B3FA83F3 		clz	r3, r3
 6929 0240 DBB2     		uxtb	r3, r3
 6930              	.L402:
 6931              	.LBE133:
 6932              	.LBE132:
 6933              		.loc 2 3088 13
 6934 0242 03F01F03 		and	r3, r3, #31
 6935 0246 0122     		movs	r2, #1
 6936 0248 02FA03F3 		lsl	r3, r2, r3
 6937              	.L399:
 6938              		.loc 2 3088 13 is_stmt 0 discriminator 4
 6939 024c 7A68     		ldr	r2, [r7, #4]
 6940 024e 1268     		ldr	r2, [r2]
 6941 0250 D2F8A010 		ldr	r1, [r2, #160]
 6942 0254 7A68     		ldr	r2, [r7, #4]
 6943 0256 1268     		ldr	r2, [r2]
 6944 0258 0B43     		orrs	r3, r3, r1
 6945 025a C2F8A030 		str	r3, [r2, #160]
3089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
3090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           else
3091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
3092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD3CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig
3093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
3094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 6946              		.loc 2 3094 11 is_stmt 1 discriminator 4
 6947 025e 4CE0     		b	.L409
 6948              	.L397:
3092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 6949              		.loc 2 3092 13
 6950 0260 3B68     		ldr	r3, [r7]
 6951 0262 9B68     		ldr	r3, [r3, #8]
 6952 0264 C3F31203 		ubfx	r3, r3, #0, #19
 6953 0268 002B     		cmp	r3, #0
 6954 026a 08D1     		bne	.L404
3092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 6955              		.loc 2 3092 13 is_stmt 0 discriminator 1
 6956 026c 3B68     		ldr	r3, [r7]
 6957 026e 9B68     		ldr	r3, [r3, #8]
 6958 0270 9B0E     		lsrs	r3, r3, #26
 6959 0272 03F01F03 		and	r3, r3, #31
 6960 0276 0122     		movs	r2, #1
 6961 0278 02FA03F3 		lsl	r3, r2, r3
 6962 027c 16E0     		b	.L405
 6963              	.L404:
3092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 6964              		.loc 2 3092 13 discriminator 2
 6965 027e 3B68     		ldr	r3, [r7]
 6966 0280 9B68     		ldr	r3, [r3, #8]
 6967 0282 3B61     		str	r3, [r7, #16]
 6968              	.LBB134:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 324


 6969              	.LBB135:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 6970              		.loc 3 1055 4 is_stmt 1 discriminator 2
 6971 0284 3B69     		ldr	r3, [r7, #16]
 6972              		.syntax unified
 6973              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6974 0286 93FAA3F3 		rbit r3, r3
 6975              	@ 0 "" 2
 6976              		.thumb
 6977              		.syntax unified
 6978 028a FB60     		str	r3, [r7, #12]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6979              		.loc 3 1068 10 discriminator 2
 6980 028c FB68     		ldr	r3, [r7, #12]
 6981 028e 7B61     		str	r3, [r7, #20]
 6982              	.LBE135:
 6983              	.LBE134:
 6984              	.LBB136:
 6985              	.LBB137:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6986              		.loc 3 1089 6 discriminator 2
 6987 0290 7B69     		ldr	r3, [r7, #20]
 6988 0292 002B     		cmp	r3, #0
 6989 0294 01D1     		bne	.L407
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6990              		.loc 3 1091 12
 6991 0296 2023     		movs	r3, #32
 6992 0298 03E0     		b	.L408
 6993              	.L407:
 6994              		.loc 3 1093 10
 6995 029a 7B69     		ldr	r3, [r7, #20]
 6996 029c B3FA83F3 		clz	r3, r3
 6997 02a0 DBB2     		uxtb	r3, r3
 6998              	.L408:
 6999              	.LBE137:
 7000              	.LBE136:
3092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 7001              		.loc 2 3092 13
 7002 02a2 03F01F03 		and	r3, r3, #31
 7003 02a6 0122     		movs	r2, #1
 7004 02a8 02FA03F3 		lsl	r3, r2, r3
 7005              	.L405:
3092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 7006              		.loc 2 3092 13 is_stmt 0 discriminator 4
 7007 02ac 7A68     		ldr	r2, [r7, #4]
 7008 02ae 1268     		ldr	r2, [r2]
 7009 02b0 D2F8A410 		ldr	r1, [r2, #164]
 7010 02b4 7A68     		ldr	r2, [r7, #4]
 7011 02b6 1268     		ldr	r2, [r2]
 7012 02b8 0B43     		orrs	r3, r3, r1
 7013 02ba C2F8A430 		str	r3, [r2, #164]
 7014              		.loc 2 3094 11 is_stmt 1 discriminator 4
 7015 02be 1CE0     		b	.L409
 7016              	.L396:
3095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 325


3098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
 7017              		.loc 2 3099 11
 7018 02c0 7B68     		ldr	r3, [r7, #4]
 7019 02c2 1868     		ldr	r0, [r3]
 7020 02c4 3B68     		ldr	r3, [r7]
 7021 02c6 1B68     		ldr	r3, [r3]
 7022 02c8 054A     		ldr	r2, .L418+12
 7023 02ca 1946     		mov	r1, r3
 7024 02cc FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
3100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 7025              		.loc 2 3100 11
 7026 02d0 13E0     		b	.L409
 7027              	.L419:
 7028 02d2 00BF     		.align	2
 7029              	.L418:
 7030 02d4 0000C07D 		.word	2109734912
 7031 02d8 FFFF8700 		.word	8912895
 7032 02dc FFFF0701 		.word	17301503
 7033 02e0 FFFF8701 		.word	25690111
 7034 02e4 FFFF1700 		.word	1572863
 7035              	.L395:
3101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
 7036              		.loc 2 3103 11
 7037 02e8 7B68     		ldr	r3, [r7, #4]
 7038 02ea 1868     		ldr	r0, [r3]
 7039 02ec 3B68     		ldr	r3, [r7]
 7040 02ee 1B68     		ldr	r3, [r3]
 7041 02f0 0022     		movs	r2, #0
 7042 02f2 1946     		mov	r1, r3
 7043 02f4 FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
3104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 7044              		.loc 2 3104 11
 7045 02f8 00BF     		nop
 7046              	.L409:
3105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Shift the thresholds in function of the selected ADC resolution      */
3108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* have to be left-aligned on bit 7, the LSB (right bits) are set to 0  */
3109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDHighThresholdShifted = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighT
 7047              		.loc 2 3109 36
 7048 02fa 7B68     		ldr	r3, [r7, #4]
 7049 02fc 1B68     		ldr	r3, [r3]
 7050 02fe DB68     		ldr	r3, [r3, #12]
 7051 0300 03F01803 		and	r3, r3, #24
 7052 0304 182B     		cmp	r3, #24
 7053 0306 0FD0     		beq	.L410
 7054              		.loc 2 3109 36 is_stmt 0 discriminator 1
 7055 0308 3B68     		ldr	r3, [r7]
 7056 030a 1A69     		ldr	r2, [r3, #16]
 7057 030c 7B68     		ldr	r3, [r7, #4]
 7058 030e 1B68     		ldr	r3, [r3]
 7059 0310 DB68     		ldr	r3, [r3, #12]
 7060 0312 DB08     		lsrs	r3, r3, #3
 7061 0314 03F00303 		and	r3, r3, #3
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 326


 7062 0318 C3F10203 		rsb	r3, r3, #2
 7063 031c 5B00     		lsls	r3, r3, #1
 7064 031e 03F01E03 		and	r3, r3, #30
 7065 0322 22FA03F3 		lsr	r3, r2, r3
 7066 0326 02E0     		b	.L411
 7067              	.L410:
 7068              		.loc 2 3109 36 discriminator 2
 7069 0328 3B68     		ldr	r3, [r7]
 7070 032a 1B69     		ldr	r3, [r3, #16]
 7071 032c 9B00     		lsls	r3, r3, #2
 7072              	.L411:
 7073              		.loc 2 3109 34 is_stmt 1 discriminator 4
 7074 032e BB62     		str	r3, [r7, #40]
3110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 7075              		.loc 2 3110 36 discriminator 4
 7076 0330 7B68     		ldr	r3, [r7, #4]
 7077 0332 1B68     		ldr	r3, [r3]
 7078 0334 DB68     		ldr	r3, [r3, #12]
 7079 0336 03F01803 		and	r3, r3, #24
 7080 033a 182B     		cmp	r3, #24
 7081 033c 0FD0     		beq	.L412
 7082              		.loc 2 3110 36 is_stmt 0 discriminator 1
 7083 033e 3B68     		ldr	r3, [r7]
 7084 0340 5A69     		ldr	r2, [r3, #20]
 7085 0342 7B68     		ldr	r3, [r7, #4]
 7086 0344 1B68     		ldr	r3, [r3]
 7087 0346 DB68     		ldr	r3, [r3, #12]
 7088 0348 DB08     		lsrs	r3, r3, #3
 7089 034a 03F00303 		and	r3, r3, #3
 7090 034e C3F10203 		rsb	r3, r3, #2
 7091 0352 5B00     		lsls	r3, r3, #1
 7092 0354 03F01E03 		and	r3, r3, #30
 7093 0358 22FA03F3 		lsr	r3, r2, r3
 7094 035c 02E0     		b	.L413
 7095              	.L412:
 7096              		.loc 2 3110 36 discriminator 2
 7097 035e 3B68     		ldr	r3, [r7]
 7098 0360 5B69     		ldr	r3, [r3, #20]
 7099 0362 9B00     		lsls	r3, r3, #2
 7100              	.L413:
 7101              		.loc 2 3110 34 is_stmt 1 discriminator 4
 7102 0364 7B62     		str	r3, [r7, #36]
3111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, AnalogWDGConfig->WatchdogNumber, tmpAWDHighTh
 7103              		.loc 2 3113 7 discriminator 4
 7104 0366 7B68     		ldr	r3, [r7, #4]
 7105 0368 1868     		ldr	r0, [r3]
 7106 036a 3B68     		ldr	r3, [r7]
 7107 036c 1968     		ldr	r1, [r3]
 7108 036e 7B6A     		ldr	r3, [r7, #36]
 7109 0370 BA6A     		ldr	r2, [r7, #40]
 7110 0372 FFF7FEFF 		bl	LL_ADC_ConfigAnalogWDThresholds
3114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       tmpAWDLowThresholdShifted);
3115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
 7111              		.loc 2 3116 26 discriminator 4
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 327


 7112 0376 3B68     		ldr	r3, [r7]
 7113 0378 1B68     		ldr	r3, [r3]
 7114              		.loc 2 3116 10 discriminator 4
 7115 037a 264A     		ldr	r2, .L420
 7116 037c 9342     		cmp	r3, r2
 7117 037e 1AD1     		bne	.L414
3117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update state, clear previous result related to AWD2 */
3119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD2);
 7118              		.loc 2 3119 9
 7119 0380 7B68     		ldr	r3, [r7, #4]
 7120 0382 9B6D     		ldr	r3, [r3, #88]
 7121 0384 23F40032 		bic	r2, r3, #131072
 7122 0388 7B68     		ldr	r3, [r7, #4]
 7123 038a 9A65     		str	r2, [r3, #88]
3120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD2(hadc->Instance);
 7124              		.loc 2 3125 9
 7125 038c 7B68     		ldr	r3, [r7, #4]
 7126 038e 1B68     		ldr	r3, [r3]
 7127 0390 1846     		mov	r0, r3
 7128 0392 FFF7FEFF 		bl	LL_ADC_ClearFlag_AWD2
3126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (AnalogWDGConfig->ITMode == ENABLE)
 7129              		.loc 2 3128 28
 7130 0396 3B68     		ldr	r3, [r7]
 7131 0398 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 7132              		.loc 2 3128 12
 7133 039a 012B     		cmp	r3, #1
 7134 039c 05D1     		bne	.L415
3129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_EnableIT_AWD2(hadc->Instance);
 7135              		.loc 2 3130 11
 7136 039e 7B68     		ldr	r3, [r7, #4]
 7137 03a0 1B68     		ldr	r3, [r3]
 7138 03a2 1846     		mov	r0, r3
 7139 03a4 FFF7FEFF 		bl	LL_ADC_EnableIT_AWD2
3008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 7140              		.loc 2 3008 8
 7141 03a8 29E0     		b	.L417
 7142              	.L415:
3131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         else
3133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_DisableIT_AWD2(hadc->Instance);
 7143              		.loc 2 3134 11
 7144 03aa 7B68     		ldr	r3, [r7, #4]
 7145 03ac 1B68     		ldr	r3, [r3]
 7146 03ae 1846     		mov	r0, r3
 7147 03b0 FFF7FEFF 		bl	LL_ADC_DisableIT_AWD2
3008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 7148              		.loc 2 3008 8
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 328


 7149 03b4 23E0     		b	.L417
 7150              	.L414:
3135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_3) */
3138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
3139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update state, clear previous result related to AWD3 */
3141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD3);
 7151              		.loc 2 3141 9
 7152 03b6 7B68     		ldr	r3, [r7, #4]
 7153 03b8 9B6D     		ldr	r3, [r3, #88]
 7154 03ba 23F48022 		bic	r2, r3, #262144
 7155 03be 7B68     		ldr	r3, [r7, #4]
 7156 03c0 9A65     		str	r2, [r3, #88]
3142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD3(hadc->Instance);
 7157              		.loc 2 3147 9
 7158 03c2 7B68     		ldr	r3, [r7, #4]
 7159 03c4 1B68     		ldr	r3, [r3]
 7160 03c6 1846     		mov	r0, r3
 7161 03c8 FFF7FEFF 		bl	LL_ADC_ClearFlag_AWD3
3148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (AnalogWDGConfig->ITMode == ENABLE)
 7162              		.loc 2 3150 28
 7163 03cc 3B68     		ldr	r3, [r7]
 7164 03ce 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 7165              		.loc 2 3150 12
 7166 03d0 012B     		cmp	r3, #1
 7167 03d2 05D1     		bne	.L416
3151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_EnableIT_AWD3(hadc->Instance);
 7168              		.loc 2 3152 11
 7169 03d4 7B68     		ldr	r3, [r7, #4]
 7170 03d6 1B68     		ldr	r3, [r3]
 7171 03d8 1846     		mov	r0, r3
 7172 03da FFF7FEFF 		bl	LL_ADC_EnableIT_AWD3
3008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 7173              		.loc 2 3008 8
 7174 03de 0EE0     		b	.L417
 7175              	.L416:
3153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         else
3155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_DisableIT_AWD3(hadc->Instance);
 7176              		.loc 2 3156 11
 7177 03e0 7B68     		ldr	r3, [r7, #4]
 7178 03e2 1B68     		ldr	r3, [r3]
 7179 03e4 1846     		mov	r0, r3
 7180 03e6 FFF7FEFF 		bl	LL_ADC_DisableIT_AWD3
3008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 7181              		.loc 2 3008 8
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 329


 7182 03ea 08E0     		b	.L417
 7183              	.L383:
3157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* If a conversion is on going on ADC group regular or injected, no update  */
3163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* could be done on neither of the AWD configuration structure parameters.  */
3164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
3165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update ADC state machine to error */
3167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 7184              		.loc 2 3167 5
 7185 03ec 7B68     		ldr	r3, [r7, #4]
 7186 03ee 9B6D     		ldr	r3, [r3, #88]
 7187 03f0 43F02002 		orr	r2, r3, #32
 7188 03f4 7B68     		ldr	r3, [r7, #4]
 7189 03f6 9A65     		str	r2, [r3, #88]
3168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 7190              		.loc 2 3169 20
 7191 03f8 0123     		movs	r3, #1
 7192 03fa 87F83730 		strb	r3, [r7, #55]
 7193              	.L417:
3170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
3172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 7194              		.loc 2 3172 3
 7195 03fe 7B68     		ldr	r3, [r7, #4]
 7196 0400 0022     		movs	r2, #0
 7197 0402 83F85420 		strb	r2, [r3, #84]
3173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
3175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 7198              		.loc 2 3175 10
 7199 0406 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 7200              	.L382:
3176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 7201              		.loc 2 3176 1
 7202 040a 1846     		mov	r0, r3
 7203 040c 3837     		adds	r7, r7, #56
 7204              		.cfi_def_cfa_offset 8
 7205 040e BD46     		mov	sp, r7
 7206              		.cfi_def_cfa_register 13
 7207              		@ sp needed
 7208 0410 80BD     		pop	{r7, pc}
 7209              	.L421:
 7210 0412 00BF     		.align	2
 7211              	.L420:
 7212 0414 FFFF1700 		.word	1572863
 7213              		.cfi_endproc
 7214              	.LFE340:
 7216              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 7217              		.align	1
 7218              		.global	HAL_ADC_GetState
 7219              		.syntax unified
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 330


 7220              		.thumb
 7221              		.thumb_func
 7223              	HAL_ADC_GetState:
 7224              	.LFB341:
3177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
3181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
3184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *  @brief    ADC Peripheral State functions
3185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
3186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @verbatim
3187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
3188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ##### Peripheral state and errors functions #####
3189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
3190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
3191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the
3192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     peripheral.
3193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Check the ADC state
3194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Check the ADC error code
3195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @endverbatim
3197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
3198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Return the ADC handle state.
3202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   ADC state machine is managed by bitfields, ADC status must be
3203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         compared with states bits.
3204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For example:
3205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_REG_BUSY) != 0UL) "
3206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "
3207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval ADC handle state (bitfield on 32 bits)
3209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef *hadc)
3211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 7225              		.loc 2 3211 1
 7226              		.cfi_startproc
 7227              		@ args = 0, pretend = 0, frame = 8
 7228              		@ frame_needed = 1, uses_anonymous_args = 0
 7229              		@ link register save eliminated.
 7230 0000 80B4     		push	{r7}
 7231              		.cfi_def_cfa_offset 4
 7232              		.cfi_offset 7, -4
 7233 0002 83B0     		sub	sp, sp, #12
 7234              		.cfi_def_cfa_offset 16
 7235 0004 00AF     		add	r7, sp, #0
 7236              		.cfi_def_cfa_register 7
 7237 0006 7860     		str	r0, [r7, #4]
3212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
3213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return ADC handle state */
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return hadc->State;
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 331


 7238              		.loc 2 3216 14
 7239 0008 7B68     		ldr	r3, [r7, #4]
 7240 000a 9B6D     		ldr	r3, [r3, #88]
3217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 7241              		.loc 2 3217 1
 7242 000c 1846     		mov	r0, r3
 7243 000e 0C37     		adds	r7, r7, #12
 7244              		.cfi_def_cfa_offset 4
 7245 0010 BD46     		mov	sp, r7
 7246              		.cfi_def_cfa_register 13
 7247              		@ sp needed
 7248 0012 5DF8047B 		ldr	r7, [sp], #4
 7249              		.cfi_restore 7
 7250              		.cfi_def_cfa_offset 0
 7251 0016 7047     		bx	lr
 7252              		.cfi_endproc
 7253              	.LFE341:
 7255              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 7256              		.align	1
 7257              		.global	HAL_ADC_GetError
 7258              		.syntax unified
 7259              		.thumb
 7260              		.thumb_func
 7262              	HAL_ADC_GetError:
 7263              	.LFB342:
3218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Return the ADC error code.
3221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval ADC error code (bitfield on 32 bits)
3223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
3225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 7264              		.loc 2 3225 1
 7265              		.cfi_startproc
 7266              		@ args = 0, pretend = 0, frame = 8
 7267              		@ frame_needed = 1, uses_anonymous_args = 0
 7268              		@ link register save eliminated.
 7269 0000 80B4     		push	{r7}
 7270              		.cfi_def_cfa_offset 4
 7271              		.cfi_offset 7, -4
 7272 0002 83B0     		sub	sp, sp, #12
 7273              		.cfi_def_cfa_offset 16
 7274 0004 00AF     		add	r7, sp, #0
 7275              		.cfi_def_cfa_register 7
 7276 0006 7860     		str	r0, [r7, #4]
3226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
3227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return hadc->ErrorCode;
 7277              		.loc 2 3229 14
 7278 0008 7B68     		ldr	r3, [r7, #4]
 7279 000a DB6D     		ldr	r3, [r3, #92]
3230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 7280              		.loc 2 3230 1
 7281 000c 1846     		mov	r0, r3
 7282 000e 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 332


 7283              		.cfi_def_cfa_offset 4
 7284 0010 BD46     		mov	sp, r7
 7285              		.cfi_def_cfa_register 13
 7286              		@ sp needed
 7287 0012 5DF8047B 		ldr	r7, [sp], #4
 7288              		.cfi_restore 7
 7289              		.cfi_def_cfa_offset 0
 7290 0016 7047     		bx	lr
 7291              		.cfi_endproc
 7292              	.LFE342:
 7294              		.section	.text.ADC_ConversionStop,"ax",%progbits
 7295              		.align	1
 7296              		.global	ADC_ConversionStop
 7297              		.syntax unified
 7298              		.thumb
 7299              		.thumb_func
 7301              	ADC_ConversionStop:
 7302              	.LFB343:
3231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
3234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
3238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
3241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
3242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Stop ADC conversion.
3246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param ConversionGroup ADC group regular and/or injected.
3248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          This parameter can be one of the following values:
3249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_GROUP           ADC regular conversion type.
3250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_INJECTED_GROUP          ADC injected conversion type.
3251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_INJECTED_GROUP  ADC regular and injected conversion type.
3252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
3253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef *hadc, uint32_t ConversionGroup)
3255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 7303              		.loc 2 3255 1
 7304              		.cfi_startproc
 7305              		@ args = 0, pretend = 0, frame = 32
 7306              		@ frame_needed = 1, uses_anonymous_args = 0
 7307 0000 80B5     		push	{r7, lr}
 7308              		.cfi_def_cfa_offset 8
 7309              		.cfi_offset 7, -8
 7310              		.cfi_offset 14, -4
 7311 0002 88B0     		sub	sp, sp, #32
 7312              		.cfi_def_cfa_offset 40
 7313 0004 00AF     		add	r7, sp, #0
 7314              		.cfi_def_cfa_register 7
 7315 0006 7860     		str	r0, [r7, #4]
 7316 0008 3960     		str	r1, [r7]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 333


3256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
3257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0UL;
 7317              		.loc 2 3257 12
 7318 000a 0023     		movs	r3, #0
 7319 000c FB61     		str	r3, [r7, #28]
3258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
 7320              		.loc 2 3258 12
 7321 000e 3B68     		ldr	r3, [r7]
 7322 0010 BB61     		str	r3, [r7, #24]
3259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART;
3260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
3261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
3262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
3264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
3266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verification if ADC is not already stopped (on regular and injected      */
3268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* groups) to bypass this function if not needed.                           */
3269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 7323              		.loc 2 3269 44
 7324 0012 7B68     		ldr	r3, [r7, #4]
 7325 0014 1B68     		ldr	r3, [r3]
 7326 0016 1846     		mov	r0, r3
 7327 0018 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 7328 001c 3861     		str	r0, [r7, #16]
3270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 7329              		.loc 2 3270 45
 7330 001e 7B68     		ldr	r3, [r7, #4]
 7331 0020 1B68     		ldr	r3, [r3]
 7332 0022 1846     		mov	r0, r3
 7333 0024 FFF7FEFF 		bl	LL_ADC_INJ_IsConversionOngoing
 7334 0028 F860     		str	r0, [r7, #12]
3271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular != 0UL)
 7335              		.loc 2 3271 6
 7336 002a 3B69     		ldr	r3, [r7, #16]
 7337 002c 002B     		cmp	r3, #0
 7338 002e 03D1     		bne	.L427
3272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
 7339              		.loc 2 3272 7
 7340 0030 FB68     		ldr	r3, [r7, #12]
 7341 0032 002B     		cmp	r3, #0
 7342 0034 00F09880 		beq	.L428
 7343              	.L427:
3273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
3274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Particular case of continuous auto-injection mode combined with        */
3276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* auto-delay mode.                                                       */
3277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* In auto-injection mode, regular group stop ADC_CR_ADSTP is used (not   */
3278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* injected group stop ADC_CR_JADSTP).                                    */
3279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Procedure to be followed: Wait until JEOS=1, clear JEOS, set ADSTP=1   */
3280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* (see reference manual).                                                */
3281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (((hadc->Instance->CFGR & ADC_CFGR_JAUTO) != 0UL)
 7344              		.loc 2 3281 15
 7345 0038 7B68     		ldr	r3, [r7, #4]
 7346 003a 1B68     		ldr	r3, [r3]
 7347              		.loc 2 3281 25
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 334


 7348 003c DB68     		ldr	r3, [r3, #12]
 7349              		.loc 2 3281 32
 7350 003e 03F00073 		and	r3, r3, #33554432
 7351              		.loc 2 3281 8
 7352 0042 002B     		cmp	r3, #0
 7353 0044 2AD0     		beq	.L429
3282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 7354              		.loc 2 3282 23
 7355 0046 7B68     		ldr	r3, [r7, #4]
 7356 0048 5B7E     		ldrb	r3, [r3, #25]	@ zero_extendqisi2
 7357              		.loc 2 3282 9
 7358 004a 012B     		cmp	r3, #1
 7359 004c 26D1     		bne	.L429
3283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (hadc->Init.LowPowerAutoWait == ENABLE)
 7360              		.loc 2 3283 23
 7361 004e 7B68     		ldr	r3, [r7, #4]
 7362 0050 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 7363              		.loc 2 3283 9
 7364 0052 012B     		cmp	r3, #1
 7365 0054 22D1     		bne	.L429
3284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
3285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Use stop of regular group */
3287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       conversion_group_reassigned = ADC_REGULAR_GROUP;
 7366              		.loc 2 3287 35
 7367 0056 0123     		movs	r3, #1
 7368 0058 BB61     		str	r3, [r7, #24]
3288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Wait until JEOS=1 (maximum Timeout: 4 injected conversions) */
3290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) == 0UL)
 7369              		.loc 2 3290 13
 7370 005a 14E0     		b	.L430
 7371              	.L433:
3291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (Conversion_Timeout_CPU_cycles >= (ADC_CONVERSION_TIME_MAX_CPU_CYCLES * 4UL))
 7372              		.loc 2 3292 12
 7373 005c FB69     		ldr	r3, [r7, #28]
 7374 005e 454A     		ldr	r2, .L441
 7375 0060 9342     		cmp	r3, r2
 7376 0062 0DD9     		bls	.L431
3293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Update ADC state machine to error */
3295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 7377              		.loc 2 3295 11
 7378 0064 7B68     		ldr	r3, [r7, #4]
 7379 0066 9B6D     		ldr	r3, [r3, #88]
 7380 0068 43F01002 		orr	r2, r3, #16
 7381 006c 7B68     		ldr	r3, [r7, #4]
 7382 006e 9A65     		str	r2, [r3, #88]
3296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 7383              		.loc 2 3298 11
 7384 0070 7B68     		ldr	r3, [r7, #4]
 7385 0072 DB6D     		ldr	r3, [r3, #92]
 7386 0074 43F00102 		orr	r2, r3, #1
 7387 0078 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 335


 7388 007a DA65     		str	r2, [r3, #92]
3299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           return HAL_ERROR;
 7389              		.loc 2 3300 18
 7390 007c 0123     		movs	r3, #1
 7391 007e 74E0     		b	.L432
 7392              	.L431:
3301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         Conversion_Timeout_CPU_cycles ++;
 7393              		.loc 2 3302 39
 7394 0080 FB69     		ldr	r3, [r7, #28]
 7395 0082 0133     		adds	r3, r3, #1
 7396 0084 FB61     		str	r3, [r7, #28]
 7397              	.L430:
3290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 7398              		.loc 2 3290 14
 7399 0086 7B68     		ldr	r3, [r7, #4]
 7400 0088 1B68     		ldr	r3, [r3]
 7401 008a 1B68     		ldr	r3, [r3]
 7402 008c 03F04003 		and	r3, r3, #64
3290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 7403              		.loc 2 3290 54
 7404 0090 402B     		cmp	r3, #64
 7405 0092 E3D1     		bne	.L433
3303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear JEOS */
3306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOS);
 7406              		.loc 2 3306 7
 7407 0094 7B68     		ldr	r3, [r7, #4]
 7408 0096 1B68     		ldr	r3, [r3]
 7409 0098 4022     		movs	r2, #64
 7410 009a 1A60     		str	r2, [r3]
 7411              	.L429:
3307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Stop potential conversion on going on ADC group regular */
3310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (conversion_group_reassigned != ADC_INJECTED_GROUP)
 7412              		.loc 2 3310 8
 7413 009c BB69     		ldr	r3, [r7, #24]
 7414 009e 022B     		cmp	r3, #2
 7415 00a0 14D0     		beq	.L434
3311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
3313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
 7416              		.loc 2 3313 11
 7417 00a2 7B68     		ldr	r3, [r7, #4]
 7418 00a4 1B68     		ldr	r3, [r3]
 7419 00a6 1846     		mov	r0, r3
 7420 00a8 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 7421 00ac 0346     		mov	r3, r0
 7422              		.loc 2 3313 10
 7423 00ae 002B     		cmp	r3, #0
 7424 00b0 0CD0     		beq	.L434
3314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
 7425              		.loc 2 3315 13
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 336


 7426 00b2 7B68     		ldr	r3, [r7, #4]
 7427 00b4 1B68     		ldr	r3, [r3]
 7428 00b6 1846     		mov	r0, r3
 7429 00b8 FFF7FEFF 		bl	LL_ADC_IsDisableOngoing
 7430 00bc 0346     		mov	r3, r0
 7431              		.loc 2 3315 12
 7432 00be 002B     		cmp	r3, #0
 7433 00c0 04D1     		bne	.L434
3316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Stop ADC group regular conversion */
3318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_REG_StopConversion(hadc->Instance);
 7434              		.loc 2 3318 11
 7435 00c2 7B68     		ldr	r3, [r7, #4]
 7436 00c4 1B68     		ldr	r3, [r3]
 7437 00c6 1846     		mov	r0, r3
 7438 00c8 FFF7FEFF 		bl	LL_ADC_REG_StopConversion
 7439              	.L434:
3319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Stop potential conversion on going on ADC group injected */
3324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (conversion_group_reassigned != ADC_REGULAR_GROUP)
 7440              		.loc 2 3324 8
 7441 00cc BB69     		ldr	r3, [r7, #24]
 7442 00ce 012B     		cmp	r3, #1
 7443 00d0 14D0     		beq	.L435
3325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Software is allowed to set JADSTP only when JADSTART=1 and ADDIS=0 */
3327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
 7444              		.loc 2 3327 11
 7445 00d2 7B68     		ldr	r3, [r7, #4]
 7446 00d4 1B68     		ldr	r3, [r3]
 7447 00d6 1846     		mov	r0, r3
 7448 00d8 FFF7FEFF 		bl	LL_ADC_INJ_IsConversionOngoing
 7449 00dc 0346     		mov	r3, r0
 7450              		.loc 2 3327 10
 7451 00de 002B     		cmp	r3, #0
 7452 00e0 0CD0     		beq	.L435
3328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
 7453              		.loc 2 3329 13
 7454 00e2 7B68     		ldr	r3, [r7, #4]
 7455 00e4 1B68     		ldr	r3, [r3]
 7456 00e6 1846     		mov	r0, r3
 7457 00e8 FFF7FEFF 		bl	LL_ADC_IsDisableOngoing
 7458 00ec 0346     		mov	r3, r0
 7459              		.loc 2 3329 12
 7460 00ee 002B     		cmp	r3, #0
 7461 00f0 04D1     		bne	.L435
3330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Stop ADC group injected conversion */
3332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_INJ_StopConversion(hadc->Instance);
 7462              		.loc 2 3332 11
 7463 00f2 7B68     		ldr	r3, [r7, #4]
 7464 00f4 1B68     		ldr	r3, [r3]
 7465 00f6 1846     		mov	r0, r3
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 337


 7466 00f8 FFF7FEFF 		bl	LL_ADC_INJ_StopConversion
 7467              	.L435:
3333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Selection of start and stop bits with respect to the regular or injected group */
3338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     switch (conversion_group_reassigned)
 7468              		.loc 2 3338 5
 7469 00fc BB69     		ldr	r3, [r7, #24]
 7470 00fe 022B     		cmp	r3, #2
 7471 0100 05D0     		beq	.L436
 7472 0102 BB69     		ldr	r3, [r7, #24]
 7473 0104 032B     		cmp	r3, #3
 7474 0106 05D1     		bne	.L437
3339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case ADC_REGULAR_INJECTED_GROUP:
3341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = (ADC_CR_ADSTART | ADC_CR_JADSTART);
 7475              		.loc 2 3341 37
 7476 0108 0C23     		movs	r3, #12
 7477 010a 7B61     		str	r3, [r7, #20]
3342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 7478              		.loc 2 3342 9
 7479 010c 05E0     		b	.L438
 7480              	.L436:
3343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case ADC_INJECTED_GROUP:
3344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_JADSTART;
 7481              		.loc 2 3344 37
 7482 010e 0823     		movs	r3, #8
 7483 0110 7B61     		str	r3, [r7, #20]
3345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 7484              		.loc 2 3345 9
 7485 0112 02E0     		b	.L438
 7486              	.L437:
3346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Case ADC_REGULAR_GROUP only*/
3347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       default:
3348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_ADSTART;
 7487              		.loc 2 3348 37
 7488 0114 0423     		movs	r3, #4
 7489 0116 7B61     		str	r3, [r7, #20]
3349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 7490              		.loc 2 3349 9
 7491 0118 00BF     		nop
 7492              	.L438:
3350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Wait for conversion effectively stopped */
3353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tickstart = HAL_GetTick();
 7493              		.loc 2 3353 17
 7494 011a FFF7FEFF 		bl	HAL_GetTick
 7495 011e B860     		str	r0, [r7, #8]
3354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while ((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
 7496              		.loc 2 3355 11
 7497 0120 1BE0     		b	.L439
 7498              	.L440:
3356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 338


3357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
 7499              		.loc 2 3357 12
 7500 0122 FFF7FEFF 		bl	HAL_GetTick
 7501 0126 0246     		mov	r2, r0
 7502              		.loc 2 3357 26
 7503 0128 BB68     		ldr	r3, [r7, #8]
 7504 012a D31A     		subs	r3, r2, r3
 7505              		.loc 2 3357 10
 7506 012c 052B     		cmp	r3, #5
 7507 012e 14D9     		bls	.L439
3358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
 7508              		.loc 2 3360 18
 7509 0130 7B68     		ldr	r3, [r7, #4]
 7510 0132 1B68     		ldr	r3, [r3]
 7511              		.loc 2 3360 28
 7512 0134 9A68     		ldr	r2, [r3, #8]
 7513              		.loc 2 3360 33
 7514 0136 7B69     		ldr	r3, [r7, #20]
 7515 0138 1340     		ands	r3, r3, r2
 7516              		.loc 2 3360 12
 7517 013a 002B     		cmp	r3, #0
 7518 013c 0DD0     		beq	.L439
3361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Update ADC state machine to error */
3363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 7519              		.loc 2 3363 11
 7520 013e 7B68     		ldr	r3, [r7, #4]
 7521 0140 9B6D     		ldr	r3, [r3, #88]
 7522 0142 43F01002 		orr	r2, r3, #16
 7523 0146 7B68     		ldr	r3, [r7, #4]
 7524 0148 9A65     		str	r2, [r3, #88]
3364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 7525              		.loc 2 3366 11
 7526 014a 7B68     		ldr	r3, [r7, #4]
 7527 014c DB6D     		ldr	r3, [r3, #92]
 7528 014e 43F00102 		orr	r2, r3, #1
 7529 0152 7B68     		ldr	r3, [r7, #4]
 7530 0154 DA65     		str	r2, [r3, #92]
3367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           return HAL_ERROR;
 7531              		.loc 2 3368 18
 7532 0156 0123     		movs	r3, #1
 7533 0158 07E0     		b	.L432
 7534              	.L439:
3355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 7535              		.loc 2 3355 17
 7536 015a 7B68     		ldr	r3, [r7, #4]
 7537 015c 1B68     		ldr	r3, [r3]
3355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 7538              		.loc 2 3355 27
 7539 015e 9A68     		ldr	r2, [r3, #8]
3355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 7540              		.loc 2 3355 32
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 339


 7541 0160 7B69     		ldr	r3, [r7, #20]
 7542 0162 1340     		ands	r3, r3, r2
3355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 7543              		.loc 2 3355 63
 7544 0164 002B     		cmp	r3, #0
 7545 0166 DCD1     		bne	.L440
 7546              	.L428:
3369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return HAL status */
3376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
 7547              		.loc 2 3376 10
 7548 0168 0023     		movs	r3, #0
 7549              	.L432:
3377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 7550              		.loc 2 3377 1
 7551 016a 1846     		mov	r0, r3
 7552 016c 2037     		adds	r7, r7, #32
 7553              		.cfi_def_cfa_offset 8
 7554 016e BD46     		mov	sp, r7
 7555              		.cfi_def_cfa_register 13
 7556              		@ sp needed
 7557 0170 80BD     		pop	{r7, pc}
 7558              	.L442:
 7559 0172 00BF     		.align	2
 7560              	.L441:
 7561 0174 FFFF3FA3 		.word	-1556086785
 7562              		.cfi_endproc
 7563              	.LFE343:
 7565              		.section	.text.ADC_Enable,"ax",%progbits
 7566              		.align	1
 7567              		.global	ADC_Enable
 7568              		.syntax unified
 7569              		.thumb
 7570              		.thumb_func
 7572              	ADC_Enable:
 7573              	.LFB344:
3378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Enable the selected ADC.
3381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
3382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
3383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
3385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef *hadc)
3387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 7574              		.loc 2 3387 1
 7575              		.cfi_startproc
 7576              		@ args = 0, pretend = 0, frame = 16
 7577              		@ frame_needed = 1, uses_anonymous_args = 0
 7578 0000 80B5     		push	{r7, lr}
 7579              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 340


 7580              		.cfi_offset 7, -8
 7581              		.cfi_offset 14, -4
 7582 0002 84B0     		sub	sp, sp, #16
 7583              		.cfi_def_cfa_offset 24
 7584 0004 00AF     		add	r7, sp, #0
 7585              		.cfi_def_cfa_register 7
 7586 0006 7860     		str	r0, [r7, #4]
3388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
3389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 7587              		.loc 2 3389 17
 7588 0008 0023     		movs	r3, #0
 7589 000a BB60     		str	r3, [r7, #8]
3390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
3392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
3393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
3394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
3395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 7590              		.loc 2 3395 7
 7591 000c 7B68     		ldr	r3, [r7, #4]
 7592 000e 1B68     		ldr	r3, [r3]
 7593 0010 1846     		mov	r0, r3
 7594 0012 FFF7FEFF 		bl	LL_ADC_IsEnabled
 7595 0016 0346     		mov	r3, r0
 7596              		.loc 2 3395 6
 7597 0018 002B     		cmp	r3, #0
 7598 001a 69D1     		bne	.L444
3396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if conditions to enable the ADC are fulfilled */
3398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JADSTART | ADC_
 7599              		.loc 2 3398 14
 7600 001c 7B68     		ldr	r3, [r7, #4]
 7601 001e 1B68     		ldr	r3, [r3]
 7602              		.loc 2 3398 24
 7603 0020 9A68     		ldr	r2, [r3, #8]
 7604              		.loc 2 3398 29
 7605 0022 364B     		ldr	r3, .L453
 7606 0024 1340     		ands	r3, r3, r2
 7607              		.loc 2 3398 8
 7608 0026 002B     		cmp	r3, #0
 7609 0028 0DD0     		beq	.L445
3399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                | ADC_CR_ADDIS | ADC_CR_ADEN)) != 0UL)
3400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Update ADC state machine to error */
3402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 7610              		.loc 2 3402 7
 7611 002a 7B68     		ldr	r3, [r7, #4]
 7612 002c 9B6D     		ldr	r3, [r3, #88]
 7613 002e 43F01002 		orr	r2, r3, #16
 7614 0032 7B68     		ldr	r3, [r7, #4]
 7615 0034 9A65     		str	r2, [r3, #88]
3403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 7616              		.loc 2 3405 7
 7617 0036 7B68     		ldr	r3, [r7, #4]
 7618 0038 DB6D     		ldr	r3, [r3, #92]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 341


 7619 003a 43F00102 		orr	r2, r3, #1
 7620 003e 7B68     		ldr	r3, [r7, #4]
 7621 0040 DA65     		str	r2, [r3, #92]
3406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       return HAL_ERROR;
 7622              		.loc 2 3407 14
 7623 0042 0123     		movs	r3, #1
 7624 0044 55E0     		b	.L446
 7625              	.L445:
3408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable the ADC peripheral */
3411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     LL_ADC_Enable(hadc->Instance);
 7626              		.loc 2 3411 5
 7627 0046 7B68     		ldr	r3, [r7, #4]
 7628 0048 1B68     		ldr	r3, [r3]
 7629 004a 1846     		mov	r0, r3
 7630 004c FFF7FEFF 		bl	LL_ADC_Enable
3412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if((LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) & LL_ADC_PATH_INTE
 7631              		.loc 2 3413 9
 7632 0050 2B48     		ldr	r0, .L453+4
 7633 0052 FFF7FEFF 		bl	LL_ADC_GetCommonPathInternalCh
 7634 0056 0346     		mov	r3, r0
 7635              		.loc 2 3413 82
 7636 0058 03F40003 		and	r3, r3, #8388608
 7637              		.loc 2 3413 7
 7638 005c 002B     		cmp	r3, #0
 7639 005e 13D0     		beq	.L447
3414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Delay for temperature sensor buffer stabilization time */
3416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Note: Value LL_ADC_DELAY_TEMPSENSOR_STAB_US used instead of      */
3417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US because needed      */
3418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       in case of ADC enable after a system wake up               */
3419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       from low power mode.                                       */
3420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Wait loop initialization and execution */
3422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Note: Variable divided by 2 to compensate partially              */
3423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       CPU processing cycles, scaling in us split to not          */
3424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       exceed 32 bits register capacity and handle low frequency. */
3425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (100000UL *
 7640              		.loc 2 3425 87
 7641 0060 284B     		ldr	r3, .L453+8
 7642 0062 1B68     		ldr	r3, [r3]
 7643 0064 9B09     		lsrs	r3, r3, #6
 7644 0066 284A     		ldr	r2, .L453+12
 7645 0068 A2FB0323 		umull	r2, r3, r2, r3
 7646 006c 9B09     		lsrs	r3, r3, #6
 7647              		.loc 2 3425 67
 7648 006e 5A1C     		adds	r2, r3, #1
 7649 0070 1346     		mov	r3, r2
 7650 0072 5B00     		lsls	r3, r3, #1
 7651 0074 1344     		add	r3, r3, r2
 7652 0076 9B00     		lsls	r3, r3, #2
 7653              		.loc 2 3425 23
 7654 0078 BB60     		str	r3, [r7, #8]
3426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       while(wait_loop_index != 0UL)
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 342


 7655              		.loc 2 3426 12
 7656 007a 02E0     		b	.L448
 7657              	.L449:
3427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         wait_loop_index--;
 7658              		.loc 2 3428 24
 7659 007c BB68     		ldr	r3, [r7, #8]
 7660 007e 013B     		subs	r3, r3, #1
 7661 0080 BB60     		str	r3, [r7, #8]
 7662              	.L448:
3426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       while(wait_loop_index != 0UL)
 7663              		.loc 2 3426 29
 7664 0082 BB68     		ldr	r3, [r7, #8]
 7665 0084 002B     		cmp	r3, #0
 7666 0086 F9D1     		bne	.L449
 7667              	.L447:
3429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Wait for ADC effectively enabled */
3433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tickstart = HAL_GetTick();
 7668              		.loc 2 3433 17
 7669 0088 FFF7FEFF 		bl	HAL_GetTick
 7670 008c F860     		str	r0, [r7, #12]
3434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
 7671              		.loc 2 3435 11
 7672 008e 28E0     		b	.L450
 7673              	.L452:
3436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  If ADEN bit is set less than 4 ADC clock cycles after the ADCAL bit
3438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           has been cleared (after a calibration), ADEN bit is reset by the
3439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           calibration logic.
3440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           The workaround is to continue setting ADEN until ADRDY is becomes 1.
3441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           Additionally, ADC_ENABLE_TIMEOUT is defined to encompass this
3442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           4 ADC clock cycle duration */
3443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Note: Test of ADC enabled required due to hardware constraint to     */
3444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       not enable ADC if already enabled.                             */
3445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 7674              		.loc 2 3445 11
 7675 0090 7B68     		ldr	r3, [r7, #4]
 7676 0092 1B68     		ldr	r3, [r3]
 7677 0094 1846     		mov	r0, r3
 7678 0096 FFF7FEFF 		bl	LL_ADC_IsEnabled
 7679 009a 0346     		mov	r3, r0
 7680              		.loc 2 3445 10
 7681 009c 002B     		cmp	r3, #0
 7682 009e 04D1     		bne	.L451
3446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_Enable(hadc->Instance);
 7683              		.loc 2 3447 9
 7684 00a0 7B68     		ldr	r3, [r7, #4]
 7685 00a2 1B68     		ldr	r3, [r3]
 7686 00a4 1846     		mov	r0, r3
 7687 00a6 FFF7FEFF 		bl	LL_ADC_Enable
 7688              	.L451:
3448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 343


3449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
 7689              		.loc 2 3450 12
 7690 00aa FFF7FEFF 		bl	HAL_GetTick
 7691 00ae 0246     		mov	r2, r0
 7692              		.loc 2 3450 26
 7693 00b0 FB68     		ldr	r3, [r7, #12]
 7694 00b2 D31A     		subs	r3, r2, r3
 7695              		.loc 2 3450 10
 7696 00b4 022B     		cmp	r3, #2
 7697 00b6 14D9     		bls	.L450
3451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
 7698              		.loc 2 3453 13
 7699 00b8 7B68     		ldr	r3, [r7, #4]
 7700 00ba 1B68     		ldr	r3, [r3]
 7701 00bc 1B68     		ldr	r3, [r3]
 7702 00be 03F00103 		and	r3, r3, #1
 7703              		.loc 2 3453 12
 7704 00c2 012B     		cmp	r3, #1
 7705 00c4 0DD0     		beq	.L450
3454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Update ADC state machine to error */
3456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 7706              		.loc 2 3456 11
 7707 00c6 7B68     		ldr	r3, [r7, #4]
 7708 00c8 9B6D     		ldr	r3, [r3, #88]
 7709 00ca 43F01002 		orr	r2, r3, #16
 7710 00ce 7B68     		ldr	r3, [r7, #4]
 7711 00d0 9A65     		str	r2, [r3, #88]
3457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 7712              		.loc 2 3459 11
 7713 00d2 7B68     		ldr	r3, [r7, #4]
 7714 00d4 DB6D     		ldr	r3, [r3, #92]
 7715 00d6 43F00102 		orr	r2, r3, #1
 7716 00da 7B68     		ldr	r3, [r7, #4]
 7717 00dc DA65     		str	r2, [r3, #92]
3460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           return HAL_ERROR;
 7718              		.loc 2 3461 18
 7719 00de 0123     		movs	r3, #1
 7720 00e0 07E0     		b	.L446
 7721              	.L450:
3435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 7722              		.loc 2 3435 12
 7723 00e2 7B68     		ldr	r3, [r7, #4]
 7724 00e4 1B68     		ldr	r3, [r3]
 7725 00e6 1B68     		ldr	r3, [r3]
 7726 00e8 03F00103 		and	r3, r3, #1
3435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 7727              		.loc 2 3435 51
 7728 00ec 012B     		cmp	r3, #1
 7729 00ee CFD1     		bne	.L452
 7730              	.L444:
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 344


3462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return HAL status */
3468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
 7731              		.loc 2 3468 10
 7732 00f0 0023     		movs	r3, #0
 7733              	.L446:
3469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 7734              		.loc 2 3469 1
 7735 00f2 1846     		mov	r0, r3
 7736 00f4 1037     		adds	r7, r7, #16
 7737              		.cfi_def_cfa_offset 8
 7738 00f6 BD46     		mov	sp, r7
 7739              		.cfi_def_cfa_register 13
 7740              		@ sp needed
 7741 00f8 80BD     		pop	{r7, pc}
 7742              	.L454:
 7743 00fa 00BF     		.align	2
 7744              	.L453:
 7745 00fc 3F000080 		.word	-2147483585
 7746 0100 00030450 		.word	1342440192
 7747 0104 00000000 		.word	SystemCoreClock
 7748 0108 632D3E05 		.word	87960931
 7749              		.cfi_endproc
 7750              	.LFE344:
 7752              		.section	.text.ADC_Disable,"ax",%progbits
 7753              		.align	1
 7754              		.global	ADC_Disable
 7755              		.syntax unified
 7756              		.thumb
 7757              		.thumb_func
 7759              	ADC_Disable:
 7760              	.LFB345:
3470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Disable the selected ADC.
3473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
3474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         stopped.
3475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
3477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef *hadc)
3479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 7761              		.loc 2 3479 1
 7762              		.cfi_startproc
 7763              		@ args = 0, pretend = 0, frame = 16
 7764              		@ frame_needed = 1, uses_anonymous_args = 0
 7765 0000 80B5     		push	{r7, lr}
 7766              		.cfi_def_cfa_offset 8
 7767              		.cfi_offset 7, -8
 7768              		.cfi_offset 14, -4
 7769 0002 84B0     		sub	sp, sp, #16
 7770              		.cfi_def_cfa_offset 24
 7771 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 345


 7772              		.cfi_def_cfa_register 7
 7773 0006 7860     		str	r0, [r7, #4]
3480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
3481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
 7774              		.loc 2 3481 48
 7775 0008 7B68     		ldr	r3, [r7, #4]
 7776 000a 1B68     		ldr	r3, [r3]
 7777 000c 1846     		mov	r0, r3
 7778 000e FFF7FEFF 		bl	LL_ADC_IsDisableOngoing
 7779 0012 F860     		str	r0, [r7, #12]
3482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verification if ADC is not already disabled:                             */
3484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
3485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       disabled.                                                          */
3486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
 7780              		.loc 2 3486 8
 7781 0014 7B68     		ldr	r3, [r7, #4]
 7782 0016 1B68     		ldr	r3, [r3]
 7783 0018 1846     		mov	r0, r3
 7784 001a FFF7FEFF 		bl	LL_ADC_IsEnabled
 7785 001e 0346     		mov	r3, r0
 7786              		.loc 2 3486 6
 7787 0020 002B     		cmp	r3, #0
 7788 0022 47D0     		beq	.L456
3487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
 7789              		.loc 2 3487 7
 7790 0024 FB68     		ldr	r3, [r7, #12]
 7791 0026 002B     		cmp	r3, #0
 7792 0028 44D1     		bne	.L456
3488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
3489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if conditions to disable the ADC are fulfilled */
3491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_JADSTART | ADC_CR_ADSTART | ADC_CR_ADEN)) == ADC_CR_ADEN)
 7793              		.loc 2 3491 14
 7794 002a 7B68     		ldr	r3, [r7, #4]
 7795 002c 1B68     		ldr	r3, [r3]
 7796              		.loc 2 3491 24
 7797 002e 9B68     		ldr	r3, [r3, #8]
 7798              		.loc 2 3491 29
 7799 0030 03F00D03 		and	r3, r3, #13
 7800              		.loc 2 3491 8
 7801 0034 012B     		cmp	r3, #1
 7802 0036 0CD1     		bne	.L457
3492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Disable the ADC peripheral */
3494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_Disable(hadc->Instance);
 7803              		.loc 2 3494 7
 7804 0038 7B68     		ldr	r3, [r7, #4]
 7805 003a 1B68     		ldr	r3, [r3]
 7806 003c 1846     		mov	r0, r3
 7807 003e FFF7FEFF 		bl	LL_ADC_Disable
3495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 7808              		.loc 2 3495 7
 7809 0042 7B68     		ldr	r3, [r7, #4]
 7810 0044 1B68     		ldr	r3, [r3]
 7811 0046 0322     		movs	r2, #3
 7812 0048 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 346


3496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
3498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Update ADC state machine to error */
3500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       return HAL_ERROR;
3506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Wait for ADC effectively disabled */
3509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Get tick count */
3510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tickstart = HAL_GetTick();
 7813              		.loc 2 3510 17
 7814 004a FFF7FEFF 		bl	HAL_GetTick
 7815 004e B860     		str	r0, [r7, #8]
3511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
 7816              		.loc 2 3512 11
 7817 0050 29E0     		b	.L460
 7818              	.L457:
3500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 7819              		.loc 2 3500 7
 7820 0052 7B68     		ldr	r3, [r7, #4]
 7821 0054 9B6D     		ldr	r3, [r3, #88]
 7822 0056 43F01002 		orr	r2, r3, #16
 7823 005a 7B68     		ldr	r3, [r7, #4]
 7824 005c 9A65     		str	r2, [r3, #88]
3503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 7825              		.loc 2 3503 7
 7826 005e 7B68     		ldr	r3, [r7, #4]
 7827 0060 DB6D     		ldr	r3, [r3, #92]
 7828 0062 43F00102 		orr	r2, r3, #1
 7829 0066 7B68     		ldr	r3, [r7, #4]
 7830 0068 DA65     		str	r2, [r3, #92]
3505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 7831              		.loc 2 3505 14
 7832 006a 0123     		movs	r3, #1
 7833 006c 23E0     		b	.L459
 7834              	.L461:
3513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
 7835              		.loc 2 3514 12
 7836 006e FFF7FEFF 		bl	HAL_GetTick
 7837 0072 0246     		mov	r2, r0
 7838              		.loc 2 3514 26
 7839 0074 BB68     		ldr	r3, [r7, #8]
 7840 0076 D31A     		subs	r3, r2, r3
 7841              		.loc 2 3514 10
 7842 0078 022B     		cmp	r3, #2
 7843 007a 14D9     		bls	.L460
3515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
 7844              		.loc 2 3517 18
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 347


 7845 007c 7B68     		ldr	r3, [r7, #4]
 7846 007e 1B68     		ldr	r3, [r3]
 7847              		.loc 2 3517 28
 7848 0080 9B68     		ldr	r3, [r3, #8]
 7849              		.loc 2 3517 33
 7850 0082 03F00103 		and	r3, r3, #1
 7851              		.loc 2 3517 12
 7852 0086 002B     		cmp	r3, #0
 7853 0088 0DD0     		beq	.L460
3518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Update ADC state machine to error */
3520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 7854              		.loc 2 3520 11
 7855 008a 7B68     		ldr	r3, [r7, #4]
 7856 008c 9B6D     		ldr	r3, [r3, #88]
 7857 008e 43F01002 		orr	r2, r3, #16
 7858 0092 7B68     		ldr	r3, [r7, #4]
 7859 0094 9A65     		str	r2, [r3, #88]
3521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 7860              		.loc 2 3523 11
 7861 0096 7B68     		ldr	r3, [r7, #4]
 7862 0098 DB6D     		ldr	r3, [r3, #92]
 7863 009a 43F00102 		orr	r2, r3, #1
 7864 009e 7B68     		ldr	r3, [r7, #4]
 7865 00a0 DA65     		str	r2, [r3, #92]
3524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           return HAL_ERROR;
 7866              		.loc 2 3525 18
 7867 00a2 0123     		movs	r3, #1
 7868 00a4 07E0     		b	.L459
 7869              	.L460:
3512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 7870              		.loc 2 3512 17
 7871 00a6 7B68     		ldr	r3, [r7, #4]
 7872 00a8 1B68     		ldr	r3, [r3]
3512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 7873              		.loc 2 3512 27
 7874 00aa 9B68     		ldr	r3, [r3, #8]
3512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 7875              		.loc 2 3512 32
 7876 00ac 03F00103 		and	r3, r3, #1
3512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 7877              		.loc 2 3512 47
 7878 00b0 002B     		cmp	r3, #0
 7879 00b2 DCD1     		bne	.L461
 7880              	.L456:
3526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return HAL status */
3532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
 7881              		.loc 2 3532 10
 7882 00b4 0023     		movs	r3, #0
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 348


 7883              	.L459:
3533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 7884              		.loc 2 3533 1
 7885 00b6 1846     		mov	r0, r3
 7886 00b8 1037     		adds	r7, r7, #16
 7887              		.cfi_def_cfa_offset 8
 7888 00ba BD46     		mov	sp, r7
 7889              		.cfi_def_cfa_register 13
 7890              		@ sp needed
 7891 00bc 80BD     		pop	{r7, pc}
 7892              		.cfi_endproc
 7893              	.LFE345:
 7895              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 7896              		.align	1
 7897              		.global	ADC_DMAConvCplt
 7898              		.syntax unified
 7899              		.thumb
 7900              		.thumb_func
 7902              	ADC_DMAConvCplt:
 7903              	.LFB346:
3534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  DMA transfer complete callback.
3537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
3539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
3541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 7904              		.loc 2 3541 1
 7905              		.cfi_startproc
 7906              		@ args = 0, pretend = 0, frame = 16
 7907              		@ frame_needed = 1, uses_anonymous_args = 0
 7908 0000 80B5     		push	{r7, lr}
 7909              		.cfi_def_cfa_offset 8
 7910              		.cfi_offset 7, -8
 7911              		.cfi_offset 14, -4
 7912 0002 84B0     		sub	sp, sp, #16
 7913              		.cfi_def_cfa_offset 24
 7914 0004 00AF     		add	r7, sp, #0
 7915              		.cfi_def_cfa_register 7
 7916 0006 7860     		str	r0, [r7, #4]
3542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7917              		.loc 2 3543 22
 7918 0008 7B68     		ldr	r3, [r7, #4]
 7919 000a 9B6A     		ldr	r3, [r3, #40]
 7920 000c FB60     		str	r3, [r7, #12]
3544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
3546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((hadc->State & (HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA)) == 0UL)
 7921              		.loc 2 3546 12
 7922 000e FB68     		ldr	r3, [r7, #12]
 7923 0010 9B6D     		ldr	r3, [r3, #88]
 7924              		.loc 2 3546 20
 7925 0012 03F05003 		and	r3, r3, #80
 7926              		.loc 2 3546 6
 7927 0016 002B     		cmp	r3, #0
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 349


 7928 0018 4BD1     		bne	.L463
3547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
3549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 7929              		.loc 2 3549 5
 7930 001a FB68     		ldr	r3, [r7, #12]
 7931 001c 9B6D     		ldr	r3, [r3, #88]
 7932 001e 43F40072 		orr	r2, r3, #512
 7933 0022 FB68     		ldr	r3, [r7, #12]
 7934 0024 9A65     		str	r2, [r3, #88]
3550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
3552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
3553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* to disable interruption.                                               */
3554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Is it the end of the regular sequence ? */
3555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->Instance->ISR & ADC_FLAG_EOS) != 0UL)
 7935              		.loc 2 3555 14
 7936 0026 FB68     		ldr	r3, [r7, #12]
 7937 0028 1B68     		ldr	r3, [r3]
 7938              		.loc 2 3555 24
 7939 002a 1B68     		ldr	r3, [r3]
 7940              		.loc 2 3555 30
 7941 002c 03F00803 		and	r3, r3, #8
 7942              		.loc 2 3555 8
 7943 0030 002B     		cmp	r3, #0
 7944 0032 21D0     		beq	.L464
3556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Are conversions software-triggered ? */
3558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
 7945              		.loc 2 3558 11
 7946 0034 FB68     		ldr	r3, [r7, #12]
 7947 0036 1B68     		ldr	r3, [r3]
 7948 0038 1846     		mov	r0, r3
 7949 003a FFF7FEFF 		bl	LL_ADC_REG_IsTriggerSourceSWStart
 7950 003e 0346     		mov	r3, r0
 7951              		.loc 2 3558 10
 7952 0040 002B     		cmp	r3, #0
 7953 0042 32D0     		beq	.L465
3559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Is CONT bit set ? */
3561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_CONT) == 0UL)
 7954              		.loc 2 3561 13
 7955 0044 FB68     		ldr	r3, [r7, #12]
 7956 0046 1B68     		ldr	r3, [r3]
 7957 0048 DB68     		ldr	r3, [r3, #12]
 7958 004a 03F40053 		and	r3, r3, #8192
 7959              		.loc 2 3561 12
 7960 004e 002B     		cmp	r3, #0
 7961 0050 2BD1     		bne	.L465
3562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* CONT bit is not set, no more conversions expected */
3564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 7962              		.loc 2 3564 11
 7963 0052 FB68     		ldr	r3, [r7, #12]
 7964 0054 9B6D     		ldr	r3, [r3, #88]
 7965 0056 23F48072 		bic	r2, r3, #256
 7966 005a FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 350


 7967 005c 9A65     		str	r2, [r3, #88]
3565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 7968              		.loc 2 3565 20
 7969 005e FB68     		ldr	r3, [r7, #12]
 7970 0060 9B6D     		ldr	r3, [r3, #88]
 7971              		.loc 2 3565 28
 7972 0062 03F48053 		and	r3, r3, #4096
 7973              		.loc 2 3565 14
 7974 0066 002B     		cmp	r3, #0
 7975 0068 1FD1     		bne	.L465
3566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
3567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 7976              		.loc 2 3567 13
 7977 006a FB68     		ldr	r3, [r7, #12]
 7978 006c 9B6D     		ldr	r3, [r3, #88]
 7979 006e 43F00102 		orr	r2, r3, #1
 7980 0072 FB68     		ldr	r3, [r7, #12]
 7981 0074 9A65     		str	r2, [r3, #88]
 7982 0076 18E0     		b	.L465
 7983              	.L464:
3568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
3569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
3573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* DMA End of Transfer interrupt was triggered but conversions sequence
3575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          is not over. If DMACFG is set to 0, conversions are stopped. */
3576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMACFG) == 0UL)
 7984              		.loc 2 3576 11
 7985 0078 FB68     		ldr	r3, [r7, #12]
 7986 007a 1B68     		ldr	r3, [r3]
 7987 007c DB68     		ldr	r3, [r3, #12]
 7988 007e 03F00203 		and	r3, r3, #2
 7989              		.loc 2 3576 10
 7990 0082 002B     		cmp	r3, #0
 7991 0084 11D1     		bne	.L465
3577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* DMACFG bit is not set, conversions are stopped. */
3579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 7992              		.loc 2 3579 9
 7993 0086 FB68     		ldr	r3, [r7, #12]
 7994 0088 9B6D     		ldr	r3, [r3, #88]
 7995 008a 23F48072 		bic	r2, r3, #256
 7996 008e FB68     		ldr	r3, [r7, #12]
 7997 0090 9A65     		str	r2, [r3, #88]
3580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 7998              		.loc 2 3580 18
 7999 0092 FB68     		ldr	r3, [r7, #12]
 8000 0094 9B6D     		ldr	r3, [r3, #88]
 8001              		.loc 2 3580 26
 8002 0096 03F48053 		and	r3, r3, #4096
 8003              		.loc 2 3580 12
 8004 009a 002B     		cmp	r3, #0
 8005 009c 05D1     		bne	.L465
3581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 351


 8006              		.loc 2 3582 11
 8007 009e FB68     		ldr	r3, [r7, #12]
 8008 00a0 9B6D     		ldr	r3, [r3, #88]
 8009 00a2 43F00102 		orr	r2, r3, #1
 8010 00a6 FB68     		ldr	r3, [r7, #12]
 8011 00a8 9A65     		str	r2, [r3, #88]
 8012              	.L465:
3583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Conversion complete callback */
3588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
3590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
3591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
 8013              		.loc 2 3591 5
 8014 00aa F868     		ldr	r0, [r7, #12]
 8015 00ac FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
3592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else /* DMA and-or internal error occurred */
3595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
3597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
3599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
3601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
3602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
3603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
3606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Call ADC DMA error callback */
3608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
3609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 8016              		.loc 2 3611 1
 8017 00b0 0EE0     		b	.L468
 8018              	.L463:
3596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 8019              		.loc 2 3596 14
 8020 00b2 FB68     		ldr	r3, [r7, #12]
 8021 00b4 9B6D     		ldr	r3, [r3, #88]
3596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 8022              		.loc 2 3596 22
 8023 00b6 03F01003 		and	r3, r3, #16
3596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 8024              		.loc 2 3596 8
 8025 00ba 002B     		cmp	r3, #0
 8026 00bc 03D0     		beq	.L467
3602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 8027              		.loc 2 3602 7
 8028 00be F868     		ldr	r0, [r7, #12]
 8029 00c0 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 352


 8030              		.loc 2 3611 1
 8031 00c4 04E0     		b	.L468
 8032              	.L467:
3608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 8033              		.loc 2 3608 11
 8034 00c6 FB68     		ldr	r3, [r7, #12]
 8035 00c8 1B6D     		ldr	r3, [r3, #80]
3608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 8036              		.loc 2 3608 23
 8037 00ca 5B6B     		ldr	r3, [r3, #52]
3608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 8038              		.loc 2 3608 7
 8039 00cc 7868     		ldr	r0, [r7, #4]
 8040 00ce 9847     		blx	r3
 8041              	.LVL0:
 8042              	.L468:
 8043              		.loc 2 3611 1
 8044 00d0 00BF     		nop
 8045 00d2 1037     		adds	r7, r7, #16
 8046              		.cfi_def_cfa_offset 8
 8047 00d4 BD46     		mov	sp, r7
 8048              		.cfi_def_cfa_register 13
 8049              		@ sp needed
 8050 00d6 80BD     		pop	{r7, pc}
 8051              		.cfi_endproc
 8052              	.LFE346:
 8054              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 8055              		.align	1
 8056              		.global	ADC_DMAHalfConvCplt
 8057              		.syntax unified
 8058              		.thumb
 8059              		.thumb_func
 8061              	ADC_DMAHalfConvCplt:
 8062              	.LFB347:
3612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  DMA half transfer complete callback.
3615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
3617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
3619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 8063              		.loc 2 3619 1
 8064              		.cfi_startproc
 8065              		@ args = 0, pretend = 0, frame = 16
 8066              		@ frame_needed = 1, uses_anonymous_args = 0
 8067 0000 80B5     		push	{r7, lr}
 8068              		.cfi_def_cfa_offset 8
 8069              		.cfi_offset 7, -8
 8070              		.cfi_offset 14, -4
 8071 0002 84B0     		sub	sp, sp, #16
 8072              		.cfi_def_cfa_offset 24
 8073 0004 00AF     		add	r7, sp, #0
 8074              		.cfi_def_cfa_register 7
 8075 0006 7860     		str	r0, [r7, #4]
3620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 353


 8076              		.loc 2 3621 22
 8077 0008 7B68     		ldr	r3, [r7, #4]
 8078 000a 9B6A     		ldr	r3, [r3, #40]
 8079 000c FB60     		str	r3, [r7, #12]
3622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Half conversion callback */
3624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->ConvHalfCpltCallback(hadc);
3626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
3627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 8080              		.loc 2 3627 3
 8081 000e F868     		ldr	r0, [r7, #12]
 8082 0010 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
3628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 8083              		.loc 2 3629 1
 8084 0014 00BF     		nop
 8085 0016 1037     		adds	r7, r7, #16
 8086              		.cfi_def_cfa_offset 8
 8087 0018 BD46     		mov	sp, r7
 8088              		.cfi_def_cfa_register 13
 8089              		@ sp needed
 8090 001a 80BD     		pop	{r7, pc}
 8091              		.cfi_endproc
 8092              	.LFE347:
 8094              		.section	.text.ADC_DMAError,"ax",%progbits
 8095              		.align	1
 8096              		.global	ADC_DMAError
 8097              		.syntax unified
 8098              		.thumb
 8099              		.thumb_func
 8101              	ADC_DMAError:
 8102              	.LFB348:
3630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  DMA error callback.
3633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
3635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** void ADC_DMAError(DMA_HandleTypeDef *hdma)
3637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 8103              		.loc 2 3637 1
 8104              		.cfi_startproc
 8105              		@ args = 0, pretend = 0, frame = 16
 8106              		@ frame_needed = 1, uses_anonymous_args = 0
 8107 0000 80B5     		push	{r7, lr}
 8108              		.cfi_def_cfa_offset 8
 8109              		.cfi_offset 7, -8
 8110              		.cfi_offset 14, -4
 8111 0002 84B0     		sub	sp, sp, #16
 8112              		.cfi_def_cfa_offset 24
 8113 0004 00AF     		add	r7, sp, #0
 8114              		.cfi_def_cfa_register 7
 8115 0006 7860     		str	r0, [r7, #4]
3638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8116              		.loc 2 3639 22
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 354


 8117 0008 7B68     		ldr	r3, [r7, #4]
 8118 000a 9B6A     		ldr	r3, [r3, #40]
 8119 000c FB60     		str	r3, [r7, #12]
3640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC state */
3642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 8120              		.loc 2 3642 3
 8121 000e FB68     		ldr	r3, [r7, #12]
 8122 0010 9B6D     		ldr	r3, [r3, #88]
 8123 0012 43F04002 		orr	r2, r3, #64
 8124 0016 FB68     		ldr	r3, [r7, #12]
 8125 0018 9A65     		str	r2, [r3, #88]
3643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC error code to DMA error */
3645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 8126              		.loc 2 3645 3
 8127 001a FB68     		ldr	r3, [r7, #12]
 8128 001c DB6D     		ldr	r3, [r3, #92]
 8129 001e 43F00402 		orr	r2, r3, #4
 8130 0022 FB68     		ldr	r3, [r7, #12]
 8131 0024 DA65     		str	r2, [r3, #92]
3646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Error callback */
3648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->ErrorCallback(hadc);
3650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
3651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 8132              		.loc 2 3651 3
 8133 0026 F868     		ldr	r0, [r7, #12]
 8134 0028 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
3652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 8135              		.loc 2 3653 1
 8136 002c 00BF     		nop
 8137 002e 1037     		adds	r7, r7, #16
 8138              		.cfi_def_cfa_offset 8
 8139 0030 BD46     		mov	sp, r7
 8140              		.cfi_def_cfa_register 13
 8141              		@ sp needed
 8142 0032 80BD     		pop	{r7, pc}
 8143              		.cfi_endproc
 8144              	.LFE348:
 8146              		.text
 8147              	.Letext0:
 8148              		.file 4 "c:\\users\\morroway\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@
 8149              		.file 5 "c:\\users\\morroway\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@
 8150              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4p5xx.h"
 8151              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 8152              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 8153              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 8154              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 8155              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc_ex.h"
 8156              		.file 12 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 8157              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 355


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_adc.c
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:20     .text.LL_ADC_SetCommonClock:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:25     .text.LL_ADC_SetCommonClock:0000000000000000 LL_ADC_SetCommonClock
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:65     .text.LL_ADC_SetCommonPathInternalCh:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:70     .text.LL_ADC_SetCommonPathInternalCh:0000000000000000 LL_ADC_SetCommonPathInternalCh
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:109    .text.LL_ADC_GetCommonPathInternalCh:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:114    .text.LL_ADC_GetCommonPathInternalCh:0000000000000000 LL_ADC_GetCommonPathInternalCh
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:149    .text.LL_ADC_SetOffset:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:154    .text.LL_ADC_SetOffset:0000000000000000 LL_ADC_SetOffset
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:208    .text.LL_ADC_SetOffset:0000000000000044 $d
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:213    .text.LL_ADC_GetOffsetChannel:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:218    .text.LL_ADC_GetOffsetChannel:0000000000000000 LL_ADC_GetOffsetChannel
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:262    .text.LL_ADC_SetOffsetState:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:267    .text.LL_ADC_SetOffsetState:0000000000000000 LL_ADC_SetOffsetState
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:316    .text.LL_ADC_SetSamplingTimeCommonConfig:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:321    .text.LL_ADC_SetSamplingTimeCommonConfig:0000000000000000 LL_ADC_SetSamplingTimeCommonConfig
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:360    .text.LL_ADC_REG_IsTriggerSourceSWStart:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:365    .text.LL_ADC_REG_IsTriggerSourceSWStart:0000000000000000 LL_ADC_REG_IsTriggerSourceSWStart
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:409    .text.LL_ADC_REG_SetSequencerRanks:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:414    .text.LL_ADC_REG_SetSequencerRanks:0000000000000000 LL_ADC_REG_SetSequencerRanks
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:475    .text.LL_ADC_INJ_IsTriggerSourceSWStart:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:480    .text.LL_ADC_INJ_IsTriggerSourceSWStart:0000000000000000 LL_ADC_INJ_IsTriggerSourceSWStart
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:524    .text.LL_ADC_SetChannelSamplingTime:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:529    .text.LL_ADC_SetChannelSamplingTime:0000000000000000 LL_ADC_SetChannelSamplingTime
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:590    .text.LL_ADC_SetChannelSingleDiff:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:595    .text.LL_ADC_SetChannelSingleDiff:0000000000000000 LL_ADC_SetChannelSingleDiff
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:643    .text.LL_ADC_SetChannelSingleDiff:0000000000000044 $d
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:648    .text.LL_ADC_SetAnalogWDMonitChannels:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:653    .text.LL_ADC_SetAnalogWDMonitChannels:0000000000000000 LL_ADC_SetAnalogWDMonitChannels
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:717    .text.LL_ADC_ConfigAnalogWDThresholds:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:722    .text.LL_ADC_ConfigAnalogWDThresholds:0000000000000000 LL_ADC_ConfigAnalogWDThresholds
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:777    .text.LL_ADC_GetMultimode:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:782    .text.LL_ADC_GetMultimode:0000000000000000 LL_ADC_GetMultimode
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:817    .text.LL_ADC_GetMultiDMATransfer:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:822    .text.LL_ADC_GetMultiDMATransfer:0000000000000000 LL_ADC_GetMultiDMATransfer
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:857    .text.LL_ADC_DisableDeepPowerDown:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:862    .text.LL_ADC_DisableDeepPowerDown:0000000000000000 LL_ADC_DisableDeepPowerDown
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:899    .text.LL_ADC_IsDeepPowerDownEnabled:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:904    .text.LL_ADC_IsDeepPowerDownEnabled:0000000000000000 LL_ADC_IsDeepPowerDownEnabled
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:948    .text.LL_ADC_EnableInternalRegulator:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:953    .text.LL_ADC_EnableInternalRegulator:0000000000000000 LL_ADC_EnableInternalRegulator
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:991    .text.LL_ADC_IsInternalRegulatorEnabled:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:996    .text.LL_ADC_IsInternalRegulatorEnabled:0000000000000000 LL_ADC_IsInternalRegulatorEnabled
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1040   .text.LL_ADC_Enable:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1045   .text.LL_ADC_Enable:0000000000000000 LL_ADC_Enable
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1083   .text.LL_ADC_Disable:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1088   .text.LL_ADC_Disable:0000000000000000 LL_ADC_Disable
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1126   .text.LL_ADC_IsEnabled:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1131   .text.LL_ADC_IsEnabled:0000000000000000 LL_ADC_IsEnabled
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1175   .text.LL_ADC_IsDisableOngoing:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1180   .text.LL_ADC_IsDisableOngoing:0000000000000000 LL_ADC_IsDisableOngoing
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1224   .text.LL_ADC_REG_StartConversion:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1229   .text.LL_ADC_REG_StartConversion:0000000000000000 LL_ADC_REG_StartConversion
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1267   .text.LL_ADC_REG_StopConversion:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1272   .text.LL_ADC_REG_StopConversion:0000000000000000 LL_ADC_REG_StopConversion
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1310   .text.LL_ADC_REG_IsConversionOngoing:0000000000000000 $t
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 356


C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1315   .text.LL_ADC_REG_IsConversionOngoing:0000000000000000 LL_ADC_REG_IsConversionOngoing
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1359   .text.LL_ADC_INJ_StopConversion:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1364   .text.LL_ADC_INJ_StopConversion:0000000000000000 LL_ADC_INJ_StopConversion
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1402   .text.LL_ADC_INJ_IsConversionOngoing:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1407   .text.LL_ADC_INJ_IsConversionOngoing:0000000000000000 LL_ADC_INJ_IsConversionOngoing
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1451   .text.LL_ADC_ClearFlag_AWD1:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1456   .text.LL_ADC_ClearFlag_AWD1:0000000000000000 LL_ADC_ClearFlag_AWD1
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1490   .text.LL_ADC_ClearFlag_AWD2:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1495   .text.LL_ADC_ClearFlag_AWD2:0000000000000000 LL_ADC_ClearFlag_AWD2
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1529   .text.LL_ADC_ClearFlag_AWD3:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1534   .text.LL_ADC_ClearFlag_AWD3:0000000000000000 LL_ADC_ClearFlag_AWD3
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1568   .text.LL_ADC_EnableIT_AWD1:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1573   .text.LL_ADC_EnableIT_AWD1:0000000000000000 LL_ADC_EnableIT_AWD1
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1609   .text.LL_ADC_EnableIT_AWD2:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1614   .text.LL_ADC_EnableIT_AWD2:0000000000000000 LL_ADC_EnableIT_AWD2
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1650   .text.LL_ADC_EnableIT_AWD3:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1655   .text.LL_ADC_EnableIT_AWD3:0000000000000000 LL_ADC_EnableIT_AWD3
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1691   .text.LL_ADC_DisableIT_AWD1:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1696   .text.LL_ADC_DisableIT_AWD1:0000000000000000 LL_ADC_DisableIT_AWD1
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1732   .text.LL_ADC_DisableIT_AWD2:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1737   .text.LL_ADC_DisableIT_AWD2:0000000000000000 LL_ADC_DisableIT_AWD2
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1773   .text.LL_ADC_DisableIT_AWD3:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1778   .text.LL_ADC_DisableIT_AWD3:0000000000000000 LL_ADC_DisableIT_AWD3
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1814   .text.HAL_ADC_Init:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:1820   .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:2581   .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:2228   .text.HAL_ADC_Init:000000000000028c $d
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:2238   .text.HAL_ADC_DeInit:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:2244   .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:7301   .text.ADC_ConversionStop:0000000000000000 ADC_ConversionStop
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:7759   .text.ADC_Disable:0000000000000000 ADC_Disable
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:2617   .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:2564   .text.HAL_ADC_DeInit:0000000000000240 $d
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:2575   .text.HAL_ADC_MspInit:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:2611   .text.HAL_ADC_MspDeInit:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:2647   .text.HAL_ADC_Start:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:2653   .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:7572   .text.ADC_Enable:0000000000000000 ADC_Enable
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:2890   .text.HAL_ADC_Start:0000000000000168 $d
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:2897   .text.HAL_ADC_Stop:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:2903   .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:2978   .text.HAL_ADC_PollForConversion:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:2984   .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:3283   .text.HAL_ADC_PollForConversion:00000000000001a4 $d
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:3290   .text.HAL_ADC_PollForEvent:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:3296   .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:3520   .text.HAL_ADC_Start_IT:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:3526   .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:3900   .text.HAL_ADC_Start_IT:0000000000000250 $d
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:3907   .text.HAL_ADC_Stop_IT:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:3913   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:3996   .text.HAL_ADC_Start_DMA:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:4002   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:4228   .text.HAL_ADC_Start_DMA:0000000000000150 $d
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:7902   .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:8061   .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:8101   .text.ADC_DMAError:0000000000000000 ADC_DMAError
ARM GAS  C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s 			page 357


C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:4238   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:4244   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:4372   .text.HAL_ADC_GetValue:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:4378   .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:4413   .text.HAL_ADC_IRQHandler:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:4419   .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:5109   .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:4783   .text.HAL_ADC_IRQHandler:0000000000000228 $d
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:4788   .text.HAL_ADC_IRQHandler:0000000000000234 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:5181   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:5217   .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:5097   .text.HAL_ADC_IRQHandler:000000000000042c $d
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:5103   .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:5139   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:5145   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:5175   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:5211   .text.HAL_ADC_ErrorCallback:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:5247   .text.HAL_ADC_ConfigChannel:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:5253   .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:5314   .text.HAL_ADC_ConfigChannel:0000000000000054 $d
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:5318   .text.HAL_ADC_ConfigChannel:0000000000000064 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:6405   .text.HAL_ADC_ConfigChannel:00000000000006ac $d
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:6408   .text.HAL_ADC_ConfigChannel:00000000000006b0 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:6586   .text.HAL_ADC_ConfigChannel:00000000000007d4 $d
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:6598   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:6604   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:7030   .text.HAL_ADC_AnalogWDGConfig:00000000000002d4 $d
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:7037   .text.HAL_ADC_AnalogWDGConfig:00000000000002e8 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:7212   .text.HAL_ADC_AnalogWDGConfig:0000000000000414 $d
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:7217   .text.HAL_ADC_GetState:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:7223   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:7256   .text.HAL_ADC_GetError:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:7262   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:7295   .text.ADC_ConversionStop:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:7561   .text.ADC_ConversionStop:0000000000000174 $d
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:7566   .text.ADC_Enable:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:7745   .text.ADC_Enable:00000000000000fc $d
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:7753   .text.ADC_Disable:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:7896   .text.ADC_DMAConvCplt:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:8055   .text.ADC_DMAHalfConvCplt:0000000000000000 $t
C:\Users\Morroway\AppData\Local\Temp\ccA2rNBV.s:8095   .text.ADC_DMAError:0000000000000000 $t

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_ADCEx_EndOfSamplingCallback
HAL_ADCEx_InjectedConvCpltCallback
HAL_ADCEx_LevelOutOfWindow2Callback
HAL_ADCEx_LevelOutOfWindow3Callback
HAL_ADCEx_InjectedQueueOverflowCallback
