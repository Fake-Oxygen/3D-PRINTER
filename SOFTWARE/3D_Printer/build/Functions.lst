ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"Functions.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.bss.msg_buffer,"aw",%nobits
  20              		.align	2
  23              	msg_buffer:
  24 0000 00000000 		.space	30
  24      00000000 
  24      00000000 
  24      00000000 
  24      00000000 
  25              		.section	.bss.RxBuf,"aw",%nobits
  26              		.align	2
  29              	RxBuf:
  30 0000 00000000 		.space	20
  30      00000000 
  30      00000000 
  30      00000000 
  30      00000000 
  31              		.section	.text.SelectDriver,"ax",%progbits
  32              		.align	1
  33              		.global	SelectDriver
  34              		.syntax unified
  35              		.thumb
  36              		.thumb_func
  38              	SelectDriver:
  39              	.LFB321:
  40              		.file 1 "Core/Src/Functions.c"
   1:Core/Src/Functions.c **** #include "Functions.h"
   2:Core/Src/Functions.c **** 
   3:Core/Src/Functions.c **** void SelectDriver(uint16_t axis)
   4:Core/Src/Functions.c **** {
  41              		.loc 1 4 1
  42              		.cfi_startproc
  43              		@ args = 0, pretend = 0, frame = 8
  44              		@ frame_needed = 1, uses_anonymous_args = 0
  45 0000 80B5     		push	{r7, lr}
  46              		.cfi_def_cfa_offset 8
  47              		.cfi_offset 7, -8
  48              		.cfi_offset 14, -4
  49 0002 82B0     		sub	sp, sp, #8
  50              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 2


  51 0004 00AF     		add	r7, sp, #0
  52              		.cfi_def_cfa_register 7
  53 0006 0346     		mov	r3, r0
  54 0008 FB80     		strh	r3, [r7, #6]	@ movhi
   5:Core/Src/Functions.c ****     switch (axis)
  55              		.loc 1 5 5
  56 000a FB88     		ldrh	r3, [r7, #6]
  57 000c 032B     		cmp	r3, #3
  58 000e 37D8     		bhi	.L8
  59 0010 01A2     		adr	r2, .L4
  60 0012 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  61 0016 00BF     		.p2align 2
  62              	.L4:
  63 0018 29000000 		.word	.L7+1
  64 001c 3F000000 		.word	.L6+1
  65 0020 55000000 		.word	.L5+1
  66 0024 6B000000 		.word	.L3+1
  67              		.p2align 1
  68              	.L7:
   6:Core/Src/Functions.c ****     {
   7:Core/Src/Functions.c ****     case X_AXIS:
   8:Core/Src/Functions.c ****         WRITE_PIN(MPLX_PIN_A, 0);
  69              		.loc 1 8 9
  70 0028 0022     		movs	r2, #0
  71 002a 4021     		movs	r1, #64
  72 002c 1648     		ldr	r0, .L10
  73 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
   9:Core/Src/Functions.c ****         WRITE_PIN(MPLX_PIN_B, 0);
  74              		.loc 1 9 9
  75 0032 0022     		movs	r2, #0
  76 0034 8021     		movs	r1, #128
  77 0036 1448     		ldr	r0, .L10
  78 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
  10:Core/Src/Functions.c ****         break;
  79              		.loc 1 10 9
  80 003c 20E0     		b	.L2
  81              	.L6:
  11:Core/Src/Functions.c ****     case Y_AXIS:
  12:Core/Src/Functions.c ****         WRITE_PIN(MPLX_PIN_A, 1);
  82              		.loc 1 12 9
  83 003e 0122     		movs	r2, #1
  84 0040 4021     		movs	r1, #64
  85 0042 1148     		ldr	r0, .L10
  86 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
  13:Core/Src/Functions.c ****         WRITE_PIN(MPLX_PIN_B, 0);
  87              		.loc 1 13 9
  88 0048 0022     		movs	r2, #0
  89 004a 8021     		movs	r1, #128
  90 004c 0E48     		ldr	r0, .L10
  91 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
  14:Core/Src/Functions.c ****         break;
  92              		.loc 1 14 9
  93 0052 15E0     		b	.L2
  94              	.L5:
  15:Core/Src/Functions.c ****     case E_AXIS:
  16:Core/Src/Functions.c ****         WRITE_PIN(MPLX_PIN_A, 0);
  95              		.loc 1 16 9
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 3


  96 0054 0022     		movs	r2, #0
  97 0056 4021     		movs	r1, #64
  98 0058 0B48     		ldr	r0, .L10
  99 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
  17:Core/Src/Functions.c ****         WRITE_PIN(MPLX_PIN_B, 1);
 100              		.loc 1 17 9
 101 005e 0122     		movs	r2, #1
 102 0060 8021     		movs	r1, #128
 103 0062 0948     		ldr	r0, .L10
 104 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
  18:Core/Src/Functions.c ****         break;
 105              		.loc 1 18 9
 106 0068 0AE0     		b	.L2
 107              	.L3:
  19:Core/Src/Functions.c ****     case Z_AXIS:
  20:Core/Src/Functions.c ****         WRITE_PIN(MPLX_PIN_A, 1);
 108              		.loc 1 20 9
 109 006a 0122     		movs	r2, #1
 110 006c 4021     		movs	r1, #64
 111 006e 0648     		ldr	r0, .L10
 112 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
  21:Core/Src/Functions.c ****         WRITE_PIN(MPLX_PIN_B, 1);
 113              		.loc 1 21 9
 114 0074 0122     		movs	r2, #1
 115 0076 8021     		movs	r1, #128
 116 0078 0348     		ldr	r0, .L10
 117 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
  22:Core/Src/Functions.c ****         break;
 118              		.loc 1 22 9
 119 007e 00BF     		nop
 120              	.L2:
 121              	.L8:
  23:Core/Src/Functions.c ****     }
  24:Core/Src/Functions.c **** }
 122              		.loc 1 24 1
 123 0080 00BF     		nop
 124 0082 0837     		adds	r7, r7, #8
 125              		.cfi_def_cfa_offset 8
 126 0084 BD46     		mov	sp, r7
 127              		.cfi_def_cfa_register 13
 128              		@ sp needed
 129 0086 80BD     		pop	{r7, pc}
 130              	.L11:
 131              		.align	2
 132              	.L10:
 133 0088 00140048 		.word	1207964672
 134              		.cfi_endproc
 135              	.LFE321:
 137              		.global	__aeabi_i2d
 138              		.global	__aeabi_dmul
 139              		.global	__aeabi_dsub
 140              		.global	__aeabi_ddiv
 141              		.global	__aeabi_dadd
 142              		.section	.text.GetTemperature,"ax",%progbits
 143              		.align	1
 144              		.global	GetTemperature
 145              		.syntax unified
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 4


 146              		.thumb
 147              		.thumb_func
 149              	GetTemperature:
 150              	.LFB322:
  25:Core/Src/Functions.c **** 
  26:Core/Src/Functions.c **** double GetTemperature(uint16_t adc, uint16_t value)
  27:Core/Src/Functions.c **** {
 151              		.loc 1 27 1
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 24
 154              		@ frame_needed = 1, uses_anonymous_args = 0
 155 0000 B0B5     		push	{r4, r5, r7, lr}
 156              		.cfi_def_cfa_offset 16
 157              		.cfi_offset 4, -16
 158              		.cfi_offset 5, -12
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161 0002 86B0     		sub	sp, sp, #24
 162              		.cfi_def_cfa_offset 40
 163 0004 00AF     		add	r7, sp, #0
 164              		.cfi_def_cfa_register 7
 165 0006 0346     		mov	r3, r0
 166 0008 0A46     		mov	r2, r1
 167 000a FB80     		strh	r3, [r7, #6]	@ movhi
 168 000c 1346     		mov	r3, r2	@ movhi
 169 000e BB80     		strh	r3, [r7, #4]	@ movhi
  28:Core/Src/Functions.c ****     double resistance, val;
  29:Core/Src/Functions.c ****     switch (adc)
 170              		.loc 1 29 5
 171 0010 FB88     		ldrh	r3, [r7, #6]
 172 0012 012B     		cmp	r3, #1
 173 0014 02D0     		beq	.L13
 174 0016 022B     		cmp	r3, #2
 175 0018 6FD0     		beq	.L14
 176 001a 93E0     		b	.L17
 177              	.L13:
  30:Core/Src/Functions.c ****     {
  31:Core/Src/Functions.c ****     case ADC_HOT_END:
  32:Core/Src/Functions.c ****         val = (ADC_VOLTAGE / ADC_SAMPLING) * value;
 178              		.loc 1 32 44
 179 001c BB88     		ldrh	r3, [r7, #4]
 180 001e 1846     		mov	r0, r3
 181 0020 FFF7FEFF 		bl	__aeabi_i2d
 182              		.loc 1 32 13
 183 0024 50A3     		adr	r3, .L18+16
 184 0026 D3E90023 		ldrd	r2, [r3]
 185 002a FFF7FEFF 		bl	__aeabi_dmul
 186 002e 0246     		mov	r2, r0
 187 0030 0B46     		mov	r3, r1
 188 0032 C7E90423 		strd	r2, [r7, #16]
  33:Core/Src/Functions.c ****         resistance = val / ((ADC_VOLTAGE - val) / HOT_END_RESISTANCE);
 189              		.loc 1 33 42
 190 0036 D7E90423 		ldrd	r2, [r7, #16]
 191 003a 53A1     		adr	r1, .L18+48
 192 003c D1E90001 		ldrd	r0, [r1]
 193 0040 FFF7FEFF 		bl	__aeabi_dsub
 194 0044 0246     		mov	r2, r0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 5


 195 0046 0B46     		mov	r3, r1
 196 0048 1046     		mov	r0, r2
 197 004a 1946     		mov	r1, r3
 198              		.loc 1 33 49
 199 004c 50A3     		adr	r3, .L18+56
 200 004e D3E90023 		ldrd	r2, [r3]
 201 0052 FFF7FEFF 		bl	__aeabi_ddiv
 202 0056 0246     		mov	r2, r0
 203 0058 0B46     		mov	r3, r1
 204              		.loc 1 33 20
 205 005a D7E90401 		ldrd	r0, [r7, #16]
 206 005e FFF7FEFF 		bl	__aeabi_ddiv
 207 0062 0246     		mov	r2, r0
 208 0064 0B46     		mov	r3, r1
 209 0066 C7E90223 		strd	r2, [r7, #8]
  34:Core/Src/Functions.c ****         return 1 / (HOT_END_THERM_A + HOT_END_THERM_B * log(resistance) + HOT_END_THERM_C * pow(log
 210              		.loc 1 34 57
 211 006a 97ED020B 		vldr.64	d0, [r7, #8]
 212 006e FFF7FEFF 		bl	log
 213 0072 51EC100B 		vmov	r0, r1, d0
 214              		.loc 1 34 55
 215 0076 48A3     		adr	r3, .L18+64
 216 0078 D3E90023 		ldrd	r2, [r3]
 217 007c FFF7FEFF 		bl	__aeabi_dmul
 218 0080 0246     		mov	r2, r0
 219 0082 0B46     		mov	r3, r1
 220 0084 1046     		mov	r0, r2
 221 0086 1946     		mov	r1, r3
 222              		.loc 1 34 37
 223 0088 45A3     		adr	r3, .L18+72
 224 008a D3E90023 		ldrd	r2, [r3]
 225 008e FFF7FEFF 		bl	__aeabi_dadd
 226 0092 0246     		mov	r2, r0
 227 0094 0B46     		mov	r3, r1
 228 0096 1446     		mov	r4, r2
 229 0098 1D46     		mov	r5, r3
 230              		.loc 1 34 93
 231 009a 97ED020B 		vldr.64	d0, [r7, #8]
 232 009e FFF7FEFF 		bl	log
 233 00a2 B0EE407A 		vmov.f32	s14, s0
 234 00a6 F0EE607A 		vmov.f32	s15, s1
 235 00aa 9FED2B1B 		vldr.64	d1, .L18
 236 00ae B0EE470A 		vmov.f32	s0, s14
 237 00b2 F0EE670A 		vmov.f32	s1, s15
 238 00b6 FFF7FEFF 		bl	pow
 239 00ba 51EC100B 		vmov	r0, r1, d0
 240              		.loc 1 34 91
 241 00be 3AA3     		adr	r3, .L18+80
 242 00c0 D3E90023 		ldrd	r2, [r3]
 243 00c4 FFF7FEFF 		bl	__aeabi_dmul
 244 00c8 0246     		mov	r2, r0
 245 00ca 0B46     		mov	r3, r1
 246              		.loc 1 34 73
 247 00cc 2046     		mov	r0, r4
 248 00ce 2946     		mov	r1, r5
 249 00d0 FFF7FEFF 		bl	__aeabi_dadd
 250 00d4 0246     		mov	r2, r0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 6


 251 00d6 0B46     		mov	r3, r1
 252              		.loc 1 34 18
 253 00d8 4FF00000 		mov	r0, #0
 254 00dc 2849     		ldr	r1, .L18+40
 255 00de FFF7FEFF 		bl	__aeabi_ddiv
 256 00e2 0246     		mov	r2, r0
 257 00e4 0B46     		mov	r3, r1
 258 00e6 1046     		mov	r0, r2
 259 00e8 1946     		mov	r1, r3
 260              		.loc 1 34 118
 261 00ea 1DA3     		adr	r3, .L18+8
 262 00ec D3E90023 		ldrd	r2, [r3]
 263 00f0 FFF7FEFF 		bl	__aeabi_dsub
 264 00f4 0246     		mov	r2, r0
 265 00f6 0B46     		mov	r3, r1
 266 00f8 25E0     		b	.L16
 267              	.L14:
  35:Core/Src/Functions.c ****         break;
  36:Core/Src/Functions.c ****     case ADC_STM_TEMP:
  37:Core/Src/Functions.c ****         return ((V30 - (ADC_VOLTAGE / ADC_SAMPLING * value)) / AVG_SLOPE + 30);
 268              		.loc 1 37 52
 269 00fa BB88     		ldrh	r3, [r7, #4]
 270 00fc 1846     		mov	r0, r3
 271 00fe FFF7FEFF 		bl	__aeabi_i2d
 272 0102 19A3     		adr	r3, .L18+16
 273 0104 D3E90023 		ldrd	r2, [r3]
 274 0108 FFF7FEFF 		bl	__aeabi_dmul
 275 010c 0246     		mov	r2, r0
 276 010e 0B46     		mov	r3, r1
 277              		.loc 1 37 22
 278 0110 17A1     		adr	r1, .L18+24
 279 0112 D1E90001 		ldrd	r0, [r1]
 280 0116 FFF7FEFF 		bl	__aeabi_dsub
 281 011a 0246     		mov	r2, r0
 282 011c 0B46     		mov	r3, r1
 283 011e 1046     		mov	r0, r2
 284 0120 1946     		mov	r1, r3
 285              		.loc 1 37 62
 286 0122 15A3     		adr	r3, .L18+32
 287 0124 D3E90023 		ldrd	r2, [r3]
 288 0128 FFF7FEFF 		bl	__aeabi_ddiv
 289 012c 0246     		mov	r2, r0
 290 012e 0B46     		mov	r3, r1
 291 0130 1046     		mov	r0, r2
 292 0132 1946     		mov	r1, r3
 293              		.loc 1 37 74
 294 0134 4FF00002 		mov	r2, #0
 295 0138 124B     		ldr	r3, .L18+44
 296 013a FFF7FEFF 		bl	__aeabi_dadd
 297 013e 0246     		mov	r2, r0
 298 0140 0B46     		mov	r3, r1
 299 0142 00E0     		b	.L16
 300              	.L17:
  38:Core/Src/Functions.c ****         break;
  39:Core/Src/Functions.c ****     }
  40:Core/Src/Functions.c **** }
 301              		.loc 1 40 1
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 7


 302 0144 01E0     		b	.L12
 303              	.L16:
 304 0146 43EC172B 		vmov	d7, r2, r3
 305              	.L12:
 306 014a B0EE470A 		vmov.f32	s0, s14
 307 014e F0EE670A 		vmov.f32	s1, s15
 308 0152 1837     		adds	r7, r7, #24
 309              		.cfi_def_cfa_offset 16
 310 0154 BD46     		mov	sp, r7
 311              		.cfi_def_cfa_register 13
 312              		@ sp needed
 313 0156 B0BD     		pop	{r4, r5, r7, pc}
 314              	.L19:
 315              		.align	3
 316              	.L18:
 317 0158 00000000 		.word	0
 318 015c 00000840 		.word	1074266112
 319 0160 66666666 		.word	1717986918
 320 0164 66127140 		.word	1081152102
 321 0168 66666666 		.word	1717986918
 322 016c 66660A3F 		.word	1057646182
 323 0170 52B81E85 		.word	-2061584302
 324 0174 EB51E83F 		.word	1072189931
 325 0178 7B14AE47 		.word	1202590843
 326 017c E17A643F 		.word	1063549665
 327 0180 0000F03F 		.word	1072693248
 328 0184 00003E40 		.word	1077805056
 329 0188 66666666 		.word	1717986918
 330 018c 66660A40 		.word	1074423398
 331 0190 00000000 		.word	0
 332 0194 0088C340 		.word	1086556160
 333 0198 0395F1EF 		.word	-269380349
 334 019c 332E2C3F 		.word	1059860019
 335 01a0 D7F7E120 		.word	551679959
 336 01a4 21CA473F 		.word	1061669409
 337 01a8 B905B0A0 		.word	-1599076935
 338 01ac E7517C3E 		.word	1048334823
 339              		.cfi_endproc
 340              	.LFE322:
 342              		.section	.text.SetHeating,"ax",%progbits
 343              		.align	1
 344              		.global	SetHeating
 345              		.syntax unified
 346              		.thumb
 347              		.thumb_func
 349              	SetHeating:
 350              	.LFB323:
  41:Core/Src/Functions.c **** 
  42:Core/Src/Functions.c **** void SetHeating(uint16_t heater, uint16_t power)
  43:Core/Src/Functions.c **** {
 351              		.loc 1 43 1
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 8
 354              		@ frame_needed = 1, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 356 0000 80B4     		push	{r7}
 357              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 8


 358              		.cfi_offset 7, -4
 359 0002 83B0     		sub	sp, sp, #12
 360              		.cfi_def_cfa_offset 16
 361 0004 00AF     		add	r7, sp, #0
 362              		.cfi_def_cfa_register 7
 363 0006 0346     		mov	r3, r0
 364 0008 0A46     		mov	r2, r1
 365 000a FB80     		strh	r3, [r7, #6]	@ movhi
 366 000c 1346     		mov	r3, r2	@ movhi
 367 000e BB80     		strh	r3, [r7, #4]	@ movhi
  44:Core/Src/Functions.c ****     switch (heater)
 368              		.loc 1 44 5
 369 0010 FB88     		ldrh	r3, [r7, #6]
 370 0012 002B     		cmp	r3, #0
 371 0014 03D1     		bne	.L22
  45:Core/Src/Functions.c ****     {
  46:Core/Src/Functions.c ****     case HOT_END:
  47:Core/Src/Functions.c ****         TIM3->CCR2 = power;
 372              		.loc 1 47 13
 373 0016 054A     		ldr	r2, .L23
 374              		.loc 1 47 20
 375 0018 BB88     		ldrh	r3, [r7, #4]
 376 001a 9363     		str	r3, [r2, #56]
  48:Core/Src/Functions.c ****         break;
 377              		.loc 1 48 9
 378 001c 00BF     		nop
 379              	.L22:
  49:Core/Src/Functions.c ****     }
  50:Core/Src/Functions.c **** }
 380              		.loc 1 50 1
 381 001e 00BF     		nop
 382 0020 0C37     		adds	r7, r7, #12
 383              		.cfi_def_cfa_offset 4
 384 0022 BD46     		mov	sp, r7
 385              		.cfi_def_cfa_register 13
 386              		@ sp needed
 387 0024 5DF8047B 		ldr	r7, [sp], #4
 388              		.cfi_restore 7
 389              		.cfi_def_cfa_offset 0
 390 0028 7047     		bx	lr
 391              	.L24:
 392 002a 00BF     		.align	2
 393              	.L23:
 394 002c 00040040 		.word	1073742848
 395              		.cfi_endproc
 396              	.LFE323:
 398              		.section	.text.SetFanSpeed,"ax",%progbits
 399              		.align	1
 400              		.global	SetFanSpeed
 401              		.syntax unified
 402              		.thumb
 403              		.thumb_func
 405              	SetFanSpeed:
 406              	.LFB324:
  51:Core/Src/Functions.c **** 
  52:Core/Src/Functions.c **** void SetFanSpeed(uint16_t fan, uint16_t speed)
  53:Core/Src/Functions.c **** {
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 9


 407              		.loc 1 53 1
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 8
 410              		@ frame_needed = 1, uses_anonymous_args = 0
 411              		@ link register save eliminated.
 412 0000 80B4     		push	{r7}
 413              		.cfi_def_cfa_offset 4
 414              		.cfi_offset 7, -4
 415 0002 83B0     		sub	sp, sp, #12
 416              		.cfi_def_cfa_offset 16
 417 0004 00AF     		add	r7, sp, #0
 418              		.cfi_def_cfa_register 7
 419 0006 0346     		mov	r3, r0
 420 0008 0A46     		mov	r2, r1
 421 000a FB80     		strh	r3, [r7, #6]	@ movhi
 422 000c 1346     		mov	r3, r2	@ movhi
 423 000e BB80     		strh	r3, [r7, #4]	@ movhi
  54:Core/Src/Functions.c ****     switch (fan)
 424              		.loc 1 54 5
 425 0010 FB88     		ldrh	r3, [r7, #6]
 426 0012 002B     		cmp	r3, #0
 427 0014 03D1     		bne	.L27
  55:Core/Src/Functions.c ****     {
  56:Core/Src/Functions.c ****     case HOT_END_FAN:
  57:Core/Src/Functions.c ****         TIM3->CCR3 = speed;
 428              		.loc 1 57 13
 429 0016 054A     		ldr	r2, .L28
 430              		.loc 1 57 20
 431 0018 BB88     		ldrh	r3, [r7, #4]
 432 001a D363     		str	r3, [r2, #60]
  58:Core/Src/Functions.c ****         break;
 433              		.loc 1 58 9
 434 001c 00BF     		nop
 435              	.L27:
  59:Core/Src/Functions.c ****     }
  60:Core/Src/Functions.c **** }
 436              		.loc 1 60 1
 437 001e 00BF     		nop
 438 0020 0C37     		adds	r7, r7, #12
 439              		.cfi_def_cfa_offset 4
 440 0022 BD46     		mov	sp, r7
 441              		.cfi_def_cfa_register 13
 442              		@ sp needed
 443 0024 5DF8047B 		ldr	r7, [sp], #4
 444              		.cfi_restore 7
 445              		.cfi_def_cfa_offset 0
 446 0028 7047     		bx	lr
 447              	.L29:
 448 002a 00BF     		.align	2
 449              	.L28:
 450 002c 00040040 		.word	1073742848
 451              		.cfi_endproc
 452              	.LFE324:
 454              		.global	__aeabi_dcmpgt
 455              		.global	__aeabi_d2uiz
 456              		.global	__aeabi_dcmplt
 457              		.global	__aeabi_ui2d
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 10


 458              		.section	.text.MoveXY,"ax",%progbits
 459              		.align	1
 460              		.global	MoveXY
 461              		.syntax unified
 462              		.thumb
 463              		.thumb_func
 465              	MoveXY:
 466              	.LFB325:
  61:Core/Src/Functions.c **** 
  62:Core/Src/Functions.c **** void MoveXY(double dir_x, double dir_y) {
 467              		.loc 1 62 41
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 72
 470              		@ frame_needed = 1, uses_anonymous_args = 0
 471 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 472              		.cfi_def_cfa_offset 24
 473              		.cfi_offset 4, -24
 474              		.cfi_offset 5, -20
 475              		.cfi_offset 7, -16
 476              		.cfi_offset 8, -12
 477              		.cfi_offset 9, -8
 478              		.cfi_offset 14, -4
 479 0004 92B0     		sub	sp, sp, #72
 480              		.cfi_def_cfa_offset 96
 481 0006 00AF     		add	r7, sp, #0
 482              		.cfi_def_cfa_register 7
 483 0008 87ED040B 		vstr.64	d0, [r7, #16]
 484 000c 87ED021B 		vstr.64	d1, [r7, #8]
  63:Core/Src/Functions.c ****     double engine_dir_B = dir_x * SQRT_2_BY_2 - dir_y * SQRT_2_BY_2; // engine B (image Y)
 485              		.loc 1 63 33
 486 0010 B4A3     		adr	r3, .L57+60
 487 0012 D3E90023 		ldrd	r2, [r3]
 488 0016 D7E90401 		ldrd	r0, [r7, #16]
 489 001a FFF7FEFF 		bl	__aeabi_dmul
 490 001e 0246     		mov	r2, r0
 491 0020 0B46     		mov	r3, r1
 492 0022 9046     		mov	r8, r2
 493 0024 9946     		mov	r9, r3
 494              		.loc 1 63 55
 495 0026 AFA3     		adr	r3, .L57+60
 496 0028 D3E90023 		ldrd	r2, [r3]
 497 002c D7E90201 		ldrd	r0, [r7, #8]
 498 0030 FFF7FEFF 		bl	__aeabi_dmul
 499 0034 0246     		mov	r2, r0
 500 0036 0B46     		mov	r3, r1
 501              		.loc 1 63 12
 502 0038 4046     		mov	r0, r8
 503 003a 4946     		mov	r1, r9
 504 003c FFF7FEFF 		bl	__aeabi_dsub
 505 0040 0246     		mov	r2, r0
 506 0042 0B46     		mov	r3, r1
 507 0044 C7E91023 		strd	r2, [r7, #64]
  64:Core/Src/Functions.c ****     double engine_dir_A = dir_x * SQRT_2_BY_2 + dir_y * SQRT_2_BY_2; // engine A (image X)
 508              		.loc 1 64 33
 509 0048 A6A3     		adr	r3, .L57+60
 510 004a D3E90023 		ldrd	r2, [r3]
 511 004e D7E90401 		ldrd	r0, [r7, #16]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 11


 512 0052 FFF7FEFF 		bl	__aeabi_dmul
 513 0056 0246     		mov	r2, r0
 514 0058 0B46     		mov	r3, r1
 515 005a 9046     		mov	r8, r2
 516 005c 9946     		mov	r9, r3
 517              		.loc 1 64 55
 518 005e A1A3     		adr	r3, .L57+60
 519 0060 D3E90023 		ldrd	r2, [r3]
 520 0064 D7E90201 		ldrd	r0, [r7, #8]
 521 0068 FFF7FEFF 		bl	__aeabi_dmul
 522 006c 0246     		mov	r2, r0
 523 006e 0B46     		mov	r3, r1
 524              		.loc 1 64 12
 525 0070 4046     		mov	r0, r8
 526 0072 4946     		mov	r1, r9
 527 0074 FFF7FEFF 		bl	__aeabi_dadd
 528 0078 0246     		mov	r2, r0
 529 007a 0B46     		mov	r3, r1
 530 007c C7E90E23 		strd	r2, [r7, #56]
  65:Core/Src/Functions.c **** 
  66:Core/Src/Functions.c ****     double feed_rate_A = fabs(F * engine_dir_A); // F = feed rate
 531              		.loc 1 66 33
 532 0080 914B     		ldr	r3, .L57+32
 533 0082 1B88     		ldrh	r3, [r3]
 534 0084 1846     		mov	r0, r3
 535 0086 FFF7FEFF 		bl	__aeabi_i2d
 536 008a D7E90E23 		ldrd	r2, [r7, #56]
 537 008e FFF7FEFF 		bl	__aeabi_dmul
 538 0092 0246     		mov	r2, r0
 539 0094 0B46     		mov	r3, r1
 540              		.loc 1 66 12
 541 0096 1146     		mov	r1, r2
 542 0098 3963     		str	r1, [r7, #48]
 543 009a 23F00043 		bic	r3, r3, #-2147483648
 544 009e 7B63     		str	r3, [r7, #52]
  67:Core/Src/Functions.c ****     double feed_rate_B = fabs(F * engine_dir_B);
 545              		.loc 1 67 33
 546 00a0 894B     		ldr	r3, .L57+32
 547 00a2 1B88     		ldrh	r3, [r3]
 548 00a4 1846     		mov	r0, r3
 549 00a6 FFF7FEFF 		bl	__aeabi_i2d
 550 00aa D7E91023 		ldrd	r2, [r7, #64]
 551 00ae FFF7FEFF 		bl	__aeabi_dmul
 552 00b2 0246     		mov	r2, r0
 553 00b4 0B46     		mov	r3, r1
 554              		.loc 1 67 12
 555 00b6 1146     		mov	r1, r2
 556 00b8 B962     		str	r1, [r7, #40]
 557 00ba 23F00043 		bic	r3, r3, #-2147483648
 558 00be FB62     		str	r3, [r7, #44]
  68:Core/Src/Functions.c **** 
  69:Core/Src/Functions.c ****     if(feed_rate_A > 0) {
 559              		.loc 1 69 7
 560 00c0 4FF00002 		mov	r2, #0
 561 00c4 4FF00003 		mov	r3, #0
 562 00c8 D7E90C01 		ldrd	r0, [r7, #48]
 563 00cc FFF7FEFF 		bl	__aeabi_dcmpgt
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 12


 564 00d0 0346     		mov	r3, r0
 565 00d2 002B     		cmp	r3, #0
 566 00d4 7BD0     		beq	.L31
 567              	.LBB2:
  70:Core/Src/Functions.c ****         uint32_t speed_A = (double)1 / (double)feed_rate_A * (double)60 * XY_MM_PER_REV / XY_STEPS_
 568              		.loc 1 70 38
 569 00d6 D7E90C23 		ldrd	r2, [r7, #48]
 570 00da 4FF00000 		mov	r0, #0
 571 00de 7B49     		ldr	r1, .L57+36
 572 00e0 FFF7FEFF 		bl	__aeabi_ddiv
 573 00e4 0246     		mov	r2, r0
 574 00e6 0B46     		mov	r3, r1
 575 00e8 1046     		mov	r0, r2
 576 00ea 1946     		mov	r1, r3
 577              		.loc 1 70 60
 578 00ec 4FF00002 		mov	r2, #0
 579 00f0 774B     		ldr	r3, .L57+40
 580 00f2 FFF7FEFF 		bl	__aeabi_dmul
 581 00f6 0246     		mov	r2, r0
 582 00f8 0B46     		mov	r3, r1
 583 00fa 1046     		mov	r0, r2
 584 00fc 1946     		mov	r1, r3
 585              		.loc 1 70 73
 586 00fe 6AA3     		adr	r3, .L57
 587 0100 D3E90023 		ldrd	r2, [r3]
 588 0104 FFF7FEFF 		bl	__aeabi_dmul
 589 0108 0246     		mov	r2, r0
 590 010a 0B46     		mov	r3, r1
 591 010c 1046     		mov	r0, r2
 592 010e 1946     		mov	r1, r3
 593              		.loc 1 70 89
 594 0110 67A3     		adr	r3, .L57+8
 595 0112 D3E90023 		ldrd	r2, [r3]
 596 0116 FFF7FEFF 		bl	__aeabi_ddiv
 597 011a 0246     		mov	r2, r0
 598 011c 0B46     		mov	r3, r1
 599 011e 1046     		mov	r0, r2
 600 0120 1946     		mov	r1, r3
 601              		.loc 1 70 108
 602 0122 65A3     		adr	r3, .L57+16
 603 0124 D3E90023 		ldrd	r2, [r3]
 604 0128 FFF7FEFF 		bl	__aeabi_dmul
 605 012c 0246     		mov	r2, r0
 606 012e 0B46     		mov	r3, r1
 607              		.loc 1 70 18
 608 0130 1046     		mov	r0, r2
 609 0132 1946     		mov	r1, r3
 610 0134 FFF7FEFF 		bl	__aeabi_d2uiz
 611 0138 0346     		mov	r3, r0
 612 013a 7B62     		str	r3, [r7, #36]
  71:Core/Src/Functions.c **** 
  72:Core/Src/Functions.c ****         if(GetTicks() - last_tick_A >= speed_A && fabs(engine_dir_A) > ENGINE_MIN_SPEED) {
 613              		.loc 1 72 12
 614 013c FFF7FEFF 		bl	GetTicks
 615 0140 0346     		mov	r3, r0
 616 0142 1A46     		mov	r2, r3
 617              		.loc 1 72 23
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 13


 618 0144 634B     		ldr	r3, .L57+44
 619 0146 1B68     		ldr	r3, [r3]
 620 0148 D31A     		subs	r3, r2, r3
 621              		.loc 1 72 11
 622 014a 7A6A     		ldr	r2, [r7, #36]
 623 014c 9A42     		cmp	r2, r3
 624 014e 3ED8     		bhi	.L31
 625              		.loc 1 72 51 discriminator 1
 626 0150 BB6B     		ldr	r3, [r7, #56]
 627 0152 3B60     		str	r3, [r7]
 628 0154 FB6B     		ldr	r3, [r7, #60]
 629 0156 23F00043 		bic	r3, r3, #-2147483648
 630 015a 7B60     		str	r3, [r7, #4]
 631              		.loc 1 72 48 discriminator 1
 632 015c 58A3     		adr	r3, .L57+24
 633 015e D3E90023 		ldrd	r2, [r3]
 634 0162 D7E90001 		ldrd	r0, [r7]
 635 0166 FFF7FEFF 		bl	__aeabi_dcmpgt
 636 016a 0346     		mov	r3, r0
 637 016c 002B     		cmp	r3, #0
 638 016e 2ED0     		beq	.L31
  73:Core/Src/Functions.c ****             // isRunning = true;
  74:Core/Src/Functions.c ****             if(engine_dir_A > 0) {
 639              		.loc 1 74 15
 640 0170 4FF00002 		mov	r2, #0
 641 0174 4FF00003 		mov	r3, #0
 642 0178 D7E90E01 		ldrd	r0, [r7, #56]
 643 017c FFF7FEFF 		bl	__aeabi_dcmpgt
 644 0180 0346     		mov	r3, r0
 645 0182 002B     		cmp	r3, #0
 646 0184 09D0     		beq	.L54
  75:Core/Src/Functions.c ****                 CHANGE_MOTOR_DIR(X_AXIS_DIR, CLOCKWISE);
 647              		.loc 1 75 17
 648 0186 0022     		movs	r2, #0
 649 0188 0221     		movs	r1, #2
 650 018a 5348     		ldr	r0, .L57+48
 651 018c FFF7FEFF 		bl	HAL_GPIO_WritePin
  76:Core/Src/Functions.c ****                 MAKE_MOTOR_STEP(X_AXIS_STEP);
 652              		.loc 1 76 17
 653 0190 4021     		movs	r1, #64
 654 0192 5248     		ldr	r0, .L57+52
 655 0194 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 656 0198 13E0     		b	.L36
 657              	.L54:
  77:Core/Src/Functions.c ****             } else if(engine_dir_A < 0) {
 658              		.loc 1 77 22
 659 019a 4FF00002 		mov	r2, #0
 660 019e 4FF00003 		mov	r3, #0
 661 01a2 D7E90E01 		ldrd	r0, [r7, #56]
 662 01a6 FFF7FEFF 		bl	__aeabi_dcmplt
 663 01aa 0346     		mov	r3, r0
 664 01ac 002B     		cmp	r3, #0
 665 01ae 08D0     		beq	.L36
  78:Core/Src/Functions.c ****                 CHANGE_MOTOR_DIR(X_AXIS_DIR, COUNTERCLOCKWISE);
 666              		.loc 1 78 17
 667 01b0 0122     		movs	r2, #1
 668 01b2 0221     		movs	r1, #2
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 14


 669 01b4 4848     		ldr	r0, .L57+48
 670 01b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
  79:Core/Src/Functions.c ****                 MAKE_MOTOR_STEP(X_AXIS_STEP);
 671              		.loc 1 79 17
 672 01ba 4021     		movs	r1, #64
 673 01bc 4748     		ldr	r0, .L57+52
 674 01be FFF7FEFF 		bl	HAL_GPIO_TogglePin
 675              	.L36:
  80:Core/Src/Functions.c ****             }
  81:Core/Src/Functions.c ****             last_tick_A = GetTicks();
 676              		.loc 1 81 27
 677 01c2 FFF7FEFF 		bl	GetTicks
 678 01c6 0346     		mov	r3, r0
 679 01c8 1A46     		mov	r2, r3
 680              		.loc 1 81 25
 681 01ca 424B     		ldr	r3, .L57+44
 682 01cc 1A60     		str	r2, [r3]
 683              	.L31:
 684              	.LBE2:
  82:Core/Src/Functions.c ****         }
  83:Core/Src/Functions.c ****     }
  84:Core/Src/Functions.c **** 
  85:Core/Src/Functions.c ****     if(feed_rate_B > 0) {
 685              		.loc 1 85 7
 686 01ce 4FF00002 		mov	r2, #0
 687 01d2 4FF00003 		mov	r3, #0
 688 01d6 D7E90A01 		ldrd	r0, [r7, #40]
 689 01da FFF7FEFF 		bl	__aeabi_dcmpgt
 690 01de 0346     		mov	r3, r0
 691 01e0 002B     		cmp	r3, #0
 692 01e2 00F09E80 		beq	.L38
 693              	.LBB3:
  86:Core/Src/Functions.c ****         uint32_t speed_B = (double)1 / (double)feed_rate_B * (double)60 * XY_MM_PER_REV / XY_STEPS_
 694              		.loc 1 86 38
 695 01e6 D7E90A23 		ldrd	r2, [r7, #40]
 696 01ea 4FF00000 		mov	r0, #0
 697 01ee 3749     		ldr	r1, .L57+36
 698 01f0 FFF7FEFF 		bl	__aeabi_ddiv
 699 01f4 0246     		mov	r2, r0
 700 01f6 0B46     		mov	r3, r1
 701 01f8 1046     		mov	r0, r2
 702 01fa 1946     		mov	r1, r3
 703              		.loc 1 86 60
 704 01fc 4FF00002 		mov	r2, #0
 705 0200 334B     		ldr	r3, .L57+40
 706 0202 FFF7FEFF 		bl	__aeabi_dmul
 707 0206 0246     		mov	r2, r0
 708 0208 0B46     		mov	r3, r1
 709 020a 1046     		mov	r0, r2
 710 020c 1946     		mov	r1, r3
 711              		.loc 1 86 73
 712 020e 26A3     		adr	r3, .L57
 713 0210 D3E90023 		ldrd	r2, [r3]
 714 0214 FFF7FEFF 		bl	__aeabi_dmul
 715 0218 0246     		mov	r2, r0
 716 021a 0B46     		mov	r3, r1
 717 021c 1046     		mov	r0, r2
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 15


 718 021e 1946     		mov	r1, r3
 719              		.loc 1 86 89
 720 0220 23A3     		adr	r3, .L57+8
 721 0222 D3E90023 		ldrd	r2, [r3]
 722 0226 FFF7FEFF 		bl	__aeabi_ddiv
 723 022a 0246     		mov	r2, r0
 724 022c 0B46     		mov	r3, r1
 725 022e 1046     		mov	r0, r2
 726 0230 1946     		mov	r1, r3
 727              		.loc 1 86 108
 728 0232 21A3     		adr	r3, .L57+16
 729 0234 D3E90023 		ldrd	r2, [r3]
 730 0238 FFF7FEFF 		bl	__aeabi_dmul
 731 023c 0246     		mov	r2, r0
 732 023e 0B46     		mov	r3, r1
 733              		.loc 1 86 18
 734 0240 1046     		mov	r0, r2
 735 0242 1946     		mov	r1, r3
 736 0244 FFF7FEFF 		bl	__aeabi_d2uiz
 737 0248 0346     		mov	r3, r0
 738 024a 3B62     		str	r3, [r7, #32]
  87:Core/Src/Functions.c **** 
  88:Core/Src/Functions.c ****         if(GetTicks() - last_tick_B >= speed_B && fabs(engine_dir_B) > ENGINE_MIN_SPEED) {
 739              		.loc 1 88 12
 740 024c FFF7FEFF 		bl	GetTicks
 741 0250 0346     		mov	r3, r0
 742 0252 1A46     		mov	r2, r3
 743              		.loc 1 88 23
 744 0254 224B     		ldr	r3, .L57+56
 745 0256 1B68     		ldr	r3, [r3]
 746 0258 D31A     		subs	r3, r2, r3
 747              		.loc 1 88 11
 748 025a 3A6A     		ldr	r2, [r7, #32]
 749 025c 9A42     		cmp	r2, r3
 750 025e 60D8     		bhi	.L38
 751              		.loc 1 88 51 discriminator 1
 752 0260 3C6C     		ldr	r4, [r7, #64]
 753 0262 7B6C     		ldr	r3, [r7, #68]
 754 0264 23F00045 		bic	r5, r3, #-2147483648
 755              		.loc 1 88 48 discriminator 1
 756 0268 15A3     		adr	r3, .L57+24
 757 026a D3E90023 		ldrd	r2, [r3]
 758 026e 2046     		mov	r0, r4
 759 0270 2946     		mov	r1, r5
 760 0272 FFF7FEFF 		bl	__aeabi_dcmpgt
 761 0276 0346     		mov	r3, r0
 762 0278 002B     		cmp	r3, #0
 763 027a 52D0     		beq	.L38
  89:Core/Src/Functions.c ****             // isRunning = true;
  90:Core/Src/Functions.c ****             if(engine_dir_B > 0) {
 764              		.loc 1 90 15
 765 027c 4FF00002 		mov	r2, #0
 766 0280 4FF00003 		mov	r3, #0
 767 0284 D7E91001 		ldrd	r0, [r7, #64]
 768 0288 FFF7FEFF 		bl	__aeabi_dcmpgt
 769 028c 0346     		mov	r3, r0
 770 028e 002B     		cmp	r3, #0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 16


 771 0290 2CD0     		beq	.L55
  91:Core/Src/Functions.c ****                 CHANGE_MOTOR_DIR(Y_AXIS_DIR, CLOCKWISE);
 772              		.loc 1 91 17
 773 0292 0022     		movs	r2, #0
 774 0294 0421     		movs	r1, #4
 775 0296 1048     		ldr	r0, .L57+48
 776 0298 FFF7FEFF 		bl	HAL_GPIO_WritePin
  92:Core/Src/Functions.c ****                 MAKE_MOTOR_STEP(Y_AXIS_STEP);
 777              		.loc 1 92 17
 778 029c 8021     		movs	r1, #128
 779 029e 4FF09040 		mov	r0, #1207959552
 780 02a2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 781 02a6 36E0     		b	.L43
 782              	.L58:
 783              		.align	3
 784              	.L57:
 785 02a8 00000020 		.word	536870912
 786 02ac 5C475140 		.word	1079068508
 787 02b0 00000000 		.word	0
 788 02b4 0064B940 		.word	1085891584
 789 02b8 00000000 		.word	0
 790 02bc 80842E41 		.word	1093567616
 791 02c0 FCA9F1D2 		.word	-755914244
 792 02c4 4D62503F 		.word	1062232653
 793 02c8 00000000 		.word	F
 794 02cc 0000F03F 		.word	1072693248
 795 02d0 00004E40 		.word	1078853632
 796 02d4 00000000 		.word	last_tick_A
 797 02d8 00140048 		.word	1207964672
 798 02dc 00080048 		.word	1207961600
 799 02e0 00000000 		.word	last_tick_B
 800 02e4 CD3B7F66 		.word	1719614413
 801 02e8 9EA0E63F 		.word	1072079006
 802              	.L55:
  93:Core/Src/Functions.c ****             } else if(engine_dir_B < 0) {
 803              		.loc 1 93 22
 804 02ec 4FF00002 		mov	r2, #0
 805 02f0 4FF00003 		mov	r3, #0
 806 02f4 D7E91001 		ldrd	r0, [r7, #64]
 807 02f8 FFF7FEFF 		bl	__aeabi_dcmplt
 808 02fc 0346     		mov	r3, r0
 809 02fe 002B     		cmp	r3, #0
 810 0300 09D0     		beq	.L43
  94:Core/Src/Functions.c ****                 CHANGE_MOTOR_DIR(Y_AXIS_DIR, COUNTERCLOCKWISE);
 811              		.loc 1 94 17
 812 0302 0122     		movs	r2, #1
 813 0304 0421     		movs	r1, #4
 814 0306 5048     		ldr	r0, .L59+24
 815 0308 FFF7FEFF 		bl	HAL_GPIO_WritePin
  95:Core/Src/Functions.c ****                 MAKE_MOTOR_STEP(Y_AXIS_STEP);
 816              		.loc 1 95 17
 817 030c 8021     		movs	r1, #128
 818 030e 4FF09040 		mov	r0, #1207959552
 819 0312 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 820              	.L43:
  96:Core/Src/Functions.c ****             }
  97:Core/Src/Functions.c ****             last_tick_B = GetTicks();
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 17


 821              		.loc 1 97 27
 822 0316 FFF7FEFF 		bl	GetTicks
 823 031a 0346     		mov	r3, r0
 824 031c 1A46     		mov	r2, r3
 825              		.loc 1 97 25
 826 031e 4B4B     		ldr	r3, .L59+28
 827 0320 1A60     		str	r2, [r3]
 828              	.L38:
 829              	.LBE3:
  98:Core/Src/Functions.c ****         }
  99:Core/Src/Functions.c ****     }
 100:Core/Src/Functions.c **** 
 101:Core/Src/Functions.c ****     if(F > 0) {
 830              		.loc 1 101 10
 831 0322 4B4B     		ldr	r3, .L59+32
 832 0324 1B88     		ldrh	r3, [r3]
 833              		.loc 1 101 7
 834 0326 002B     		cmp	r3, #0
 835 0328 7DD0     		beq	.L56
 836              	.LBB4:
 102:Core/Src/Functions.c ****         uint32_t speed_AB = (double)1 / (double)F * (double)60 * XY_MM_PER_REV / XY_STEPS_PER_REV *
 837              		.loc 1 102 41
 838 032a 494B     		ldr	r3, .L59+32
 839 032c 1B88     		ldrh	r3, [r3]
 840 032e 1846     		mov	r0, r3
 841 0330 FFF7FEFF 		bl	__aeabi_ui2d
 842 0334 0246     		mov	r2, r0
 843 0336 0B46     		mov	r3, r1
 844              		.loc 1 102 39
 845 0338 4FF00000 		mov	r0, #0
 846 033c 4549     		ldr	r1, .L59+36
 847 033e FFF7FEFF 		bl	__aeabi_ddiv
 848 0342 0246     		mov	r2, r0
 849 0344 0B46     		mov	r3, r1
 850 0346 1046     		mov	r0, r2
 851 0348 1946     		mov	r1, r3
 852              		.loc 1 102 51
 853 034a 4FF00002 		mov	r2, #0
 854 034e 424B     		ldr	r3, .L59+40
 855 0350 FFF7FEFF 		bl	__aeabi_dmul
 856 0354 0246     		mov	r2, r0
 857 0356 0B46     		mov	r3, r1
 858 0358 1046     		mov	r0, r2
 859 035a 1946     		mov	r1, r3
 860              		.loc 1 102 64
 861 035c 34A3     		adr	r3, .L59
 862 035e D3E90023 		ldrd	r2, [r3]
 863 0362 FFF7FEFF 		bl	__aeabi_dmul
 864 0366 0246     		mov	r2, r0
 865 0368 0B46     		mov	r3, r1
 866 036a 1046     		mov	r0, r2
 867 036c 1946     		mov	r1, r3
 868              		.loc 1 102 80
 869 036e 32A3     		adr	r3, .L59+8
 870 0370 D3E90023 		ldrd	r2, [r3]
 871 0374 FFF7FEFF 		bl	__aeabi_ddiv
 872 0378 0246     		mov	r2, r0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 18


 873 037a 0B46     		mov	r3, r1
 874 037c 1046     		mov	r0, r2
 875 037e 1946     		mov	r1, r3
 876              		.loc 1 102 99
 877 0380 2FA3     		adr	r3, .L59+16
 878 0382 D3E90023 		ldrd	r2, [r3]
 879 0386 FFF7FEFF 		bl	__aeabi_dmul
 880 038a 0246     		mov	r2, r0
 881 038c 0B46     		mov	r3, r1
 882              		.loc 1 102 18
 883 038e 1046     		mov	r0, r2
 884 0390 1946     		mov	r1, r3
 885 0392 FFF7FEFF 		bl	__aeabi_d2uiz
 886 0396 0346     		mov	r3, r0
 887 0398 FB61     		str	r3, [r7, #28]
 103:Core/Src/Functions.c ****         if(GetTicks() - last_tick_AB >= speed_AB) {
 888              		.loc 1 103 12
 889 039a FFF7FEFF 		bl	GetTicks
 890 039e 0346     		mov	r3, r0
 891 03a0 1A46     		mov	r2, r3
 892              		.loc 1 103 23
 893 03a2 2E4B     		ldr	r3, .L59+44
 894 03a4 1B68     		ldr	r3, [r3]
 895 03a6 D31A     		subs	r3, r2, r3
 896              		.loc 1 103 11
 897 03a8 FA69     		ldr	r2, [r7, #28]
 898 03aa 9A42     		cmp	r2, r3
 899 03ac 3BD8     		bhi	.L56
 104:Core/Src/Functions.c ****             Cur_X += dir_x * XY_MM_PER_REV / XY_STEPS_PER_REV;
 900              		.loc 1 104 28
 901 03ae 20A3     		adr	r3, .L59
 902 03b0 D3E90023 		ldrd	r2, [r3]
 903 03b4 D7E90401 		ldrd	r0, [r7, #16]
 904 03b8 FFF7FEFF 		bl	__aeabi_dmul
 905 03bc 0246     		mov	r2, r0
 906 03be 0B46     		mov	r3, r1
 907 03c0 1046     		mov	r0, r2
 908 03c2 1946     		mov	r1, r3
 909              		.loc 1 104 44
 910 03c4 1CA3     		adr	r3, .L59+8
 911 03c6 D3E90023 		ldrd	r2, [r3]
 912 03ca FFF7FEFF 		bl	__aeabi_ddiv
 913 03ce 0246     		mov	r2, r0
 914 03d0 0B46     		mov	r3, r1
 915 03d2 1046     		mov	r0, r2
 916 03d4 1946     		mov	r1, r3
 917              		.loc 1 104 19
 918 03d6 224B     		ldr	r3, .L59+48
 919 03d8 D3E90023 		ldrd	r2, [r3]
 920 03dc FFF7FEFF 		bl	__aeabi_dadd
 921 03e0 0246     		mov	r2, r0
 922 03e2 0B46     		mov	r3, r1
 923 03e4 1E49     		ldr	r1, .L59+48
 924 03e6 C1E90023 		strd	r2, [r1]
 105:Core/Src/Functions.c ****             Cur_Y += dir_y * XY_MM_PER_REV / XY_STEPS_PER_REV;
 925              		.loc 1 105 28
 926 03ea 11A3     		adr	r3, .L59
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 19


 927 03ec D3E90023 		ldrd	r2, [r3]
 928 03f0 D7E90201 		ldrd	r0, [r7, #8]
 929 03f4 FFF7FEFF 		bl	__aeabi_dmul
 930 03f8 0246     		mov	r2, r0
 931 03fa 0B46     		mov	r3, r1
 932 03fc 1046     		mov	r0, r2
 933 03fe 1946     		mov	r1, r3
 934              		.loc 1 105 44
 935 0400 0DA3     		adr	r3, .L59+8
 936 0402 D3E90023 		ldrd	r2, [r3]
 937 0406 FFF7FEFF 		bl	__aeabi_ddiv
 938 040a 0246     		mov	r2, r0
 939 040c 0B46     		mov	r3, r1
 940 040e 1046     		mov	r0, r2
 941 0410 1946     		mov	r1, r3
 942              		.loc 1 105 19
 943 0412 144B     		ldr	r3, .L59+52
 944 0414 D3E90023 		ldrd	r2, [r3]
 945 0418 FFF7FEFF 		bl	__aeabi_dadd
 946 041c 0246     		mov	r2, r0
 947 041e 0B46     		mov	r3, r1
 948 0420 1049     		ldr	r1, .L59+52
 949 0422 C1E90023 		strd	r2, [r1]
 950              	.L56:
 951              	.LBE4:
 106:Core/Src/Functions.c ****         }
 107:Core/Src/Functions.c ****     }
 108:Core/Src/Functions.c **** 
 109:Core/Src/Functions.c ****     // isRunning = false;
 110:Core/Src/Functions.c **** }
 952              		.loc 1 110 1
 953 0426 00BF     		nop
 954 0428 4837     		adds	r7, r7, #72
 955              		.cfi_def_cfa_offset 24
 956 042a BD46     		mov	sp, r7
 957              		.cfi_def_cfa_register 13
 958              		@ sp needed
 959 042c BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 960              	.L60:
 961              		.align	3
 962              	.L59:
 963 0430 00000020 		.word	536870912
 964 0434 5C475140 		.word	1079068508
 965 0438 00000000 		.word	0
 966 043c 0064B940 		.word	1085891584
 967 0440 00000000 		.word	0
 968 0444 80842E41 		.word	1093567616
 969 0448 00140048 		.word	1207964672
 970 044c 00000000 		.word	last_tick_B
 971 0450 00000000 		.word	F
 972 0454 0000F03F 		.word	1072693248
 973 0458 00004E40 		.word	1078853632
 974 045c 00000000 		.word	last_tick_AB
 975 0460 00000000 		.word	Cur_X
 976 0464 00000000 		.word	Cur_Y
 977              		.cfi_endproc
 978              	.LFE325:
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 20


 980              		.global	__aeabi_dcmpge
 981              		.global	__aeabi_dcmple
 982              		.section	.text.Move,"ax",%progbits
 983              		.align	1
 984              		.global	Move
 985              		.syntax unified
 986              		.thumb
 987              		.thumb_func
 989              	Move:
 990              	.LFB326:
 111:Core/Src/Functions.c **** 
 112:Core/Src/Functions.c **** void Move(double dif, uint32_t last_time, uint16_t axis, uint16_t speed)
 113:Core/Src/Functions.c **** {
 991              		.loc 1 113 1
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 16
 994              		@ frame_needed = 1, uses_anonymous_args = 0
 995 0000 80B5     		push	{r7, lr}
 996              		.cfi_def_cfa_offset 8
 997              		.cfi_offset 7, -8
 998              		.cfi_offset 14, -4
 999 0002 84B0     		sub	sp, sp, #16
 1000              		.cfi_def_cfa_offset 24
 1001 0004 00AF     		add	r7, sp, #0
 1002              		.cfi_def_cfa_register 7
 1003 0006 87ED020B 		vstr.64	d0, [r7, #8]
 1004 000a 7860     		str	r0, [r7, #4]
 1005 000c 0B46     		mov	r3, r1
 1006 000e 7B80     		strh	r3, [r7, #2]	@ movhi
 1007 0010 1346     		mov	r3, r2	@ movhi
 1008 0012 3B80     		strh	r3, [r7]	@ movhi
 114:Core/Src/Functions.c ****     if (dif >= OFFSET_P || dif <= OFFSET_N)
 1009              		.loc 1 114 8
 1010 0014 A2A3     		adr	r3, .L85+56
 1011 0016 D3E90023 		ldrd	r2, [r3]
 1012 001a D7E90201 		ldrd	r0, [r7, #8]
 1013 001e FFF7FEFF 		bl	__aeabi_dcmpge
 1014 0022 0346     		mov	r3, r0
 1015 0024 002B     		cmp	r3, #0
 1016 0026 0AD1     		bne	.L62
 1017              		.loc 1 114 25 discriminator 1
 1018 0028 9FA3     		adr	r3, .L85+64
 1019 002a D3E90023 		ldrd	r2, [r3]
 1020 002e D7E90201 		ldrd	r0, [r7, #8]
 1021 0032 FFF7FEFF 		bl	__aeabi_dcmple
 1022 0036 0346     		mov	r3, r0
 1023 0038 002B     		cmp	r3, #0
 1024 003a 00F00B81 		beq	.L79
 1025              	.L62:
 115:Core/Src/Functions.c ****     {
 116:Core/Src/Functions.c ****         if (GetTicks() - last_time >= speed && speed > 0)
 1026              		.loc 1 116 13
 1027 003e FFF7FEFF 		bl	GetTicks
 1028 0042 0346     		mov	r3, r0
 1029 0044 1A46     		mov	r2, r3
 1030              		.loc 1 116 24
 1031 0046 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 21


 1032 0048 D21A     		subs	r2, r2, r3
 1033              		.loc 1 116 36
 1034 004a 3B88     		ldrh	r3, [r7]
 1035              		.loc 1 116 12
 1036 004c 9A42     		cmp	r2, r3
 1037 004e C0F00581 		bcc	.L81
 1038              		.loc 1 116 45 discriminator 1
 1039 0052 3B88     		ldrh	r3, [r7]
 1040 0054 002B     		cmp	r3, #0
 1041 0056 00F00181 		beq	.L81
 117:Core/Src/Functions.c ****         {
 118:Core/Src/Functions.c ****             isRunning = true;
 1042              		.loc 1 118 23
 1043 005a 874B     		ldr	r3, .L85+16
 1044 005c 0122     		movs	r2, #1
 1045 005e 1A70     		strb	r2, [r3]
 119:Core/Src/Functions.c ****             if (dif < 0)
 1046              		.loc 1 119 16
 1047 0060 4FF00002 		mov	r2, #0
 1048 0064 4FF00003 		mov	r3, #0
 1049 0068 D7E90201 		ldrd	r0, [r7, #8]
 1050 006c FFF7FEFF 		bl	__aeabi_dcmplt
 1051 0070 0346     		mov	r3, r0
 1052 0072 002B     		cmp	r3, #0
 1053 0074 75D0     		beq	.L80
 120:Core/Src/Functions.c ****             {
 121:Core/Src/Functions.c ****                 switch (axis)
 1054              		.loc 1 121 17
 1055 0076 7B88     		ldrh	r3, [r7, #2]
 1056 0078 022B     		cmp	r3, #2
 1057 007a 07D0     		beq	.L68
 1058 007c 022B     		cmp	r3, #2
 1059 007e 00F3E580 		bgt	.L82
 1060 0082 002B     		cmp	r3, #0
 1061 0084 1FD0     		beq	.L70
 1062 0086 012B     		cmp	r3, #1
 1063 0088 44D0     		beq	.L71
 122:Core/Src/Functions.c ****                 {
 123:Core/Src/Functions.c ****                 case E_AXIS:
 124:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(E_AXIS_DIR, COUNTERCLOCKWISE);
 125:Core/Src/Functions.c ****                     Cur_E -= E_MM_PER_REV / STEPS_PER_REV;
 126:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(E_AXIS_STEP);
 127:Core/Src/Functions.c ****                     last_time_E = GetTicks();
 128:Core/Src/Functions.c ****                     break;
 129:Core/Src/Functions.c ****                 case X_AXIS:
 130:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(X_AXIS_DIR, CLOCKWISE);
 131:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(Y_AXIS_DIR, CLOCKWISE);
 132:Core/Src/Functions.c ****                     Cur_X -= XY_MM_PER_REV / XY_STEPS_PER_REV;
 133:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(X_AXIS_STEP);
 134:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(Y_AXIS_STEP);
 135:Core/Src/Functions.c ****                     last_time_X = GetTicks();
 136:Core/Src/Functions.c ****                     break;
 137:Core/Src/Functions.c ****                 case Y_AXIS:
 138:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(X_AXIS_DIR, CLOCKWISE);
 139:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(Y_AXIS_DIR, COUNTERCLOCKWISE);
 140:Core/Src/Functions.c ****                     Cur_Y -= XY_MM_PER_REV / XY_STEPS_PER_REV;
 141:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(X_AXIS_STEP);
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 22


 142:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(Y_AXIS_STEP);
 143:Core/Src/Functions.c ****                     last_time_Y = GetTicks();
 144:Core/Src/Functions.c ****                     break;
 145:Core/Src/Functions.c ****                 default:
 146:Core/Src/Functions.c ****                     break;
 1064              		.loc 1 146 21
 1065 008a DFE0     		b	.L82
 1066              	.L68:
 124:Core/Src/Functions.c ****                     Cur_E -= E_MM_PER_REV / STEPS_PER_REV;
 1067              		.loc 1 124 21
 1068 008c 0122     		movs	r2, #1
 1069 008e 0821     		movs	r1, #8
 1070 0090 7A48     		ldr	r0, .L85+20
 1071 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 125:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(E_AXIS_STEP);
 1072              		.loc 1 125 27
 1073 0096 7A4B     		ldr	r3, .L85+24
 1074 0098 D3E90001 		ldrd	r0, [r3]
 1075 009c 72A3     		adr	r3, .L85
 1076 009e D3E90023 		ldrd	r2, [r3]
 1077 00a2 FFF7FEFF 		bl	__aeabi_dsub
 1078 00a6 0246     		mov	r2, r0
 1079 00a8 0B46     		mov	r3, r1
 1080 00aa 7549     		ldr	r1, .L85+24
 1081 00ac C1E90023 		strd	r2, [r1]
 126:Core/Src/Functions.c ****                     last_time_E = GetTicks();
 1082              		.loc 1 126 21
 1083 00b0 0121     		movs	r1, #1
 1084 00b2 7448     		ldr	r0, .L85+28
 1085 00b4 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 127:Core/Src/Functions.c ****                     break;
 1086              		.loc 1 127 35
 1087 00b8 FFF7FEFF 		bl	GetTicks
 1088 00bc 0346     		mov	r3, r0
 1089 00be 1A46     		mov	r2, r3
 127:Core/Src/Functions.c ****                     break;
 1090              		.loc 1 127 33
 1091 00c0 714B     		ldr	r3, .L85+32
 1092 00c2 1A60     		str	r2, [r3]
 128:Core/Src/Functions.c ****                 case X_AXIS:
 1093              		.loc 1 128 21
 1094 00c4 C5E0     		b	.L65
 1095              	.L70:
 130:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(Y_AXIS_DIR, CLOCKWISE);
 1096              		.loc 1 130 21
 1097 00c6 0022     		movs	r2, #0
 1098 00c8 0221     		movs	r1, #2
 1099 00ca 6C48     		ldr	r0, .L85+20
 1100 00cc FFF7FEFF 		bl	HAL_GPIO_WritePin
 131:Core/Src/Functions.c ****                     Cur_X -= XY_MM_PER_REV / XY_STEPS_PER_REV;
 1101              		.loc 1 131 21
 1102 00d0 0022     		movs	r2, #0
 1103 00d2 0421     		movs	r1, #4
 1104 00d4 6948     		ldr	r0, .L85+20
 1105 00d6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 132:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(X_AXIS_STEP);
 1106              		.loc 1 132 27
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 23


 1107 00da 6C4B     		ldr	r3, .L85+36
 1108 00dc D3E90001 		ldrd	r0, [r3]
 1109 00e0 63A3     		adr	r3, .L85+8
 1110 00e2 D3E90023 		ldrd	r2, [r3]
 1111 00e6 FFF7FEFF 		bl	__aeabi_dsub
 1112 00ea 0246     		mov	r2, r0
 1113 00ec 0B46     		mov	r3, r1
 1114 00ee 6749     		ldr	r1, .L85+36
 1115 00f0 C1E90023 		strd	r2, [r1]
 133:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(Y_AXIS_STEP);
 1116              		.loc 1 133 21
 1117 00f4 4021     		movs	r1, #64
 1118 00f6 6648     		ldr	r0, .L85+40
 1119 00f8 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 134:Core/Src/Functions.c ****                     last_time_X = GetTicks();
 1120              		.loc 1 134 21
 1121 00fc 8021     		movs	r1, #128
 1122 00fe 4FF09040 		mov	r0, #1207959552
 1123 0102 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 135:Core/Src/Functions.c ****                     break;
 1124              		.loc 1 135 35
 1125 0106 FFF7FEFF 		bl	GetTicks
 1126 010a 0346     		mov	r3, r0
 1127 010c 1A46     		mov	r2, r3
 135:Core/Src/Functions.c ****                     break;
 1128              		.loc 1 135 33
 1129 010e 614B     		ldr	r3, .L85+44
 1130 0110 1A60     		str	r2, [r3]
 136:Core/Src/Functions.c ****                 case Y_AXIS:
 1131              		.loc 1 136 21
 1132 0112 9EE0     		b	.L65
 1133              	.L71:
 138:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(Y_AXIS_DIR, COUNTERCLOCKWISE);
 1134              		.loc 1 138 21
 1135 0114 0022     		movs	r2, #0
 1136 0116 0221     		movs	r1, #2
 1137 0118 5848     		ldr	r0, .L85+20
 1138 011a FFF7FEFF 		bl	HAL_GPIO_WritePin
 139:Core/Src/Functions.c ****                     Cur_Y -= XY_MM_PER_REV / XY_STEPS_PER_REV;
 1139              		.loc 1 139 21
 1140 011e 0122     		movs	r2, #1
 1141 0120 0421     		movs	r1, #4
 1142 0122 5648     		ldr	r0, .L85+20
 1143 0124 FFF7FEFF 		bl	HAL_GPIO_WritePin
 140:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(X_AXIS_STEP);
 1144              		.loc 1 140 27
 1145 0128 5B4B     		ldr	r3, .L85+48
 1146 012a D3E90001 		ldrd	r0, [r3]
 1147 012e 50A3     		adr	r3, .L85+8
 1148 0130 D3E90023 		ldrd	r2, [r3]
 1149 0134 FFF7FEFF 		bl	__aeabi_dsub
 1150 0138 0246     		mov	r2, r0
 1151 013a 0B46     		mov	r3, r1
 1152 013c 5649     		ldr	r1, .L85+48
 1153 013e C1E90023 		strd	r2, [r1]
 141:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(Y_AXIS_STEP);
 1154              		.loc 1 141 21
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 24


 1155 0142 4021     		movs	r1, #64
 1156 0144 5248     		ldr	r0, .L85+40
 1157 0146 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 142:Core/Src/Functions.c ****                     last_time_Y = GetTicks();
 1158              		.loc 1 142 21
 1159 014a 8021     		movs	r1, #128
 1160 014c 4FF09040 		mov	r0, #1207959552
 1161 0150 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 143:Core/Src/Functions.c ****                     break;
 1162              		.loc 1 143 35
 1163 0154 FFF7FEFF 		bl	GetTicks
 1164 0158 0346     		mov	r3, r0
 1165 015a 1A46     		mov	r2, r3
 143:Core/Src/Functions.c ****                     break;
 1166              		.loc 1 143 33
 1167 015c 4F4B     		ldr	r3, .L85+52
 1168 015e 1A60     		str	r2, [r3]
 144:Core/Src/Functions.c ****                 default:
 1169              		.loc 1 144 21
 1170 0160 77E0     		b	.L65
 1171              	.L80:
 147:Core/Src/Functions.c ****                 }
 148:Core/Src/Functions.c ****             }
 149:Core/Src/Functions.c ****             else
 150:Core/Src/Functions.c ****             {
 151:Core/Src/Functions.c ****                 switch (axis)
 1172              		.loc 1 151 17
 1173 0162 7B88     		ldrh	r3, [r7, #2]
 1174 0164 022B     		cmp	r3, #2
 1175 0166 06D0     		beq	.L73
 1176 0168 022B     		cmp	r3, #2
 1177 016a 71DC     		bgt	.L83
 1178 016c 002B     		cmp	r3, #0
 1179 016e 1FD0     		beq	.L75
 1180 0170 012B     		cmp	r3, #1
 1181 0172 44D0     		beq	.L76
 152:Core/Src/Functions.c ****                 {
 153:Core/Src/Functions.c ****                 case E_AXIS:
 154:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(E_AXIS_DIR, CLOCKWISE);
 155:Core/Src/Functions.c ****                     Cur_E += E_MM_PER_REV / STEPS_PER_REV;
 156:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(E_AXIS_STEP);
 157:Core/Src/Functions.c ****                     last_time_E = GetTicks();
 158:Core/Src/Functions.c ****                     break;
 159:Core/Src/Functions.c ****                 case X_AXIS:
 160:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(X_AXIS_DIR, COUNTERCLOCKWISE);
 161:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(Y_AXIS_DIR, COUNTERCLOCKWISE);
 162:Core/Src/Functions.c ****                     Cur_X += XY_MM_PER_REV / XY_STEPS_PER_REV;
 163:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(X_AXIS_STEP);
 164:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(Y_AXIS_STEP);
 165:Core/Src/Functions.c ****                     last_time_X = GetTicks();
 166:Core/Src/Functions.c ****                     break;
 167:Core/Src/Functions.c ****                 case Y_AXIS:
 168:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(X_AXIS_DIR, COUNTERCLOCKWISE);
 169:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(Y_AXIS_DIR, CLOCKWISE);
 170:Core/Src/Functions.c ****                     Cur_Y += XY_MM_PER_REV / XY_STEPS_PER_REV;
 171:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(X_AXIS_STEP);
 172:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(Y_AXIS_STEP);
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 25


 173:Core/Src/Functions.c ****                     last_time_Y = GetTicks();
 174:Core/Src/Functions.c ****                     break;
 175:Core/Src/Functions.c ****                 default:
 176:Core/Src/Functions.c ****                     break;
 1182              		.loc 1 176 21
 1183 0174 6CE0     		b	.L83
 1184              	.L73:
 154:Core/Src/Functions.c ****                     Cur_E += E_MM_PER_REV / STEPS_PER_REV;
 1185              		.loc 1 154 21
 1186 0176 0022     		movs	r2, #0
 1187 0178 0821     		movs	r1, #8
 1188 017a 4048     		ldr	r0, .L85+20
 1189 017c FFF7FEFF 		bl	HAL_GPIO_WritePin
 155:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(E_AXIS_STEP);
 1190              		.loc 1 155 27
 1191 0180 3F4B     		ldr	r3, .L85+24
 1192 0182 D3E90001 		ldrd	r0, [r3]
 1193 0186 38A3     		adr	r3, .L85
 1194 0188 D3E90023 		ldrd	r2, [r3]
 1195 018c FFF7FEFF 		bl	__aeabi_dadd
 1196 0190 0246     		mov	r2, r0
 1197 0192 0B46     		mov	r3, r1
 1198 0194 3A49     		ldr	r1, .L85+24
 1199 0196 C1E90023 		strd	r2, [r1]
 156:Core/Src/Functions.c ****                     last_time_E = GetTicks();
 1200              		.loc 1 156 21
 1201 019a 0121     		movs	r1, #1
 1202 019c 3948     		ldr	r0, .L85+28
 1203 019e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 157:Core/Src/Functions.c ****                     break;
 1204              		.loc 1 157 35
 1205 01a2 FFF7FEFF 		bl	GetTicks
 1206 01a6 0346     		mov	r3, r0
 1207 01a8 1A46     		mov	r2, r3
 157:Core/Src/Functions.c ****                     break;
 1208              		.loc 1 157 33
 1209 01aa 374B     		ldr	r3, .L85+32
 1210 01ac 1A60     		str	r2, [r3]
 158:Core/Src/Functions.c ****                 case X_AXIS:
 1211              		.loc 1 158 21
 1212 01ae 50E0     		b	.L65
 1213              	.L75:
 160:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(Y_AXIS_DIR, COUNTERCLOCKWISE);
 1214              		.loc 1 160 21
 1215 01b0 0122     		movs	r2, #1
 1216 01b2 0221     		movs	r1, #2
 1217 01b4 3148     		ldr	r0, .L85+20
 1218 01b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 161:Core/Src/Functions.c ****                     Cur_X += XY_MM_PER_REV / XY_STEPS_PER_REV;
 1219              		.loc 1 161 21
 1220 01ba 0122     		movs	r2, #1
 1221 01bc 0421     		movs	r1, #4
 1222 01be 2F48     		ldr	r0, .L85+20
 1223 01c0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 162:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(X_AXIS_STEP);
 1224              		.loc 1 162 27
 1225 01c4 314B     		ldr	r3, .L85+36
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 26


 1226 01c6 D3E90001 		ldrd	r0, [r3]
 1227 01ca 29A3     		adr	r3, .L85+8
 1228 01cc D3E90023 		ldrd	r2, [r3]
 1229 01d0 FFF7FEFF 		bl	__aeabi_dadd
 1230 01d4 0246     		mov	r2, r0
 1231 01d6 0B46     		mov	r3, r1
 1232 01d8 2C49     		ldr	r1, .L85+36
 1233 01da C1E90023 		strd	r2, [r1]
 163:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(Y_AXIS_STEP);
 1234              		.loc 1 163 21
 1235 01de 4021     		movs	r1, #64
 1236 01e0 2B48     		ldr	r0, .L85+40
 1237 01e2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 164:Core/Src/Functions.c ****                     last_time_X = GetTicks();
 1238              		.loc 1 164 21
 1239 01e6 8021     		movs	r1, #128
 1240 01e8 4FF09040 		mov	r0, #1207959552
 1241 01ec FFF7FEFF 		bl	HAL_GPIO_TogglePin
 165:Core/Src/Functions.c ****                     break;
 1242              		.loc 1 165 35
 1243 01f0 FFF7FEFF 		bl	GetTicks
 1244 01f4 0346     		mov	r3, r0
 1245 01f6 1A46     		mov	r2, r3
 165:Core/Src/Functions.c ****                     break;
 1246              		.loc 1 165 33
 1247 01f8 264B     		ldr	r3, .L85+44
 1248 01fa 1A60     		str	r2, [r3]
 166:Core/Src/Functions.c ****                 case Y_AXIS:
 1249              		.loc 1 166 21
 1250 01fc 29E0     		b	.L65
 1251              	.L76:
 168:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(Y_AXIS_DIR, CLOCKWISE);
 1252              		.loc 1 168 21
 1253 01fe 0122     		movs	r2, #1
 1254 0200 0221     		movs	r1, #2
 1255 0202 1E48     		ldr	r0, .L85+20
 1256 0204 FFF7FEFF 		bl	HAL_GPIO_WritePin
 169:Core/Src/Functions.c ****                     Cur_Y += XY_MM_PER_REV / XY_STEPS_PER_REV;
 1257              		.loc 1 169 21
 1258 0208 0022     		movs	r2, #0
 1259 020a 0421     		movs	r1, #4
 1260 020c 1B48     		ldr	r0, .L85+20
 1261 020e FFF7FEFF 		bl	HAL_GPIO_WritePin
 170:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(X_AXIS_STEP);
 1262              		.loc 1 170 27
 1263 0212 214B     		ldr	r3, .L85+48
 1264 0214 D3E90001 		ldrd	r0, [r3]
 1265 0218 15A3     		adr	r3, .L85+8
 1266 021a D3E90023 		ldrd	r2, [r3]
 1267 021e FFF7FEFF 		bl	__aeabi_dadd
 1268 0222 0246     		mov	r2, r0
 1269 0224 0B46     		mov	r3, r1
 1270 0226 1C49     		ldr	r1, .L85+48
 1271 0228 C1E90023 		strd	r2, [r1]
 171:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(Y_AXIS_STEP);
 1272              		.loc 1 171 21
 1273 022c 4021     		movs	r1, #64
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 27


 1274 022e 1848     		ldr	r0, .L85+40
 1275 0230 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 172:Core/Src/Functions.c ****                     last_time_Y = GetTicks();
 1276              		.loc 1 172 21
 1277 0234 8021     		movs	r1, #128
 1278 0236 4FF09040 		mov	r0, #1207959552
 1279 023a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 173:Core/Src/Functions.c ****                     break;
 1280              		.loc 1 173 35
 1281 023e FFF7FEFF 		bl	GetTicks
 1282 0242 0346     		mov	r3, r0
 1283 0244 1A46     		mov	r2, r3
 173:Core/Src/Functions.c ****                     break;
 1284              		.loc 1 173 33
 1285 0246 154B     		ldr	r3, .L85+52
 1286 0248 1A60     		str	r2, [r3]
 174:Core/Src/Functions.c ****                 default:
 1287              		.loc 1 174 21
 1288 024a 02E0     		b	.L65
 1289              	.L82:
 146:Core/Src/Functions.c ****                 }
 1290              		.loc 1 146 21
 1291 024c 00BF     		nop
 1292 024e 05E0     		b	.L81
 1293              	.L83:
 1294              		.loc 1 176 21
 1295 0250 00BF     		nop
 1296              	.L65:
 116:Core/Src/Functions.c ****         {
 1297              		.loc 1 116 12 discriminator 1
 1298 0252 03E0     		b	.L81
 1299              	.L79:
 177:Core/Src/Functions.c ****                 }
 178:Core/Src/Functions.c ****             }
 179:Core/Src/Functions.c **** 
 180:Core/Src/Functions.c ****             // DelayMicrosecond(speed);
 181:Core/Src/Functions.c ****         }
 182:Core/Src/Functions.c ****     }
 183:Core/Src/Functions.c ****     else
 184:Core/Src/Functions.c ****     {
 185:Core/Src/Functions.c ****         isRunning = false;
 1300              		.loc 1 185 19
 1301 0254 084B     		ldr	r3, .L85+16
 1302 0256 0022     		movs	r2, #0
 1303 0258 1A70     		strb	r2, [r3]
 186:Core/Src/Functions.c ****     }
 187:Core/Src/Functions.c **** }
 1304              		.loc 1 187 1
 1305 025a 00E0     		b	.L84
 1306              	.L81:
 116:Core/Src/Functions.c ****         {
 1307              		.loc 1 116 12
 1308 025c 00BF     		nop
 1309              	.L84:
 1310              		.loc 1 187 1
 1311 025e 00BF     		nop
 1312 0260 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 28


 1313              		.cfi_def_cfa_offset 8
 1314 0262 BD46     		mov	sp, r7
 1315              		.cfi_def_cfa_register 13
 1316              		@ sp needed
 1317 0264 80BD     		pop	{r7, pc}
 1318              	.L86:
 1319 0266 00BF     		.align	3
 1320              	.L85:
 1321 0268 000000A0 		.word	-1610612736
 1322 026c D091533F 		.word	1062441424
 1323 0270 00000060 		.word	1610612736
 1324 0274 CBC6853F 		.word	1065731787
 1325 0278 00000000 		.word	isRunning
 1326 027c 00140048 		.word	1207964672
 1327 0280 00000000 		.word	Cur_E
 1328 0284 00040048 		.word	1207960576
 1329 0288 00000000 		.word	last_time_E
 1330 028c 00000000 		.word	Cur_X
 1331 0290 00080048 		.word	1207961600
 1332 0294 00000000 		.word	last_time_X
 1333 0298 00000000 		.word	Cur_Y
 1334 029c 00000000 		.word	last_time_Y
 1335 02a0 FA7E6ABC 		.word	-1133871366
 1336 02a4 7493883F 		.word	1065915252
 1337 02a8 FA7E6ABC 		.word	-1133871366
 1338 02ac 749388BF 		.word	-1081568396
 1339              		.cfi_endproc
 1340              	.LFE326:
 1342              		.section	.text.MoveAndWait,"ax",%progbits
 1343              		.align	1
 1344              		.global	MoveAndWait
 1345              		.syntax unified
 1346              		.thumb
 1347              		.thumb_func
 1349              	MoveAndWait:
 1350              	.LFB327:
 188:Core/Src/Functions.c **** 
 189:Core/Src/Functions.c **** void MoveAndWait(uint16_t state, uint16_t speed, uint16_t axis, uint16_t dir_X, uint16_t dir_Y)
 190:Core/Src/Functions.c **** {
 1351              		.loc 1 190 1
 1352              		.cfi_startproc
 1353              		@ args = 4, pretend = 0, frame = 8
 1354              		@ frame_needed = 1, uses_anonymous_args = 0
 1355 0000 90B5     		push	{r4, r7, lr}
 1356              		.cfi_def_cfa_offset 12
 1357              		.cfi_offset 4, -12
 1358              		.cfi_offset 7, -8
 1359              		.cfi_offset 14, -4
 1360 0002 83B0     		sub	sp, sp, #12
 1361              		.cfi_def_cfa_offset 24
 1362 0004 00AF     		add	r7, sp, #0
 1363              		.cfi_def_cfa_register 7
 1364 0006 0446     		mov	r4, r0
 1365 0008 0846     		mov	r0, r1
 1366 000a 1146     		mov	r1, r2
 1367 000c 1A46     		mov	r2, r3
 1368 000e 2346     		mov	r3, r4	@ movhi
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 29


 1369 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 1370 0012 0346     		mov	r3, r0	@ movhi
 1371 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 1372 0016 0B46     		mov	r3, r1	@ movhi
 1373 0018 7B80     		strh	r3, [r7, #2]	@ movhi
 1374 001a 1346     		mov	r3, r2	@ movhi
 1375 001c 3B80     		strh	r3, [r7]	@ movhi
 191:Core/Src/Functions.c ****     switch (axis)
 1376              		.loc 1 191 5
 1377 001e 7B88     		ldrh	r3, [r7, #2]
 1378 0020 002B     		cmp	r3, #0
 1379 0022 02D0     		beq	.L88
 1380 0024 012B     		cmp	r3, #1
 1381 0026 26D0     		beq	.L89
 192:Core/Src/Functions.c ****     {
 193:Core/Src/Functions.c ****     case X_AXIS:
 194:Core/Src/Functions.c ****         CHANGE_MOTOR_DIR(X_AXIS_DIR, dir_X);
 195:Core/Src/Functions.c ****         CHANGE_MOTOR_DIR(Y_AXIS_DIR, dir_Y);
 196:Core/Src/Functions.c ****         while (READ_PIN(X_STOP_PIN) != state)
 197:Core/Src/Functions.c ****         {
 198:Core/Src/Functions.c ****             MAKE_MOTOR_STEP(X_AXIS_STEP);
 199:Core/Src/Functions.c ****             MAKE_MOTOR_STEP(Y_AXIS_STEP);
 200:Core/Src/Functions.c ****             DelayMicrosecond(speed);
 201:Core/Src/Functions.c ****         }
 202:Core/Src/Functions.c ****         break;
 203:Core/Src/Functions.c ****     case Y_AXIS:
 204:Core/Src/Functions.c ****         CHANGE_MOTOR_DIR(X_AXIS_DIR, dir_X);
 205:Core/Src/Functions.c ****         CHANGE_MOTOR_DIR(Y_AXIS_DIR, dir_Y);
 206:Core/Src/Functions.c ****         while (READ_PIN(Y_STOP_PIN) != state)
 207:Core/Src/Functions.c ****         {
 208:Core/Src/Functions.c ****             MAKE_MOTOR_STEP(X_AXIS_STEP);
 209:Core/Src/Functions.c ****             MAKE_MOTOR_STEP(Y_AXIS_STEP);
 210:Core/Src/Functions.c ****             DelayMicrosecond(speed);
 211:Core/Src/Functions.c ****         }
 212:Core/Src/Functions.c ****         break;
 213:Core/Src/Functions.c ****     }
 214:Core/Src/Functions.c **** }
 1382              		.loc 1 214 1
 1383 0028 4BE0     		b	.L95
 1384              	.L88:
 194:Core/Src/Functions.c ****         CHANGE_MOTOR_DIR(Y_AXIS_DIR, dir_Y);
 1385              		.loc 1 194 9
 1386 002a 3B88     		ldrh	r3, [r7]	@ movhi
 1387 002c DBB2     		uxtb	r3, r3
 1388 002e 1A46     		mov	r2, r3
 1389 0030 0221     		movs	r1, #2
 1390 0032 2648     		ldr	r0, .L96
 1391 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 195:Core/Src/Functions.c ****         while (READ_PIN(X_STOP_PIN) != state)
 1392              		.loc 1 195 9
 1393 0038 3B8B     		ldrh	r3, [r7, #24]	@ movhi
 1394 003a DBB2     		uxtb	r3, r3
 1395 003c 1A46     		mov	r2, r3
 1396 003e 0421     		movs	r1, #4
 1397 0040 2248     		ldr	r0, .L96
 1398 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
 196:Core/Src/Functions.c ****         {
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 30


 1399              		.loc 1 196 15
 1400 0046 0CE0     		b	.L91
 1401              	.L92:
 198:Core/Src/Functions.c ****             MAKE_MOTOR_STEP(Y_AXIS_STEP);
 1402              		.loc 1 198 13
 1403 0048 4021     		movs	r1, #64
 1404 004a 2148     		ldr	r0, .L96+4
 1405 004c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 199:Core/Src/Functions.c ****             DelayMicrosecond(speed);
 1406              		.loc 1 199 13
 1407 0050 8021     		movs	r1, #128
 1408 0052 4FF09040 		mov	r0, #1207959552
 1409 0056 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 200:Core/Src/Functions.c ****         }
 1410              		.loc 1 200 13
 1411 005a BB88     		ldrh	r3, [r7, #4]
 1412 005c 1846     		mov	r0, r3
 1413 005e FFF7FEFF 		bl	DelayMicrosecond
 1414              	.L91:
 196:Core/Src/Functions.c ****         {
 1415              		.loc 1 196 16
 1416 0062 1021     		movs	r1, #16
 1417 0064 1948     		ldr	r0, .L96
 1418 0066 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1419 006a 0346     		mov	r3, r0
 1420 006c 9BB2     		uxth	r3, r3
 196:Core/Src/Functions.c ****         {
 1421              		.loc 1 196 37
 1422 006e FA88     		ldrh	r2, [r7, #6]
 1423 0070 9A42     		cmp	r2, r3
 1424 0072 E9D1     		bne	.L92
 202:Core/Src/Functions.c ****     case Y_AXIS:
 1425              		.loc 1 202 9
 1426 0074 25E0     		b	.L90
 1427              	.L89:
 204:Core/Src/Functions.c ****         CHANGE_MOTOR_DIR(Y_AXIS_DIR, dir_Y);
 1428              		.loc 1 204 9
 1429 0076 3B88     		ldrh	r3, [r7]	@ movhi
 1430 0078 DBB2     		uxtb	r3, r3
 1431 007a 1A46     		mov	r2, r3
 1432 007c 0221     		movs	r1, #2
 1433 007e 1348     		ldr	r0, .L96
 1434 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 205:Core/Src/Functions.c ****         while (READ_PIN(Y_STOP_PIN) != state)
 1435              		.loc 1 205 9
 1436 0084 3B8B     		ldrh	r3, [r7, #24]	@ movhi
 1437 0086 DBB2     		uxtb	r3, r3
 1438 0088 1A46     		mov	r2, r3
 1439 008a 0421     		movs	r1, #4
 1440 008c 0F48     		ldr	r0, .L96
 1441 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 206:Core/Src/Functions.c ****         {
 1442              		.loc 1 206 15
 1443 0092 0CE0     		b	.L93
 1444              	.L94:
 208:Core/Src/Functions.c ****             MAKE_MOTOR_STEP(Y_AXIS_STEP);
 1445              		.loc 1 208 13
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 31


 1446 0094 4021     		movs	r1, #64
 1447 0096 0E48     		ldr	r0, .L96+4
 1448 0098 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 209:Core/Src/Functions.c ****             DelayMicrosecond(speed);
 1449              		.loc 1 209 13
 1450 009c 8021     		movs	r1, #128
 1451 009e 4FF09040 		mov	r0, #1207959552
 1452 00a2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 210:Core/Src/Functions.c ****         }
 1453              		.loc 1 210 13
 1454 00a6 BB88     		ldrh	r3, [r7, #4]
 1455 00a8 1846     		mov	r0, r3
 1456 00aa FFF7FEFF 		bl	DelayMicrosecond
 1457              	.L93:
 206:Core/Src/Functions.c ****         {
 1458              		.loc 1 206 16
 1459 00ae 2021     		movs	r1, #32
 1460 00b0 0648     		ldr	r0, .L96
 1461 00b2 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1462 00b6 0346     		mov	r3, r0
 1463 00b8 9BB2     		uxth	r3, r3
 206:Core/Src/Functions.c ****         {
 1464              		.loc 1 206 37
 1465 00ba FA88     		ldrh	r2, [r7, #6]
 1466 00bc 9A42     		cmp	r2, r3
 1467 00be E9D1     		bne	.L94
 212:Core/Src/Functions.c ****     }
 1468              		.loc 1 212 9
 1469 00c0 00BF     		nop
 1470              	.L90:
 1471              	.L95:
 1472              		.loc 1 214 1
 1473 00c2 00BF     		nop
 1474 00c4 0C37     		adds	r7, r7, #12
 1475              		.cfi_def_cfa_offset 12
 1476 00c6 BD46     		mov	sp, r7
 1477              		.cfi_def_cfa_register 13
 1478              		@ sp needed
 1479 00c8 90BD     		pop	{r4, r7, pc}
 1480              	.L97:
 1481 00ca 00BF     		.align	2
 1482              	.L96:
 1483 00cc 00140048 		.word	1207964672
 1484 00d0 00080048 		.word	1207961600
 1485              		.cfi_endproc
 1486              	.LFE327:
 1488              		.text
 1489              	.Letext0:
 1490              		.file 2 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 1491              		.file 3 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 1492              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4p5xx.h"
 1493              		.file 5 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 1494              		.file 6 "Core/Inc/GCodes.h"
 1495              		.file 7 "Core/Inc/main.h"
 1496              		.file 8 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 1497              		.file 9 "Core/Inc/Parser.h"
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 32


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Functions.c
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:20     .bss.msg_buffer:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:23     .bss.msg_buffer:0000000000000000 msg_buffer
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:26     .bss.RxBuf:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:29     .bss.RxBuf:0000000000000000 RxBuf
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:32     .text.SelectDriver:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:38     .text.SelectDriver:0000000000000000 SelectDriver
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:63     .text.SelectDriver:0000000000000018 $d
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:67     .text.SelectDriver:0000000000000028 $t
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:133    .text.SelectDriver:0000000000000088 $d
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:143    .text.GetTemperature:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:149    .text.GetTemperature:0000000000000000 GetTemperature
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:317    .text.GetTemperature:0000000000000158 $d
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:343    .text.SetHeating:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:349    .text.SetHeating:0000000000000000 SetHeating
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:394    .text.SetHeating:000000000000002c $d
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:399    .text.SetFanSpeed:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:405    .text.SetFanSpeed:0000000000000000 SetFanSpeed
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:450    .text.SetFanSpeed:000000000000002c $d
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:459    .text.MoveXY:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:465    .text.MoveXY:0000000000000000 MoveXY
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:785    .text.MoveXY:00000000000002a8 $d
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:804    .text.MoveXY:00000000000002ec $t
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:963    .text.MoveXY:0000000000000430 $d
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:983    .text.Move:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:989    .text.Move:0000000000000000 Move
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:1321   .text.Move:0000000000000268 $d
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:1343   .text.MoveAndWait:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:1349   .text.MoveAndWait:0000000000000000 MoveAndWait
C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s:1483   .text.MoveAndWait:00000000000000cc $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
__aeabi_i2d
__aeabi_dmul
__aeabi_dsub
__aeabi_ddiv
__aeabi_dadd
log
pow
__aeabi_dcmpgt
__aeabi_d2uiz
__aeabi_dcmplt
__aeabi_ui2d
GetTicks
HAL_GPIO_TogglePin
F
last_tick_A
last_tick_B
last_tick_AB
Cur_X
Cur_Y
__aeabi_dcmpge
__aeabi_dcmple
isRunning
Cur_E
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccjUf4ma.s 			page 33


last_time_E
last_time_X
last_time_Y
DelayMicrosecond
HAL_GPIO_ReadPin
