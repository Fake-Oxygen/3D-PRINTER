ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"Functions.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.bss.msg_buffer,"aw",%nobits
  20              		.align	2
  23              	msg_buffer:
  24 0000 00000000 		.space	30
  24      00000000 
  24      00000000 
  24      00000000 
  24      00000000 
  25              		.section	.bss.RxBuf,"aw",%nobits
  26              		.align	2
  29              	RxBuf:
  30 0000 00000000 		.space	20
  30      00000000 
  30      00000000 
  30      00000000 
  30      00000000 
  31              		.section	.text.SelectDriver,"ax",%progbits
  32              		.align	1
  33              		.global	SelectDriver
  34              		.syntax unified
  35              		.thumb
  36              		.thumb_func
  38              	SelectDriver:
  39              	.LFB321:
  40              		.file 1 "Core/Src/Functions.c"
   1:Core/Src/Functions.c **** #include "Functions.h"
   2:Core/Src/Functions.c **** 
   3:Core/Src/Functions.c **** void SelectDriver(uint16_t axis)
   4:Core/Src/Functions.c **** {
  41              		.loc 1 4 1
  42              		.cfi_startproc
  43              		@ args = 0, pretend = 0, frame = 8
  44              		@ frame_needed = 1, uses_anonymous_args = 0
  45 0000 80B5     		push	{r7, lr}
  46              		.cfi_def_cfa_offset 8
  47              		.cfi_offset 7, -8
  48              		.cfi_offset 14, -4
  49 0002 82B0     		sub	sp, sp, #8
  50              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 2


  51 0004 00AF     		add	r7, sp, #0
  52              		.cfi_def_cfa_register 7
  53 0006 0346     		mov	r3, r0
  54 0008 FB80     		strh	r3, [r7, #6]	@ movhi
   5:Core/Src/Functions.c ****     switch (axis)
  55              		.loc 1 5 5
  56 000a FB88     		ldrh	r3, [r7, #6]
  57 000c 032B     		cmp	r3, #3
  58 000e 37D8     		bhi	.L8
  59 0010 01A2     		adr	r2, .L4
  60 0012 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  61 0016 00BF     		.p2align 2
  62              	.L4:
  63 0018 29000000 		.word	.L7+1
  64 001c 3F000000 		.word	.L6+1
  65 0020 55000000 		.word	.L5+1
  66 0024 6B000000 		.word	.L3+1
  67              		.p2align 1
  68              	.L7:
   6:Core/Src/Functions.c ****     {
   7:Core/Src/Functions.c ****     case X_AXIS:
   8:Core/Src/Functions.c ****         WRITE_PIN(MPLX_PIN_A, 0);
  69              		.loc 1 8 9
  70 0028 0022     		movs	r2, #0
  71 002a 4021     		movs	r1, #64
  72 002c 1648     		ldr	r0, .L10
  73 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
   9:Core/Src/Functions.c ****         WRITE_PIN(MPLX_PIN_B, 0);
  74              		.loc 1 9 9
  75 0032 0022     		movs	r2, #0
  76 0034 8021     		movs	r1, #128
  77 0036 1448     		ldr	r0, .L10
  78 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
  10:Core/Src/Functions.c ****         break;
  79              		.loc 1 10 9
  80 003c 20E0     		b	.L2
  81              	.L6:
  11:Core/Src/Functions.c ****     case Y_AXIS:
  12:Core/Src/Functions.c ****         WRITE_PIN(MPLX_PIN_A, 1);
  82              		.loc 1 12 9
  83 003e 0122     		movs	r2, #1
  84 0040 4021     		movs	r1, #64
  85 0042 1148     		ldr	r0, .L10
  86 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
  13:Core/Src/Functions.c ****         WRITE_PIN(MPLX_PIN_B, 0);
  87              		.loc 1 13 9
  88 0048 0022     		movs	r2, #0
  89 004a 8021     		movs	r1, #128
  90 004c 0E48     		ldr	r0, .L10
  91 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
  14:Core/Src/Functions.c ****         break;
  92              		.loc 1 14 9
  93 0052 15E0     		b	.L2
  94              	.L5:
  15:Core/Src/Functions.c ****     case E_AXIS:
  16:Core/Src/Functions.c ****         WRITE_PIN(MPLX_PIN_A, 0);
  95              		.loc 1 16 9
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 3


  96 0054 0022     		movs	r2, #0
  97 0056 4021     		movs	r1, #64
  98 0058 0B48     		ldr	r0, .L10
  99 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
  17:Core/Src/Functions.c ****         WRITE_PIN(MPLX_PIN_B, 1);
 100              		.loc 1 17 9
 101 005e 0122     		movs	r2, #1
 102 0060 8021     		movs	r1, #128
 103 0062 0948     		ldr	r0, .L10
 104 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
  18:Core/Src/Functions.c ****         break;
 105              		.loc 1 18 9
 106 0068 0AE0     		b	.L2
 107              	.L3:
  19:Core/Src/Functions.c ****     case Z_AXIS:
  20:Core/Src/Functions.c ****         WRITE_PIN(MPLX_PIN_A, 1);
 108              		.loc 1 20 9
 109 006a 0122     		movs	r2, #1
 110 006c 4021     		movs	r1, #64
 111 006e 0648     		ldr	r0, .L10
 112 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
  21:Core/Src/Functions.c ****         WRITE_PIN(MPLX_PIN_B, 1);
 113              		.loc 1 21 9
 114 0074 0122     		movs	r2, #1
 115 0076 8021     		movs	r1, #128
 116 0078 0348     		ldr	r0, .L10
 117 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
  22:Core/Src/Functions.c ****         break;
 118              		.loc 1 22 9
 119 007e 00BF     		nop
 120              	.L2:
 121              	.L8:
  23:Core/Src/Functions.c ****     }
  24:Core/Src/Functions.c **** }
 122              		.loc 1 24 1
 123 0080 00BF     		nop
 124 0082 0837     		adds	r7, r7, #8
 125              		.cfi_def_cfa_offset 8
 126 0084 BD46     		mov	sp, r7
 127              		.cfi_def_cfa_register 13
 128              		@ sp needed
 129 0086 80BD     		pop	{r7, pc}
 130              	.L11:
 131              		.align	2
 132              	.L10:
 133 0088 00140048 		.word	1207964672
 134              		.cfi_endproc
 135              	.LFE321:
 137              		.global	__aeabi_i2d
 138              		.global	__aeabi_dmul
 139              		.global	__aeabi_dsub
 140              		.global	__aeabi_ddiv
 141              		.global	__aeabi_dadd
 142              		.section	.text.GetTemperature,"ax",%progbits
 143              		.align	1
 144              		.global	GetTemperature
 145              		.syntax unified
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 4


 146              		.thumb
 147              		.thumb_func
 149              	GetTemperature:
 150              	.LFB322:
  25:Core/Src/Functions.c **** 
  26:Core/Src/Functions.c **** double GetTemperature(uint16_t adc, uint16_t value)
  27:Core/Src/Functions.c **** {
 151              		.loc 1 27 1
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 24
 154              		@ frame_needed = 1, uses_anonymous_args = 0
 155 0000 B0B5     		push	{r4, r5, r7, lr}
 156              		.cfi_def_cfa_offset 16
 157              		.cfi_offset 4, -16
 158              		.cfi_offset 5, -12
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161 0002 86B0     		sub	sp, sp, #24
 162              		.cfi_def_cfa_offset 40
 163 0004 00AF     		add	r7, sp, #0
 164              		.cfi_def_cfa_register 7
 165 0006 0346     		mov	r3, r0
 166 0008 0A46     		mov	r2, r1
 167 000a FB80     		strh	r3, [r7, #6]	@ movhi
 168 000c 1346     		mov	r3, r2	@ movhi
 169 000e BB80     		strh	r3, [r7, #4]	@ movhi
  28:Core/Src/Functions.c ****     double resistance, val;
  29:Core/Src/Functions.c ****     switch (adc)
 170              		.loc 1 29 5
 171 0010 FB88     		ldrh	r3, [r7, #6]
 172 0012 012B     		cmp	r3, #1
 173 0014 02D0     		beq	.L13
 174 0016 022B     		cmp	r3, #2
 175 0018 6FD0     		beq	.L14
 176 001a 93E0     		b	.L17
 177              	.L13:
  30:Core/Src/Functions.c ****     {
  31:Core/Src/Functions.c ****     case ADC_HOT_END:
  32:Core/Src/Functions.c ****         val = (ADC_VOLTAGE / ADC_SAMPLING) * value;
 178              		.loc 1 32 44
 179 001c BB88     		ldrh	r3, [r7, #4]
 180 001e 1846     		mov	r0, r3
 181 0020 FFF7FEFF 		bl	__aeabi_i2d
 182              		.loc 1 32 13
 183 0024 50A3     		adr	r3, .L18+16
 184 0026 D3E90023 		ldrd	r2, [r3]
 185 002a FFF7FEFF 		bl	__aeabi_dmul
 186 002e 0246     		mov	r2, r0
 187 0030 0B46     		mov	r3, r1
 188 0032 C7E90423 		strd	r2, [r7, #16]
  33:Core/Src/Functions.c ****         resistance = val / ((ADC_VOLTAGE - val) / HOT_END_RESISTANCE);
 189              		.loc 1 33 42
 190 0036 D7E90423 		ldrd	r2, [r7, #16]
 191 003a 53A1     		adr	r1, .L18+48
 192 003c D1E90001 		ldrd	r0, [r1]
 193 0040 FFF7FEFF 		bl	__aeabi_dsub
 194 0044 0246     		mov	r2, r0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 5


 195 0046 0B46     		mov	r3, r1
 196 0048 1046     		mov	r0, r2
 197 004a 1946     		mov	r1, r3
 198              		.loc 1 33 49
 199 004c 50A3     		adr	r3, .L18+56
 200 004e D3E90023 		ldrd	r2, [r3]
 201 0052 FFF7FEFF 		bl	__aeabi_ddiv
 202 0056 0246     		mov	r2, r0
 203 0058 0B46     		mov	r3, r1
 204              		.loc 1 33 20
 205 005a D7E90401 		ldrd	r0, [r7, #16]
 206 005e FFF7FEFF 		bl	__aeabi_ddiv
 207 0062 0246     		mov	r2, r0
 208 0064 0B46     		mov	r3, r1
 209 0066 C7E90223 		strd	r2, [r7, #8]
  34:Core/Src/Functions.c ****         return 1 / (HOT_END_THERM_A + HOT_END_THERM_B * log(resistance) + HOT_END_THERM_C * pow(log
 210              		.loc 1 34 57
 211 006a 97ED020B 		vldr.64	d0, [r7, #8]
 212 006e FFF7FEFF 		bl	log
 213 0072 51EC100B 		vmov	r0, r1, d0
 214              		.loc 1 34 55
 215 0076 48A3     		adr	r3, .L18+64
 216 0078 D3E90023 		ldrd	r2, [r3]
 217 007c FFF7FEFF 		bl	__aeabi_dmul
 218 0080 0246     		mov	r2, r0
 219 0082 0B46     		mov	r3, r1
 220 0084 1046     		mov	r0, r2
 221 0086 1946     		mov	r1, r3
 222              		.loc 1 34 37
 223 0088 45A3     		adr	r3, .L18+72
 224 008a D3E90023 		ldrd	r2, [r3]
 225 008e FFF7FEFF 		bl	__aeabi_dadd
 226 0092 0246     		mov	r2, r0
 227 0094 0B46     		mov	r3, r1
 228 0096 1446     		mov	r4, r2
 229 0098 1D46     		mov	r5, r3
 230              		.loc 1 34 93
 231 009a 97ED020B 		vldr.64	d0, [r7, #8]
 232 009e FFF7FEFF 		bl	log
 233 00a2 B0EE407A 		vmov.f32	s14, s0
 234 00a6 F0EE607A 		vmov.f32	s15, s1
 235 00aa 9FED2B1B 		vldr.64	d1, .L18
 236 00ae B0EE470A 		vmov.f32	s0, s14
 237 00b2 F0EE670A 		vmov.f32	s1, s15
 238 00b6 FFF7FEFF 		bl	pow
 239 00ba 51EC100B 		vmov	r0, r1, d0
 240              		.loc 1 34 91
 241 00be 3AA3     		adr	r3, .L18+80
 242 00c0 D3E90023 		ldrd	r2, [r3]
 243 00c4 FFF7FEFF 		bl	__aeabi_dmul
 244 00c8 0246     		mov	r2, r0
 245 00ca 0B46     		mov	r3, r1
 246              		.loc 1 34 73
 247 00cc 2046     		mov	r0, r4
 248 00ce 2946     		mov	r1, r5
 249 00d0 FFF7FEFF 		bl	__aeabi_dadd
 250 00d4 0246     		mov	r2, r0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 6


 251 00d6 0B46     		mov	r3, r1
 252              		.loc 1 34 18
 253 00d8 4FF00000 		mov	r0, #0
 254 00dc 2849     		ldr	r1, .L18+40
 255 00de FFF7FEFF 		bl	__aeabi_ddiv
 256 00e2 0246     		mov	r2, r0
 257 00e4 0B46     		mov	r3, r1
 258 00e6 1046     		mov	r0, r2
 259 00e8 1946     		mov	r1, r3
 260              		.loc 1 34 118
 261 00ea 1DA3     		adr	r3, .L18+8
 262 00ec D3E90023 		ldrd	r2, [r3]
 263 00f0 FFF7FEFF 		bl	__aeabi_dsub
 264 00f4 0246     		mov	r2, r0
 265 00f6 0B46     		mov	r3, r1
 266 00f8 25E0     		b	.L16
 267              	.L14:
  35:Core/Src/Functions.c ****         break;
  36:Core/Src/Functions.c ****     case ADC_STM_TEMP:
  37:Core/Src/Functions.c ****         return ((V30 - (ADC_VOLTAGE / ADC_SAMPLING * value)) / AVG_SLOPE + 30);
 268              		.loc 1 37 52
 269 00fa BB88     		ldrh	r3, [r7, #4]
 270 00fc 1846     		mov	r0, r3
 271 00fe FFF7FEFF 		bl	__aeabi_i2d
 272 0102 19A3     		adr	r3, .L18+16
 273 0104 D3E90023 		ldrd	r2, [r3]
 274 0108 FFF7FEFF 		bl	__aeabi_dmul
 275 010c 0246     		mov	r2, r0
 276 010e 0B46     		mov	r3, r1
 277              		.loc 1 37 22
 278 0110 17A1     		adr	r1, .L18+24
 279 0112 D1E90001 		ldrd	r0, [r1]
 280 0116 FFF7FEFF 		bl	__aeabi_dsub
 281 011a 0246     		mov	r2, r0
 282 011c 0B46     		mov	r3, r1
 283 011e 1046     		mov	r0, r2
 284 0120 1946     		mov	r1, r3
 285              		.loc 1 37 62
 286 0122 15A3     		adr	r3, .L18+32
 287 0124 D3E90023 		ldrd	r2, [r3]
 288 0128 FFF7FEFF 		bl	__aeabi_ddiv
 289 012c 0246     		mov	r2, r0
 290 012e 0B46     		mov	r3, r1
 291 0130 1046     		mov	r0, r2
 292 0132 1946     		mov	r1, r3
 293              		.loc 1 37 74
 294 0134 4FF00002 		mov	r2, #0
 295 0138 124B     		ldr	r3, .L18+44
 296 013a FFF7FEFF 		bl	__aeabi_dadd
 297 013e 0246     		mov	r2, r0
 298 0140 0B46     		mov	r3, r1
 299 0142 00E0     		b	.L16
 300              	.L17:
  38:Core/Src/Functions.c ****         break;
  39:Core/Src/Functions.c ****     }
  40:Core/Src/Functions.c **** }
 301              		.loc 1 40 1
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 7


 302 0144 01E0     		b	.L12
 303              	.L16:
 304 0146 43EC172B 		vmov	d7, r2, r3
 305              	.L12:
 306 014a B0EE470A 		vmov.f32	s0, s14
 307 014e F0EE670A 		vmov.f32	s1, s15
 308 0152 1837     		adds	r7, r7, #24
 309              		.cfi_def_cfa_offset 16
 310 0154 BD46     		mov	sp, r7
 311              		.cfi_def_cfa_register 13
 312              		@ sp needed
 313 0156 B0BD     		pop	{r4, r5, r7, pc}
 314              	.L19:
 315              		.align	3
 316              	.L18:
 317 0158 00000000 		.word	0
 318 015c 00000840 		.word	1074266112
 319 0160 66666666 		.word	1717986918
 320 0164 66127140 		.word	1081152102
 321 0168 66666666 		.word	1717986918
 322 016c 66660A3F 		.word	1057646182
 323 0170 52B81E85 		.word	-2061584302
 324 0174 EB51E83F 		.word	1072189931
 325 0178 7B14AE47 		.word	1202590843
 326 017c E17A643F 		.word	1063549665
 327 0180 0000F03F 		.word	1072693248
 328 0184 00003E40 		.word	1077805056
 329 0188 66666666 		.word	1717986918
 330 018c 66660A40 		.word	1074423398
 331 0190 00000000 		.word	0
 332 0194 0088C340 		.word	1086556160
 333 0198 0395F1EF 		.word	-269380349
 334 019c 332E2C3F 		.word	1059860019
 335 01a0 D7F7E120 		.word	551679959
 336 01a4 21CA473F 		.word	1061669409
 337 01a8 B905B0A0 		.word	-1599076935
 338 01ac E7517C3E 		.word	1048334823
 339              		.cfi_endproc
 340              	.LFE322:
 342              		.section	.text.SetHeating,"ax",%progbits
 343              		.align	1
 344              		.global	SetHeating
 345              		.syntax unified
 346              		.thumb
 347              		.thumb_func
 349              	SetHeating:
 350              	.LFB323:
  41:Core/Src/Functions.c **** 
  42:Core/Src/Functions.c **** void SetHeating(uint16_t heater, uint16_t power)
  43:Core/Src/Functions.c **** {
 351              		.loc 1 43 1
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 8
 354              		@ frame_needed = 1, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 356 0000 80B4     		push	{r7}
 357              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 8


 358              		.cfi_offset 7, -4
 359 0002 83B0     		sub	sp, sp, #12
 360              		.cfi_def_cfa_offset 16
 361 0004 00AF     		add	r7, sp, #0
 362              		.cfi_def_cfa_register 7
 363 0006 0346     		mov	r3, r0
 364 0008 0A46     		mov	r2, r1
 365 000a FB80     		strh	r3, [r7, #6]	@ movhi
 366 000c 1346     		mov	r3, r2	@ movhi
 367 000e BB80     		strh	r3, [r7, #4]	@ movhi
  44:Core/Src/Functions.c ****     switch (heater)
 368              		.loc 1 44 5
 369 0010 FB88     		ldrh	r3, [r7, #6]
 370 0012 002B     		cmp	r3, #0
 371 0014 03D1     		bne	.L22
  45:Core/Src/Functions.c ****     {
  46:Core/Src/Functions.c ****     case HOT_END:
  47:Core/Src/Functions.c ****         TIM3->CCR2 = power;
 372              		.loc 1 47 13
 373 0016 054A     		ldr	r2, .L23
 374              		.loc 1 47 20
 375 0018 BB88     		ldrh	r3, [r7, #4]
 376 001a 9363     		str	r3, [r2, #56]
  48:Core/Src/Functions.c ****         break;
 377              		.loc 1 48 9
 378 001c 00BF     		nop
 379              	.L22:
  49:Core/Src/Functions.c ****     }
  50:Core/Src/Functions.c **** }
 380              		.loc 1 50 1
 381 001e 00BF     		nop
 382 0020 0C37     		adds	r7, r7, #12
 383              		.cfi_def_cfa_offset 4
 384 0022 BD46     		mov	sp, r7
 385              		.cfi_def_cfa_register 13
 386              		@ sp needed
 387 0024 5DF8047B 		ldr	r7, [sp], #4
 388              		.cfi_restore 7
 389              		.cfi_def_cfa_offset 0
 390 0028 7047     		bx	lr
 391              	.L24:
 392 002a 00BF     		.align	2
 393              	.L23:
 394 002c 00040040 		.word	1073742848
 395              		.cfi_endproc
 396              	.LFE323:
 398              		.section	.text.SetFanSpeed,"ax",%progbits
 399              		.align	1
 400              		.global	SetFanSpeed
 401              		.syntax unified
 402              		.thumb
 403              		.thumb_func
 405              	SetFanSpeed:
 406              	.LFB324:
  51:Core/Src/Functions.c **** 
  52:Core/Src/Functions.c **** void SetFanSpeed(uint16_t fan, uint16_t speed)
  53:Core/Src/Functions.c **** {
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 9


 407              		.loc 1 53 1
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 8
 410              		@ frame_needed = 1, uses_anonymous_args = 0
 411              		@ link register save eliminated.
 412 0000 80B4     		push	{r7}
 413              		.cfi_def_cfa_offset 4
 414              		.cfi_offset 7, -4
 415 0002 83B0     		sub	sp, sp, #12
 416              		.cfi_def_cfa_offset 16
 417 0004 00AF     		add	r7, sp, #0
 418              		.cfi_def_cfa_register 7
 419 0006 0346     		mov	r3, r0
 420 0008 0A46     		mov	r2, r1
 421 000a FB80     		strh	r3, [r7, #6]	@ movhi
 422 000c 1346     		mov	r3, r2	@ movhi
 423 000e BB80     		strh	r3, [r7, #4]	@ movhi
  54:Core/Src/Functions.c ****     switch (fan)
 424              		.loc 1 54 5
 425 0010 FB88     		ldrh	r3, [r7, #6]
 426 0012 002B     		cmp	r3, #0
 427 0014 03D1     		bne	.L27
  55:Core/Src/Functions.c ****     {
  56:Core/Src/Functions.c ****     case HOT_END_FAN:
  57:Core/Src/Functions.c ****         TIM3->CCR3 = speed;
 428              		.loc 1 57 13
 429 0016 054A     		ldr	r2, .L28
 430              		.loc 1 57 20
 431 0018 BB88     		ldrh	r3, [r7, #4]
 432 001a D363     		str	r3, [r2, #60]
  58:Core/Src/Functions.c ****         break;
 433              		.loc 1 58 9
 434 001c 00BF     		nop
 435              	.L27:
  59:Core/Src/Functions.c ****     }
  60:Core/Src/Functions.c **** }
 436              		.loc 1 60 1
 437 001e 00BF     		nop
 438 0020 0C37     		adds	r7, r7, #12
 439              		.cfi_def_cfa_offset 4
 440 0022 BD46     		mov	sp, r7
 441              		.cfi_def_cfa_register 13
 442              		@ sp needed
 443 0024 5DF8047B 		ldr	r7, [sp], #4
 444              		.cfi_restore 7
 445              		.cfi_def_cfa_offset 0
 446 0028 7047     		bx	lr
 447              	.L29:
 448 002a 00BF     		.align	2
 449              	.L28:
 450 002c 00040040 		.word	1073742848
 451              		.cfi_endproc
 452              	.LFE324:
 454              		.section	.text.Move45,"ax",%progbits
 455              		.align	1
 456              		.global	Move45
 457              		.syntax unified
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 10


 458              		.thumb
 459              		.thumb_func
 461              	Move45:
 462              	.LFB325:
  61:Core/Src/Functions.c **** 
  62:Core/Src/Functions.c **** void Move45() {
 463              		.loc 1 62 15
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 1, uses_anonymous_args = 0
 467 0000 80B5     		push	{r7, lr}
 468              		.cfi_def_cfa_offset 8
 469              		.cfi_offset 7, -8
 470              		.cfi_offset 14, -4
 471 0002 00AF     		add	r7, sp, #0
 472              		.cfi_def_cfa_register 7
  63:Core/Src/Functions.c ****     //1539 49mm
  64:Core/Src/Functions.c ****     //3078 50mm
  65:Core/Src/Functions.c ****     //4000 48mm
  66:Core/Src/Functions.c ****     if(GetTicks() - last_time_X > 1539) {
 473              		.loc 1 66 8
 474 0004 FFF7FEFF 		bl	GetTicks
 475 0008 0346     		mov	r3, r0
 476 000a 1A46     		mov	r2, r3
 477              		.loc 1 66 19
 478 000c 0E4B     		ldr	r3, .L33
 479 000e 1B68     		ldr	r3, [r3]
 480 0010 D31A     		subs	r3, r2, r3
 481              		.loc 1 66 7
 482 0012 40F20362 		movw	r2, #1539
 483 0016 9342     		cmp	r3, r2
 484 0018 13D9     		bls	.L32
  67:Core/Src/Functions.c ****         CHANGE_MOTOR_DIR(X_AXIS_DIR, CLOCKWISE);
 485              		.loc 1 67 9
 486 001a 0022     		movs	r2, #0
 487 001c 0221     		movs	r1, #2
 488 001e 0B48     		ldr	r0, .L33+4
 489 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
  68:Core/Src/Functions.c ****         MAKE_MOTOR_STEP(X_AXIS_STEP);
 490              		.loc 1 68 9
 491 0024 4021     		movs	r1, #64
 492 0026 0A48     		ldr	r0, .L33+8
 493 0028 FFF7FEFF 		bl	HAL_GPIO_TogglePin
  69:Core/Src/Functions.c ****         g50_steps++;
 494              		.loc 1 69 18
 495 002c 094B     		ldr	r3, .L33+12
 496 002e 1B68     		ldr	r3, [r3]
 497 0030 0133     		adds	r3, r3, #1
 498 0032 084A     		ldr	r2, .L33+12
 499 0034 1360     		str	r3, [r2]
  70:Core/Src/Functions.c ****         last_time_X = GetTicks();
 500              		.loc 1 70 23
 501 0036 FFF7FEFF 		bl	GetTicks
 502 003a 0346     		mov	r3, r0
 503 003c 1A46     		mov	r2, r3
 504              		.loc 1 70 21
 505 003e 024B     		ldr	r3, .L33
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 11


 506 0040 1A60     		str	r2, [r3]
 507              	.L32:
  71:Core/Src/Functions.c ****     }
  72:Core/Src/Functions.c **** }
 508              		.loc 1 72 1
 509 0042 00BF     		nop
 510 0044 80BD     		pop	{r7, pc}
 511              	.L34:
 512 0046 00BF     		.align	2
 513              	.L33:
 514 0048 00000000 		.word	last_time_X
 515 004c 00140048 		.word	1207964672
 516 0050 00080048 		.word	1207961600
 517 0054 00000000 		.word	g50_steps
 518              		.cfi_endproc
 519              	.LFE325:
 521              		.global	__aeabi_dcmpgt
 522              		.global	__aeabi_d2uiz
 523              		.global	__aeabi_dcmplt
 524              		.global	__aeabi_ui2d
 525              		.section	.text.MoveXY,"ax",%progbits
 526              		.align	1
 527              		.global	MoveXY
 528              		.syntax unified
 529              		.thumb
 530              		.thumb_func
 532              	MoveXY:
 533              	.LFB326:
  73:Core/Src/Functions.c **** 
  74:Core/Src/Functions.c **** void MoveXY(double dir_x, double dir_y) {
 534              		.loc 1 74 41
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 72
 537              		@ frame_needed = 1, uses_anonymous_args = 0
 538 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 539              		.cfi_def_cfa_offset 24
 540              		.cfi_offset 4, -24
 541              		.cfi_offset 5, -20
 542              		.cfi_offset 7, -16
 543              		.cfi_offset 8, -12
 544              		.cfi_offset 9, -8
 545              		.cfi_offset 14, -4
 546 0004 92B0     		sub	sp, sp, #72
 547              		.cfi_def_cfa_offset 96
 548 0006 00AF     		add	r7, sp, #0
 549              		.cfi_def_cfa_register 7
 550 0008 87ED040B 		vstr.64	d0, [r7, #16]
 551 000c 87ED021B 		vstr.64	d1, [r7, #8]
  75:Core/Src/Functions.c ****     double engine_dir_B = dir_x * SQRT_2_BY_2 - dir_y * SQRT_2_BY_2; // engine B (image Y)
 552              		.loc 1 75 33
 553 0010 B4A3     		adr	r3, .L62+60
 554 0012 D3E90023 		ldrd	r2, [r3]
 555 0016 D7E90401 		ldrd	r0, [r7, #16]
 556 001a FFF7FEFF 		bl	__aeabi_dmul
 557 001e 0246     		mov	r2, r0
 558 0020 0B46     		mov	r3, r1
 559 0022 9046     		mov	r8, r2
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 12


 560 0024 9946     		mov	r9, r3
 561              		.loc 1 75 55
 562 0026 AFA3     		adr	r3, .L62+60
 563 0028 D3E90023 		ldrd	r2, [r3]
 564 002c D7E90201 		ldrd	r0, [r7, #8]
 565 0030 FFF7FEFF 		bl	__aeabi_dmul
 566 0034 0246     		mov	r2, r0
 567 0036 0B46     		mov	r3, r1
 568              		.loc 1 75 12
 569 0038 4046     		mov	r0, r8
 570 003a 4946     		mov	r1, r9
 571 003c FFF7FEFF 		bl	__aeabi_dsub
 572 0040 0246     		mov	r2, r0
 573 0042 0B46     		mov	r3, r1
 574 0044 C7E91023 		strd	r2, [r7, #64]
  76:Core/Src/Functions.c ****     double engine_dir_A = dir_x * SQRT_2_BY_2 + dir_y * SQRT_2_BY_2; // engine A (image X)
 575              		.loc 1 76 33
 576 0048 A6A3     		adr	r3, .L62+60
 577 004a D3E90023 		ldrd	r2, [r3]
 578 004e D7E90401 		ldrd	r0, [r7, #16]
 579 0052 FFF7FEFF 		bl	__aeabi_dmul
 580 0056 0246     		mov	r2, r0
 581 0058 0B46     		mov	r3, r1
 582 005a 9046     		mov	r8, r2
 583 005c 9946     		mov	r9, r3
 584              		.loc 1 76 55
 585 005e A1A3     		adr	r3, .L62+60
 586 0060 D3E90023 		ldrd	r2, [r3]
 587 0064 D7E90201 		ldrd	r0, [r7, #8]
 588 0068 FFF7FEFF 		bl	__aeabi_dmul
 589 006c 0246     		mov	r2, r0
 590 006e 0B46     		mov	r3, r1
 591              		.loc 1 76 12
 592 0070 4046     		mov	r0, r8
 593 0072 4946     		mov	r1, r9
 594 0074 FFF7FEFF 		bl	__aeabi_dadd
 595 0078 0246     		mov	r2, r0
 596 007a 0B46     		mov	r3, r1
 597 007c C7E90E23 		strd	r2, [r7, #56]
  77:Core/Src/Functions.c **** 
  78:Core/Src/Functions.c ****     double feed_rate_A = fabs(F * engine_dir_A); // F = feed rate
 598              		.loc 1 78 33
 599 0080 914B     		ldr	r3, .L62+32
 600 0082 1B88     		ldrh	r3, [r3]
 601 0084 1846     		mov	r0, r3
 602 0086 FFF7FEFF 		bl	__aeabi_i2d
 603 008a D7E90E23 		ldrd	r2, [r7, #56]
 604 008e FFF7FEFF 		bl	__aeabi_dmul
 605 0092 0246     		mov	r2, r0
 606 0094 0B46     		mov	r3, r1
 607              		.loc 1 78 12
 608 0096 1146     		mov	r1, r2
 609 0098 3963     		str	r1, [r7, #48]
 610 009a 23F00043 		bic	r3, r3, #-2147483648
 611 009e 7B63     		str	r3, [r7, #52]
  79:Core/Src/Functions.c ****     double feed_rate_B = fabs(F * engine_dir_B);
 612              		.loc 1 79 33
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 13


 613 00a0 894B     		ldr	r3, .L62+32
 614 00a2 1B88     		ldrh	r3, [r3]
 615 00a4 1846     		mov	r0, r3
 616 00a6 FFF7FEFF 		bl	__aeabi_i2d
 617 00aa D7E91023 		ldrd	r2, [r7, #64]
 618 00ae FFF7FEFF 		bl	__aeabi_dmul
 619 00b2 0246     		mov	r2, r0
 620 00b4 0B46     		mov	r3, r1
 621              		.loc 1 79 12
 622 00b6 1146     		mov	r1, r2
 623 00b8 B962     		str	r1, [r7, #40]
 624 00ba 23F00043 		bic	r3, r3, #-2147483648
 625 00be FB62     		str	r3, [r7, #44]
  80:Core/Src/Functions.c **** 
  81:Core/Src/Functions.c ****     if(feed_rate_A > 0) {
 626              		.loc 1 81 7
 627 00c0 4FF00002 		mov	r2, #0
 628 00c4 4FF00003 		mov	r3, #0
 629 00c8 D7E90C01 		ldrd	r0, [r7, #48]
 630 00cc FFF7FEFF 		bl	__aeabi_dcmpgt
 631 00d0 0346     		mov	r3, r0
 632 00d2 002B     		cmp	r3, #0
 633 00d4 7BD0     		beq	.L36
 634              	.LBB2:
  82:Core/Src/Functions.c ****         uint32_t speed_A = (double)1 / (double)feed_rate_A * (double)60 * XY_MM_PER_REV / XY_STEPS_
 635              		.loc 1 82 38
 636 00d6 D7E90C23 		ldrd	r2, [r7, #48]
 637 00da 4FF00000 		mov	r0, #0
 638 00de 7B49     		ldr	r1, .L62+36
 639 00e0 FFF7FEFF 		bl	__aeabi_ddiv
 640 00e4 0246     		mov	r2, r0
 641 00e6 0B46     		mov	r3, r1
 642 00e8 1046     		mov	r0, r2
 643 00ea 1946     		mov	r1, r3
 644              		.loc 1 82 60
 645 00ec 4FF00002 		mov	r2, #0
 646 00f0 774B     		ldr	r3, .L62+40
 647 00f2 FFF7FEFF 		bl	__aeabi_dmul
 648 00f6 0246     		mov	r2, r0
 649 00f8 0B46     		mov	r3, r1
 650 00fa 1046     		mov	r0, r2
 651 00fc 1946     		mov	r1, r3
 652              		.loc 1 82 73
 653 00fe 6AA3     		adr	r3, .L62
 654 0100 D3E90023 		ldrd	r2, [r3]
 655 0104 FFF7FEFF 		bl	__aeabi_dmul
 656 0108 0246     		mov	r2, r0
 657 010a 0B46     		mov	r3, r1
 658 010c 1046     		mov	r0, r2
 659 010e 1946     		mov	r1, r3
 660              		.loc 1 82 89
 661 0110 67A3     		adr	r3, .L62+8
 662 0112 D3E90023 		ldrd	r2, [r3]
 663 0116 FFF7FEFF 		bl	__aeabi_ddiv
 664 011a 0246     		mov	r2, r0
 665 011c 0B46     		mov	r3, r1
 666 011e 1046     		mov	r0, r2
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 14


 667 0120 1946     		mov	r1, r3
 668              		.loc 1 82 108
 669 0122 65A3     		adr	r3, .L62+16
 670 0124 D3E90023 		ldrd	r2, [r3]
 671 0128 FFF7FEFF 		bl	__aeabi_dmul
 672 012c 0246     		mov	r2, r0
 673 012e 0B46     		mov	r3, r1
 674              		.loc 1 82 18
 675 0130 1046     		mov	r0, r2
 676 0132 1946     		mov	r1, r3
 677 0134 FFF7FEFF 		bl	__aeabi_d2uiz
 678 0138 0346     		mov	r3, r0
 679 013a 7B62     		str	r3, [r7, #36]
  83:Core/Src/Functions.c **** 
  84:Core/Src/Functions.c ****         if(GetTicks() - last_tick_A >= speed_A && fabs(engine_dir_A) > ENGINE_MIN_SPEED) {
 680              		.loc 1 84 12
 681 013c FFF7FEFF 		bl	GetTicks
 682 0140 0346     		mov	r3, r0
 683 0142 1A46     		mov	r2, r3
 684              		.loc 1 84 23
 685 0144 634B     		ldr	r3, .L62+44
 686 0146 1B68     		ldr	r3, [r3]
 687 0148 D31A     		subs	r3, r2, r3
 688              		.loc 1 84 11
 689 014a 7A6A     		ldr	r2, [r7, #36]
 690 014c 9A42     		cmp	r2, r3
 691 014e 3ED8     		bhi	.L36
 692              		.loc 1 84 51 discriminator 1
 693 0150 BB6B     		ldr	r3, [r7, #56]
 694 0152 3B60     		str	r3, [r7]
 695 0154 FB6B     		ldr	r3, [r7, #60]
 696 0156 23F00043 		bic	r3, r3, #-2147483648
 697 015a 7B60     		str	r3, [r7, #4]
 698              		.loc 1 84 48 discriminator 1
 699 015c 58A3     		adr	r3, .L62+24
 700 015e D3E90023 		ldrd	r2, [r3]
 701 0162 D7E90001 		ldrd	r0, [r7]
 702 0166 FFF7FEFF 		bl	__aeabi_dcmpgt
 703 016a 0346     		mov	r3, r0
 704 016c 002B     		cmp	r3, #0
 705 016e 2ED0     		beq	.L36
  85:Core/Src/Functions.c ****             // isRunning = true;
  86:Core/Src/Functions.c ****             if(engine_dir_A > 0) {
 706              		.loc 1 86 15
 707 0170 4FF00002 		mov	r2, #0
 708 0174 4FF00003 		mov	r3, #0
 709 0178 D7E90E01 		ldrd	r0, [r7, #56]
 710 017c FFF7FEFF 		bl	__aeabi_dcmpgt
 711 0180 0346     		mov	r3, r0
 712 0182 002B     		cmp	r3, #0
 713 0184 09D0     		beq	.L59
  87:Core/Src/Functions.c ****                 CHANGE_MOTOR_DIR(X_AXIS_DIR, CLOCKWISE);
 714              		.loc 1 87 17
 715 0186 0022     		movs	r2, #0
 716 0188 0221     		movs	r1, #2
 717 018a 5348     		ldr	r0, .L62+48
 718 018c FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 15


  88:Core/Src/Functions.c ****                 MAKE_MOTOR_STEP(X_AXIS_STEP);
 719              		.loc 1 88 17
 720 0190 4021     		movs	r1, #64
 721 0192 5248     		ldr	r0, .L62+52
 722 0194 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 723 0198 13E0     		b	.L41
 724              	.L59:
  89:Core/Src/Functions.c ****             } else if(engine_dir_A < 0) {
 725              		.loc 1 89 22
 726 019a 4FF00002 		mov	r2, #0
 727 019e 4FF00003 		mov	r3, #0
 728 01a2 D7E90E01 		ldrd	r0, [r7, #56]
 729 01a6 FFF7FEFF 		bl	__aeabi_dcmplt
 730 01aa 0346     		mov	r3, r0
 731 01ac 002B     		cmp	r3, #0
 732 01ae 08D0     		beq	.L41
  90:Core/Src/Functions.c ****                 CHANGE_MOTOR_DIR(X_AXIS_DIR, COUNTERCLOCKWISE);
 733              		.loc 1 90 17
 734 01b0 0122     		movs	r2, #1
 735 01b2 0221     		movs	r1, #2
 736 01b4 4848     		ldr	r0, .L62+48
 737 01b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
  91:Core/Src/Functions.c ****                 MAKE_MOTOR_STEP(X_AXIS_STEP);
 738              		.loc 1 91 17
 739 01ba 4021     		movs	r1, #64
 740 01bc 4748     		ldr	r0, .L62+52
 741 01be FFF7FEFF 		bl	HAL_GPIO_TogglePin
 742              	.L41:
  92:Core/Src/Functions.c ****             }
  93:Core/Src/Functions.c ****             last_tick_A = GetTicks();
 743              		.loc 1 93 27
 744 01c2 FFF7FEFF 		bl	GetTicks
 745 01c6 0346     		mov	r3, r0
 746 01c8 1A46     		mov	r2, r3
 747              		.loc 1 93 25
 748 01ca 424B     		ldr	r3, .L62+44
 749 01cc 1A60     		str	r2, [r3]
 750              	.L36:
 751              	.LBE2:
  94:Core/Src/Functions.c ****         }
  95:Core/Src/Functions.c ****     }
  96:Core/Src/Functions.c **** 
  97:Core/Src/Functions.c ****     if(feed_rate_B > 0) {
 752              		.loc 1 97 7
 753 01ce 4FF00002 		mov	r2, #0
 754 01d2 4FF00003 		mov	r3, #0
 755 01d6 D7E90A01 		ldrd	r0, [r7, #40]
 756 01da FFF7FEFF 		bl	__aeabi_dcmpgt
 757 01de 0346     		mov	r3, r0
 758 01e0 002B     		cmp	r3, #0
 759 01e2 00F09E80 		beq	.L43
 760              	.LBB3:
  98:Core/Src/Functions.c ****         uint32_t speed_B = (double)1 / (double)feed_rate_B * (double)60 * XY_MM_PER_REV / XY_STEPS_
 761              		.loc 1 98 38
 762 01e6 D7E90A23 		ldrd	r2, [r7, #40]
 763 01ea 4FF00000 		mov	r0, #0
 764 01ee 3749     		ldr	r1, .L62+36
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 16


 765 01f0 FFF7FEFF 		bl	__aeabi_ddiv
 766 01f4 0246     		mov	r2, r0
 767 01f6 0B46     		mov	r3, r1
 768 01f8 1046     		mov	r0, r2
 769 01fa 1946     		mov	r1, r3
 770              		.loc 1 98 60
 771 01fc 4FF00002 		mov	r2, #0
 772 0200 334B     		ldr	r3, .L62+40
 773 0202 FFF7FEFF 		bl	__aeabi_dmul
 774 0206 0246     		mov	r2, r0
 775 0208 0B46     		mov	r3, r1
 776 020a 1046     		mov	r0, r2
 777 020c 1946     		mov	r1, r3
 778              		.loc 1 98 73
 779 020e 26A3     		adr	r3, .L62
 780 0210 D3E90023 		ldrd	r2, [r3]
 781 0214 FFF7FEFF 		bl	__aeabi_dmul
 782 0218 0246     		mov	r2, r0
 783 021a 0B46     		mov	r3, r1
 784 021c 1046     		mov	r0, r2
 785 021e 1946     		mov	r1, r3
 786              		.loc 1 98 89
 787 0220 23A3     		adr	r3, .L62+8
 788 0222 D3E90023 		ldrd	r2, [r3]
 789 0226 FFF7FEFF 		bl	__aeabi_ddiv
 790 022a 0246     		mov	r2, r0
 791 022c 0B46     		mov	r3, r1
 792 022e 1046     		mov	r0, r2
 793 0230 1946     		mov	r1, r3
 794              		.loc 1 98 108
 795 0232 21A3     		adr	r3, .L62+16
 796 0234 D3E90023 		ldrd	r2, [r3]
 797 0238 FFF7FEFF 		bl	__aeabi_dmul
 798 023c 0246     		mov	r2, r0
 799 023e 0B46     		mov	r3, r1
 800              		.loc 1 98 18
 801 0240 1046     		mov	r0, r2
 802 0242 1946     		mov	r1, r3
 803 0244 FFF7FEFF 		bl	__aeabi_d2uiz
 804 0248 0346     		mov	r3, r0
 805 024a 3B62     		str	r3, [r7, #32]
  99:Core/Src/Functions.c **** 
 100:Core/Src/Functions.c ****         if(GetTicks() - last_tick_B >= speed_B && fabs(engine_dir_B) > ENGINE_MIN_SPEED) {
 806              		.loc 1 100 12
 807 024c FFF7FEFF 		bl	GetTicks
 808 0250 0346     		mov	r3, r0
 809 0252 1A46     		mov	r2, r3
 810              		.loc 1 100 23
 811 0254 224B     		ldr	r3, .L62+56
 812 0256 1B68     		ldr	r3, [r3]
 813 0258 D31A     		subs	r3, r2, r3
 814              		.loc 1 100 11
 815 025a 3A6A     		ldr	r2, [r7, #32]
 816 025c 9A42     		cmp	r2, r3
 817 025e 60D8     		bhi	.L43
 818              		.loc 1 100 51 discriminator 1
 819 0260 3C6C     		ldr	r4, [r7, #64]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 17


 820 0262 7B6C     		ldr	r3, [r7, #68]
 821 0264 23F00045 		bic	r5, r3, #-2147483648
 822              		.loc 1 100 48 discriminator 1
 823 0268 15A3     		adr	r3, .L62+24
 824 026a D3E90023 		ldrd	r2, [r3]
 825 026e 2046     		mov	r0, r4
 826 0270 2946     		mov	r1, r5
 827 0272 FFF7FEFF 		bl	__aeabi_dcmpgt
 828 0276 0346     		mov	r3, r0
 829 0278 002B     		cmp	r3, #0
 830 027a 52D0     		beq	.L43
 101:Core/Src/Functions.c ****             // isRunning = true;
 102:Core/Src/Functions.c ****             if(engine_dir_B > 0) {
 831              		.loc 1 102 15
 832 027c 4FF00002 		mov	r2, #0
 833 0280 4FF00003 		mov	r3, #0
 834 0284 D7E91001 		ldrd	r0, [r7, #64]
 835 0288 FFF7FEFF 		bl	__aeabi_dcmpgt
 836 028c 0346     		mov	r3, r0
 837 028e 002B     		cmp	r3, #0
 838 0290 2CD0     		beq	.L60
 103:Core/Src/Functions.c ****                 CHANGE_MOTOR_DIR(Y_AXIS_DIR, CLOCKWISE);
 839              		.loc 1 103 17
 840 0292 0022     		movs	r2, #0
 841 0294 0421     		movs	r1, #4
 842 0296 1048     		ldr	r0, .L62+48
 843 0298 FFF7FEFF 		bl	HAL_GPIO_WritePin
 104:Core/Src/Functions.c ****                 MAKE_MOTOR_STEP(Y_AXIS_STEP);
 844              		.loc 1 104 17
 845 029c 8021     		movs	r1, #128
 846 029e 4FF09040 		mov	r0, #1207959552
 847 02a2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 848 02a6 36E0     		b	.L48
 849              	.L63:
 850              		.align	3
 851              	.L62:
 852 02a8 00000020 		.word	536870912
 853 02ac 5C475140 		.word	1079068508
 854 02b0 00000000 		.word	0
 855 02b4 0064B940 		.word	1085891584
 856 02b8 00000000 		.word	0
 857 02bc 80842E41 		.word	1093567616
 858 02c0 FCA9F1D2 		.word	-755914244
 859 02c4 4D62503F 		.word	1062232653
 860 02c8 00000000 		.word	F
 861 02cc 0000F03F 		.word	1072693248
 862 02d0 00004E40 		.word	1078853632
 863 02d4 00000000 		.word	last_tick_A
 864 02d8 00140048 		.word	1207964672
 865 02dc 00080048 		.word	1207961600
 866 02e0 00000000 		.word	last_tick_B
 867 02e4 CD3B7F66 		.word	1719614413
 868 02e8 9EA0E63F 		.word	1072079006
 869              	.L60:
 105:Core/Src/Functions.c ****             } else if(engine_dir_B < 0) {
 870              		.loc 1 105 22
 871 02ec 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 18


 872 02f0 4FF00003 		mov	r3, #0
 873 02f4 D7E91001 		ldrd	r0, [r7, #64]
 874 02f8 FFF7FEFF 		bl	__aeabi_dcmplt
 875 02fc 0346     		mov	r3, r0
 876 02fe 002B     		cmp	r3, #0
 877 0300 09D0     		beq	.L48
 106:Core/Src/Functions.c ****                 CHANGE_MOTOR_DIR(Y_AXIS_DIR, COUNTERCLOCKWISE);
 878              		.loc 1 106 17
 879 0302 0122     		movs	r2, #1
 880 0304 0421     		movs	r1, #4
 881 0306 5048     		ldr	r0, .L64+24
 882 0308 FFF7FEFF 		bl	HAL_GPIO_WritePin
 107:Core/Src/Functions.c ****                 MAKE_MOTOR_STEP(Y_AXIS_STEP);
 883              		.loc 1 107 17
 884 030c 8021     		movs	r1, #128
 885 030e 4FF09040 		mov	r0, #1207959552
 886 0312 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 887              	.L48:
 108:Core/Src/Functions.c ****             }
 109:Core/Src/Functions.c ****             last_tick_B = GetTicks();
 888              		.loc 1 109 27
 889 0316 FFF7FEFF 		bl	GetTicks
 890 031a 0346     		mov	r3, r0
 891 031c 1A46     		mov	r2, r3
 892              		.loc 1 109 25
 893 031e 4B4B     		ldr	r3, .L64+28
 894 0320 1A60     		str	r2, [r3]
 895              	.L43:
 896              	.LBE3:
 110:Core/Src/Functions.c ****         }
 111:Core/Src/Functions.c ****     }
 112:Core/Src/Functions.c **** 
 113:Core/Src/Functions.c ****     if(F > 0) {
 897              		.loc 1 113 10
 898 0322 4B4B     		ldr	r3, .L64+32
 899 0324 1B88     		ldrh	r3, [r3]
 900              		.loc 1 113 7
 901 0326 002B     		cmp	r3, #0
 902 0328 7DD0     		beq	.L61
 903              	.LBB4:
 114:Core/Src/Functions.c ****         uint32_t speed_AB = (double)1 / (double)F * (double)60 * XY_MM_PER_REV / XY_STEPS_PER_REV *
 904              		.loc 1 114 41
 905 032a 494B     		ldr	r3, .L64+32
 906 032c 1B88     		ldrh	r3, [r3]
 907 032e 1846     		mov	r0, r3
 908 0330 FFF7FEFF 		bl	__aeabi_ui2d
 909 0334 0246     		mov	r2, r0
 910 0336 0B46     		mov	r3, r1
 911              		.loc 1 114 39
 912 0338 4FF00000 		mov	r0, #0
 913 033c 4549     		ldr	r1, .L64+36
 914 033e FFF7FEFF 		bl	__aeabi_ddiv
 915 0342 0246     		mov	r2, r0
 916 0344 0B46     		mov	r3, r1
 917 0346 1046     		mov	r0, r2
 918 0348 1946     		mov	r1, r3
 919              		.loc 1 114 51
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 19


 920 034a 4FF00002 		mov	r2, #0
 921 034e 424B     		ldr	r3, .L64+40
 922 0350 FFF7FEFF 		bl	__aeabi_dmul
 923 0354 0246     		mov	r2, r0
 924 0356 0B46     		mov	r3, r1
 925 0358 1046     		mov	r0, r2
 926 035a 1946     		mov	r1, r3
 927              		.loc 1 114 64
 928 035c 34A3     		adr	r3, .L64
 929 035e D3E90023 		ldrd	r2, [r3]
 930 0362 FFF7FEFF 		bl	__aeabi_dmul
 931 0366 0246     		mov	r2, r0
 932 0368 0B46     		mov	r3, r1
 933 036a 1046     		mov	r0, r2
 934 036c 1946     		mov	r1, r3
 935              		.loc 1 114 80
 936 036e 32A3     		adr	r3, .L64+8
 937 0370 D3E90023 		ldrd	r2, [r3]
 938 0374 FFF7FEFF 		bl	__aeabi_ddiv
 939 0378 0246     		mov	r2, r0
 940 037a 0B46     		mov	r3, r1
 941 037c 1046     		mov	r0, r2
 942 037e 1946     		mov	r1, r3
 943              		.loc 1 114 99
 944 0380 2FA3     		adr	r3, .L64+16
 945 0382 D3E90023 		ldrd	r2, [r3]
 946 0386 FFF7FEFF 		bl	__aeabi_dmul
 947 038a 0246     		mov	r2, r0
 948 038c 0B46     		mov	r3, r1
 949              		.loc 1 114 18
 950 038e 1046     		mov	r0, r2
 951 0390 1946     		mov	r1, r3
 952 0392 FFF7FEFF 		bl	__aeabi_d2uiz
 953 0396 0346     		mov	r3, r0
 954 0398 FB61     		str	r3, [r7, #28]
 115:Core/Src/Functions.c ****         if(GetTicks() - last_tick_AB >= speed_AB) {
 955              		.loc 1 115 12
 956 039a FFF7FEFF 		bl	GetTicks
 957 039e 0346     		mov	r3, r0
 958 03a0 1A46     		mov	r2, r3
 959              		.loc 1 115 23
 960 03a2 2E4B     		ldr	r3, .L64+44
 961 03a4 1B68     		ldr	r3, [r3]
 962 03a6 D31A     		subs	r3, r2, r3
 963              		.loc 1 115 11
 964 03a8 FA69     		ldr	r2, [r7, #28]
 965 03aa 9A42     		cmp	r2, r3
 966 03ac 3BD8     		bhi	.L61
 116:Core/Src/Functions.c ****             Cur_X += dir_x * XY_MM_PER_REV / XY_STEPS_PER_REV;
 967              		.loc 1 116 28
 968 03ae 20A3     		adr	r3, .L64
 969 03b0 D3E90023 		ldrd	r2, [r3]
 970 03b4 D7E90401 		ldrd	r0, [r7, #16]
 971 03b8 FFF7FEFF 		bl	__aeabi_dmul
 972 03bc 0246     		mov	r2, r0
 973 03be 0B46     		mov	r3, r1
 974 03c0 1046     		mov	r0, r2
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 20


 975 03c2 1946     		mov	r1, r3
 976              		.loc 1 116 44
 977 03c4 1CA3     		adr	r3, .L64+8
 978 03c6 D3E90023 		ldrd	r2, [r3]
 979 03ca FFF7FEFF 		bl	__aeabi_ddiv
 980 03ce 0246     		mov	r2, r0
 981 03d0 0B46     		mov	r3, r1
 982 03d2 1046     		mov	r0, r2
 983 03d4 1946     		mov	r1, r3
 984              		.loc 1 116 19
 985 03d6 224B     		ldr	r3, .L64+48
 986 03d8 D3E90023 		ldrd	r2, [r3]
 987 03dc FFF7FEFF 		bl	__aeabi_dadd
 988 03e0 0246     		mov	r2, r0
 989 03e2 0B46     		mov	r3, r1
 990 03e4 1E49     		ldr	r1, .L64+48
 991 03e6 C1E90023 		strd	r2, [r1]
 117:Core/Src/Functions.c ****             Cur_Y += dir_y * XY_MM_PER_REV / XY_STEPS_PER_REV;
 992              		.loc 1 117 28
 993 03ea 11A3     		adr	r3, .L64
 994 03ec D3E90023 		ldrd	r2, [r3]
 995 03f0 D7E90201 		ldrd	r0, [r7, #8]
 996 03f4 FFF7FEFF 		bl	__aeabi_dmul
 997 03f8 0246     		mov	r2, r0
 998 03fa 0B46     		mov	r3, r1
 999 03fc 1046     		mov	r0, r2
 1000 03fe 1946     		mov	r1, r3
 1001              		.loc 1 117 44
 1002 0400 0DA3     		adr	r3, .L64+8
 1003 0402 D3E90023 		ldrd	r2, [r3]
 1004 0406 FFF7FEFF 		bl	__aeabi_ddiv
 1005 040a 0246     		mov	r2, r0
 1006 040c 0B46     		mov	r3, r1
 1007 040e 1046     		mov	r0, r2
 1008 0410 1946     		mov	r1, r3
 1009              		.loc 1 117 19
 1010 0412 144B     		ldr	r3, .L64+52
 1011 0414 D3E90023 		ldrd	r2, [r3]
 1012 0418 FFF7FEFF 		bl	__aeabi_dadd
 1013 041c 0246     		mov	r2, r0
 1014 041e 0B46     		mov	r3, r1
 1015 0420 1049     		ldr	r1, .L64+52
 1016 0422 C1E90023 		strd	r2, [r1]
 1017              	.L61:
 1018              	.LBE4:
 118:Core/Src/Functions.c ****         }
 119:Core/Src/Functions.c ****     }
 120:Core/Src/Functions.c **** 
 121:Core/Src/Functions.c ****     // isRunning = false;
 122:Core/Src/Functions.c **** }
 1019              		.loc 1 122 1
 1020 0426 00BF     		nop
 1021 0428 4837     		adds	r7, r7, #72
 1022              		.cfi_def_cfa_offset 24
 1023 042a BD46     		mov	sp, r7
 1024              		.cfi_def_cfa_register 13
 1025              		@ sp needed
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 21


 1026 042c BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 1027              	.L65:
 1028              		.align	3
 1029              	.L64:
 1030 0430 00000020 		.word	536870912
 1031 0434 5C475140 		.word	1079068508
 1032 0438 00000000 		.word	0
 1033 043c 0064B940 		.word	1085891584
 1034 0440 00000000 		.word	0
 1035 0444 80842E41 		.word	1093567616
 1036 0448 00140048 		.word	1207964672
 1037 044c 00000000 		.word	last_tick_B
 1038 0450 00000000 		.word	F
 1039 0454 0000F03F 		.word	1072693248
 1040 0458 00004E40 		.word	1078853632
 1041 045c 00000000 		.word	last_tick_AB
 1042 0460 00000000 		.word	Cur_X
 1043 0464 00000000 		.word	Cur_Y
 1044              		.cfi_endproc
 1045              	.LFE326:
 1047              		.global	__aeabi_dcmpge
 1048              		.global	__aeabi_dcmple
 1049              		.section	.text.Move,"ax",%progbits
 1050              		.align	1
 1051              		.global	Move
 1052              		.syntax unified
 1053              		.thumb
 1054              		.thumb_func
 1056              	Move:
 1057              	.LFB327:
 123:Core/Src/Functions.c **** 
 124:Core/Src/Functions.c **** void Move(double dif, uint32_t last_time, uint16_t axis, uint16_t speed)
 125:Core/Src/Functions.c **** {
 1058              		.loc 1 125 1
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 16
 1061              		@ frame_needed = 1, uses_anonymous_args = 0
 1062 0000 80B5     		push	{r7, lr}
 1063              		.cfi_def_cfa_offset 8
 1064              		.cfi_offset 7, -8
 1065              		.cfi_offset 14, -4
 1066 0002 84B0     		sub	sp, sp, #16
 1067              		.cfi_def_cfa_offset 24
 1068 0004 00AF     		add	r7, sp, #0
 1069              		.cfi_def_cfa_register 7
 1070 0006 87ED020B 		vstr.64	d0, [r7, #8]
 1071 000a 7860     		str	r0, [r7, #4]
 1072 000c 0B46     		mov	r3, r1
 1073 000e 7B80     		strh	r3, [r7, #2]	@ movhi
 1074 0010 1346     		mov	r3, r2	@ movhi
 1075 0012 3B80     		strh	r3, [r7]	@ movhi
 126:Core/Src/Functions.c ****     if (dif >= OFFSET_P || dif <= OFFSET_N)
 1076              		.loc 1 126 8
 1077 0014 A2A3     		adr	r3, .L90+56
 1078 0016 D3E90023 		ldrd	r2, [r3]
 1079 001a D7E90201 		ldrd	r0, [r7, #8]
 1080 001e FFF7FEFF 		bl	__aeabi_dcmpge
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 22


 1081 0022 0346     		mov	r3, r0
 1082 0024 002B     		cmp	r3, #0
 1083 0026 0AD1     		bne	.L67
 1084              		.loc 1 126 25 discriminator 1
 1085 0028 9FA3     		adr	r3, .L90+64
 1086 002a D3E90023 		ldrd	r2, [r3]
 1087 002e D7E90201 		ldrd	r0, [r7, #8]
 1088 0032 FFF7FEFF 		bl	__aeabi_dcmple
 1089 0036 0346     		mov	r3, r0
 1090 0038 002B     		cmp	r3, #0
 1091 003a 00F00B81 		beq	.L84
 1092              	.L67:
 127:Core/Src/Functions.c ****     {
 128:Core/Src/Functions.c ****         if (GetTicks() - last_time >= speed && speed > 0)
 1093              		.loc 1 128 13
 1094 003e FFF7FEFF 		bl	GetTicks
 1095 0042 0346     		mov	r3, r0
 1096 0044 1A46     		mov	r2, r3
 1097              		.loc 1 128 24
 1098 0046 7B68     		ldr	r3, [r7, #4]
 1099 0048 D21A     		subs	r2, r2, r3
 1100              		.loc 1 128 36
 1101 004a 3B88     		ldrh	r3, [r7]
 1102              		.loc 1 128 12
 1103 004c 9A42     		cmp	r2, r3
 1104 004e C0F00581 		bcc	.L86
 1105              		.loc 1 128 45 discriminator 1
 1106 0052 3B88     		ldrh	r3, [r7]
 1107 0054 002B     		cmp	r3, #0
 1108 0056 00F00181 		beq	.L86
 129:Core/Src/Functions.c ****         {
 130:Core/Src/Functions.c ****             isRunning = true;
 1109              		.loc 1 130 23
 1110 005a 874B     		ldr	r3, .L90+16
 1111 005c 0122     		movs	r2, #1
 1112 005e 1A70     		strb	r2, [r3]
 131:Core/Src/Functions.c ****             if (dif < 0)
 1113              		.loc 1 131 16
 1114 0060 4FF00002 		mov	r2, #0
 1115 0064 4FF00003 		mov	r3, #0
 1116 0068 D7E90201 		ldrd	r0, [r7, #8]
 1117 006c FFF7FEFF 		bl	__aeabi_dcmplt
 1118 0070 0346     		mov	r3, r0
 1119 0072 002B     		cmp	r3, #0
 1120 0074 75D0     		beq	.L85
 132:Core/Src/Functions.c ****             {
 133:Core/Src/Functions.c ****                 switch (axis)
 1121              		.loc 1 133 17
 1122 0076 7B88     		ldrh	r3, [r7, #2]
 1123 0078 022B     		cmp	r3, #2
 1124 007a 07D0     		beq	.L73
 1125 007c 022B     		cmp	r3, #2
 1126 007e 00F3E580 		bgt	.L87
 1127 0082 002B     		cmp	r3, #0
 1128 0084 1FD0     		beq	.L75
 1129 0086 012B     		cmp	r3, #1
 1130 0088 44D0     		beq	.L76
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 23


 134:Core/Src/Functions.c ****                 {
 135:Core/Src/Functions.c ****                 case E_AXIS:
 136:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(E_AXIS_DIR, COUNTERCLOCKWISE);
 137:Core/Src/Functions.c ****                     Cur_E -= E_MM_PER_REV / STEPS_PER_REV;
 138:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(E_AXIS_STEP);
 139:Core/Src/Functions.c ****                     last_time_E = GetTicks();
 140:Core/Src/Functions.c ****                     break;
 141:Core/Src/Functions.c ****                 case X_AXIS:
 142:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(X_AXIS_DIR, CLOCKWISE);
 143:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(Y_AXIS_DIR, CLOCKWISE);
 144:Core/Src/Functions.c ****                     Cur_X -= XY_MM_PER_REV / XY_STEPS_PER_REV;
 145:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(X_AXIS_STEP);
 146:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(Y_AXIS_STEP);
 147:Core/Src/Functions.c ****                     last_time_X = GetTicks();
 148:Core/Src/Functions.c ****                     break;
 149:Core/Src/Functions.c ****                 case Y_AXIS:
 150:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(X_AXIS_DIR, CLOCKWISE);
 151:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(Y_AXIS_DIR, COUNTERCLOCKWISE);
 152:Core/Src/Functions.c ****                     Cur_Y -= XY_MM_PER_REV / XY_STEPS_PER_REV;
 153:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(X_AXIS_STEP);
 154:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(Y_AXIS_STEP);
 155:Core/Src/Functions.c ****                     last_time_Y = GetTicks();
 156:Core/Src/Functions.c ****                     break;
 157:Core/Src/Functions.c ****                 default:
 158:Core/Src/Functions.c ****                     break;
 1131              		.loc 1 158 21
 1132 008a DFE0     		b	.L87
 1133              	.L73:
 136:Core/Src/Functions.c ****                     Cur_E -= E_MM_PER_REV / STEPS_PER_REV;
 1134              		.loc 1 136 21
 1135 008c 0122     		movs	r2, #1
 1136 008e 0821     		movs	r1, #8
 1137 0090 7A48     		ldr	r0, .L90+20
 1138 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 137:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(E_AXIS_STEP);
 1139              		.loc 1 137 27
 1140 0096 7A4B     		ldr	r3, .L90+24
 1141 0098 D3E90001 		ldrd	r0, [r3]
 1142 009c 72A3     		adr	r3, .L90
 1143 009e D3E90023 		ldrd	r2, [r3]
 1144 00a2 FFF7FEFF 		bl	__aeabi_dsub
 1145 00a6 0246     		mov	r2, r0
 1146 00a8 0B46     		mov	r3, r1
 1147 00aa 7549     		ldr	r1, .L90+24
 1148 00ac C1E90023 		strd	r2, [r1]
 138:Core/Src/Functions.c ****                     last_time_E = GetTicks();
 1149              		.loc 1 138 21
 1150 00b0 0121     		movs	r1, #1
 1151 00b2 7448     		ldr	r0, .L90+28
 1152 00b4 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 139:Core/Src/Functions.c ****                     break;
 1153              		.loc 1 139 35
 1154 00b8 FFF7FEFF 		bl	GetTicks
 1155 00bc 0346     		mov	r3, r0
 1156 00be 1A46     		mov	r2, r3
 139:Core/Src/Functions.c ****                     break;
 1157              		.loc 1 139 33
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 24


 1158 00c0 714B     		ldr	r3, .L90+32
 1159 00c2 1A60     		str	r2, [r3]
 140:Core/Src/Functions.c ****                 case X_AXIS:
 1160              		.loc 1 140 21
 1161 00c4 C5E0     		b	.L70
 1162              	.L75:
 142:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(Y_AXIS_DIR, CLOCKWISE);
 1163              		.loc 1 142 21
 1164 00c6 0022     		movs	r2, #0
 1165 00c8 0221     		movs	r1, #2
 1166 00ca 6C48     		ldr	r0, .L90+20
 1167 00cc FFF7FEFF 		bl	HAL_GPIO_WritePin
 143:Core/Src/Functions.c ****                     Cur_X -= XY_MM_PER_REV / XY_STEPS_PER_REV;
 1168              		.loc 1 143 21
 1169 00d0 0022     		movs	r2, #0
 1170 00d2 0421     		movs	r1, #4
 1171 00d4 6948     		ldr	r0, .L90+20
 1172 00d6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 144:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(X_AXIS_STEP);
 1173              		.loc 1 144 27
 1174 00da 6C4B     		ldr	r3, .L90+36
 1175 00dc D3E90001 		ldrd	r0, [r3]
 1176 00e0 63A3     		adr	r3, .L90+8
 1177 00e2 D3E90023 		ldrd	r2, [r3]
 1178 00e6 FFF7FEFF 		bl	__aeabi_dsub
 1179 00ea 0246     		mov	r2, r0
 1180 00ec 0B46     		mov	r3, r1
 1181 00ee 6749     		ldr	r1, .L90+36
 1182 00f0 C1E90023 		strd	r2, [r1]
 145:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(Y_AXIS_STEP);
 1183              		.loc 1 145 21
 1184 00f4 4021     		movs	r1, #64
 1185 00f6 6648     		ldr	r0, .L90+40
 1186 00f8 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 146:Core/Src/Functions.c ****                     last_time_X = GetTicks();
 1187              		.loc 1 146 21
 1188 00fc 8021     		movs	r1, #128
 1189 00fe 4FF09040 		mov	r0, #1207959552
 1190 0102 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 147:Core/Src/Functions.c ****                     break;
 1191              		.loc 1 147 35
 1192 0106 FFF7FEFF 		bl	GetTicks
 1193 010a 0346     		mov	r3, r0
 1194 010c 1A46     		mov	r2, r3
 147:Core/Src/Functions.c ****                     break;
 1195              		.loc 1 147 33
 1196 010e 614B     		ldr	r3, .L90+44
 1197 0110 1A60     		str	r2, [r3]
 148:Core/Src/Functions.c ****                 case Y_AXIS:
 1198              		.loc 1 148 21
 1199 0112 9EE0     		b	.L70
 1200              	.L76:
 150:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(Y_AXIS_DIR, COUNTERCLOCKWISE);
 1201              		.loc 1 150 21
 1202 0114 0022     		movs	r2, #0
 1203 0116 0221     		movs	r1, #2
 1204 0118 5848     		ldr	r0, .L90+20
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 25


 1205 011a FFF7FEFF 		bl	HAL_GPIO_WritePin
 151:Core/Src/Functions.c ****                     Cur_Y -= XY_MM_PER_REV / XY_STEPS_PER_REV;
 1206              		.loc 1 151 21
 1207 011e 0122     		movs	r2, #1
 1208 0120 0421     		movs	r1, #4
 1209 0122 5648     		ldr	r0, .L90+20
 1210 0124 FFF7FEFF 		bl	HAL_GPIO_WritePin
 152:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(X_AXIS_STEP);
 1211              		.loc 1 152 27
 1212 0128 5B4B     		ldr	r3, .L90+48
 1213 012a D3E90001 		ldrd	r0, [r3]
 1214 012e 50A3     		adr	r3, .L90+8
 1215 0130 D3E90023 		ldrd	r2, [r3]
 1216 0134 FFF7FEFF 		bl	__aeabi_dsub
 1217 0138 0246     		mov	r2, r0
 1218 013a 0B46     		mov	r3, r1
 1219 013c 5649     		ldr	r1, .L90+48
 1220 013e C1E90023 		strd	r2, [r1]
 153:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(Y_AXIS_STEP);
 1221              		.loc 1 153 21
 1222 0142 4021     		movs	r1, #64
 1223 0144 5248     		ldr	r0, .L90+40
 1224 0146 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 154:Core/Src/Functions.c ****                     last_time_Y = GetTicks();
 1225              		.loc 1 154 21
 1226 014a 8021     		movs	r1, #128
 1227 014c 4FF09040 		mov	r0, #1207959552
 1228 0150 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 155:Core/Src/Functions.c ****                     break;
 1229              		.loc 1 155 35
 1230 0154 FFF7FEFF 		bl	GetTicks
 1231 0158 0346     		mov	r3, r0
 1232 015a 1A46     		mov	r2, r3
 155:Core/Src/Functions.c ****                     break;
 1233              		.loc 1 155 33
 1234 015c 4F4B     		ldr	r3, .L90+52
 1235 015e 1A60     		str	r2, [r3]
 156:Core/Src/Functions.c ****                 default:
 1236              		.loc 1 156 21
 1237 0160 77E0     		b	.L70
 1238              	.L85:
 159:Core/Src/Functions.c ****                 }
 160:Core/Src/Functions.c ****             }
 161:Core/Src/Functions.c ****             else
 162:Core/Src/Functions.c ****             {
 163:Core/Src/Functions.c ****                 switch (axis)
 1239              		.loc 1 163 17
 1240 0162 7B88     		ldrh	r3, [r7, #2]
 1241 0164 022B     		cmp	r3, #2
 1242 0166 06D0     		beq	.L78
 1243 0168 022B     		cmp	r3, #2
 1244 016a 71DC     		bgt	.L88
 1245 016c 002B     		cmp	r3, #0
 1246 016e 1FD0     		beq	.L80
 1247 0170 012B     		cmp	r3, #1
 1248 0172 44D0     		beq	.L81
 164:Core/Src/Functions.c ****                 {
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 26


 165:Core/Src/Functions.c ****                 case E_AXIS:
 166:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(E_AXIS_DIR, CLOCKWISE);
 167:Core/Src/Functions.c ****                     Cur_E += E_MM_PER_REV / STEPS_PER_REV;
 168:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(E_AXIS_STEP);
 169:Core/Src/Functions.c ****                     last_time_E = GetTicks();
 170:Core/Src/Functions.c ****                     break;
 171:Core/Src/Functions.c ****                 case X_AXIS:
 172:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(X_AXIS_DIR, COUNTERCLOCKWISE);
 173:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(Y_AXIS_DIR, COUNTERCLOCKWISE);
 174:Core/Src/Functions.c ****                     Cur_X += XY_MM_PER_REV / XY_STEPS_PER_REV;
 175:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(X_AXIS_STEP);
 176:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(Y_AXIS_STEP);
 177:Core/Src/Functions.c ****                     last_time_X = GetTicks();
 178:Core/Src/Functions.c ****                     break;
 179:Core/Src/Functions.c ****                 case Y_AXIS:
 180:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(X_AXIS_DIR, COUNTERCLOCKWISE);
 181:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(Y_AXIS_DIR, CLOCKWISE);
 182:Core/Src/Functions.c ****                     Cur_Y += XY_MM_PER_REV / XY_STEPS_PER_REV;
 183:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(X_AXIS_STEP);
 184:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(Y_AXIS_STEP);
 185:Core/Src/Functions.c ****                     last_time_Y = GetTicks();
 186:Core/Src/Functions.c ****                     break;
 187:Core/Src/Functions.c ****                 default:
 188:Core/Src/Functions.c ****                     break;
 1249              		.loc 1 188 21
 1250 0174 6CE0     		b	.L88
 1251              	.L78:
 166:Core/Src/Functions.c ****                     Cur_E += E_MM_PER_REV / STEPS_PER_REV;
 1252              		.loc 1 166 21
 1253 0176 0022     		movs	r2, #0
 1254 0178 0821     		movs	r1, #8
 1255 017a 4048     		ldr	r0, .L90+20
 1256 017c FFF7FEFF 		bl	HAL_GPIO_WritePin
 167:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(E_AXIS_STEP);
 1257              		.loc 1 167 27
 1258 0180 3F4B     		ldr	r3, .L90+24
 1259 0182 D3E90001 		ldrd	r0, [r3]
 1260 0186 38A3     		adr	r3, .L90
 1261 0188 D3E90023 		ldrd	r2, [r3]
 1262 018c FFF7FEFF 		bl	__aeabi_dadd
 1263 0190 0246     		mov	r2, r0
 1264 0192 0B46     		mov	r3, r1
 1265 0194 3A49     		ldr	r1, .L90+24
 1266 0196 C1E90023 		strd	r2, [r1]
 168:Core/Src/Functions.c ****                     last_time_E = GetTicks();
 1267              		.loc 1 168 21
 1268 019a 0121     		movs	r1, #1
 1269 019c 3948     		ldr	r0, .L90+28
 1270 019e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 169:Core/Src/Functions.c ****                     break;
 1271              		.loc 1 169 35
 1272 01a2 FFF7FEFF 		bl	GetTicks
 1273 01a6 0346     		mov	r3, r0
 1274 01a8 1A46     		mov	r2, r3
 169:Core/Src/Functions.c ****                     break;
 1275              		.loc 1 169 33
 1276 01aa 374B     		ldr	r3, .L90+32
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 27


 1277 01ac 1A60     		str	r2, [r3]
 170:Core/Src/Functions.c ****                 case X_AXIS:
 1278              		.loc 1 170 21
 1279 01ae 50E0     		b	.L70
 1280              	.L80:
 172:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(Y_AXIS_DIR, COUNTERCLOCKWISE);
 1281              		.loc 1 172 21
 1282 01b0 0122     		movs	r2, #1
 1283 01b2 0221     		movs	r1, #2
 1284 01b4 3148     		ldr	r0, .L90+20
 1285 01b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 173:Core/Src/Functions.c ****                     Cur_X += XY_MM_PER_REV / XY_STEPS_PER_REV;
 1286              		.loc 1 173 21
 1287 01ba 0122     		movs	r2, #1
 1288 01bc 0421     		movs	r1, #4
 1289 01be 2F48     		ldr	r0, .L90+20
 1290 01c0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 174:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(X_AXIS_STEP);
 1291              		.loc 1 174 27
 1292 01c4 314B     		ldr	r3, .L90+36
 1293 01c6 D3E90001 		ldrd	r0, [r3]
 1294 01ca 29A3     		adr	r3, .L90+8
 1295 01cc D3E90023 		ldrd	r2, [r3]
 1296 01d0 FFF7FEFF 		bl	__aeabi_dadd
 1297 01d4 0246     		mov	r2, r0
 1298 01d6 0B46     		mov	r3, r1
 1299 01d8 2C49     		ldr	r1, .L90+36
 1300 01da C1E90023 		strd	r2, [r1]
 175:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(Y_AXIS_STEP);
 1301              		.loc 1 175 21
 1302 01de 4021     		movs	r1, #64
 1303 01e0 2B48     		ldr	r0, .L90+40
 1304 01e2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 176:Core/Src/Functions.c ****                     last_time_X = GetTicks();
 1305              		.loc 1 176 21
 1306 01e6 8021     		movs	r1, #128
 1307 01e8 4FF09040 		mov	r0, #1207959552
 1308 01ec FFF7FEFF 		bl	HAL_GPIO_TogglePin
 177:Core/Src/Functions.c ****                     break;
 1309              		.loc 1 177 35
 1310 01f0 FFF7FEFF 		bl	GetTicks
 1311 01f4 0346     		mov	r3, r0
 1312 01f6 1A46     		mov	r2, r3
 177:Core/Src/Functions.c ****                     break;
 1313              		.loc 1 177 33
 1314 01f8 264B     		ldr	r3, .L90+44
 1315 01fa 1A60     		str	r2, [r3]
 178:Core/Src/Functions.c ****                 case Y_AXIS:
 1316              		.loc 1 178 21
 1317 01fc 29E0     		b	.L70
 1318              	.L81:
 180:Core/Src/Functions.c ****                     CHANGE_MOTOR_DIR(Y_AXIS_DIR, CLOCKWISE);
 1319              		.loc 1 180 21
 1320 01fe 0122     		movs	r2, #1
 1321 0200 0221     		movs	r1, #2
 1322 0202 1E48     		ldr	r0, .L90+20
 1323 0204 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 28


 181:Core/Src/Functions.c ****                     Cur_Y += XY_MM_PER_REV / XY_STEPS_PER_REV;
 1324              		.loc 1 181 21
 1325 0208 0022     		movs	r2, #0
 1326 020a 0421     		movs	r1, #4
 1327 020c 1B48     		ldr	r0, .L90+20
 1328 020e FFF7FEFF 		bl	HAL_GPIO_WritePin
 182:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(X_AXIS_STEP);
 1329              		.loc 1 182 27
 1330 0212 214B     		ldr	r3, .L90+48
 1331 0214 D3E90001 		ldrd	r0, [r3]
 1332 0218 15A3     		adr	r3, .L90+8
 1333 021a D3E90023 		ldrd	r2, [r3]
 1334 021e FFF7FEFF 		bl	__aeabi_dadd
 1335 0222 0246     		mov	r2, r0
 1336 0224 0B46     		mov	r3, r1
 1337 0226 1C49     		ldr	r1, .L90+48
 1338 0228 C1E90023 		strd	r2, [r1]
 183:Core/Src/Functions.c ****                     MAKE_MOTOR_STEP(Y_AXIS_STEP);
 1339              		.loc 1 183 21
 1340 022c 4021     		movs	r1, #64
 1341 022e 1848     		ldr	r0, .L90+40
 1342 0230 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 184:Core/Src/Functions.c ****                     last_time_Y = GetTicks();
 1343              		.loc 1 184 21
 1344 0234 8021     		movs	r1, #128
 1345 0236 4FF09040 		mov	r0, #1207959552
 1346 023a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 185:Core/Src/Functions.c ****                     break;
 1347              		.loc 1 185 35
 1348 023e FFF7FEFF 		bl	GetTicks
 1349 0242 0346     		mov	r3, r0
 1350 0244 1A46     		mov	r2, r3
 185:Core/Src/Functions.c ****                     break;
 1351              		.loc 1 185 33
 1352 0246 154B     		ldr	r3, .L90+52
 1353 0248 1A60     		str	r2, [r3]
 186:Core/Src/Functions.c ****                 default:
 1354              		.loc 1 186 21
 1355 024a 02E0     		b	.L70
 1356              	.L87:
 158:Core/Src/Functions.c ****                 }
 1357              		.loc 1 158 21
 1358 024c 00BF     		nop
 1359 024e 05E0     		b	.L86
 1360              	.L88:
 1361              		.loc 1 188 21
 1362 0250 00BF     		nop
 1363              	.L70:
 128:Core/Src/Functions.c ****         {
 1364              		.loc 1 128 12 discriminator 1
 1365 0252 03E0     		b	.L86
 1366              	.L84:
 189:Core/Src/Functions.c ****                 }
 190:Core/Src/Functions.c ****             }
 191:Core/Src/Functions.c **** 
 192:Core/Src/Functions.c ****             // DelayMicrosecond(speed);
 193:Core/Src/Functions.c ****         }
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 29


 194:Core/Src/Functions.c ****     }
 195:Core/Src/Functions.c ****     else
 196:Core/Src/Functions.c ****     {
 197:Core/Src/Functions.c ****         isRunning = false;
 1367              		.loc 1 197 19
 1368 0254 084B     		ldr	r3, .L90+16
 1369 0256 0022     		movs	r2, #0
 1370 0258 1A70     		strb	r2, [r3]
 198:Core/Src/Functions.c ****     }
 199:Core/Src/Functions.c **** }
 1371              		.loc 1 199 1
 1372 025a 00E0     		b	.L89
 1373              	.L86:
 128:Core/Src/Functions.c ****         {
 1374              		.loc 1 128 12
 1375 025c 00BF     		nop
 1376              	.L89:
 1377              		.loc 1 199 1
 1378 025e 00BF     		nop
 1379 0260 1037     		adds	r7, r7, #16
 1380              		.cfi_def_cfa_offset 8
 1381 0262 BD46     		mov	sp, r7
 1382              		.cfi_def_cfa_register 13
 1383              		@ sp needed
 1384 0264 80BD     		pop	{r7, pc}
 1385              	.L91:
 1386 0266 00BF     		.align	3
 1387              	.L90:
 1388 0268 000000A0 		.word	-1610612736
 1389 026c D091533F 		.word	1062441424
 1390 0270 00000060 		.word	1610612736
 1391 0274 CBC6853F 		.word	1065731787
 1392 0278 00000000 		.word	isRunning
 1393 027c 00140048 		.word	1207964672
 1394 0280 00000000 		.word	Cur_E
 1395 0284 00040048 		.word	1207960576
 1396 0288 00000000 		.word	last_time_E
 1397 028c 00000000 		.word	Cur_X
 1398 0290 00080048 		.word	1207961600
 1399 0294 00000000 		.word	last_time_X
 1400 0298 00000000 		.word	Cur_Y
 1401 029c 00000000 		.word	last_time_Y
 1402 02a0 FA7E6ABC 		.word	-1133871366
 1403 02a4 7493883F 		.word	1065915252
 1404 02a8 FA7E6ABC 		.word	-1133871366
 1405 02ac 749388BF 		.word	-1081568396
 1406              		.cfi_endproc
 1407              	.LFE327:
 1409              		.section	.text.MoveAndWait,"ax",%progbits
 1410              		.align	1
 1411              		.global	MoveAndWait
 1412              		.syntax unified
 1413              		.thumb
 1414              		.thumb_func
 1416              	MoveAndWait:
 1417              	.LFB328:
 200:Core/Src/Functions.c **** 
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 30


 201:Core/Src/Functions.c **** void MoveAndWait(uint16_t state, uint16_t speed, uint16_t axis, uint16_t dir_X, uint16_t dir_Y)
 202:Core/Src/Functions.c **** {
 1418              		.loc 1 202 1
 1419              		.cfi_startproc
 1420              		@ args = 4, pretend = 0, frame = 8
 1421              		@ frame_needed = 1, uses_anonymous_args = 0
 1422 0000 90B5     		push	{r4, r7, lr}
 1423              		.cfi_def_cfa_offset 12
 1424              		.cfi_offset 4, -12
 1425              		.cfi_offset 7, -8
 1426              		.cfi_offset 14, -4
 1427 0002 83B0     		sub	sp, sp, #12
 1428              		.cfi_def_cfa_offset 24
 1429 0004 00AF     		add	r7, sp, #0
 1430              		.cfi_def_cfa_register 7
 1431 0006 0446     		mov	r4, r0
 1432 0008 0846     		mov	r0, r1
 1433 000a 1146     		mov	r1, r2
 1434 000c 1A46     		mov	r2, r3
 1435 000e 2346     		mov	r3, r4	@ movhi
 1436 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 1437 0012 0346     		mov	r3, r0	@ movhi
 1438 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 1439 0016 0B46     		mov	r3, r1	@ movhi
 1440 0018 7B80     		strh	r3, [r7, #2]	@ movhi
 1441 001a 1346     		mov	r3, r2	@ movhi
 1442 001c 3B80     		strh	r3, [r7]	@ movhi
 203:Core/Src/Functions.c ****     switch (axis)
 1443              		.loc 1 203 5
 1444 001e 7B88     		ldrh	r3, [r7, #2]
 1445 0020 002B     		cmp	r3, #0
 1446 0022 02D0     		beq	.L93
 1447 0024 012B     		cmp	r3, #1
 1448 0026 26D0     		beq	.L94
 204:Core/Src/Functions.c ****     {
 205:Core/Src/Functions.c ****     case X_AXIS:
 206:Core/Src/Functions.c ****         CHANGE_MOTOR_DIR(X_AXIS_DIR, dir_X);
 207:Core/Src/Functions.c ****         CHANGE_MOTOR_DIR(Y_AXIS_DIR, dir_Y);
 208:Core/Src/Functions.c ****         while (READ_PIN(X_STOP_PIN) != state)
 209:Core/Src/Functions.c ****         {
 210:Core/Src/Functions.c ****             MAKE_MOTOR_STEP(X_AXIS_STEP);
 211:Core/Src/Functions.c ****             MAKE_MOTOR_STEP(Y_AXIS_STEP);
 212:Core/Src/Functions.c ****             DelayMicrosecond(speed);
 213:Core/Src/Functions.c ****         }
 214:Core/Src/Functions.c ****         break;
 215:Core/Src/Functions.c ****     case Y_AXIS:
 216:Core/Src/Functions.c ****         CHANGE_MOTOR_DIR(X_AXIS_DIR, dir_X);
 217:Core/Src/Functions.c ****         CHANGE_MOTOR_DIR(Y_AXIS_DIR, dir_Y);
 218:Core/Src/Functions.c ****         while (READ_PIN(Y_STOP_PIN) != state)
 219:Core/Src/Functions.c ****         {
 220:Core/Src/Functions.c ****             MAKE_MOTOR_STEP(X_AXIS_STEP);
 221:Core/Src/Functions.c ****             MAKE_MOTOR_STEP(Y_AXIS_STEP);
 222:Core/Src/Functions.c ****             DelayMicrosecond(speed);
 223:Core/Src/Functions.c ****         }
 224:Core/Src/Functions.c ****         break;
 225:Core/Src/Functions.c ****     }
 226:Core/Src/Functions.c **** }
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 31


 1449              		.loc 1 226 1
 1450 0028 4BE0     		b	.L100
 1451              	.L93:
 206:Core/Src/Functions.c ****         CHANGE_MOTOR_DIR(Y_AXIS_DIR, dir_Y);
 1452              		.loc 1 206 9
 1453 002a 3B88     		ldrh	r3, [r7]	@ movhi
 1454 002c DBB2     		uxtb	r3, r3
 1455 002e 1A46     		mov	r2, r3
 1456 0030 0221     		movs	r1, #2
 1457 0032 2648     		ldr	r0, .L101
 1458 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 207:Core/Src/Functions.c ****         while (READ_PIN(X_STOP_PIN) != state)
 1459              		.loc 1 207 9
 1460 0038 3B8B     		ldrh	r3, [r7, #24]	@ movhi
 1461 003a DBB2     		uxtb	r3, r3
 1462 003c 1A46     		mov	r2, r3
 1463 003e 0421     		movs	r1, #4
 1464 0040 2248     		ldr	r0, .L101
 1465 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
 208:Core/Src/Functions.c ****         {
 1466              		.loc 1 208 15
 1467 0046 0CE0     		b	.L96
 1468              	.L97:
 210:Core/Src/Functions.c ****             MAKE_MOTOR_STEP(Y_AXIS_STEP);
 1469              		.loc 1 210 13
 1470 0048 4021     		movs	r1, #64
 1471 004a 2148     		ldr	r0, .L101+4
 1472 004c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 211:Core/Src/Functions.c ****             DelayMicrosecond(speed);
 1473              		.loc 1 211 13
 1474 0050 8021     		movs	r1, #128
 1475 0052 4FF09040 		mov	r0, #1207959552
 1476 0056 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 212:Core/Src/Functions.c ****         }
 1477              		.loc 1 212 13
 1478 005a BB88     		ldrh	r3, [r7, #4]
 1479 005c 1846     		mov	r0, r3
 1480 005e FFF7FEFF 		bl	DelayMicrosecond
 1481              	.L96:
 208:Core/Src/Functions.c ****         {
 1482              		.loc 1 208 16
 1483 0062 1021     		movs	r1, #16
 1484 0064 1948     		ldr	r0, .L101
 1485 0066 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1486 006a 0346     		mov	r3, r0
 1487 006c 9BB2     		uxth	r3, r3
 208:Core/Src/Functions.c ****         {
 1488              		.loc 1 208 37
 1489 006e FA88     		ldrh	r2, [r7, #6]
 1490 0070 9A42     		cmp	r2, r3
 1491 0072 E9D1     		bne	.L97
 214:Core/Src/Functions.c ****     case Y_AXIS:
 1492              		.loc 1 214 9
 1493 0074 25E0     		b	.L95
 1494              	.L94:
 216:Core/Src/Functions.c ****         CHANGE_MOTOR_DIR(Y_AXIS_DIR, dir_Y);
 1495              		.loc 1 216 9
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 32


 1496 0076 3B88     		ldrh	r3, [r7]	@ movhi
 1497 0078 DBB2     		uxtb	r3, r3
 1498 007a 1A46     		mov	r2, r3
 1499 007c 0221     		movs	r1, #2
 1500 007e 1348     		ldr	r0, .L101
 1501 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 217:Core/Src/Functions.c ****         while (READ_PIN(Y_STOP_PIN) != state)
 1502              		.loc 1 217 9
 1503 0084 3B8B     		ldrh	r3, [r7, #24]	@ movhi
 1504 0086 DBB2     		uxtb	r3, r3
 1505 0088 1A46     		mov	r2, r3
 1506 008a 0421     		movs	r1, #4
 1507 008c 0F48     		ldr	r0, .L101
 1508 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 218:Core/Src/Functions.c ****         {
 1509              		.loc 1 218 15
 1510 0092 0CE0     		b	.L98
 1511              	.L99:
 220:Core/Src/Functions.c ****             MAKE_MOTOR_STEP(Y_AXIS_STEP);
 1512              		.loc 1 220 13
 1513 0094 4021     		movs	r1, #64
 1514 0096 0E48     		ldr	r0, .L101+4
 1515 0098 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 221:Core/Src/Functions.c ****             DelayMicrosecond(speed);
 1516              		.loc 1 221 13
 1517 009c 8021     		movs	r1, #128
 1518 009e 4FF09040 		mov	r0, #1207959552
 1519 00a2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 222:Core/Src/Functions.c ****         }
 1520              		.loc 1 222 13
 1521 00a6 BB88     		ldrh	r3, [r7, #4]
 1522 00a8 1846     		mov	r0, r3
 1523 00aa FFF7FEFF 		bl	DelayMicrosecond
 1524              	.L98:
 218:Core/Src/Functions.c ****         {
 1525              		.loc 1 218 16
 1526 00ae 2021     		movs	r1, #32
 1527 00b0 0648     		ldr	r0, .L101
 1528 00b2 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1529 00b6 0346     		mov	r3, r0
 1530 00b8 9BB2     		uxth	r3, r3
 218:Core/Src/Functions.c ****         {
 1531              		.loc 1 218 37
 1532 00ba FA88     		ldrh	r2, [r7, #6]
 1533 00bc 9A42     		cmp	r2, r3
 1534 00be E9D1     		bne	.L99
 224:Core/Src/Functions.c ****     }
 1535              		.loc 1 224 9
 1536 00c0 00BF     		nop
 1537              	.L95:
 1538              	.L100:
 1539              		.loc 1 226 1
 1540 00c2 00BF     		nop
 1541 00c4 0C37     		adds	r7, r7, #12
 1542              		.cfi_def_cfa_offset 12
 1543 00c6 BD46     		mov	sp, r7
 1544              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 33


 1545              		@ sp needed
 1546 00c8 90BD     		pop	{r4, r7, pc}
 1547              	.L102:
 1548 00ca 00BF     		.align	2
 1549              	.L101:
 1550 00cc 00140048 		.word	1207964672
 1551 00d0 00080048 		.word	1207961600
 1552              		.cfi_endproc
 1553              	.LFE328:
 1555              		.text
 1556              	.Letext0:
 1557              		.file 2 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 1558              		.file 3 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 1559              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4p5xx.h"
 1560              		.file 5 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 1561              		.file 6 "Core/Inc/GCodes.h"
 1562              		.file 7 "Core/Inc/main.h"
 1563              		.file 8 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 1564              		.file 9 "Core/Inc/Parser.h"
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Functions.c
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:20     .bss.msg_buffer:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:23     .bss.msg_buffer:0000000000000000 msg_buffer
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:26     .bss.RxBuf:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:29     .bss.RxBuf:0000000000000000 RxBuf
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:32     .text.SelectDriver:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:38     .text.SelectDriver:0000000000000000 SelectDriver
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:63     .text.SelectDriver:0000000000000018 $d
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:67     .text.SelectDriver:0000000000000028 $t
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:133    .text.SelectDriver:0000000000000088 $d
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:143    .text.GetTemperature:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:149    .text.GetTemperature:0000000000000000 GetTemperature
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:317    .text.GetTemperature:0000000000000158 $d
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:343    .text.SetHeating:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:349    .text.SetHeating:0000000000000000 SetHeating
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:394    .text.SetHeating:000000000000002c $d
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:399    .text.SetFanSpeed:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:405    .text.SetFanSpeed:0000000000000000 SetFanSpeed
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:450    .text.SetFanSpeed:000000000000002c $d
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:455    .text.Move45:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:461    .text.Move45:0000000000000000 Move45
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:514    .text.Move45:0000000000000048 $d
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:526    .text.MoveXY:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:532    .text.MoveXY:0000000000000000 MoveXY
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:852    .text.MoveXY:00000000000002a8 $d
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:871    .text.MoveXY:00000000000002ec $t
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:1030   .text.MoveXY:0000000000000430 $d
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:1050   .text.Move:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:1056   .text.Move:0000000000000000 Move
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:1388   .text.Move:0000000000000268 $d
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:1410   .text.MoveAndWait:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:1416   .text.MoveAndWait:0000000000000000 MoveAndWait
C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s:1550   .text.MoveAndWait:00000000000000cc $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
__aeabi_i2d
__aeabi_dmul
__aeabi_dsub
__aeabi_ddiv
__aeabi_dadd
log
pow
GetTicks
HAL_GPIO_TogglePin
last_time_X
g50_steps
__aeabi_dcmpgt
__aeabi_d2uiz
__aeabi_dcmplt
__aeabi_ui2d
F
last_tick_A
last_tick_B
last_tick_AB
Cur_X
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccKJNJHv.s 			page 35


Cur_Y
__aeabi_dcmpge
__aeabi_dcmple
isRunning
Cur_E
last_time_E
last_time_Y
DelayMicrosecond
HAL_GPIO_ReadPin
