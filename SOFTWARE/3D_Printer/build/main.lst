ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	hadc1
  20              		.section	.bss.hadc1,"aw",%nobits
  21              		.align	2
  24              	hadc1:
  25 0000 00000000 		.space	104
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.global	hdma_adc1
  27              		.section	.bss.hdma_adc1,"aw",%nobits
  28              		.align	2
  31              	hdma_adc1:
  32 0000 00000000 		.space	96
  32      00000000 
  32      00000000 
  32      00000000 
  32      00000000 
  33              		.global	hlpuart1
  34              		.section	.bss.hlpuart1,"aw",%nobits
  35              		.align	2
  38              	hlpuart1:
  39 0000 00000000 		.space	144
  39      00000000 
  39      00000000 
  39      00000000 
  39      00000000 
  40              		.global	huart4
  41              		.section	.bss.huart4,"aw",%nobits
  42              		.align	2
  45              	huart4:
  46 0000 00000000 		.space	144
  46      00000000 
  46      00000000 
  46      00000000 
  46      00000000 
  47              		.global	hdma_lpuart1_rx
  48              		.section	.bss.hdma_lpuart1_rx,"aw",%nobits
  49              		.align	2
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 2


  52              	hdma_lpuart1_rx:
  53 0000 00000000 		.space	96
  53      00000000 
  53      00000000 
  53      00000000 
  53      00000000 
  54              		.global	htim3
  55              		.section	.bss.htim3,"aw",%nobits
  56              		.align	2
  59              	htim3:
  60 0000 00000000 		.space	76
  60      00000000 
  60      00000000 
  60      00000000 
  60      00000000 
  61              		.global	htim4
  62              		.section	.bss.htim4,"aw",%nobits
  63              		.align	2
  66              	htim4:
  67 0000 00000000 		.space	76
  67      00000000 
  67      00000000 
  67      00000000 
  67      00000000 
  68              		.global	htim5
  69              		.section	.bss.htim5,"aw",%nobits
  70              		.align	2
  73              	htim5:
  74 0000 00000000 		.space	76
  74      00000000 
  74      00000000 
  74      00000000 
  74      00000000 
  75              		.global	hpcd_USB_OTG_FS
  76              		.section	.bss.hpcd_USB_OTG_FS,"aw",%nobits
  77              		.align	2
  80              	hpcd_USB_OTG_FS:
  81 0000 00000000 		.space	1292
  81      00000000 
  81      00000000 
  81      00000000 
  81      00000000 
  82              		.global	step
  83              		.section	.bss.step,"aw",%nobits
  84              		.align	1
  87              	step:
  88 0000 0000     		.space	2
  89              		.global	last_time
  90              		.section	.bss.last_time,"aw",%nobits
  91              		.align	2
  94              	last_time:
  95 0000 00000000 		.space	4
  96              		.global	value
  97              		.section	.bss.value,"aw",%nobits
  98              		.align	2
 101              	value:
 102 0000 00000000 		.space	12
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 3


 102      00000000 
 102      00000000 
 103              		.global	reader
 104              		.section	.bss.reader,"aw",%nobits
 105              		.align	3
 108              	reader:
 109 0000 00000000 		.space	168
 109      00000000 
 109      00000000 
 109      00000000 
 109      00000000 
 110              		.global	current_cmd
 111              		.section	.bss.current_cmd,"aw",%nobits
 112              		.align	3
 115              	current_cmd:
 116 0000 00000000 		.space	168
 116      00000000 
 116      00000000 
 116      00000000 
 116      00000000 
 117              		.global	state
 118              		.section	.bss.state,"aw",%nobits
 119              		.align	2
 122              	state:
 123 0000 00000000 		.space	4
 124              		.global	rx_buff
 125              		.section	.bss.rx_buff,"aw",%nobits
 126              		.align	2
 129              	rx_buff:
 130 0000 00000000 		.space	64
 130      00000000 
 130      00000000 
 130      00000000 
 130      00000000 
 131              		.global	gcode_buff
 132              		.section	.bss.gcode_buff,"aw",%nobits
 133              		.align	2
 136              	gcode_buff:
 137 0000 00000000 		.space	64
 137      00000000 
 137      00000000 
 137      00000000 
 137      00000000 
 138              		.global	is_done
 139              		.section	.bss.is_done,"aw",%nobits
 140              		.align	2
 143              	is_done:
 144 0000 00000000 		.space	4
 145              		.section	.rodata
 146              		.align	2
 147              	.LC0:
 148 0000 65727200 		.ascii	"err\000"
 149              		.align	2
 150              	.LC1:
 151 0004 6F6B6B00 		.ascii	"okk\000"
 152              		.align	2
 153              	.LC2:
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 4


 154 0008 72647900 		.ascii	"rdy\000"
 155              		.align	2
 156              	.LC3:
 157 000c 62737900 		.ascii	"bsy\000"
 158              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 159              		.align	1
 160              		.global	HAL_UARTEx_RxEventCallback
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 165              	HAL_UARTEx_RxEventCallback:
 166              	.LFB325:
 167              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** /* USER CODE END Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PD */
  33:Core/Src/main.c **** /* USER CODE END PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PM */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  41:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  42:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** UART_HandleTypeDef hlpuart1;
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 5


  45:Core/Src/main.c **** UART_HandleTypeDef huart4;
  46:Core/Src/main.c **** DMA_HandleTypeDef hdma_lpuart1_rx;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  49:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  50:Core/Src/main.c **** TIM_HandleTypeDef htim5;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** PCD_HandleTypeDef hpcd_USB_OTG_FS;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE BEGIN PV */
  55:Core/Src/main.c **** uint16_t step = 0;
  56:Core/Src/main.c **** uint32_t last_time = 0;
  57:Core/Src/main.c **** uint32_t value[ADC_CHANNELS];
  58:Core/Src/main.c **** gc_reader reader;
  59:Core/Src/main.c **** gc_reader current_cmd;
  60:Core/Src/main.c **** int state = 0;
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** uint8_t rx_buff[GCODE_BUFF_SIZE];
  63:Core/Src/main.c **** uint8_t gcode_buff[GCODE_BUFF_SIZE];
  64:Core/Src/main.c **** int is_done = 0;
  65:Core/Src/main.c **** /* USER CODE END PV */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  68:Core/Src/main.c **** void SystemClock_Config(void);
  69:Core/Src/main.c **** static void MX_GPIO_Init(void);
  70:Core/Src/main.c **** static void MX_DMA_Init(void);
  71:Core/Src/main.c **** static void MX_LPUART1_UART_Init(void);
  72:Core/Src/main.c **** static void MX_USB_OTG_FS_PCD_Init(void);
  73:Core/Src/main.c **** static void MX_TIM4_Init(void);
  74:Core/Src/main.c **** static void MX_UART4_Init(void);
  75:Core/Src/main.c **** static void MX_TIM3_Init(void);
  76:Core/Src/main.c **** static void MX_ADC1_Init(void);
  77:Core/Src/main.c **** static void MX_TIM5_Init(void);
  78:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  79:Core/Src/main.c **** /* USER CODE END PFP */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  82:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** HAL_StatusTypeDef transmit_resp_code(uint8_t *code, uint8_t *comment);
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
  87:Core/Src/main.c **** {
 168              		.loc 1 87 1
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 32
 171              		@ frame_needed = 1, uses_anonymous_args = 0
 172 0000 80B5     		push	{r7, lr}
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 7, -8
 175              		.cfi_offset 14, -4
 176 0002 88B0     		sub	sp, sp, #32
 177              		.cfi_def_cfa_offset 40
 178 0004 00AF     		add	r7, sp, #0
 179              		.cfi_def_cfa_register 7
 180 0006 7860     		str	r0, [r7, #4]
 181 0008 0B46     		mov	r3, r1
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 6


 182 000a 7B80     		strh	r3, [r7, #2]	@ movhi
  88:Core/Src/main.c ****   if (huart->Instance == LPUART1)
 183              		.loc 1 88 12
 184 000c 7B68     		ldr	r3, [r7, #4]
 185 000e 1B68     		ldr	r3, [r3]
 186              		.loc 1 88 6
 187 0010 3A4A     		ldr	r2, .L10
 188 0012 9342     		cmp	r3, r2
 189 0014 60D1     		bne	.L2
  89:Core/Src/main.c ****   {
  90:Core/Src/main.c ****     memcpy(gcode_buff, rx_buff, Size);
 190              		.loc 1 90 5
 191 0016 7B88     		ldrh	r3, [r7, #2]
 192 0018 1A46     		mov	r2, r3
 193 001a 3949     		ldr	r1, .L10+4
 194 001c 3948     		ldr	r0, .L10+8
 195 001e FFF7FEFF 		bl	memcpy
 196              	.LBB4:
  91:Core/Src/main.c ****     for(int i = 0; i < Size; i++) {
 197              		.loc 1 91 13
 198 0022 0023     		movs	r3, #0
 199 0024 FB61     		str	r3, [r7, #28]
 200              		.loc 1 91 5
 201 0026 53E0     		b	.L3
 202              	.L9:
 203              	.LBB5:
  92:Core/Src/main.c ****       int error_code = read_code(&reader, gcode_buff[i], &is_done);
 204              		.loc 1 92 53
 205 0028 364A     		ldr	r2, .L10+8
 206 002a FB69     		ldr	r3, [r7, #28]
 207 002c 1344     		add	r3, r3, r2
 208 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 209              		.loc 1 92 24
 210 0030 354A     		ldr	r2, .L10+12
 211 0032 1946     		mov	r1, r3
 212 0034 3548     		ldr	r0, .L10+16
 213 0036 FFF7FEFF 		bl	read_code
 214 003a B861     		str	r0, [r7, #24]
  93:Core/Src/main.c ****       if(error_code != GC_READER_ERROR_NOT_OCCURED) {
 215              		.loc 1 93 9
 216 003c BB69     		ldr	r3, [r7, #24]
 217 003e 002B     		cmp	r3, #0
 218 0040 0CD0     		beq	.L4
 219              	.LBB6:
  94:Core/Src/main.c ****         uint8_t error_code_str[10];
  95:Core/Src/main.c ****         transmit_resp_code(RESP_CODE_ERR, itoa(error_code, error_code_str, 10));
 220              		.loc 1 95 43
 221 0042 07F10C03 		add	r3, r7, #12
 222 0046 0A22     		movs	r2, #10
 223 0048 1946     		mov	r1, r3
 224 004a B869     		ldr	r0, [r7, #24]
 225 004c FFF7FEFF 		bl	itoa
 226 0050 0346     		mov	r3, r0
 227              		.loc 1 95 9
 228 0052 1946     		mov	r1, r3
 229 0054 2E48     		ldr	r0, .L10+20
 230 0056 FFF7FEFF 		bl	transmit_resp_code
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 7


  96:Core/Src/main.c ****         break;
 231              		.loc 1 96 9
 232 005a 3DE0     		b	.L2
 233              	.L4:
 234              	.LBE6:
  97:Core/Src/main.c ****       }
  98:Core/Src/main.c ****       if(is_done) {
 235              		.loc 1 98 10
 236 005c 2A4B     		ldr	r3, .L10+12
 237 005e 1B68     		ldr	r3, [r3]
 238              		.loc 1 98 9
 239 0060 002B     		cmp	r3, #0
 240 0062 32D0     		beq	.L5
  99:Core/Src/main.c ****         transmit_resp_code(RESP_CODE_OK, NULL);
 241              		.loc 1 99 9
 242 0064 0021     		movs	r1, #0
 243 0066 2B48     		ldr	r0, .L10+24
 244 0068 FFF7FEFF 		bl	transmit_resp_code
 100:Core/Src/main.c ****         if(reader.code_type == MCODE_SYMBOL && reader.code_id == MCODE_EMERGENCY_STOP) {
 245              		.loc 1 100 18
 246 006c 274B     		ldr	r3, .L10+16
 247 006e 9B7F     		ldrb	r3, [r3, #30]	@ zero_extendqisi2
 248              		.loc 1 100 11
 249 0070 4D2B     		cmp	r3, #77
 250 0072 0AD1     		bne	.L6
 251              		.loc 1 100 54 discriminator 1
 252 0074 254B     		ldr	r3, .L10+16
 253 0076 1B6A     		ldr	r3, [r3, #32]
 254              		.loc 1 100 45 discriminator 1
 255 0078 702B     		cmp	r3, #112
 256 007a 06D1     		bne	.L6
 257              	.LBB7:
 101:Core/Src/main.c ****           emergency_stop();
 258              		.loc 1 101 11
 259 007c FFF7FEFF 		bl	emergency_stop
 102:Core/Src/main.c ****           transmit_resp_code(RESP_CODE_READY, NULL);
 260              		.loc 1 102 11
 261 0080 0021     		movs	r1, #0
 262 0082 2548     		ldr	r0, .L10+28
 263 0084 FFF7FEFF 		bl	transmit_resp_code
 264              	.LBE7:
 100:Core/Src/main.c ****         if(reader.code_type == MCODE_SYMBOL && reader.code_id == MCODE_EMERGENCY_STOP) {
 265              		.loc 1 100 88
 266 0088 17E0     		b	.L7
 267              	.L6:
 103:Core/Src/main.c ****         } else if(state == CONTROLLER_STATE_IDLE) {
 268              		.loc 1 103 25
 269 008a 244B     		ldr	r3, .L10+32
 270 008c 1B68     		ldr	r3, [r3]
 271              		.loc 1 103 18
 272 008e 002B     		cmp	r3, #0
 273 0090 0BD1     		bne	.L8
 104:Core/Src/main.c ****           current_cmd = reader;
 274              		.loc 1 104 23
 275 0092 234A     		ldr	r2, .L10+36
 276 0094 1D4B     		ldr	r3, .L10+16
 277 0096 1046     		mov	r0, r2
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 8


 278 0098 1946     		mov	r1, r3
 279 009a A823     		movs	r3, #168
 280 009c 1A46     		mov	r2, r3
 281 009e FFF7FEFF 		bl	memcpy
 105:Core/Src/main.c ****           state = CONTROLLER_STATE_BUSY;
 282              		.loc 1 105 17
 283 00a2 1E4B     		ldr	r3, .L10+32
 284 00a4 0122     		movs	r2, #1
 285 00a6 1A60     		str	r2, [r3]
 286 00a8 07E0     		b	.L7
 287              	.L8:
 106:Core/Src/main.c ****         } else if(state == CONTROLLER_STATE_BUSY) {
 288              		.loc 1 106 25
 289 00aa 1C4B     		ldr	r3, .L10+32
 290 00ac 1B68     		ldr	r3, [r3]
 291              		.loc 1 106 18
 292 00ae 012B     		cmp	r3, #1
 293 00b0 03D1     		bne	.L7
 107:Core/Src/main.c ****           transmit_resp_code(RESP_CODE_BUSY, NULL);
 294              		.loc 1 107 11
 295 00b2 0021     		movs	r1, #0
 296 00b4 1B48     		ldr	r0, .L10+40
 297 00b6 FFF7FEFF 		bl	transmit_resp_code
 298              	.L7:
 108:Core/Src/main.c ****         }
 109:Core/Src/main.c ****         memset(&reader, 0, sizeof(gc_reader));
 299              		.loc 1 109 9
 300 00ba A822     		movs	r2, #168
 301 00bc 0021     		movs	r1, #0
 302 00be 1348     		ldr	r0, .L10+16
 303 00c0 FFF7FEFF 		bl	memset
 110:Core/Src/main.c ****         is_done = 0;
 304              		.loc 1 110 17
 305 00c4 104B     		ldr	r3, .L10+12
 306 00c6 0022     		movs	r2, #0
 307 00c8 1A60     		str	r2, [r3]
 308              	.L5:
 309              	.LBE5:
  91:Core/Src/main.c ****       int error_code = read_code(&reader, gcode_buff[i], &is_done);
 310              		.loc 1 91 31 discriminator 2
 311 00ca FB69     		ldr	r3, [r7, #28]
 312 00cc 0133     		adds	r3, r3, #1
 313 00ce FB61     		str	r3, [r7, #28]
 314              	.L3:
  91:Core/Src/main.c ****       int error_code = read_code(&reader, gcode_buff[i], &is_done);
 315              		.loc 1 91 22 discriminator 1
 316 00d0 7B88     		ldrh	r3, [r7, #2]
 317 00d2 FA69     		ldr	r2, [r7, #28]
 318 00d4 9A42     		cmp	r2, r3
 319 00d6 A7DB     		blt	.L9
 320              	.L2:
 321              	.LBE4:
 111:Core/Src/main.c ****       }
 112:Core/Src/main.c ****     }
 113:Core/Src/main.c ****   }
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   HAL_UARTEx_ReceiveToIdle_DMA(&hlpuart1, rx_buff, GCODE_BUFF_SIZE);
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 9


 322              		.loc 1 115 3
 323 00d8 4022     		movs	r2, #64
 324 00da 0949     		ldr	r1, .L10+4
 325 00dc 1248     		ldr	r0, .L10+44
 326 00de FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_DMA
 116:Core/Src/main.c ****   __HAL_DMA_DISABLE_IT(&hdma_lpuart1_rx, DMA_IT_HT);
 327              		.loc 1 116 3
 328 00e2 124B     		ldr	r3, .L10+48
 329 00e4 1B68     		ldr	r3, [r3]
 330 00e6 1A68     		ldr	r2, [r3]
 331 00e8 104B     		ldr	r3, .L10+48
 332 00ea 1B68     		ldr	r3, [r3]
 333 00ec 22F00402 		bic	r2, r2, #4
 334 00f0 1A60     		str	r2, [r3]
 117:Core/Src/main.c **** }
 335              		.loc 1 117 1
 336 00f2 00BF     		nop
 337 00f4 2037     		adds	r7, r7, #32
 338              		.cfi_def_cfa_offset 8
 339 00f6 BD46     		mov	sp, r7
 340              		.cfi_def_cfa_register 13
 341              		@ sp needed
 342 00f8 80BD     		pop	{r7, pc}
 343              	.L11:
 344 00fa 00BF     		.align	2
 345              	.L10:
 346 00fc 00800040 		.word	1073774592
 347 0100 00000000 		.word	rx_buff
 348 0104 00000000 		.word	gcode_buff
 349 0108 00000000 		.word	is_done
 350 010c 00000000 		.word	reader
 351 0110 00000000 		.word	.LC0
 352 0114 04000000 		.word	.LC1
 353 0118 08000000 		.word	.LC2
 354 011c 00000000 		.word	state
 355 0120 00000000 		.word	current_cmd
 356 0124 0C000000 		.word	.LC3
 357 0128 00000000 		.word	hlpuart1
 358 012c 00000000 		.word	hdma_lpuart1_rx
 359              		.cfi_endproc
 360              	.LFE325:
 362              		.section	.text.transmit_data,"ax",%progbits
 363              		.align	1
 364              		.global	transmit_data
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 369              	transmit_data:
 370              	.LFB326:
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** // void DelayMicrosecond(uint16_t time)
 120:Core/Src/main.c **** // {
 121:Core/Src/main.c **** //   __HAL_TIM_SET_COUNTER(&htim4, 0);
 122:Core/Src/main.c **** //   while (__HAL_TIM_GET_COUNTER(&htim4) < time)
 123:Core/Src/main.c **** //     ;
 124:Core/Src/main.c **** // }
 125:Core/Src/main.c **** 
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 10


 126:Core/Src/main.c **** // void print_temperature()
 127:Core/Src/main.c **** // {
 128:Core/Src/main.c **** //   sprintf(msg_buffer, "temp: %f, value: %d\r\n", GetTemperature(ADC_HOT_END, value[ADC_HOT_END])
 129:Core/Src/main.c **** //   HAL_UART_Transmit(&hlpuart1, (uint16_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 130:Core/Src/main.c **** // }
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** HAL_StatusTypeDef transmit_data(uint8_t *data, size_t len) {
 371              		.loc 1 132 60
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 8
 374              		@ frame_needed = 1, uses_anonymous_args = 0
 375 0000 80B5     		push	{r7, lr}
 376              		.cfi_def_cfa_offset 8
 377              		.cfi_offset 7, -8
 378              		.cfi_offset 14, -4
 379 0002 82B0     		sub	sp, sp, #8
 380              		.cfi_def_cfa_offset 16
 381 0004 00AF     		add	r7, sp, #0
 382              		.cfi_def_cfa_register 7
 383 0006 7860     		str	r0, [r7, #4]
 384 0008 3960     		str	r1, [r7]
 133:Core/Src/main.c ****   return HAL_UART_Transmit(&hlpuart1, data, len, 100);
 385              		.loc 1 133 10
 386 000a 3B68     		ldr	r3, [r7]
 387 000c 9AB2     		uxth	r2, r3
 388 000e 6423     		movs	r3, #100
 389 0010 7968     		ldr	r1, [r7, #4]
 390 0012 0448     		ldr	r0, .L14
 391 0014 FFF7FEFF 		bl	HAL_UART_Transmit
 392 0018 0346     		mov	r3, r0
 134:Core/Src/main.c **** }
 393              		.loc 1 134 1
 394 001a 1846     		mov	r0, r3
 395 001c 0837     		adds	r7, r7, #8
 396              		.cfi_def_cfa_offset 8
 397 001e BD46     		mov	sp, r7
 398              		.cfi_def_cfa_register 13
 399              		@ sp needed
 400 0020 80BD     		pop	{r7, pc}
 401              	.L15:
 402 0022 00BF     		.align	2
 403              	.L14:
 404 0024 00000000 		.word	hlpuart1
 405              		.cfi_endproc
 406              	.LFE326:
 408              		.section	.rodata
 409              		.align	2
 410              	.LC4:
 411 0010 25732025 		.ascii	"%s %s\012\000"
 411      730A00
 412 0017 00       		.align	2
 413              	.LC5:
 414 0018 25730A00 		.ascii	"%s\012\000"
 415              		.section	.text.transmit_resp_code,"ax",%progbits
 416              		.align	1
 417              		.global	transmit_resp_code
 418              		.syntax unified
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 11


 419              		.thumb
 420              		.thumb_func
 422              	transmit_resp_code:
 423              	.LFB327:
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** HAL_StatusTypeDef transmit_resp_code(uint8_t *code, uint8_t *comment) {
 424              		.loc 1 136 71
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 16
 427              		@ frame_needed = 1, uses_anonymous_args = 0
 428 0000 90B5     		push	{r4, r7, lr}
 429              		.cfi_def_cfa_offset 12
 430              		.cfi_offset 4, -12
 431              		.cfi_offset 7, -8
 432              		.cfi_offset 14, -4
 433 0002 85B0     		sub	sp, sp, #20
 434              		.cfi_def_cfa_offset 32
 435 0004 00AF     		add	r7, sp, #0
 436              		.cfi_def_cfa_register 7
 437 0006 7860     		str	r0, [r7, #4]
 438 0008 3960     		str	r1, [r7]
 137:Core/Src/main.c ****   uint8_t *to_send;
 138:Core/Src/main.c ****   if(comment != NULL) {
 439              		.loc 1 138 5
 440 000a 3B68     		ldr	r3, [r7]
 441 000c 002B     		cmp	r3, #0
 442 000e 1DD0     		beq	.L17
 443              	.LBB8:
 139:Core/Src/main.c ****     int len = strlen(code) + strlen(comment) + 2; // 2 = newline + terminator
 444              		.loc 1 139 15
 445 0010 7868     		ldr	r0, [r7, #4]
 446 0012 FFF7FEFF 		bl	strlen
 447 0016 0446     		mov	r4, r0
 448              		.loc 1 139 30
 449 0018 3868     		ldr	r0, [r7]
 450 001a FFF7FEFF 		bl	strlen
 451 001e 0346     		mov	r3, r0
 452              		.loc 1 139 28
 453 0020 2344     		add	r3, r3, r4
 454              		.loc 1 139 46
 455 0022 0233     		adds	r3, r3, #2
 456              		.loc 1 139 9
 457 0024 BB60     		str	r3, [r7, #8]
 140:Core/Src/main.c ****     to_send = malloc(len);
 458              		.loc 1 140 15
 459 0026 BB68     		ldr	r3, [r7, #8]
 460 0028 1846     		mov	r0, r3
 461 002a FFF7FEFF 		bl	malloc
 462 002e 0346     		mov	r3, r0
 463 0030 FB60     		str	r3, [r7, #12]
 141:Core/Src/main.c ****     sprintf(to_send, "%s %s\n", code, comment);
 464              		.loc 1 141 5
 465 0032 3B68     		ldr	r3, [r7]
 466 0034 7A68     		ldr	r2, [r7, #4]
 467 0036 1349     		ldr	r1, .L19
 468 0038 F868     		ldr	r0, [r7, #12]
 469 003a FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 12


 142:Core/Src/main.c ****     return transmit_data(to_send, len); // bez znaku terminatora
 470              		.loc 1 142 12
 471 003e BB68     		ldr	r3, [r7, #8]
 472 0040 1946     		mov	r1, r3
 473 0042 F868     		ldr	r0, [r7, #12]
 474 0044 FFF7FEFF 		bl	transmit_data
 475 0048 0346     		mov	r3, r0
 476 004a 17E0     		b	.L18
 477              	.L17:
 478              	.LBE8:
 143:Core/Src/main.c ****   } else {
 144:Core/Src/main.c ****     to_send = malloc(strlen(code) + 2);
 479              		.loc 1 144 22
 480 004c 7868     		ldr	r0, [r7, #4]
 481 004e FFF7FEFF 		bl	strlen
 482 0052 0346     		mov	r3, r0
 483              		.loc 1 144 15
 484 0054 0233     		adds	r3, r3, #2
 485 0056 1846     		mov	r0, r3
 486 0058 FFF7FEFF 		bl	malloc
 487 005c 0346     		mov	r3, r0
 488 005e FB60     		str	r3, [r7, #12]
 145:Core/Src/main.c ****     sprintf(to_send, "%s\n", code);
 489              		.loc 1 145 5
 490 0060 7A68     		ldr	r2, [r7, #4]
 491 0062 0949     		ldr	r1, .L19+4
 492 0064 F868     		ldr	r0, [r7, #12]
 493 0066 FFF7FEFF 		bl	sprintf
 146:Core/Src/main.c ****     return transmit_data(to_send, strlen(to_send));
 494              		.loc 1 146 12
 495 006a F868     		ldr	r0, [r7, #12]
 496 006c FFF7FEFF 		bl	strlen
 497 0070 0346     		mov	r3, r0
 498 0072 1946     		mov	r1, r3
 499 0074 F868     		ldr	r0, [r7, #12]
 500 0076 FFF7FEFF 		bl	transmit_data
 501 007a 0346     		mov	r3, r0
 502              	.L18:
 147:Core/Src/main.c ****   }
 148:Core/Src/main.c **** }
 503              		.loc 1 148 1
 504 007c 1846     		mov	r0, r3
 505 007e 1437     		adds	r7, r7, #20
 506              		.cfi_def_cfa_offset 12
 507 0080 BD46     		mov	sp, r7
 508              		.cfi_def_cfa_register 13
 509              		@ sp needed
 510 0082 90BD     		pop	{r4, r7, pc}
 511              	.L20:
 512              		.align	2
 513              	.L19:
 514 0084 10000000 		.word	.LC4
 515 0088 18000000 		.word	.LC5
 516              		.cfi_endproc
 517              	.LFE327:
 519              		.section	.text.emergency_stop,"ax",%progbits
 520              		.align	1
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 13


 521              		.global	emergency_stop
 522              		.syntax unified
 523              		.thumb
 524              		.thumb_func
 526              	emergency_stop:
 527              	.LFB328:
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** void emergency_stop() {
 528              		.loc 1 150 23
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 0
 531              		@ frame_needed = 1, uses_anonymous_args = 0
 532 0000 80B5     		push	{r7, lr}
 533              		.cfi_def_cfa_offset 8
 534              		.cfi_offset 7, -8
 535              		.cfi_offset 14, -4
 536 0002 00AF     		add	r7, sp, #0
 537              		.cfi_def_cfa_register 7
 151:Core/Src/main.c ****   memset(&current_cmd, 0, sizeof(gc_reader));
 538              		.loc 1 151 3
 539 0004 A822     		movs	r2, #168
 540 0006 0021     		movs	r1, #0
 541 0008 0348     		ldr	r0, .L22
 542 000a FFF7FEFF 		bl	memset
 152:Core/Src/main.c ****   state = CONTROLLER_STATE_IDLE;
 543              		.loc 1 152 9
 544 000e 034B     		ldr	r3, .L22+4
 545 0010 0022     		movs	r2, #0
 546 0012 1A60     		str	r2, [r3]
 153:Core/Src/main.c **** }
 547              		.loc 1 153 1
 548 0014 00BF     		nop
 549 0016 80BD     		pop	{r7, pc}
 550              	.L23:
 551              		.align	2
 552              	.L22:
 553 0018 00000000 		.word	current_cmd
 554 001c 00000000 		.word	state
 555              		.cfi_endproc
 556              	.LFE328:
 558              		.section	.rodata
 559              		.align	2
 560              	.LC6:
 561 001c 25632025 		.ascii	"%c %d X=%f Y=%f\000"
 561      6420583D 
 561      25662059 
 561      3D256600 
 562              		.section	.text.main,"ax",%progbits
 563              		.align	1
 564              		.global	main
 565              		.syntax unified
 566              		.thumb
 567              		.thumb_func
 569              	main:
 570              	.LFB329:
 154:Core/Src/main.c **** /* USER CODE END 0 */
 155:Core/Src/main.c **** 
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 14


 156:Core/Src/main.c **** /**
 157:Core/Src/main.c ****   * @brief  The application entry point.
 158:Core/Src/main.c ****   * @retval int
 159:Core/Src/main.c ****   */
 160:Core/Src/main.c **** int main(void)
 161:Core/Src/main.c **** {
 571              		.loc 1 161 1
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 24
 574              		@ frame_needed = 1, uses_anonymous_args = 0
 575 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 576              		.cfi_def_cfa_offset 20
 577              		.cfi_offset 4, -20
 578              		.cfi_offset 5, -16
 579              		.cfi_offset 6, -12
 580              		.cfi_offset 7, -8
 581              		.cfi_offset 14, -4
 582 0002 8BB0     		sub	sp, sp, #44
 583              		.cfi_def_cfa_offset 64
 584 0004 04AF     		add	r7, sp, #16
 585              		.cfi_def_cfa 7, 48
 162:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 163:Core/Src/main.c ****   // last_time = HAL_GetTick();
 164:Core/Src/main.c ****   /* USER CODE END 1 */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 169:Core/Src/main.c ****   HAL_Init();
 586              		.loc 1 169 3
 587 0006 FFF7FEFF 		bl	HAL_Init
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /* USER CODE END Init */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /* Configure the system clock */
 176:Core/Src/main.c ****   SystemClock_Config();
 588              		.loc 1 176 3
 589 000a FFF7FEFF 		bl	SystemClock_Config
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /* USER CODE END SysInit */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* Initialize all configured peripherals */
 183:Core/Src/main.c ****   MX_GPIO_Init();
 590              		.loc 1 183 3
 591 000e FFF7FEFF 		bl	MX_GPIO_Init
 184:Core/Src/main.c ****   MX_DMA_Init();
 592              		.loc 1 184 3
 593 0012 FFF7FEFF 		bl	MX_DMA_Init
 185:Core/Src/main.c ****   MX_LPUART1_UART_Init();
 594              		.loc 1 185 3
 595 0016 FFF7FEFF 		bl	MX_LPUART1_UART_Init
 186:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
 596              		.loc 1 186 3
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 15


 597 001a FFF7FEFF 		bl	MX_USB_OTG_FS_PCD_Init
 187:Core/Src/main.c ****   MX_TIM4_Init();
 598              		.loc 1 187 3
 599 001e FFF7FEFF 		bl	MX_TIM4_Init
 188:Core/Src/main.c ****   MX_UART4_Init();
 600              		.loc 1 188 3
 601 0022 FFF7FEFF 		bl	MX_UART4_Init
 189:Core/Src/main.c ****   MX_TIM3_Init();
 602              		.loc 1 189 3
 603 0026 FFF7FEFF 		bl	MX_TIM3_Init
 190:Core/Src/main.c ****   MX_ADC1_Init();
 604              		.loc 1 190 3
 605 002a FFF7FEFF 		bl	MX_ADC1_Init
 191:Core/Src/main.c ****   MX_TIM5_Init();
 606              		.loc 1 191 3
 607 002e FFF7FEFF 		bl	MX_TIM5_Init
 192:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 193:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 608              		.loc 1 193 3
 609 0032 0021     		movs	r1, #0
 610 0034 2548     		ldr	r0, .L27
 611 0036 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 194:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2);
 612              		.loc 1 194 3
 613 003a 0421     		movs	r1, #4
 614 003c 2348     		ldr	r0, .L27
 615 003e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 195:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);
 616              		.loc 1 195 3
 617 0042 0821     		movs	r1, #8
 618 0044 2148     		ldr	r0, .L27
 619 0046 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 196:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, value, ADC_CHANNELS);
 620              		.loc 1 196 3
 621 004a 0322     		movs	r2, #3
 622 004c 2049     		ldr	r1, .L27+4
 623 004e 2148     		ldr	r0, .L27+8
 624 0050 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 197:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim4);
 625              		.loc 1 197 3
 626 0054 2048     		ldr	r0, .L27+12
 627 0056 FFF7FEFF 		bl	HAL_TIM_Base_Start
 198:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim5);
 628              		.loc 1 198 3
 629 005a 2048     		ldr	r0, .L27+16
 630 005c FFF7FEFF 		bl	HAL_TIM_Base_Start
 199:Core/Src/main.c ****   HAL_UARTEx_ReceiveToIdle_DMA(&hlpuart1, rx_buff, GCODE_BUFF_SIZE);
 631              		.loc 1 199 3
 632 0060 4022     		movs	r2, #64
 633 0062 1F49     		ldr	r1, .L27+20
 634 0064 1F48     		ldr	r0, .L27+24
 635 0066 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_DMA
 200:Core/Src/main.c ****   __HAL_DMA_DISABLE_IT(&hdma_lpuart1_rx, DMA_IT_HT);
 636              		.loc 1 200 3
 637 006a 1F4B     		ldr	r3, .L27+28
 638 006c 1B68     		ldr	r3, [r3]
 639 006e 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 16


 640 0070 1D4B     		ldr	r3, .L27+28
 641 0072 1B68     		ldr	r3, [r3]
 642 0074 22F00402 		bic	r2, r2, #4
 643 0078 1A60     		str	r2, [r3]
 201:Core/Src/main.c ****   memset(rx_buff, 0, GCODE_BUFF_SIZE);
 644              		.loc 1 201 3
 645 007a 4022     		movs	r2, #64
 646 007c 0021     		movs	r1, #0
 647 007e 1848     		ldr	r0, .L27+20
 648 0080 FFF7FEFF 		bl	memset
 649              	.L26:
 202:Core/Src/main.c ****   /* USER CODE END 2 */
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /* Infinite loop */
 205:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 206:Core/Src/main.c ****   while (1) {
 207:Core/Src/main.c ****     // wykonywanie instrukcji
 208:Core/Src/main.c ****     if(state == CONTROLLER_STATE_BUSY) {
 650              		.loc 1 208 14
 651 0084 194B     		ldr	r3, .L27+32
 652 0086 1B68     		ldr	r3, [r3]
 653              		.loc 1 208 7
 654 0088 012B     		cmp	r3, #1
 655 008a FBD1     		bne	.L26
 656              	.LBB9:
 209:Core/Src/main.c ****       uint8_t result[20];
 210:Core/Src/main.c ****       sprintf(result, "%c %d X=%f Y=%f", current_cmd.code_type, current_cmd.code_id, current_cmd.X,
 657              		.loc 1 210 53
 658 008c 184B     		ldr	r3, .L27+36
 659 008e 9B7F     		ldrb	r3, [r3, #30]	@ zero_extendqisi2
 660              		.loc 1 210 7
 661 0090 1E46     		mov	r6, r3
 662 0092 174B     		ldr	r3, .L27+36
 663 0094 1D6A     		ldr	r5, [r3, #32]
 664 0096 164B     		ldr	r3, .L27+36
 665 0098 D3E90C23 		ldrd	r2, [r3, #48]
 666 009c 1449     		ldr	r1, .L27+36
 667 009e D1E90E01 		ldrd	r0, [r1, #56]
 668 00a2 3C1D     		adds	r4, r7, #4
 669 00a4 CDE90201 		strd	r0, [sp, #8]
 670 00a8 CDE90023 		strd	r2, [sp]
 671 00ac 2B46     		mov	r3, r5
 672 00ae 3246     		mov	r2, r6
 673 00b0 1049     		ldr	r1, .L27+40
 674 00b2 2046     		mov	r0, r4
 675 00b4 FFF7FEFF 		bl	sprintf
 211:Core/Src/main.c ****       state = CONTROLLER_STATE_IDLE;
 676              		.loc 1 211 13
 677 00b8 0C4B     		ldr	r3, .L27+32
 678 00ba 0022     		movs	r2, #0
 679 00bc 1A60     		str	r2, [r3]
 212:Core/Src/main.c ****       transmit_resp_code(RESP_CODE_READY, result);
 680              		.loc 1 212 7
 681 00be 3B1D     		adds	r3, r7, #4
 682 00c0 1946     		mov	r1, r3
 683 00c2 0D48     		ldr	r0, .L27+44
 684 00c4 FFF7FEFF 		bl	transmit_resp_code
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 17


 685              	.LBE9:
 208:Core/Src/main.c ****       uint8_t result[20];
 686              		.loc 1 208 7
 687 00c8 DCE7     		b	.L26
 688              	.L28:
 689 00ca 00BF     		.align	2
 690              	.L27:
 691 00cc 00000000 		.word	htim3
 692 00d0 00000000 		.word	value
 693 00d4 00000000 		.word	hadc1
 694 00d8 00000000 		.word	htim4
 695 00dc 00000000 		.word	htim5
 696 00e0 00000000 		.word	rx_buff
 697 00e4 00000000 		.word	hlpuart1
 698 00e8 00000000 		.word	hdma_lpuart1_rx
 699 00ec 00000000 		.word	state
 700 00f0 00000000 		.word	current_cmd
 701 00f4 1C000000 		.word	.LC6
 702 00f8 08000000 		.word	.LC2
 703              		.cfi_endproc
 704              	.LFE329:
 706              		.section	.text.SystemClock_Config,"ax",%progbits
 707              		.align	1
 708              		.global	SystemClock_Config
 709              		.syntax unified
 710              		.thumb
 711              		.thumb_func
 713              	SystemClock_Config:
 714              	.LFB330:
 213:Core/Src/main.c ****     }
 214:Core/Src/main.c ****     // if (rx_buff[0] != '\0') {
 215:Core/Src/main.c ****     //   int error_code = read_code((char*)rx_buff, &reader);
 216:Core/Src/main.c ****     // }
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****     // if (HAL_GetTick() - last_time > interval && interval > 0)
 219:Core/Src/main.c ****     // {
 220:Core/Src/main.c ****     //   M105(0, 0);
 221:Core/Src/main.c ****     //   last_time = HAL_GetTick();
 222:Core/Src/main.c ****     // }
 223:Core/Src/main.c ****    
 224:Core/Src/main.c ****     // G0();
 225:Core/Src/main.c ****     // M104();
 226:Core/Src/main.c ****     // if(READ_PIN(USER_BUTTON) == 1)
 227:Core/Src/main.c ****     // {
 228:Core/Src/main.c ****     //   if(GetTicks() - lasttimeY >= 2000)
 229:Core/Src/main.c ****     //   {
 230:Core/Src/main.c ****     //       MAKE_MOTOR_STEP(Y_AXIS_STEP);
 231:Core/Src/main.c ****     //       lasttimeY = GetTicks();
 232:Core/Src/main.c ****     //   }
 233:Core/Src/main.c ****     // }
 234:Core/Src/main.c ****     /* USER CODE END WHILE */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 237:Core/Src/main.c ****   }
 238:Core/Src/main.c ****   /* USER CODE END 3 */
 239:Core/Src/main.c **** }
 240:Core/Src/main.c **** 
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 18


 241:Core/Src/main.c **** /**
 242:Core/Src/main.c ****   * @brief System Clock Configuration
 243:Core/Src/main.c ****   * @retval None
 244:Core/Src/main.c ****   */
 245:Core/Src/main.c **** void SystemClock_Config(void)
 246:Core/Src/main.c **** {
 715              		.loc 1 246 1
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 96
 718              		@ frame_needed = 1, uses_anonymous_args = 0
 719 0000 80B5     		push	{r7, lr}
 720              		.cfi_def_cfa_offset 8
 721              		.cfi_offset 7, -8
 722              		.cfi_offset 14, -4
 723 0002 98B0     		sub	sp, sp, #96
 724              		.cfi_def_cfa_offset 104
 725 0004 00AF     		add	r7, sp, #0
 726              		.cfi_def_cfa_register 7
 247:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 727              		.loc 1 247 22
 728 0006 07F11803 		add	r3, r7, #24
 729 000a 4822     		movs	r2, #72
 730 000c 0021     		movs	r1, #0
 731 000e 1846     		mov	r0, r3
 732 0010 FFF7FEFF 		bl	memset
 248:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 733              		.loc 1 248 22
 734 0014 3B1D     		adds	r3, r7, #4
 735 0016 0022     		movs	r2, #0
 736 0018 1A60     		str	r2, [r3]
 737 001a 5A60     		str	r2, [r3, #4]
 738 001c 9A60     		str	r2, [r3, #8]
 739 001e DA60     		str	r2, [r3, #12]
 740 0020 1A61     		str	r2, [r3, #16]
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 251:Core/Src/main.c ****   */
 252:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST) != HAL_OK)
 741              		.loc 1 252 7
 742 0022 0020     		movs	r0, #0
 743 0024 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 744 0028 0346     		mov	r3, r0
 745              		.loc 1 252 6
 746 002a 002B     		cmp	r3, #0
 747 002c 01D0     		beq	.L30
 253:Core/Src/main.c ****   {
 254:Core/Src/main.c ****     Error_Handler();
 748              		.loc 1 254 5
 749 002e FFF7FEFF 		bl	Error_Handler
 750              	.L30:
 255:Core/Src/main.c ****   }
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 258:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 259:Core/Src/main.c ****   */
 260:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_MSI;
 751              		.loc 1 260 36
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 19


 752 0032 3023     		movs	r3, #48
 753 0034 BB61     		str	r3, [r7, #24]
 261:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 754              		.loc 1 261 32
 755 0036 0123     		movs	r3, #1
 756 0038 3B64     		str	r3, [r7, #64]
 262:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 757              		.loc 1 262 30
 758 003a 0123     		movs	r3, #1
 759 003c 7B63     		str	r3, [r7, #52]
 263:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 760              		.loc 1 263 41
 761 003e 0023     		movs	r3, #0
 762 0040 BB63     		str	r3, [r7, #56]
 264:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 763              		.loc 1 264 35
 764 0042 6023     		movs	r3, #96
 765 0044 FB63     		str	r3, [r7, #60]
 265:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 766              		.loc 1 265 34
 767 0046 0223     		movs	r3, #2
 768 0048 7B64     		str	r3, [r7, #68]
 266:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 769              		.loc 1 266 35
 770 004a 0123     		movs	r3, #1
 771 004c BB64     		str	r3, [r7, #72]
 267:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 772              		.loc 1 267 30
 773 004e 0123     		movs	r3, #1
 774 0050 FB64     		str	r3, [r7, #76]
 268:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 60;
 775              		.loc 1 268 30
 776 0052 3C23     		movs	r3, #60
 777 0054 3B65     		str	r3, [r7, #80]
 269:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 778              		.loc 1 269 30
 779 0056 0223     		movs	r3, #2
 780 0058 7B65     		str	r3, [r7, #84]
 270:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 781              		.loc 1 270 30
 782 005a 0223     		movs	r3, #2
 783 005c BB65     		str	r3, [r7, #88]
 271:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 784              		.loc 1 271 30
 785 005e 0223     		movs	r3, #2
 786 0060 FB65     		str	r3, [r7, #92]
 272:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 787              		.loc 1 272 7
 788 0062 07F11803 		add	r3, r7, #24
 789 0066 1846     		mov	r0, r3
 790 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 791 006c 0346     		mov	r3, r0
 792              		.loc 1 272 6
 793 006e 002B     		cmp	r3, #0
 794 0070 01D0     		beq	.L31
 273:Core/Src/main.c ****   {
 274:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 20


 795              		.loc 1 274 5
 796 0072 FFF7FEFF 		bl	Error_Handler
 797              	.L31:
 275:Core/Src/main.c ****   }
 276:Core/Src/main.c **** 
 277:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 278:Core/Src/main.c ****   */
 279:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 798              		.loc 1 279 31
 799 0076 0F23     		movs	r3, #15
 800 0078 7B60     		str	r3, [r7, #4]
 280:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 281:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 801              		.loc 1 281 34
 802 007a 0323     		movs	r3, #3
 803 007c BB60     		str	r3, [r7, #8]
 282:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 804              		.loc 1 282 35
 805 007e 0023     		movs	r3, #0
 806 0080 FB60     		str	r3, [r7, #12]
 283:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 807              		.loc 1 283 36
 808 0082 0023     		movs	r3, #0
 809 0084 3B61     		str	r3, [r7, #16]
 284:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 810              		.loc 1 284 36
 811 0086 0023     		movs	r3, #0
 812 0088 7B61     		str	r3, [r7, #20]
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 813              		.loc 1 286 7
 814 008a 3B1D     		adds	r3, r7, #4
 815 008c 0521     		movs	r1, #5
 816 008e 1846     		mov	r0, r3
 817 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 818 0094 0346     		mov	r3, r0
 819              		.loc 1 286 6
 820 0096 002B     		cmp	r3, #0
 821 0098 01D0     		beq	.L33
 287:Core/Src/main.c ****   {
 288:Core/Src/main.c ****     Error_Handler();
 822              		.loc 1 288 5
 823 009a FFF7FEFF 		bl	Error_Handler
 824              	.L33:
 289:Core/Src/main.c ****   }
 290:Core/Src/main.c **** }
 825              		.loc 1 290 1
 826 009e 00BF     		nop
 827 00a0 6037     		adds	r7, r7, #96
 828              		.cfi_def_cfa_offset 8
 829 00a2 BD46     		mov	sp, r7
 830              		.cfi_def_cfa_register 13
 831              		@ sp needed
 832 00a4 80BD     		pop	{r7, pc}
 833              		.cfi_endproc
 834              	.LFE330:
 836              		.section	.text.MX_ADC1_Init,"ax",%progbits
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 21


 837              		.align	1
 838              		.syntax unified
 839              		.thumb
 840              		.thumb_func
 842              	MX_ADC1_Init:
 843              	.LFB331:
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** /**
 293:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 294:Core/Src/main.c ****   * @param None
 295:Core/Src/main.c ****   * @retval None
 296:Core/Src/main.c ****   */
 297:Core/Src/main.c **** static void MX_ADC1_Init(void)
 298:Core/Src/main.c **** {
 844              		.loc 1 298 1
 845              		.cfi_startproc
 846              		@ args = 0, pretend = 0, frame = 40
 847              		@ frame_needed = 1, uses_anonymous_args = 0
 848 0000 80B5     		push	{r7, lr}
 849              		.cfi_def_cfa_offset 8
 850              		.cfi_offset 7, -8
 851              		.cfi_offset 14, -4
 852 0002 8AB0     		sub	sp, sp, #40
 853              		.cfi_def_cfa_offset 48
 854 0004 00AF     		add	r7, sp, #0
 855              		.cfi_def_cfa_register 7
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   ADC_MultiModeTypeDef multimode = {0};
 856              		.loc 1 304 24
 857 0006 07F11C03 		add	r3, r7, #28
 858 000a 0022     		movs	r2, #0
 859 000c 1A60     		str	r2, [r3]
 860 000e 5A60     		str	r2, [r3, #4]
 861 0010 9A60     		str	r2, [r3, #8]
 305:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 862              		.loc 1 305 26
 863 0012 3B1D     		adds	r3, r7, #4
 864 0014 0022     		movs	r2, #0
 865 0016 1A60     		str	r2, [r3]
 866 0018 5A60     		str	r2, [r3, #4]
 867 001a 9A60     		str	r2, [r3, #8]
 868 001c DA60     		str	r2, [r3, #12]
 869 001e 1A61     		str	r2, [r3, #16]
 870 0020 5A61     		str	r2, [r3, #20]
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /** Common config
 312:Core/Src/main.c ****   */
 313:Core/Src/main.c ****   hadc1.Instance = ADC1;
 871              		.loc 1 313 18
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 22


 872 0022 434B     		ldr	r3, .L41
 873 0024 434A     		ldr	r2, .L41+4
 874 0026 1A60     		str	r2, [r3]
 314:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 875              		.loc 1 314 29
 876 0028 414B     		ldr	r3, .L41
 877 002a 0022     		movs	r2, #0
 878 002c 5A60     		str	r2, [r3, #4]
 315:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 879              		.loc 1 315 25
 880 002e 404B     		ldr	r3, .L41
 881 0030 0022     		movs	r2, #0
 882 0032 9A60     		str	r2, [r3, #8]
 316:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 883              		.loc 1 316 24
 884 0034 3E4B     		ldr	r3, .L41
 885 0036 0022     		movs	r2, #0
 886 0038 DA60     		str	r2, [r3, #12]
 317:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 887              		.loc 1 317 27
 888 003a 3D4B     		ldr	r3, .L41
 889 003c 0122     		movs	r2, #1
 890 003e 1A61     		str	r2, [r3, #16]
 318:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 891              		.loc 1 318 27
 892 0040 3B4B     		ldr	r3, .L41
 893 0042 0422     		movs	r2, #4
 894 0044 5A61     		str	r2, [r3, #20]
 319:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 895              		.loc 1 319 31
 896 0046 3A4B     		ldr	r3, .L41
 897 0048 0022     		movs	r2, #0
 898 004a 1A76     		strb	r2, [r3, #24]
 320:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 899              		.loc 1 320 33
 900 004c 384B     		ldr	r3, .L41
 901 004e 0122     		movs	r2, #1
 902 0050 5A76     		strb	r2, [r3, #25]
 321:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 3;
 903              		.loc 1 321 30
 904 0052 374B     		ldr	r3, .L41
 905 0054 0322     		movs	r2, #3
 906 0056 DA61     		str	r2, [r3, #28]
 322:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 907              		.loc 1 322 36
 908 0058 354B     		ldr	r3, .L41
 909 005a 0022     		movs	r2, #0
 910 005c 83F82020 		strb	r2, [r3, #32]
 323:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 911              		.loc 1 323 31
 912 0060 334B     		ldr	r3, .L41
 913 0062 0022     		movs	r2, #0
 914 0064 9A62     		str	r2, [r3, #40]
 324:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 915              		.loc 1 324 35
 916 0066 324B     		ldr	r3, .L41
 917 0068 0022     		movs	r2, #0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 23


 918 006a DA62     		str	r2, [r3, #44]
 325:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 919              		.loc 1 325 36
 920 006c 304B     		ldr	r3, .L41
 921 006e 0122     		movs	r2, #1
 922 0070 83F83020 		strb	r2, [r3, #48]
 326:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 923              		.loc 1 326 22
 924 0074 2E4B     		ldr	r3, .L41
 925 0076 0022     		movs	r2, #0
 926 0078 5A63     		str	r2, [r3, #52]
 327:Core/Src/main.c ****   hadc1.Init.OversamplingMode = ENABLE;
 927              		.loc 1 327 31
 928 007a 2D4B     		ldr	r3, .L41
 929 007c 0122     		movs	r2, #1
 930 007e 83F83820 		strb	r2, [r3, #56]
 328:Core/Src/main.c ****   hadc1.Init.Oversampling.Ratio = ADC_OVERSAMPLING_RATIO_16;
 931              		.loc 1 328 33
 932 0082 2B4B     		ldr	r3, .L41
 933 0084 0C22     		movs	r2, #12
 934 0086 DA63     		str	r2, [r3, #60]
 329:Core/Src/main.c ****   hadc1.Init.Oversampling.RightBitShift = ADC_RIGHTBITSHIFT_NONE;
 935              		.loc 1 329 41
 936 0088 294B     		ldr	r3, .L41
 937 008a 0022     		movs	r2, #0
 938 008c 1A64     		str	r2, [r3, #64]
 330:Core/Src/main.c ****   hadc1.Init.Oversampling.TriggeredMode = ADC_TRIGGEREDMODE_SINGLE_TRIGGER;
 939              		.loc 1 330 41
 940 008e 284B     		ldr	r3, .L41
 941 0090 0022     		movs	r2, #0
 942 0092 5A64     		str	r2, [r3, #68]
 331:Core/Src/main.c ****   hadc1.Init.Oversampling.OversamplingStopReset = ADC_REGOVERSAMPLING_CONTINUED_MODE;
 943              		.loc 1 331 49
 944 0094 264B     		ldr	r3, .L41
 945 0096 0122     		movs	r2, #1
 946 0098 9A64     		str	r2, [r3, #72]
 332:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 947              		.loc 1 332 7
 948 009a 2548     		ldr	r0, .L41
 949 009c FFF7FEFF 		bl	HAL_ADC_Init
 950 00a0 0346     		mov	r3, r0
 951              		.loc 1 332 6
 952 00a2 002B     		cmp	r3, #0
 953 00a4 01D0     		beq	.L35
 333:Core/Src/main.c ****   {
 334:Core/Src/main.c ****     Error_Handler();
 954              		.loc 1 334 5
 955 00a6 FFF7FEFF 		bl	Error_Handler
 956              	.L35:
 335:Core/Src/main.c ****   }
 336:Core/Src/main.c **** 
 337:Core/Src/main.c ****   /** Configure the ADC multi-mode
 338:Core/Src/main.c ****   */
 339:Core/Src/main.c ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 957              		.loc 1 339 18
 958 00aa 0023     		movs	r3, #0
 959 00ac FB61     		str	r3, [r7, #28]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 24


 340:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 960              		.loc 1 340 7
 961 00ae 07F11C03 		add	r3, r7, #28
 962 00b2 1946     		mov	r1, r3
 963 00b4 1E48     		ldr	r0, .L41
 964 00b6 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 965 00ba 0346     		mov	r3, r0
 966              		.loc 1 340 6
 967 00bc 002B     		cmp	r3, #0
 968 00be 01D0     		beq	.L36
 341:Core/Src/main.c ****   {
 342:Core/Src/main.c ****     Error_Handler();
 969              		.loc 1 342 5
 970 00c0 FFF7FEFF 		bl	Error_Handler
 971              	.L36:
 343:Core/Src/main.c ****   }
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****   /** Configure Regular Channel
 346:Core/Src/main.c ****   */
 347:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 972              		.loc 1 347 19
 973 00c4 1C4B     		ldr	r3, .L41+8
 974 00c6 7B60     		str	r3, [r7, #4]
 348:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 975              		.loc 1 348 16
 976 00c8 0623     		movs	r3, #6
 977 00ca BB60     		str	r3, [r7, #8]
 349:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_247CYCLES_5;
 978              		.loc 1 349 24
 979 00cc 0623     		movs	r3, #6
 980 00ce FB60     		str	r3, [r7, #12]
 350:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 981              		.loc 1 350 22
 982 00d0 7F23     		movs	r3, #127
 983 00d2 3B61     		str	r3, [r7, #16]
 351:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 984              		.loc 1 351 24
 985 00d4 0423     		movs	r3, #4
 986 00d6 7B61     		str	r3, [r7, #20]
 352:Core/Src/main.c ****   sConfig.Offset = 0;
 987              		.loc 1 352 18
 988 00d8 0023     		movs	r3, #0
 989 00da BB61     		str	r3, [r7, #24]
 353:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 990              		.loc 1 353 7
 991 00dc 3B1D     		adds	r3, r7, #4
 992 00de 1946     		mov	r1, r3
 993 00e0 1348     		ldr	r0, .L41
 994 00e2 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 995 00e6 0346     		mov	r3, r0
 996              		.loc 1 353 6
 997 00e8 002B     		cmp	r3, #0
 998 00ea 01D0     		beq	.L37
 354:Core/Src/main.c ****   {
 355:Core/Src/main.c ****     Error_Handler();
 999              		.loc 1 355 5
 1000 00ec FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 25


 1001              	.L37:
 356:Core/Src/main.c ****   }
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   /** Configure Regular Channel
 359:Core/Src/main.c ****   */
 360:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_2;
 1002              		.loc 1 360 19
 1003 00f0 124B     		ldr	r3, .L41+12
 1004 00f2 7B60     		str	r3, [r7, #4]
 361:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 1005              		.loc 1 361 16
 1006 00f4 0C23     		movs	r3, #12
 1007 00f6 BB60     		str	r3, [r7, #8]
 362:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1008              		.loc 1 362 7
 1009 00f8 3B1D     		adds	r3, r7, #4
 1010 00fa 1946     		mov	r1, r3
 1011 00fc 0C48     		ldr	r0, .L41
 1012 00fe FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1013 0102 0346     		mov	r3, r0
 1014              		.loc 1 362 6
 1015 0104 002B     		cmp	r3, #0
 1016 0106 01D0     		beq	.L38
 363:Core/Src/main.c ****   {
 364:Core/Src/main.c ****     Error_Handler();
 1017              		.loc 1 364 5
 1018 0108 FFF7FEFF 		bl	Error_Handler
 1019              	.L38:
 365:Core/Src/main.c ****   }
 366:Core/Src/main.c **** 
 367:Core/Src/main.c ****   /** Configure Regular Channel
 368:Core/Src/main.c ****   */
 369:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 1020              		.loc 1 369 19
 1021 010c 0C4B     		ldr	r3, .L41+16
 1022 010e 7B60     		str	r3, [r7, #4]
 370:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 1023              		.loc 1 370 16
 1024 0110 1223     		movs	r3, #18
 1025 0112 BB60     		str	r3, [r7, #8]
 371:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1026              		.loc 1 371 7
 1027 0114 3B1D     		adds	r3, r7, #4
 1028 0116 1946     		mov	r1, r3
 1029 0118 0548     		ldr	r0, .L41
 1030 011a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1031 011e 0346     		mov	r3, r0
 1032              		.loc 1 371 6
 1033 0120 002B     		cmp	r3, #0
 1034 0122 01D0     		beq	.L40
 372:Core/Src/main.c ****   {
 373:Core/Src/main.c ****     Error_Handler();
 1035              		.loc 1 373 5
 1036 0124 FFF7FEFF 		bl	Error_Handler
 1037              	.L40:
 374:Core/Src/main.c ****   }
 375:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 26


 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 378:Core/Src/main.c **** 
 379:Core/Src/main.c **** }
 1038              		.loc 1 379 1
 1039 0128 00BF     		nop
 1040 012a 2837     		adds	r7, r7, #40
 1041              		.cfi_def_cfa_offset 8
 1042 012c BD46     		mov	sp, r7
 1043              		.cfi_def_cfa_register 13
 1044              		@ sp needed
 1045 012e 80BD     		pop	{r7, pc}
 1046              	.L42:
 1047              		.align	2
 1048              	.L41:
 1049 0130 00000000 		.word	hadc1
 1050 0134 00000450 		.word	1342439424
 1051 0138 02003004 		.word	70254594
 1052 013c 04006008 		.word	140509188
 1053 0140 000052C7 		.word	-950927360
 1054              		.cfi_endproc
 1055              	.LFE331:
 1057              		.section	.text.MX_LPUART1_UART_Init,"ax",%progbits
 1058              		.align	1
 1059              		.syntax unified
 1060              		.thumb
 1061              		.thumb_func
 1063              	MX_LPUART1_UART_Init:
 1064              	.LFB332:
 380:Core/Src/main.c **** 
 381:Core/Src/main.c **** /**
 382:Core/Src/main.c ****   * @brief LPUART1 Initialization Function
 383:Core/Src/main.c ****   * @param None
 384:Core/Src/main.c ****   * @retval None
 385:Core/Src/main.c ****   */
 386:Core/Src/main.c **** static void MX_LPUART1_UART_Init(void)
 387:Core/Src/main.c **** {
 1065              		.loc 1 387 1
 1066              		.cfi_startproc
 1067              		@ args = 0, pretend = 0, frame = 0
 1068              		@ frame_needed = 1, uses_anonymous_args = 0
 1069 0000 80B5     		push	{r7, lr}
 1070              		.cfi_def_cfa_offset 8
 1071              		.cfi_offset 7, -8
 1072              		.cfi_offset 14, -4
 1073 0002 00AF     		add	r7, sp, #0
 1074              		.cfi_def_cfa_register 7
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 0 */
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 0 */
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 1 */
 394:Core/Src/main.c **** 
 395:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 1 */
 396:Core/Src/main.c ****   hlpuart1.Instance = LPUART1;
 1075              		.loc 1 396 21
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 27


 1076 0004 244B     		ldr	r3, .L49
 1077 0006 254A     		ldr	r2, .L49+4
 1078 0008 1A60     		str	r2, [r3]
 397:Core/Src/main.c ****   hlpuart1.Init.BaudRate = 115200;
 1079              		.loc 1 397 26
 1080 000a 234B     		ldr	r3, .L49
 1081 000c 4FF4E132 		mov	r2, #115200
 1082 0010 5A60     		str	r2, [r3, #4]
 398:Core/Src/main.c ****   hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 1083              		.loc 1 398 28
 1084 0012 214B     		ldr	r3, .L49
 1085 0014 0022     		movs	r2, #0
 1086 0016 9A60     		str	r2, [r3, #8]
 399:Core/Src/main.c ****   hlpuart1.Init.StopBits = UART_STOPBITS_1;
 1087              		.loc 1 399 26
 1088 0018 1F4B     		ldr	r3, .L49
 1089 001a 0022     		movs	r2, #0
 1090 001c DA60     		str	r2, [r3, #12]
 400:Core/Src/main.c ****   hlpuart1.Init.Parity = UART_PARITY_NONE;
 1091              		.loc 1 400 24
 1092 001e 1E4B     		ldr	r3, .L49
 1093 0020 0022     		movs	r2, #0
 1094 0022 1A61     		str	r2, [r3, #16]
 401:Core/Src/main.c ****   hlpuart1.Init.Mode = UART_MODE_TX_RX;
 1095              		.loc 1 401 22
 1096 0024 1C4B     		ldr	r3, .L49
 1097 0026 0C22     		movs	r2, #12
 1098 0028 5A61     		str	r2, [r3, #20]
 402:Core/Src/main.c ****   hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1099              		.loc 1 402 27
 1100 002a 1B4B     		ldr	r3, .L49
 1101 002c 0022     		movs	r2, #0
 1102 002e 9A61     		str	r2, [r3, #24]
 403:Core/Src/main.c ****   hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1103              		.loc 1 403 32
 1104 0030 194B     		ldr	r3, .L49
 1105 0032 0022     		movs	r2, #0
 1106 0034 1A62     		str	r2, [r3, #32]
 404:Core/Src/main.c ****   hlpuart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 1107              		.loc 1 404 32
 1108 0036 184B     		ldr	r3, .L49
 1109 0038 0022     		movs	r2, #0
 1110 003a 5A62     		str	r2, [r3, #36]
 405:Core/Src/main.c ****   hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_RXOVERRUNDISABLE_INIT;
 1111              		.loc 1 405 40
 1112 003c 164B     		ldr	r3, .L49
 1113 003e 1022     		movs	r2, #16
 1114 0040 9A62     		str	r2, [r3, #40]
 406:Core/Src/main.c ****   hlpuart1.AdvancedInit.OverrunDisable = UART_ADVFEATURE_OVERRUN_DISABLE;
 1115              		.loc 1 406 40
 1116 0042 154B     		ldr	r3, .L49
 1117 0044 4FF48052 		mov	r2, #4096
 1118 0048 DA63     		str	r2, [r3, #60]
 407:Core/Src/main.c ****   hlpuart1.FifoMode = UART_FIFOMODE_DISABLE;
 1119              		.loc 1 407 21
 1120 004a 134B     		ldr	r3, .L49
 1121 004c 0022     		movs	r2, #0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 28


 1122 004e 5A66     		str	r2, [r3, #100]
 408:Core/Src/main.c ****   if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 1123              		.loc 1 408 7
 1124 0050 1148     		ldr	r0, .L49
 1125 0052 FFF7FEFF 		bl	HAL_UART_Init
 1126 0056 0346     		mov	r3, r0
 1127              		.loc 1 408 6
 1128 0058 002B     		cmp	r3, #0
 1129 005a 01D0     		beq	.L44
 409:Core/Src/main.c ****   {
 410:Core/Src/main.c ****     Error_Handler();
 1130              		.loc 1 410 5
 1131 005c FFF7FEFF 		bl	Error_Handler
 1132              	.L44:
 411:Core/Src/main.c ****   }
 412:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&hlpuart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 1133              		.loc 1 412 7
 1134 0060 0021     		movs	r1, #0
 1135 0062 0D48     		ldr	r0, .L49
 1136 0064 FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 1137 0068 0346     		mov	r3, r0
 1138              		.loc 1 412 6
 1139 006a 002B     		cmp	r3, #0
 1140 006c 01D0     		beq	.L45
 413:Core/Src/main.c ****   {
 414:Core/Src/main.c ****     Error_Handler();
 1141              		.loc 1 414 5
 1142 006e FFF7FEFF 		bl	Error_Handler
 1143              	.L45:
 415:Core/Src/main.c ****   }
 416:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&hlpuart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 1144              		.loc 1 416 7
 1145 0072 0021     		movs	r1, #0
 1146 0074 0848     		ldr	r0, .L49
 1147 0076 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 1148 007a 0346     		mov	r3, r0
 1149              		.loc 1 416 6
 1150 007c 002B     		cmp	r3, #0
 1151 007e 01D0     		beq	.L46
 417:Core/Src/main.c ****   {
 418:Core/Src/main.c ****     Error_Handler();
 1152              		.loc 1 418 5
 1153 0080 FFF7FEFF 		bl	Error_Handler
 1154              	.L46:
 419:Core/Src/main.c ****   }
 420:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&hlpuart1) != HAL_OK)
 1155              		.loc 1 420 7
 1156 0084 0448     		ldr	r0, .L49
 1157 0086 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 1158 008a 0346     		mov	r3, r0
 1159              		.loc 1 420 6
 1160 008c 002B     		cmp	r3, #0
 1161 008e 01D0     		beq	.L48
 421:Core/Src/main.c ****   {
 422:Core/Src/main.c ****     Error_Handler();
 1162              		.loc 1 422 5
 1163 0090 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 29


 1164              	.L48:
 423:Core/Src/main.c ****   }
 424:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 2 */
 425:Core/Src/main.c **** 
 426:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 2 */
 427:Core/Src/main.c **** 
 428:Core/Src/main.c **** }
 1165              		.loc 1 428 1
 1166 0094 00BF     		nop
 1167 0096 80BD     		pop	{r7, pc}
 1168              	.L50:
 1169              		.align	2
 1170              	.L49:
 1171 0098 00000000 		.word	hlpuart1
 1172 009c 00800040 		.word	1073774592
 1173              		.cfi_endproc
 1174              	.LFE332:
 1176              		.section	.text.MX_UART4_Init,"ax",%progbits
 1177              		.align	1
 1178              		.syntax unified
 1179              		.thumb
 1180              		.thumb_func
 1182              	MX_UART4_Init:
 1183              	.LFB333:
 429:Core/Src/main.c **** 
 430:Core/Src/main.c **** /**
 431:Core/Src/main.c ****   * @brief UART4 Initialization Function
 432:Core/Src/main.c ****   * @param None
 433:Core/Src/main.c ****   * @retval None
 434:Core/Src/main.c ****   */
 435:Core/Src/main.c **** static void MX_UART4_Init(void)
 436:Core/Src/main.c **** {
 1184              		.loc 1 436 1
 1185              		.cfi_startproc
 1186              		@ args = 0, pretend = 0, frame = 0
 1187              		@ frame_needed = 1, uses_anonymous_args = 0
 1188 0000 80B5     		push	{r7, lr}
 1189              		.cfi_def_cfa_offset 8
 1190              		.cfi_offset 7, -8
 1191              		.cfi_offset 14, -4
 1192 0002 00AF     		add	r7, sp, #0
 1193              		.cfi_def_cfa_register 7
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 0 */
 439:Core/Src/main.c **** 
 440:Core/Src/main.c ****   /* USER CODE END UART4_Init 0 */
 441:Core/Src/main.c **** 
 442:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 1 */
 443:Core/Src/main.c **** 
 444:Core/Src/main.c ****   /* USER CODE END UART4_Init 1 */
 445:Core/Src/main.c ****   huart4.Instance = UART4;
 1194              		.loc 1 445 19
 1195 0004 224B     		ldr	r3, .L57
 1196 0006 234A     		ldr	r2, .L57+4
 1197 0008 1A60     		str	r2, [r3]
 446:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
 1198              		.loc 1 446 24
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 30


 1199 000a 214B     		ldr	r3, .L57
 1200 000c 4FF4E132 		mov	r2, #115200
 1201 0010 5A60     		str	r2, [r3, #4]
 447:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 1202              		.loc 1 447 26
 1203 0012 1F4B     		ldr	r3, .L57
 1204 0014 0022     		movs	r2, #0
 1205 0016 9A60     		str	r2, [r3, #8]
 448:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 1206              		.loc 1 448 24
 1207 0018 1D4B     		ldr	r3, .L57
 1208 001a 0022     		movs	r2, #0
 1209 001c DA60     		str	r2, [r3, #12]
 449:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 1210              		.loc 1 449 22
 1211 001e 1C4B     		ldr	r3, .L57
 1212 0020 0022     		movs	r2, #0
 1213 0022 1A61     		str	r2, [r3, #16]
 450:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 1214              		.loc 1 450 20
 1215 0024 1A4B     		ldr	r3, .L57
 1216 0026 0C22     		movs	r2, #12
 1217 0028 5A61     		str	r2, [r3, #20]
 451:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1218              		.loc 1 451 25
 1219 002a 194B     		ldr	r3, .L57
 1220 002c 0022     		movs	r2, #0
 1221 002e 9A61     		str	r2, [r3, #24]
 452:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 1222              		.loc 1 452 28
 1223 0030 174B     		ldr	r3, .L57
 1224 0032 0022     		movs	r2, #0
 1225 0034 DA61     		str	r2, [r3, #28]
 453:Core/Src/main.c ****   huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1226              		.loc 1 453 30
 1227 0036 164B     		ldr	r3, .L57
 1228 0038 0022     		movs	r2, #0
 1229 003a 1A62     		str	r2, [r3, #32]
 454:Core/Src/main.c ****   huart4.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 1230              		.loc 1 454 30
 1231 003c 144B     		ldr	r3, .L57
 1232 003e 0022     		movs	r2, #0
 1233 0040 5A62     		str	r2, [r3, #36]
 455:Core/Src/main.c ****   huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1234              		.loc 1 455 38
 1235 0042 134B     		ldr	r3, .L57
 1236 0044 0022     		movs	r2, #0
 1237 0046 9A62     		str	r2, [r3, #40]
 456:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 1238              		.loc 1 456 7
 1239 0048 1148     		ldr	r0, .L57
 1240 004a FFF7FEFF 		bl	HAL_UART_Init
 1241 004e 0346     		mov	r3, r0
 1242              		.loc 1 456 6
 1243 0050 002B     		cmp	r3, #0
 1244 0052 01D0     		beq	.L52
 457:Core/Src/main.c ****   {
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 31


 458:Core/Src/main.c ****     Error_Handler();
 1245              		.loc 1 458 5
 1246 0054 FFF7FEFF 		bl	Error_Handler
 1247              	.L52:
 459:Core/Src/main.c ****   }
 460:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart4, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 1248              		.loc 1 460 7
 1249 0058 0021     		movs	r1, #0
 1250 005a 0D48     		ldr	r0, .L57
 1251 005c FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 1252 0060 0346     		mov	r3, r0
 1253              		.loc 1 460 6
 1254 0062 002B     		cmp	r3, #0
 1255 0064 01D0     		beq	.L53
 461:Core/Src/main.c ****   {
 462:Core/Src/main.c ****     Error_Handler();
 1256              		.loc 1 462 5
 1257 0066 FFF7FEFF 		bl	Error_Handler
 1258              	.L53:
 463:Core/Src/main.c ****   }
 464:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart4, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 1259              		.loc 1 464 7
 1260 006a 0021     		movs	r1, #0
 1261 006c 0848     		ldr	r0, .L57
 1262 006e FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 1263 0072 0346     		mov	r3, r0
 1264              		.loc 1 464 6
 1265 0074 002B     		cmp	r3, #0
 1266 0076 01D0     		beq	.L54
 465:Core/Src/main.c ****   {
 466:Core/Src/main.c ****     Error_Handler();
 1267              		.loc 1 466 5
 1268 0078 FFF7FEFF 		bl	Error_Handler
 1269              	.L54:
 467:Core/Src/main.c ****   }
 468:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&huart4) != HAL_OK)
 1270              		.loc 1 468 7
 1271 007c 0448     		ldr	r0, .L57
 1272 007e FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 1273 0082 0346     		mov	r3, r0
 1274              		.loc 1 468 6
 1275 0084 002B     		cmp	r3, #0
 1276 0086 01D0     		beq	.L56
 469:Core/Src/main.c ****   {
 470:Core/Src/main.c ****     Error_Handler();
 1277              		.loc 1 470 5
 1278 0088 FFF7FEFF 		bl	Error_Handler
 1279              	.L56:
 471:Core/Src/main.c ****   }
 472:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 2 */
 473:Core/Src/main.c **** 
 474:Core/Src/main.c ****   /* USER CODE END UART4_Init 2 */
 475:Core/Src/main.c **** 
 476:Core/Src/main.c **** }
 1280              		.loc 1 476 1
 1281 008c 00BF     		nop
 1282 008e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 32


 1283              	.L58:
 1284              		.align	2
 1285              	.L57:
 1286 0090 00000000 		.word	huart4
 1287 0094 004C0040 		.word	1073761280
 1288              		.cfi_endproc
 1289              	.LFE333:
 1291              		.section	.text.MX_TIM3_Init,"ax",%progbits
 1292              		.align	1
 1293              		.syntax unified
 1294              		.thumb
 1295              		.thumb_func
 1297              	MX_TIM3_Init:
 1298              	.LFB334:
 477:Core/Src/main.c **** 
 478:Core/Src/main.c **** /**
 479:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 480:Core/Src/main.c ****   * @param None
 481:Core/Src/main.c ****   * @retval None
 482:Core/Src/main.c ****   */
 483:Core/Src/main.c **** static void MX_TIM3_Init(void)
 484:Core/Src/main.c **** {
 1299              		.loc 1 484 1
 1300              		.cfi_startproc
 1301              		@ args = 0, pretend = 0, frame = 56
 1302              		@ frame_needed = 1, uses_anonymous_args = 0
 1303 0000 80B5     		push	{r7, lr}
 1304              		.cfi_def_cfa_offset 8
 1305              		.cfi_offset 7, -8
 1306              		.cfi_offset 14, -4
 1307 0002 8EB0     		sub	sp, sp, #56
 1308              		.cfi_def_cfa_offset 64
 1309 0004 00AF     		add	r7, sp, #0
 1310              		.cfi_def_cfa_register 7
 485:Core/Src/main.c **** 
 486:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 487:Core/Src/main.c **** 
 488:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 489:Core/Src/main.c **** 
 490:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1311              		.loc 1 490 26
 1312 0006 07F12803 		add	r3, r7, #40
 1313 000a 0022     		movs	r2, #0
 1314 000c 1A60     		str	r2, [r3]
 1315 000e 5A60     		str	r2, [r3, #4]
 1316 0010 9A60     		str	r2, [r3, #8]
 1317 0012 DA60     		str	r2, [r3, #12]
 491:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1318              		.loc 1 491 27
 1319 0014 07F11C03 		add	r3, r7, #28
 1320 0018 0022     		movs	r2, #0
 1321 001a 1A60     		str	r2, [r3]
 1322 001c 5A60     		str	r2, [r3, #4]
 1323 001e 9A60     		str	r2, [r3, #8]
 492:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1324              		.loc 1 492 22
 1325 0020 3B46     		mov	r3, r7
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 33


 1326 0022 0022     		movs	r2, #0
 1327 0024 1A60     		str	r2, [r3]
 1328 0026 5A60     		str	r2, [r3, #4]
 1329 0028 9A60     		str	r2, [r3, #8]
 1330 002a DA60     		str	r2, [r3, #12]
 1331 002c 1A61     		str	r2, [r3, #16]
 1332 002e 5A61     		str	r2, [r3, #20]
 1333 0030 9A61     		str	r2, [r3, #24]
 493:Core/Src/main.c **** 
 494:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 495:Core/Src/main.c **** 
 496:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 497:Core/Src/main.c ****   htim3.Instance = TIM3;
 1334              		.loc 1 497 18
 1335 0032 374B     		ldr	r3, .L67
 1336 0034 374A     		ldr	r2, .L67+4
 1337 0036 1A60     		str	r2, [r3]
 498:Core/Src/main.c ****   htim3.Init.Prescaler = 119;
 1338              		.loc 1 498 24
 1339 0038 354B     		ldr	r3, .L67
 1340 003a 7722     		movs	r2, #119
 1341 003c 5A60     		str	r2, [r3, #4]
 499:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1342              		.loc 1 499 26
 1343 003e 344B     		ldr	r3, .L67
 1344 0040 0022     		movs	r2, #0
 1345 0042 9A60     		str	r2, [r3, #8]
 500:Core/Src/main.c ****   htim3.Init.Period = 255;
 1346              		.loc 1 500 21
 1347 0044 324B     		ldr	r3, .L67
 1348 0046 FF22     		movs	r2, #255
 1349 0048 DA60     		str	r2, [r3, #12]
 501:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1350              		.loc 1 501 28
 1351 004a 314B     		ldr	r3, .L67
 1352 004c 0022     		movs	r2, #0
 1353 004e 1A61     		str	r2, [r3, #16]
 502:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1354              		.loc 1 502 32
 1355 0050 2F4B     		ldr	r3, .L67
 1356 0052 8022     		movs	r2, #128
 1357 0054 9A61     		str	r2, [r3, #24]
 503:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1358              		.loc 1 503 7
 1359 0056 2E48     		ldr	r0, .L67
 1360 0058 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1361 005c 0346     		mov	r3, r0
 1362              		.loc 1 503 6
 1363 005e 002B     		cmp	r3, #0
 1364 0060 01D0     		beq	.L60
 504:Core/Src/main.c ****   {
 505:Core/Src/main.c ****     Error_Handler();
 1365              		.loc 1 505 5
 1366 0062 FFF7FEFF 		bl	Error_Handler
 1367              	.L60:
 506:Core/Src/main.c ****   }
 507:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 34


 1368              		.loc 1 507 34
 1369 0066 4FF48053 		mov	r3, #4096
 1370 006a BB62     		str	r3, [r7, #40]
 508:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1371              		.loc 1 508 7
 1372 006c 07F12803 		add	r3, r7, #40
 1373 0070 1946     		mov	r1, r3
 1374 0072 2748     		ldr	r0, .L67
 1375 0074 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1376 0078 0346     		mov	r3, r0
 1377              		.loc 1 508 6
 1378 007a 002B     		cmp	r3, #0
 1379 007c 01D0     		beq	.L61
 509:Core/Src/main.c ****   {
 510:Core/Src/main.c ****     Error_Handler();
 1380              		.loc 1 510 5
 1381 007e FFF7FEFF 		bl	Error_Handler
 1382              	.L61:
 511:Core/Src/main.c ****   }
 512:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 1383              		.loc 1 512 7
 1384 0082 2348     		ldr	r0, .L67
 1385 0084 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1386 0088 0346     		mov	r3, r0
 1387              		.loc 1 512 6
 1388 008a 002B     		cmp	r3, #0
 1389 008c 01D0     		beq	.L62
 513:Core/Src/main.c ****   {
 514:Core/Src/main.c ****     Error_Handler();
 1390              		.loc 1 514 5
 1391 008e FFF7FEFF 		bl	Error_Handler
 1392              	.L62:
 515:Core/Src/main.c ****   }
 516:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1393              		.loc 1 516 37
 1394 0092 0023     		movs	r3, #0
 1395 0094 FB61     		str	r3, [r7, #28]
 517:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1396              		.loc 1 517 33
 1397 0096 0023     		movs	r3, #0
 1398 0098 7B62     		str	r3, [r7, #36]
 518:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1399              		.loc 1 518 7
 1400 009a 07F11C03 		add	r3, r7, #28
 1401 009e 1946     		mov	r1, r3
 1402 00a0 1B48     		ldr	r0, .L67
 1403 00a2 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1404 00a6 0346     		mov	r3, r0
 1405              		.loc 1 518 6
 1406 00a8 002B     		cmp	r3, #0
 1407 00aa 01D0     		beq	.L63
 519:Core/Src/main.c ****   {
 520:Core/Src/main.c ****     Error_Handler();
 1408              		.loc 1 520 5
 1409 00ac FFF7FEFF 		bl	Error_Handler
 1410              	.L63:
 521:Core/Src/main.c ****   }
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 35


 522:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 1411              		.loc 1 522 20
 1412 00b0 6023     		movs	r3, #96
 1413 00b2 3B60     		str	r3, [r7]
 523:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1414              		.loc 1 523 19
 1415 00b4 0023     		movs	r3, #0
 1416 00b6 7B60     		str	r3, [r7, #4]
 524:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1417              		.loc 1 524 24
 1418 00b8 0023     		movs	r3, #0
 1419 00ba BB60     		str	r3, [r7, #8]
 525:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1420              		.loc 1 525 24
 1421 00bc 0023     		movs	r3, #0
 1422 00be 3B61     		str	r3, [r7, #16]
 526:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1423              		.loc 1 526 7
 1424 00c0 3B46     		mov	r3, r7
 1425 00c2 0022     		movs	r2, #0
 1426 00c4 1946     		mov	r1, r3
 1427 00c6 1248     		ldr	r0, .L67
 1428 00c8 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1429 00cc 0346     		mov	r3, r0
 1430              		.loc 1 526 6
 1431 00ce 002B     		cmp	r3, #0
 1432 00d0 01D0     		beq	.L64
 527:Core/Src/main.c ****   {
 528:Core/Src/main.c ****     Error_Handler();
 1433              		.loc 1 528 5
 1434 00d2 FFF7FEFF 		bl	Error_Handler
 1435              	.L64:
 529:Core/Src/main.c ****   }
 530:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 1436              		.loc 1 530 7
 1437 00d6 3B46     		mov	r3, r7
 1438 00d8 0422     		movs	r2, #4
 1439 00da 1946     		mov	r1, r3
 1440 00dc 0C48     		ldr	r0, .L67
 1441 00de FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1442 00e2 0346     		mov	r3, r0
 1443              		.loc 1 530 6
 1444 00e4 002B     		cmp	r3, #0
 1445 00e6 01D0     		beq	.L65
 531:Core/Src/main.c ****   {
 532:Core/Src/main.c ****     Error_Handler();
 1446              		.loc 1 532 5
 1447 00e8 FFF7FEFF 		bl	Error_Handler
 1448              	.L65:
 533:Core/Src/main.c ****   }
 534:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 1449              		.loc 1 534 7
 1450 00ec 3B46     		mov	r3, r7
 1451 00ee 0822     		movs	r2, #8
 1452 00f0 1946     		mov	r1, r3
 1453 00f2 0748     		ldr	r0, .L67
 1454 00f4 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 36


 1455 00f8 0346     		mov	r3, r0
 1456              		.loc 1 534 6
 1457 00fa 002B     		cmp	r3, #0
 1458 00fc 01D0     		beq	.L66
 535:Core/Src/main.c ****   {
 536:Core/Src/main.c ****     Error_Handler();
 1459              		.loc 1 536 5
 1460 00fe FFF7FEFF 		bl	Error_Handler
 1461              	.L66:
 537:Core/Src/main.c ****   }
 538:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 539:Core/Src/main.c **** 
 540:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 541:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 1462              		.loc 1 541 3
 1463 0102 0348     		ldr	r0, .L67
 1464 0104 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 542:Core/Src/main.c **** 
 543:Core/Src/main.c **** }
 1465              		.loc 1 543 1
 1466 0108 00BF     		nop
 1467 010a 3837     		adds	r7, r7, #56
 1468              		.cfi_def_cfa_offset 8
 1469 010c BD46     		mov	sp, r7
 1470              		.cfi_def_cfa_register 13
 1471              		@ sp needed
 1472 010e 80BD     		pop	{r7, pc}
 1473              	.L68:
 1474              		.align	2
 1475              	.L67:
 1476 0110 00000000 		.word	htim3
 1477 0114 00040040 		.word	1073742848
 1478              		.cfi_endproc
 1479              	.LFE334:
 1481              		.section	.text.MX_TIM4_Init,"ax",%progbits
 1482              		.align	1
 1483              		.syntax unified
 1484              		.thumb
 1485              		.thumb_func
 1487              	MX_TIM4_Init:
 1488              	.LFB335:
 544:Core/Src/main.c **** 
 545:Core/Src/main.c **** /**
 546:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 547:Core/Src/main.c ****   * @param None
 548:Core/Src/main.c ****   * @retval None
 549:Core/Src/main.c ****   */
 550:Core/Src/main.c **** static void MX_TIM4_Init(void)
 551:Core/Src/main.c **** {
 1489              		.loc 1 551 1
 1490              		.cfi_startproc
 1491              		@ args = 0, pretend = 0, frame = 32
 1492              		@ frame_needed = 1, uses_anonymous_args = 0
 1493 0000 80B5     		push	{r7, lr}
 1494              		.cfi_def_cfa_offset 8
 1495              		.cfi_offset 7, -8
 1496              		.cfi_offset 14, -4
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 37


 1497 0002 88B0     		sub	sp, sp, #32
 1498              		.cfi_def_cfa_offset 40
 1499 0004 00AF     		add	r7, sp, #0
 1500              		.cfi_def_cfa_register 7
 552:Core/Src/main.c **** 
 553:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 554:Core/Src/main.c **** 
 555:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 556:Core/Src/main.c **** 
 557:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1501              		.loc 1 557 26
 1502 0006 07F11003 		add	r3, r7, #16
 1503 000a 0022     		movs	r2, #0
 1504 000c 1A60     		str	r2, [r3]
 1505 000e 5A60     		str	r2, [r3, #4]
 1506 0010 9A60     		str	r2, [r3, #8]
 1507 0012 DA60     		str	r2, [r3, #12]
 558:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1508              		.loc 1 558 27
 1509 0014 3B1D     		adds	r3, r7, #4
 1510 0016 0022     		movs	r2, #0
 1511 0018 1A60     		str	r2, [r3]
 1512 001a 5A60     		str	r2, [r3, #4]
 1513 001c 9A60     		str	r2, [r3, #8]
 559:Core/Src/main.c **** 
 560:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 561:Core/Src/main.c **** 
 562:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 563:Core/Src/main.c ****   htim4.Instance = TIM4;
 1514              		.loc 1 563 18
 1515 001e 1D4B     		ldr	r3, .L74
 1516 0020 1D4A     		ldr	r2, .L74+4
 1517 0022 1A60     		str	r2, [r3]
 564:Core/Src/main.c ****   htim4.Init.Prescaler = 119;
 1518              		.loc 1 564 24
 1519 0024 1B4B     		ldr	r3, .L74
 1520 0026 7722     		movs	r2, #119
 1521 0028 5A60     		str	r2, [r3, #4]
 565:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 1522              		.loc 1 565 26
 1523 002a 1A4B     		ldr	r3, .L74
 1524 002c 0022     		movs	r2, #0
 1525 002e 9A60     		str	r2, [r3, #8]
 566:Core/Src/main.c ****   htim4.Init.Period = 65535;
 1526              		.loc 1 566 21
 1527 0030 184B     		ldr	r3, .L74
 1528 0032 4FF6FF72 		movw	r2, #65535
 1529 0036 DA60     		str	r2, [r3, #12]
 567:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1530              		.loc 1 567 28
 1531 0038 164B     		ldr	r3, .L74
 1532 003a 0022     		movs	r2, #0
 1533 003c 1A61     		str	r2, [r3, #16]
 568:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1534              		.loc 1 568 32
 1535 003e 154B     		ldr	r3, .L74
 1536 0040 0022     		movs	r2, #0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 38


 1537 0042 9A61     		str	r2, [r3, #24]
 569:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 1538              		.loc 1 569 7
 1539 0044 1348     		ldr	r0, .L74
 1540 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1541 004a 0346     		mov	r3, r0
 1542              		.loc 1 569 6
 1543 004c 002B     		cmp	r3, #0
 1544 004e 01D0     		beq	.L70
 570:Core/Src/main.c ****   {
 571:Core/Src/main.c ****     Error_Handler();
 1545              		.loc 1 571 5
 1546 0050 FFF7FEFF 		bl	Error_Handler
 1547              	.L70:
 572:Core/Src/main.c ****   }
 573:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1548              		.loc 1 573 34
 1549 0054 4FF48053 		mov	r3, #4096
 1550 0058 3B61     		str	r3, [r7, #16]
 574:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 1551              		.loc 1 574 7
 1552 005a 07F11003 		add	r3, r7, #16
 1553 005e 1946     		mov	r1, r3
 1554 0060 0C48     		ldr	r0, .L74
 1555 0062 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1556 0066 0346     		mov	r3, r0
 1557              		.loc 1 574 6
 1558 0068 002B     		cmp	r3, #0
 1559 006a 01D0     		beq	.L71
 575:Core/Src/main.c ****   {
 576:Core/Src/main.c ****     Error_Handler();
 1560              		.loc 1 576 5
 1561 006c FFF7FEFF 		bl	Error_Handler
 1562              	.L71:
 577:Core/Src/main.c ****   }
 578:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1563              		.loc 1 578 37
 1564 0070 0023     		movs	r3, #0
 1565 0072 7B60     		str	r3, [r7, #4]
 579:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1566              		.loc 1 579 33
 1567 0074 0023     		movs	r3, #0
 1568 0076 FB60     		str	r3, [r7, #12]
 580:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 1569              		.loc 1 580 7
 1570 0078 3B1D     		adds	r3, r7, #4
 1571 007a 1946     		mov	r1, r3
 1572 007c 0548     		ldr	r0, .L74
 1573 007e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1574 0082 0346     		mov	r3, r0
 1575              		.loc 1 580 6
 1576 0084 002B     		cmp	r3, #0
 1577 0086 01D0     		beq	.L73
 581:Core/Src/main.c ****   {
 582:Core/Src/main.c ****     Error_Handler();
 1578              		.loc 1 582 5
 1579 0088 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 39


 1580              	.L73:
 583:Core/Src/main.c ****   }
 584:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 585:Core/Src/main.c **** 
 586:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 587:Core/Src/main.c **** 
 588:Core/Src/main.c **** }
 1581              		.loc 1 588 1
 1582 008c 00BF     		nop
 1583 008e 2037     		adds	r7, r7, #32
 1584              		.cfi_def_cfa_offset 8
 1585 0090 BD46     		mov	sp, r7
 1586              		.cfi_def_cfa_register 13
 1587              		@ sp needed
 1588 0092 80BD     		pop	{r7, pc}
 1589              	.L75:
 1590              		.align	2
 1591              	.L74:
 1592 0094 00000000 		.word	htim4
 1593 0098 00080040 		.word	1073743872
 1594              		.cfi_endproc
 1595              	.LFE335:
 1597              		.section	.text.MX_TIM5_Init,"ax",%progbits
 1598              		.align	1
 1599              		.syntax unified
 1600              		.thumb
 1601              		.thumb_func
 1603              	MX_TIM5_Init:
 1604              	.LFB336:
 589:Core/Src/main.c **** 
 590:Core/Src/main.c **** /**
 591:Core/Src/main.c ****   * @brief TIM5 Initialization Function
 592:Core/Src/main.c ****   * @param None
 593:Core/Src/main.c ****   * @retval None
 594:Core/Src/main.c ****   */
 595:Core/Src/main.c **** static void MX_TIM5_Init(void)
 596:Core/Src/main.c **** {
 1605              		.loc 1 596 1
 1606              		.cfi_startproc
 1607              		@ args = 0, pretend = 0, frame = 32
 1608              		@ frame_needed = 1, uses_anonymous_args = 0
 1609 0000 80B5     		push	{r7, lr}
 1610              		.cfi_def_cfa_offset 8
 1611              		.cfi_offset 7, -8
 1612              		.cfi_offset 14, -4
 1613 0002 88B0     		sub	sp, sp, #32
 1614              		.cfi_def_cfa_offset 40
 1615 0004 00AF     		add	r7, sp, #0
 1616              		.cfi_def_cfa_register 7
 597:Core/Src/main.c **** 
 598:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 0 */
 599:Core/Src/main.c **** 
 600:Core/Src/main.c ****   /* USER CODE END TIM5_Init 0 */
 601:Core/Src/main.c **** 
 602:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1617              		.loc 1 602 26
 1618 0006 07F11003 		add	r3, r7, #16
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 40


 1619 000a 0022     		movs	r2, #0
 1620 000c 1A60     		str	r2, [r3]
 1621 000e 5A60     		str	r2, [r3, #4]
 1622 0010 9A60     		str	r2, [r3, #8]
 1623 0012 DA60     		str	r2, [r3, #12]
 603:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1624              		.loc 1 603 27
 1625 0014 3B1D     		adds	r3, r7, #4
 1626 0016 0022     		movs	r2, #0
 1627 0018 1A60     		str	r2, [r3]
 1628 001a 5A60     		str	r2, [r3, #4]
 1629 001c 9A60     		str	r2, [r3, #8]
 604:Core/Src/main.c **** 
 605:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 1 */
 606:Core/Src/main.c **** 
 607:Core/Src/main.c ****   /* USER CODE END TIM5_Init 1 */
 608:Core/Src/main.c ****   htim5.Instance = TIM5;
 1630              		.loc 1 608 18
 1631 001e 1D4B     		ldr	r3, .L81
 1632 0020 1D4A     		ldr	r2, .L81+4
 1633 0022 1A60     		str	r2, [r3]
 609:Core/Src/main.c ****   htim5.Init.Prescaler = 119;
 1634              		.loc 1 609 24
 1635 0024 1B4B     		ldr	r3, .L81
 1636 0026 7722     		movs	r2, #119
 1637 0028 5A60     		str	r2, [r3, #4]
 610:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 1638              		.loc 1 610 26
 1639 002a 1A4B     		ldr	r3, .L81
 1640 002c 0022     		movs	r2, #0
 1641 002e 9A60     		str	r2, [r3, #8]
 611:Core/Src/main.c ****   htim5.Init.Period = 4294967295;
 1642              		.loc 1 611 21
 1643 0030 184B     		ldr	r3, .L81
 1644 0032 4FF0FF32 		mov	r2, #-1
 1645 0036 DA60     		str	r2, [r3, #12]
 612:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1646              		.loc 1 612 28
 1647 0038 164B     		ldr	r3, .L81
 1648 003a 0022     		movs	r2, #0
 1649 003c 1A61     		str	r2, [r3, #16]
 613:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1650              		.loc 1 613 32
 1651 003e 154B     		ldr	r3, .L81
 1652 0040 0022     		movs	r2, #0
 1653 0042 9A61     		str	r2, [r3, #24]
 614:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 1654              		.loc 1 614 7
 1655 0044 1348     		ldr	r0, .L81
 1656 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1657 004a 0346     		mov	r3, r0
 1658              		.loc 1 614 6
 1659 004c 002B     		cmp	r3, #0
 1660 004e 01D0     		beq	.L77
 615:Core/Src/main.c ****   {
 616:Core/Src/main.c ****     Error_Handler();
 1661              		.loc 1 616 5
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 41


 1662 0050 FFF7FEFF 		bl	Error_Handler
 1663              	.L77:
 617:Core/Src/main.c ****   }
 618:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1664              		.loc 1 618 34
 1665 0054 4FF48053 		mov	r3, #4096
 1666 0058 3B61     		str	r3, [r7, #16]
 619:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 1667              		.loc 1 619 7
 1668 005a 07F11003 		add	r3, r7, #16
 1669 005e 1946     		mov	r1, r3
 1670 0060 0C48     		ldr	r0, .L81
 1671 0062 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1672 0066 0346     		mov	r3, r0
 1673              		.loc 1 619 6
 1674 0068 002B     		cmp	r3, #0
 1675 006a 01D0     		beq	.L78
 620:Core/Src/main.c ****   {
 621:Core/Src/main.c ****     Error_Handler();
 1676              		.loc 1 621 5
 1677 006c FFF7FEFF 		bl	Error_Handler
 1678              	.L78:
 622:Core/Src/main.c ****   }
 623:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1679              		.loc 1 623 37
 1680 0070 0023     		movs	r3, #0
 1681 0072 7B60     		str	r3, [r7, #4]
 624:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1682              		.loc 1 624 33
 1683 0074 0023     		movs	r3, #0
 1684 0076 FB60     		str	r3, [r7, #12]
 625:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 1685              		.loc 1 625 7
 1686 0078 3B1D     		adds	r3, r7, #4
 1687 007a 1946     		mov	r1, r3
 1688 007c 0548     		ldr	r0, .L81
 1689 007e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1690 0082 0346     		mov	r3, r0
 1691              		.loc 1 625 6
 1692 0084 002B     		cmp	r3, #0
 1693 0086 01D0     		beq	.L80
 626:Core/Src/main.c ****   {
 627:Core/Src/main.c ****     Error_Handler();
 1694              		.loc 1 627 5
 1695 0088 FFF7FEFF 		bl	Error_Handler
 1696              	.L80:
 628:Core/Src/main.c ****   }
 629:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 2 */
 630:Core/Src/main.c **** 
 631:Core/Src/main.c ****   /* USER CODE END TIM5_Init 2 */
 632:Core/Src/main.c **** 
 633:Core/Src/main.c **** }
 1697              		.loc 1 633 1
 1698 008c 00BF     		nop
 1699 008e 2037     		adds	r7, r7, #32
 1700              		.cfi_def_cfa_offset 8
 1701 0090 BD46     		mov	sp, r7
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 42


 1702              		.cfi_def_cfa_register 13
 1703              		@ sp needed
 1704 0092 80BD     		pop	{r7, pc}
 1705              	.L82:
 1706              		.align	2
 1707              	.L81:
 1708 0094 00000000 		.word	htim5
 1709 0098 000C0040 		.word	1073744896
 1710              		.cfi_endproc
 1711              	.LFE336:
 1713              		.section	.text.MX_USB_OTG_FS_PCD_Init,"ax",%progbits
 1714              		.align	1
 1715              		.syntax unified
 1716              		.thumb
 1717              		.thumb_func
 1719              	MX_USB_OTG_FS_PCD_Init:
 1720              	.LFB337:
 634:Core/Src/main.c **** 
 635:Core/Src/main.c **** /**
 636:Core/Src/main.c ****   * @brief USB_OTG_FS Initialization Function
 637:Core/Src/main.c ****   * @param None
 638:Core/Src/main.c ****   * @retval None
 639:Core/Src/main.c ****   */
 640:Core/Src/main.c **** static void MX_USB_OTG_FS_PCD_Init(void)
 641:Core/Src/main.c **** {
 1721              		.loc 1 641 1
 1722              		.cfi_startproc
 1723              		@ args = 0, pretend = 0, frame = 0
 1724              		@ frame_needed = 1, uses_anonymous_args = 0
 1725 0000 80B5     		push	{r7, lr}
 1726              		.cfi_def_cfa_offset 8
 1727              		.cfi_offset 7, -8
 1728              		.cfi_offset 14, -4
 1729 0002 00AF     		add	r7, sp, #0
 1730              		.cfi_def_cfa_register 7
 642:Core/Src/main.c **** 
 643:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 0 */
 644:Core/Src/main.c **** 
 645:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 0 */
 646:Core/Src/main.c **** 
 647:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 1 */
 648:Core/Src/main.c **** 
 649:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 1 */
 650:Core/Src/main.c ****   hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 1731              		.loc 1 650 28
 1732 0004 124B     		ldr	r3, .L86
 1733 0006 4FF0A042 		mov	r2, #1342177280
 1734 000a 1A60     		str	r2, [r3]
 651:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 1735              		.loc 1 651 38
 1736 000c 104B     		ldr	r3, .L86
 1737 000e 0622     		movs	r2, #6
 1738 0010 5A60     		str	r2, [r3, #4]
 652:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 1739              		.loc 1 652 35
 1740 0012 0F4B     		ldr	r3, .L86
 1741 0014 0222     		movs	r2, #2
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 43


 1742 0016 9A61     		str	r2, [r3, #24]
 653:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 1743              		.loc 1 653 35
 1744 0018 0D4B     		ldr	r3, .L86
 1745 001a 0122     		movs	r2, #1
 1746 001c DA61     		str	r2, [r3, #28]
 654:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 1747              		.loc 1 654 41
 1748 001e 0C4B     		ldr	r3, .L86
 1749 0020 0022     		movs	r2, #0
 1750 0022 1A62     		str	r2, [r3, #32]
 655:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 1751              		.loc 1 655 35
 1752 0024 0A4B     		ldr	r3, .L86
 1753 0026 0022     		movs	r2, #0
 1754 0028 5A62     		str	r2, [r3, #36]
 656:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.battery_charging_enable = ENABLE;
 1755              		.loc 1 656 48
 1756 002a 094B     		ldr	r3, .L86
 1757 002c 0122     		movs	r2, #1
 1758 002e 9A62     		str	r2, [r3, #40]
 657:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 1759              		.loc 1 657 42
 1760 0030 074B     		ldr	r3, .L86
 1761 0032 0022     		movs	r2, #0
 1762 0034 1A63     		str	r2, [r3, #48]
 658:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = ENABLE;
 1763              		.loc 1 658 44
 1764 0036 064B     		ldr	r3, .L86
 1765 0038 0122     		movs	r2, #1
 1766 003a DA62     		str	r2, [r3, #44]
 659:Core/Src/main.c ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 1767              		.loc 1 659 7
 1768 003c 0448     		ldr	r0, .L86
 1769 003e FFF7FEFF 		bl	HAL_PCD_Init
 1770 0042 0346     		mov	r3, r0
 1771              		.loc 1 659 6
 1772 0044 002B     		cmp	r3, #0
 1773 0046 01D0     		beq	.L85
 660:Core/Src/main.c ****   {
 661:Core/Src/main.c ****     Error_Handler();
 1774              		.loc 1 661 5
 1775 0048 FFF7FEFF 		bl	Error_Handler
 1776              	.L85:
 662:Core/Src/main.c ****   }
 663:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 2 */
 664:Core/Src/main.c **** 
 665:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 2 */
 666:Core/Src/main.c **** 
 667:Core/Src/main.c **** }
 1777              		.loc 1 667 1
 1778 004c 00BF     		nop
 1779 004e 80BD     		pop	{r7, pc}
 1780              	.L87:
 1781              		.align	2
 1782              	.L86:
 1783 0050 00000000 		.word	hpcd_USB_OTG_FS
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 44


 1784              		.cfi_endproc
 1785              	.LFE337:
 1787              		.section	.text.MX_DMA_Init,"ax",%progbits
 1788              		.align	1
 1789              		.syntax unified
 1790              		.thumb
 1791              		.thumb_func
 1793              	MX_DMA_Init:
 1794              	.LFB338:
 668:Core/Src/main.c **** 
 669:Core/Src/main.c **** /**
 670:Core/Src/main.c ****   * Enable DMA controller clock
 671:Core/Src/main.c ****   */
 672:Core/Src/main.c **** static void MX_DMA_Init(void)
 673:Core/Src/main.c **** {
 1795              		.loc 1 673 1
 1796              		.cfi_startproc
 1797              		@ args = 0, pretend = 0, frame = 8
 1798              		@ frame_needed = 1, uses_anonymous_args = 0
 1799 0000 80B5     		push	{r7, lr}
 1800              		.cfi_def_cfa_offset 8
 1801              		.cfi_offset 7, -8
 1802              		.cfi_offset 14, -4
 1803 0002 82B0     		sub	sp, sp, #8
 1804              		.cfi_def_cfa_offset 16
 1805 0004 00AF     		add	r7, sp, #0
 1806              		.cfi_def_cfa_register 7
 1807              	.LBB10:
 674:Core/Src/main.c **** 
 675:Core/Src/main.c ****   /* DMA controller clock enable */
 676:Core/Src/main.c ****   __HAL_RCC_DMAMUX1_CLK_ENABLE();
 1808              		.loc 1 676 3
 1809 0006 164B     		ldr	r3, .L89
 1810 0008 9B6C     		ldr	r3, [r3, #72]
 1811 000a 154A     		ldr	r2, .L89
 1812 000c 43F00403 		orr	r3, r3, #4
 1813 0010 9364     		str	r3, [r2, #72]
 1814 0012 134B     		ldr	r3, .L89
 1815 0014 9B6C     		ldr	r3, [r3, #72]
 1816 0016 03F00403 		and	r3, r3, #4
 1817 001a 7B60     		str	r3, [r7, #4]
 1818 001c 7B68     		ldr	r3, [r7, #4]
 1819              	.LBE10:
 1820              	.LBB11:
 677:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 1821              		.loc 1 677 3
 1822 001e 104B     		ldr	r3, .L89
 1823 0020 9B6C     		ldr	r3, [r3, #72]
 1824 0022 0F4A     		ldr	r2, .L89
 1825 0024 43F00103 		orr	r3, r3, #1
 1826 0028 9364     		str	r3, [r2, #72]
 1827 002a 0D4B     		ldr	r3, .L89
 1828 002c 9B6C     		ldr	r3, [r3, #72]
 1829 002e 03F00103 		and	r3, r3, #1
 1830 0032 3B60     		str	r3, [r7]
 1831 0034 3B68     		ldr	r3, [r7]
 1832              	.LBE11:
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 45


 678:Core/Src/main.c **** 
 679:Core/Src/main.c ****   /* DMA interrupt init */
 680:Core/Src/main.c ****   /* DMA1_Channel1_IRQn interrupt configuration */
 681:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 1833              		.loc 1 681 3
 1834 0036 0022     		movs	r2, #0
 1835 0038 0021     		movs	r1, #0
 1836 003a 0B20     		movs	r0, #11
 1837 003c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 682:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 1838              		.loc 1 682 3
 1839 0040 0B20     		movs	r0, #11
 1840 0042 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 683:Core/Src/main.c ****   /* DMA1_Channel2_IRQn interrupt configuration */
 684:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 0, 0);
 1841              		.loc 1 684 3
 1842 0046 0022     		movs	r2, #0
 1843 0048 0021     		movs	r1, #0
 1844 004a 0C20     		movs	r0, #12
 1845 004c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 685:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 1846              		.loc 1 685 3
 1847 0050 0C20     		movs	r0, #12
 1848 0052 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 686:Core/Src/main.c **** 
 687:Core/Src/main.c **** }
 1849              		.loc 1 687 1
 1850 0056 00BF     		nop
 1851 0058 0837     		adds	r7, r7, #8
 1852              		.cfi_def_cfa_offset 8
 1853 005a BD46     		mov	sp, r7
 1854              		.cfi_def_cfa_register 13
 1855              		@ sp needed
 1856 005c 80BD     		pop	{r7, pc}
 1857              	.L90:
 1858 005e 00BF     		.align	2
 1859              	.L89:
 1860 0060 00100240 		.word	1073876992
 1861              		.cfi_endproc
 1862              	.LFE338:
 1864              		.section	.text.MX_GPIO_Init,"ax",%progbits
 1865              		.align	1
 1866              		.syntax unified
 1867              		.thumb
 1868              		.thumb_func
 1870              	MX_GPIO_Init:
 1871              	.LFB339:
 688:Core/Src/main.c **** 
 689:Core/Src/main.c **** /**
 690:Core/Src/main.c ****   * @brief GPIO Initialization Function
 691:Core/Src/main.c ****   * @param None
 692:Core/Src/main.c ****   * @retval None
 693:Core/Src/main.c ****   */
 694:Core/Src/main.c **** static void MX_GPIO_Init(void)
 695:Core/Src/main.c **** {
 1872              		.loc 1 695 1
 1873              		.cfi_startproc
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 46


 1874              		@ args = 0, pretend = 0, frame = 48
 1875              		@ frame_needed = 1, uses_anonymous_args = 0
 1876 0000 80B5     		push	{r7, lr}
 1877              		.cfi_def_cfa_offset 8
 1878              		.cfi_offset 7, -8
 1879              		.cfi_offset 14, -4
 1880 0002 8CB0     		sub	sp, sp, #48
 1881              		.cfi_def_cfa_offset 56
 1882 0004 00AF     		add	r7, sp, #0
 1883              		.cfi_def_cfa_register 7
 696:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 1884              		.loc 1 696 20
 1885 0006 07F11C03 		add	r3, r7, #28
 1886 000a 0022     		movs	r2, #0
 1887 000c 1A60     		str	r2, [r3]
 1888 000e 5A60     		str	r2, [r3, #4]
 1889 0010 9A60     		str	r2, [r3, #8]
 1890 0012 DA60     		str	r2, [r3, #12]
 1891 0014 1A61     		str	r2, [r3, #16]
 1892              	.LBB12:
 697:Core/Src/main.c **** 
 698:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 699:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 1893              		.loc 1 699 3
 1894 0016 724B     		ldr	r3, .L92
 1895 0018 DB6C     		ldr	r3, [r3, #76]
 1896 001a 714A     		ldr	r2, .L92
 1897 001c 43F01003 		orr	r3, r3, #16
 1898 0020 D364     		str	r3, [r2, #76]
 1899 0022 6F4B     		ldr	r3, .L92
 1900 0024 DB6C     		ldr	r3, [r3, #76]
 1901 0026 03F01003 		and	r3, r3, #16
 1902 002a BB61     		str	r3, [r7, #24]
 1903 002c BB69     		ldr	r3, [r7, #24]
 1904              	.LBE12:
 1905              	.LBB13:
 700:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 1906              		.loc 1 700 3
 1907 002e 6C4B     		ldr	r3, .L92
 1908 0030 DB6C     		ldr	r3, [r3, #76]
 1909 0032 6B4A     		ldr	r2, .L92
 1910 0034 43F00403 		orr	r3, r3, #4
 1911 0038 D364     		str	r3, [r2, #76]
 1912 003a 694B     		ldr	r3, .L92
 1913 003c DB6C     		ldr	r3, [r3, #76]
 1914 003e 03F00403 		and	r3, r3, #4
 1915 0042 7B61     		str	r3, [r7, #20]
 1916 0044 7B69     		ldr	r3, [r7, #20]
 1917              	.LBE13:
 1918              	.LBB14:
 701:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 1919              		.loc 1 701 3
 1920 0046 664B     		ldr	r3, .L92
 1921 0048 DB6C     		ldr	r3, [r3, #76]
 1922 004a 654A     		ldr	r2, .L92
 1923 004c 43F02003 		orr	r3, r3, #32
 1924 0050 D364     		str	r3, [r2, #76]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 47


 1925 0052 634B     		ldr	r3, .L92
 1926 0054 DB6C     		ldr	r3, [r3, #76]
 1927 0056 03F02003 		and	r3, r3, #32
 1928 005a 3B61     		str	r3, [r7, #16]
 1929 005c 3B69     		ldr	r3, [r7, #16]
 1930              	.LBE14:
 1931              	.LBB15:
 702:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 1932              		.loc 1 702 3
 1933 005e 604B     		ldr	r3, .L92
 1934 0060 DB6C     		ldr	r3, [r3, #76]
 1935 0062 5F4A     		ldr	r2, .L92
 1936 0064 43F08003 		orr	r3, r3, #128
 1937 0068 D364     		str	r3, [r2, #76]
 1938 006a 5D4B     		ldr	r3, .L92
 1939 006c DB6C     		ldr	r3, [r3, #76]
 1940 006e 03F08003 		and	r3, r3, #128
 1941 0072 FB60     		str	r3, [r7, #12]
 1942 0074 FB68     		ldr	r3, [r7, #12]
 1943              	.LBE15:
 1944              	.LBB16:
 703:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1945              		.loc 1 703 3
 1946 0076 5A4B     		ldr	r3, .L92
 1947 0078 DB6C     		ldr	r3, [r3, #76]
 1948 007a 594A     		ldr	r2, .L92
 1949 007c 43F00103 		orr	r3, r3, #1
 1950 0080 D364     		str	r3, [r2, #76]
 1951 0082 574B     		ldr	r3, .L92
 1952 0084 DB6C     		ldr	r3, [r3, #76]
 1953 0086 03F00103 		and	r3, r3, #1
 1954 008a BB60     		str	r3, [r7, #8]
 1955 008c BB68     		ldr	r3, [r7, #8]
 1956              	.LBE16:
 1957              	.LBB17:
 704:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 1958              		.loc 1 704 3
 1959 008e 544B     		ldr	r3, .L92
 1960 0090 DB6C     		ldr	r3, [r3, #76]
 1961 0092 534A     		ldr	r2, .L92
 1962 0094 43F00203 		orr	r3, r3, #2
 1963 0098 D364     		str	r3, [r2, #76]
 1964 009a 514B     		ldr	r3, .L92
 1965 009c DB6C     		ldr	r3, [r3, #76]
 1966 009e 03F00203 		and	r3, r3, #2
 1967 00a2 7B60     		str	r3, [r7, #4]
 1968 00a4 7B68     		ldr	r3, [r7, #4]
 1969              	.LBE17:
 1970              	.LBB18:
 705:Core/Src/main.c ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 1971              		.loc 1 705 3
 1972 00a6 4E4B     		ldr	r3, .L92
 1973 00a8 DB6C     		ldr	r3, [r3, #76]
 1974 00aa 4D4A     		ldr	r2, .L92
 1975 00ac 43F04003 		orr	r3, r3, #64
 1976 00b0 D364     		str	r3, [r2, #76]
 1977 00b2 4B4B     		ldr	r3, .L92
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 48


 1978 00b4 DB6C     		ldr	r3, [r3, #76]
 1979 00b6 03F04003 		and	r3, r3, #64
 1980 00ba 3B60     		str	r3, [r7]
 1981 00bc 3B68     		ldr	r3, [r7]
 1982              	.LBE18:
 706:Core/Src/main.c ****   HAL_PWREx_EnableVddIO2();
 1983              		.loc 1 706 3
 1984 00be FFF7FEFF 		bl	HAL_PWREx_EnableVddIO2
 707:Core/Src/main.c **** 
 708:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 709:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOF, GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_6
 1985              		.loc 1 709 3
 1986 00c2 0022     		movs	r2, #0
 1987 00c4 4FF4E771 		mov	r1, #462
 1988 00c8 4648     		ldr	r0, .L92+4
 1989 00ca FFF7FEFF 		bl	HAL_GPIO_WritePin
 710:Core/Src/main.c ****                           |GPIO_PIN_7|GPIO_PIN_8, GPIO_PIN_RESET);
 711:Core/Src/main.c **** 
 712:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 713:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 1990              		.loc 1 713 3
 1991 00ce 0022     		movs	r2, #0
 1992 00d0 8021     		movs	r1, #128
 1993 00d2 4FF09040 		mov	r0, #1207959552
 1994 00d6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 714:Core/Src/main.c **** 
 715:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 716:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD2_Pin, GPIO_PIN_RESET);
 1995              		.loc 1 716 3
 1996 00da 0022     		movs	r2, #0
 1997 00dc 44F28301 		movw	r1, #16515
 1998 00e0 4148     		ldr	r0, .L92+8
 1999 00e2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 717:Core/Src/main.c **** 
 718:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 719:Core/Src/main.c ****   HAL_GPIO_WritePin(USB_PowerSwitchOn_GPIO_Port, USB_PowerSwitchOn_Pin, GPIO_PIN_RESET);
 2000              		.loc 1 719 3
 2001 00e6 0022     		movs	r2, #0
 2002 00e8 4021     		movs	r1, #64
 2003 00ea 4048     		ldr	r0, .L92+12
 2004 00ec FFF7FEFF 		bl	HAL_GPIO_WritePin
 720:Core/Src/main.c **** 
 721:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 722:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_6, GPIO_PIN_RESET);
 2005              		.loc 1 722 3
 2006 00f0 0022     		movs	r2, #0
 2007 00f2 4021     		movs	r1, #64
 2008 00f4 3E48     		ldr	r0, .L92+16
 2009 00f6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 723:Core/Src/main.c **** 
 724:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 725:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 2010              		.loc 1 725 23
 2011 00fa 4FF40053 		mov	r3, #8192
 2012 00fe FB61     		str	r3, [r7, #28]
 726:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 2013              		.loc 1 726 24
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 49


 2014 0100 4FF48813 		mov	r3, #1114112
 2015 0104 3B62     		str	r3, [r7, #32]
 727:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2016              		.loc 1 727 24
 2017 0106 0023     		movs	r3, #0
 2018 0108 7B62     		str	r3, [r7, #36]
 728:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 2019              		.loc 1 728 3
 2020 010a 07F11C03 		add	r3, r7, #28
 2021 010e 1946     		mov	r1, r3
 2022 0110 3748     		ldr	r0, .L92+16
 2023 0112 FFF7FEFF 		bl	HAL_GPIO_Init
 729:Core/Src/main.c **** 
 730:Core/Src/main.c ****   /*Configure GPIO pins : PF0 PF4 PF5 */
 731:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_4|GPIO_PIN_5;
 2024              		.loc 1 731 23
 2025 0116 3123     		movs	r3, #49
 2026 0118 FB61     		str	r3, [r7, #28]
 732:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 2027              		.loc 1 732 24
 2028 011a 0023     		movs	r3, #0
 2029 011c 3B62     		str	r3, [r7, #32]
 733:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2030              		.loc 1 733 24
 2031 011e 0023     		movs	r3, #0
 2032 0120 7B62     		str	r3, [r7, #36]
 734:Core/Src/main.c ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 2033              		.loc 1 734 3
 2034 0122 07F11C03 		add	r3, r7, #28
 2035 0126 1946     		mov	r1, r3
 2036 0128 2E48     		ldr	r0, .L92+4
 2037 012a FFF7FEFF 		bl	HAL_GPIO_Init
 735:Core/Src/main.c **** 
 736:Core/Src/main.c ****   /*Configure GPIO pins : PF1 PF2 PF3 PF6
 737:Core/Src/main.c ****                            PF7 PF8 */
 738:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_6
 2038              		.loc 1 738 23
 2039 012e 4FF4E773 		mov	r3, #462
 2040 0132 FB61     		str	r3, [r7, #28]
 739:Core/Src/main.c ****                           |GPIO_PIN_7|GPIO_PIN_8;
 740:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2041              		.loc 1 740 24
 2042 0134 0123     		movs	r3, #1
 2043 0136 3B62     		str	r3, [r7, #32]
 741:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2044              		.loc 1 741 24
 2045 0138 0023     		movs	r3, #0
 2046 013a 7B62     		str	r3, [r7, #36]
 742:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2047              		.loc 1 742 25
 2048 013c 0023     		movs	r3, #0
 2049 013e BB62     		str	r3, [r7, #40]
 743:Core/Src/main.c ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 2050              		.loc 1 743 3
 2051 0140 07F11C03 		add	r3, r7, #28
 2052 0144 1946     		mov	r1, r3
 2053 0146 2748     		ldr	r0, .L92+4
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 50


 2054 0148 FFF7FEFF 		bl	HAL_GPIO_Init
 744:Core/Src/main.c **** 
 745:Core/Src/main.c ****   /*Configure GPIO pin : PA7 */
 746:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_7;
 2055              		.loc 1 746 23
 2056 014c 8023     		movs	r3, #128
 2057 014e FB61     		str	r3, [r7, #28]
 747:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2058              		.loc 1 747 24
 2059 0150 0123     		movs	r3, #1
 2060 0152 3B62     		str	r3, [r7, #32]
 748:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2061              		.loc 1 748 24
 2062 0154 0023     		movs	r3, #0
 2063 0156 7B62     		str	r3, [r7, #36]
 749:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2064              		.loc 1 749 25
 2065 0158 0023     		movs	r3, #0
 2066 015a BB62     		str	r3, [r7, #40]
 750:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 2067              		.loc 1 750 3
 2068 015c 07F11C03 		add	r3, r7, #28
 2069 0160 1946     		mov	r1, r3
 2070 0162 4FF09040 		mov	r0, #1207959552
 2071 0166 FFF7FEFF 		bl	HAL_GPIO_Init
 751:Core/Src/main.c **** 
 752:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 LD3_Pin LD2_Pin */
 753:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD2_Pin;
 2072              		.loc 1 753 23
 2073 016a 44F28303 		movw	r3, #16515
 2074 016e FB61     		str	r3, [r7, #28]
 754:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2075              		.loc 1 754 24
 2076 0170 0123     		movs	r3, #1
 2077 0172 3B62     		str	r3, [r7, #32]
 755:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2078              		.loc 1 755 24
 2079 0174 0023     		movs	r3, #0
 2080 0176 7B62     		str	r3, [r7, #36]
 756:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2081              		.loc 1 756 25
 2082 0178 0023     		movs	r3, #0
 2083 017a BB62     		str	r3, [r7, #40]
 757:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 2084              		.loc 1 757 3
 2085 017c 07F11C03 		add	r3, r7, #28
 2086 0180 1946     		mov	r1, r3
 2087 0182 1948     		ldr	r0, .L92+8
 2088 0184 FFF7FEFF 		bl	HAL_GPIO_Init
 758:Core/Src/main.c **** 
 759:Core/Src/main.c ****   /*Configure GPIO pin : USB_OverCurrent_Pin */
 760:Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_OverCurrent_Pin;
 2089              		.loc 1 760 23
 2090 0188 2023     		movs	r3, #32
 2091 018a FB61     		str	r3, [r7, #28]
 761:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 2092              		.loc 1 761 24
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 51


 2093 018c 0023     		movs	r3, #0
 2094 018e 3B62     		str	r3, [r7, #32]
 762:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2095              		.loc 1 762 24
 2096 0190 0023     		movs	r3, #0
 2097 0192 7B62     		str	r3, [r7, #36]
 763:Core/Src/main.c ****   HAL_GPIO_Init(USB_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 2098              		.loc 1 763 3
 2099 0194 07F11C03 		add	r3, r7, #28
 2100 0198 1946     		mov	r1, r3
 2101 019a 1448     		ldr	r0, .L92+12
 2102 019c FFF7FEFF 		bl	HAL_GPIO_Init
 764:Core/Src/main.c **** 
 765:Core/Src/main.c ****   /*Configure GPIO pin : USB_PowerSwitchOn_Pin */
 766:Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_PowerSwitchOn_Pin;
 2103              		.loc 1 766 23
 2104 01a0 4023     		movs	r3, #64
 2105 01a2 FB61     		str	r3, [r7, #28]
 767:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2106              		.loc 1 767 24
 2107 01a4 0123     		movs	r3, #1
 2108 01a6 3B62     		str	r3, [r7, #32]
 768:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2109              		.loc 1 768 24
 2110 01a8 0023     		movs	r3, #0
 2111 01aa 7B62     		str	r3, [r7, #36]
 769:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2112              		.loc 1 769 25
 2113 01ac 0023     		movs	r3, #0
 2114 01ae BB62     		str	r3, [r7, #40]
 770:Core/Src/main.c ****   HAL_GPIO_Init(USB_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 2115              		.loc 1 770 3
 2116 01b0 07F11C03 		add	r3, r7, #28
 2117 01b4 1946     		mov	r1, r3
 2118 01b6 0D48     		ldr	r0, .L92+12
 2119 01b8 FFF7FEFF 		bl	HAL_GPIO_Init
 771:Core/Src/main.c **** 
 772:Core/Src/main.c ****   /*Configure GPIO pin : PC6 */
 773:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6;
 2120              		.loc 1 773 23
 2121 01bc 4023     		movs	r3, #64
 2122 01be FB61     		str	r3, [r7, #28]
 774:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2123              		.loc 1 774 24
 2124 01c0 0123     		movs	r3, #1
 2125 01c2 3B62     		str	r3, [r7, #32]
 775:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2126              		.loc 1 775 24
 2127 01c4 0023     		movs	r3, #0
 2128 01c6 7B62     		str	r3, [r7, #36]
 776:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2129              		.loc 1 776 25
 2130 01c8 0023     		movs	r3, #0
 2131 01ca BB62     		str	r3, [r7, #40]
 777:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 2132              		.loc 1 777 3
 2133 01cc 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 52


 2134 01d0 1946     		mov	r1, r3
 2135 01d2 0748     		ldr	r0, .L92+16
 2136 01d4 FFF7FEFF 		bl	HAL_GPIO_Init
 778:Core/Src/main.c **** 
 779:Core/Src/main.c **** }
 2137              		.loc 1 779 1
 2138 01d8 00BF     		nop
 2139 01da 3037     		adds	r7, r7, #48
 2140              		.cfi_def_cfa_offset 8
 2141 01dc BD46     		mov	sp, r7
 2142              		.cfi_def_cfa_register 13
 2143              		@ sp needed
 2144 01de 80BD     		pop	{r7, pc}
 2145              	.L93:
 2146              		.align	2
 2147              	.L92:
 2148 01e0 00100240 		.word	1073876992
 2149 01e4 00140048 		.word	1207964672
 2150 01e8 00040048 		.word	1207960576
 2151 01ec 00180048 		.word	1207965696
 2152 01f0 00080048 		.word	1207961600
 2153              		.cfi_endproc
 2154              	.LFE339:
 2156              		.section	.text.Error_Handler,"ax",%progbits
 2157              		.align	1
 2158              		.global	Error_Handler
 2159              		.syntax unified
 2160              		.thumb
 2161              		.thumb_func
 2163              	Error_Handler:
 2164              	.LFB340:
 780:Core/Src/main.c **** 
 781:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 782:Core/Src/main.c **** 
 783:Core/Src/main.c **** /* USER CODE END 4 */
 784:Core/Src/main.c **** 
 785:Core/Src/main.c **** /**
 786:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 787:Core/Src/main.c ****   * @retval None
 788:Core/Src/main.c ****   */
 789:Core/Src/main.c **** void Error_Handler(void)
 790:Core/Src/main.c **** {
 2165              		.loc 1 790 1
 2166              		.cfi_startproc
 2167              		@ args = 0, pretend = 0, frame = 0
 2168              		@ frame_needed = 1, uses_anonymous_args = 0
 2169              		@ link register save eliminated.
 2170 0000 80B4     		push	{r7}
 2171              		.cfi_def_cfa_offset 4
 2172              		.cfi_offset 7, -4
 2173 0002 00AF     		add	r7, sp, #0
 2174              		.cfi_def_cfa_register 7
 2175              	.LBB19:
 2176              	.LBB20:
 2177              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 53


   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 54


  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 55


 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 56


 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2178              		.loc 2 209 3
 2179              		.syntax unified
 2180              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2181 0004 72B6     		cpsid i
 2182              	@ 0 "" 2
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2183              		.loc 2 210 1
 2184              		.thumb
 2185              		.syntax unified
 2186 0006 00BF     		nop
 2187              	.L95:
 2188              	.LBE20:
 2189              	.LBE19:
 791:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 792:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 793:Core/Src/main.c ****   __disable_irq();
 794:Core/Src/main.c ****   while (1)
 2190              		.loc 1 794 9 discriminator 1
 2191 0008 FEE7     		b	.L95
 2192              		.cfi_endproc
 2193              	.LFE340:
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 57


 2195              		.text
 2196              	.Letext0:
 2197              		.file 3 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4p5xx.h"
 2198              		.file 4 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 2199              		.file 5 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 2200              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 2201              		.file 7 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 2202              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2203              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 2204              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 2205              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 2206              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 2207              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc_ex.h"
 2208              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usb.h"
 2209              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pcd.h"
 2210              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 2211              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 2212              		.file 18 "Core/Inc/./gcodes/types.h"
 2213              		.file 19 "Core/Inc/main.h"
 2214              		.file 20 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
 2215              		.file 21 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim_ex.h"
 2216              		.file 22 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart_ex.h"
 2217              		.file 23 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 2218              		.file 24 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2219              		.file 25 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2220              		.file 26 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2221              		.file 27 "Core/Inc/./gcodes/reader.h"
 2222              		.file 28 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 58


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:24     .bss.hadc1:0000000000000000 hadc1
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:21     .bss.hadc1:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:31     .bss.hdma_adc1:0000000000000000 hdma_adc1
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:28     .bss.hdma_adc1:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:38     .bss.hlpuart1:0000000000000000 hlpuart1
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:35     .bss.hlpuart1:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:45     .bss.huart4:0000000000000000 huart4
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:42     .bss.huart4:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:52     .bss.hdma_lpuart1_rx:0000000000000000 hdma_lpuart1_rx
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:49     .bss.hdma_lpuart1_rx:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:59     .bss.htim3:0000000000000000 htim3
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:56     .bss.htim3:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:66     .bss.htim4:0000000000000000 htim4
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:63     .bss.htim4:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:73     .bss.htim5:0000000000000000 htim5
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:70     .bss.htim5:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:80     .bss.hpcd_USB_OTG_FS:0000000000000000 hpcd_USB_OTG_FS
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:77     .bss.hpcd_USB_OTG_FS:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:87     .bss.step:0000000000000000 step
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:84     .bss.step:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:94     .bss.last_time:0000000000000000 last_time
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:91     .bss.last_time:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:101    .bss.value:0000000000000000 value
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:98     .bss.value:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:108    .bss.reader:0000000000000000 reader
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:105    .bss.reader:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:115    .bss.current_cmd:0000000000000000 current_cmd
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:112    .bss.current_cmd:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:122    .bss.state:0000000000000000 state
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:119    .bss.state:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:129    .bss.rx_buff:0000000000000000 rx_buff
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:126    .bss.rx_buff:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:136    .bss.gcode_buff:0000000000000000 gcode_buff
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:133    .bss.gcode_buff:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:143    .bss.is_done:0000000000000000 is_done
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:140    .bss.is_done:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:146    .rodata:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:159    .text.HAL_UARTEx_RxEventCallback:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:165    .text.HAL_UARTEx_RxEventCallback:0000000000000000 HAL_UARTEx_RxEventCallback
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:422    .text.transmit_resp_code:0000000000000000 transmit_resp_code
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:526    .text.emergency_stop:0000000000000000 emergency_stop
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:346    .text.HAL_UARTEx_RxEventCallback:00000000000000fc $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:363    .text.transmit_data:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:369    .text.transmit_data:0000000000000000 transmit_data
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:404    .text.transmit_data:0000000000000024 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:416    .text.transmit_resp_code:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:514    .text.transmit_resp_code:0000000000000084 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:520    .text.emergency_stop:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:553    .text.emergency_stop:0000000000000018 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:563    .text.main:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:569    .text.main:0000000000000000 main
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:713    .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:1870   .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:1793   .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:1063   .text.MX_LPUART1_UART_Init:0000000000000000 MX_LPUART1_UART_Init
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 59


C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:1719   .text.MX_USB_OTG_FS_PCD_Init:0000000000000000 MX_USB_OTG_FS_PCD_Init
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:1487   .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:1182   .text.MX_UART4_Init:0000000000000000 MX_UART4_Init
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:1297   .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:842    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:1603   .text.MX_TIM5_Init:0000000000000000 MX_TIM5_Init
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:691    .text.main:00000000000000cc $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:707    .text.SystemClock_Config:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:2163   .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:837    .text.MX_ADC1_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:1049   .text.MX_ADC1_Init:0000000000000130 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:1058   .text.MX_LPUART1_UART_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:1171   .text.MX_LPUART1_UART_Init:0000000000000098 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:1177   .text.MX_UART4_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:1286   .text.MX_UART4_Init:0000000000000090 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:1292   .text.MX_TIM3_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:1476   .text.MX_TIM3_Init:0000000000000110 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:1482   .text.MX_TIM4_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:1592   .text.MX_TIM4_Init:0000000000000094 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:1598   .text.MX_TIM5_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:1708   .text.MX_TIM5_Init:0000000000000094 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:1714   .text.MX_USB_OTG_FS_PCD_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:1783   .text.MX_USB_OTG_FS_PCD_Init:0000000000000050 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:1788   .text.MX_DMA_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:1860   .text.MX_DMA_Init:0000000000000060 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:1865   .text.MX_GPIO_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:2148   .text.MX_GPIO_Init:00000000000001e0 $d
C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s:2157   .text.Error_Handler:0000000000000000 $t

UNDEFINED SYMBOLS
memcpy
read_code
itoa
memset
HAL_UARTEx_ReceiveToIdle_DMA
HAL_UART_Transmit
strlen
malloc
sprintf
HAL_Init
HAL_TIM_PWM_Start
HAL_ADC_Start_DMA
HAL_TIM_Base_Start
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
HAL_UART_Init
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_DisableFifoMode
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccQ5MPFW.s 			page 60


HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_PCD_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_PWREx_EnableVddIO2
HAL_GPIO_WritePin
HAL_GPIO_Init
