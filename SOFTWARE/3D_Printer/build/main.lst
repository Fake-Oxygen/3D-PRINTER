ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.bss.msg_buffer,"aw",%nobits
  20              		.align	2
  23              	msg_buffer:
  24 0000 00000000 		.space	30
  24      00000000 
  24      00000000 
  24      00000000 
  24      00000000 
  25              		.section	.bss.RxBuf,"aw",%nobits
  26              		.align	2
  29              	RxBuf:
  30 0000 00000000 		.space	20
  30      00000000 
  30      00000000 
  30      00000000 
  30      00000000 
  31              		.global	hadc1
  32              		.section	.bss.hadc1,"aw",%nobits
  33              		.align	2
  36              	hadc1:
  37 0000 00000000 		.space	104
  37      00000000 
  37      00000000 
  37      00000000 
  37      00000000 
  38              		.global	hdma_adc1
  39              		.section	.bss.hdma_adc1,"aw",%nobits
  40              		.align	2
  43              	hdma_adc1:
  44 0000 00000000 		.space	96
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              		.global	hlpuart1
  46              		.section	.bss.hlpuart1,"aw",%nobits
  47              		.align	2
  50              	hlpuart1:
  51 0000 00000000 		.space	144
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 2


  51      00000000 
  51      00000000 
  51      00000000 
  51      00000000 
  52              		.global	huart4
  53              		.section	.bss.huart4,"aw",%nobits
  54              		.align	2
  57              	huart4:
  58 0000 00000000 		.space	144
  58      00000000 
  58      00000000 
  58      00000000 
  58      00000000 
  59              		.global	hdma_lpuart1_rx
  60              		.section	.bss.hdma_lpuart1_rx,"aw",%nobits
  61              		.align	2
  64              	hdma_lpuart1_rx:
  65 0000 00000000 		.space	96
  65      00000000 
  65      00000000 
  65      00000000 
  65      00000000 
  66              		.global	htim3
  67              		.section	.bss.htim3,"aw",%nobits
  68              		.align	2
  71              	htim3:
  72 0000 00000000 		.space	76
  72      00000000 
  72      00000000 
  72      00000000 
  72      00000000 
  73              		.global	htim4
  74              		.section	.bss.htim4,"aw",%nobits
  75              		.align	2
  78              	htim4:
  79 0000 00000000 		.space	76
  79      00000000 
  79      00000000 
  79      00000000 
  79      00000000 
  80              		.global	htim5
  81              		.section	.bss.htim5,"aw",%nobits
  82              		.align	2
  85              	htim5:
  86 0000 00000000 		.space	76
  86      00000000 
  86      00000000 
  86      00000000 
  86      00000000 
  87              		.global	hpcd_USB_OTG_FS
  88              		.section	.bss.hpcd_USB_OTG_FS,"aw",%nobits
  89              		.align	2
  92              	hpcd_USB_OTG_FS:
  93 0000 00000000 		.space	1292
  93      00000000 
  93      00000000 
  93      00000000 
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 3


  93      00000000 
  94              		.global	step
  95              		.section	.bss.step,"aw",%nobits
  96              		.align	1
  99              	step:
 100 0000 0000     		.space	2
 101              		.global	last_time
 102              		.section	.bss.last_time,"aw",%nobits
 103              		.align	2
 106              	last_time:
 107 0000 00000000 		.space	4
 108              		.global	value
 109              		.section	.bss.value,"aw",%nobits
 110              		.align	2
 113              	value:
 114 0000 00000000 		.space	12
 114      00000000 
 114      00000000 
 115              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 116              		.align	1
 117              		.global	HAL_UARTEx_RxEventCallback
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 122              	HAL_UARTEx_RxEventCallback:
 123              	.LFB325:
 124              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "Functions.h"
  25:Core/Src/main.c **** #include <stdio.h>
  26:Core/Src/main.c **** #include <string.h>
  27:Core/Src/main.c **** #include <ctype.h>
  28:Core/Src/main.c **** // #include "Parser.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 4


  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  47:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** UART_HandleTypeDef hlpuart1;
  50:Core/Src/main.c **** UART_HandleTypeDef huart4;
  51:Core/Src/main.c **** DMA_HandleTypeDef hdma_lpuart1_rx;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  54:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  55:Core/Src/main.c **** TIM_HandleTypeDef htim5;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** PCD_HandleTypeDef hpcd_USB_OTG_FS;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE BEGIN PV */
  60:Core/Src/main.c **** uint16_t step = 0;
  61:Core/Src/main.c **** uint32_t last_time = 0;
  62:Core/Src/main.c **** uint32_t value[ADC_CHANNELS];
  63:Core/Src/main.c **** /* USER CODE END PV */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  66:Core/Src/main.c **** void SystemClock_Config(void);
  67:Core/Src/main.c **** static void MX_GPIO_Init(void);
  68:Core/Src/main.c **** static void MX_DMA_Init(void);
  69:Core/Src/main.c **** static void MX_LPUART1_UART_Init(void);
  70:Core/Src/main.c **** static void MX_USB_OTG_FS_PCD_Init(void);
  71:Core/Src/main.c **** static void MX_TIM4_Init(void);
  72:Core/Src/main.c **** static void MX_UART4_Init(void);
  73:Core/Src/main.c **** static void MX_TIM3_Init(void);
  74:Core/Src/main.c **** static void MX_ADC1_Init(void);
  75:Core/Src/main.c **** static void MX_TIM5_Init(void);
  76:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  77:Core/Src/main.c **** /* USER CODE END PFP */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  80:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
  83:Core/Src/main.c **** {
 125              		.loc 1 83 1
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 8
 128              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 5


 129 0000 80B5     		push	{r7, lr}
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 7, -8
 132              		.cfi_offset 14, -4
 133 0002 82B0     		sub	sp, sp, #8
 134              		.cfi_def_cfa_offset 16
 135 0004 00AF     		add	r7, sp, #0
 136              		.cfi_def_cfa_register 7
 137 0006 7860     		str	r0, [r7, #4]
 138 0008 0B46     		mov	r3, r1
 139 000a 7B80     		strh	r3, [r7, #2]	@ movhi
  84:Core/Src/main.c ****   if (huart->Instance == LPUART1)
 140              		.loc 1 84 12
 141 000c 7B68     		ldr	r3, [r7, #4]
 142 000e 1B68     		ldr	r3, [r3]
 143              		.loc 1 84 6
 144 0010 094A     		ldr	r2, .L4
 145 0012 9342     		cmp	r3, r2
 146 0014 0CD1     		bne	.L3
  85:Core/Src/main.c ****   {
  86:Core/Src/main.c ****     HAL_UARTEx_ReceiveToIdle_DMA(&hlpuart1, (uint8_t *)RxBuf, RxBuf_SIZE);
 147              		.loc 1 86 5
 148 0016 1422     		movs	r2, #20
 149 0018 0849     		ldr	r1, .L4+4
 150 001a 0948     		ldr	r0, .L4+8
 151 001c FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_DMA
  87:Core/Src/main.c ****     __HAL_DMA_DISABLE_IT(&hdma_lpuart1_rx, DMA_IT_HT);
 152              		.loc 1 87 5
 153 0020 084B     		ldr	r3, .L4+12
 154 0022 1B68     		ldr	r3, [r3]
 155 0024 1A68     		ldr	r2, [r3]
 156 0026 074B     		ldr	r3, .L4+12
 157 0028 1B68     		ldr	r3, [r3]
 158 002a 22F00402 		bic	r2, r2, #4
 159 002e 1A60     		str	r2, [r3]
 160              	.L3:
  88:Core/Src/main.c ****   }
  89:Core/Src/main.c **** }
 161              		.loc 1 89 1
 162 0030 00BF     		nop
 163 0032 0837     		adds	r7, r7, #8
 164              		.cfi_def_cfa_offset 8
 165 0034 BD46     		mov	sp, r7
 166              		.cfi_def_cfa_register 13
 167              		@ sp needed
 168 0036 80BD     		pop	{r7, pc}
 169              	.L5:
 170              		.align	2
 171              	.L4:
 172 0038 00800040 		.word	1073774592
 173 003c 00000000 		.word	RxBuf
 174 0040 00000000 		.word	hlpuart1
 175 0044 00000000 		.word	hdma_lpuart1_rx
 176              		.cfi_endproc
 177              	.LFE325:
 179              		.section	.text.DelayMicrosecond,"ax",%progbits
 180              		.align	1
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 6


 181              		.global	DelayMicrosecond
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 186              	DelayMicrosecond:
 187              	.LFB326:
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** void DelayMicrosecond(uint16_t time)
  92:Core/Src/main.c **** {
 188              		.loc 1 92 1
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 8
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 193 0000 80B4     		push	{r7}
 194              		.cfi_def_cfa_offset 4
 195              		.cfi_offset 7, -4
 196 0002 83B0     		sub	sp, sp, #12
 197              		.cfi_def_cfa_offset 16
 198 0004 00AF     		add	r7, sp, #0
 199              		.cfi_def_cfa_register 7
 200 0006 0346     		mov	r3, r0
 201 0008 FB80     		strh	r3, [r7, #6]	@ movhi
  93:Core/Src/main.c ****   __HAL_TIM_SET_COUNTER(&htim4, 0);
 202              		.loc 1 93 3
 203 000a 094B     		ldr	r3, .L8
 204 000c 1B68     		ldr	r3, [r3]
 205 000e 0022     		movs	r2, #0
 206 0010 5A62     		str	r2, [r3, #36]
  94:Core/Src/main.c ****   while (__HAL_TIM_GET_COUNTER(&htim4) < time)
 207              		.loc 1 94 9
 208 0012 00BF     		nop
 209              	.L7:
 210              		.loc 1 94 10 discriminator 1
 211 0014 064B     		ldr	r3, .L8
 212 0016 1B68     		ldr	r3, [r3]
 213 0018 5A6A     		ldr	r2, [r3, #36]
 214              		.loc 1 94 40 discriminator 1
 215 001a FB88     		ldrh	r3, [r7, #6]
 216 001c 9A42     		cmp	r2, r3
 217 001e F9D3     		bcc	.L7
  95:Core/Src/main.c ****     ;
  96:Core/Src/main.c **** }
 218              		.loc 1 96 1
 219 0020 00BF     		nop
 220 0022 00BF     		nop
 221 0024 0C37     		adds	r7, r7, #12
 222              		.cfi_def_cfa_offset 4
 223 0026 BD46     		mov	sp, r7
 224              		.cfi_def_cfa_register 13
 225              		@ sp needed
 226 0028 5DF8047B 		ldr	r7, [sp], #4
 227              		.cfi_restore 7
 228              		.cfi_def_cfa_offset 0
 229 002c 7047     		bx	lr
 230              	.L9:
 231 002e 00BF     		.align	2
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 7


 232              	.L8:
 233 0030 00000000 		.word	htim4
 234              		.cfi_endproc
 235              	.LFE326:
 237              		.section	.text.GetTicks,"ax",%progbits
 238              		.align	1
 239              		.global	GetTicks
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 244              	GetTicks:
 245              	.LFB327:
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** int GetTicks()
  99:Core/Src/main.c **** {
 246              		.loc 1 99 1
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 1, uses_anonymous_args = 0
 250              		@ link register save eliminated.
 251 0000 80B4     		push	{r7}
 252              		.cfi_def_cfa_offset 4
 253              		.cfi_offset 7, -4
 254 0002 00AF     		add	r7, sp, #0
 255              		.cfi_def_cfa_register 7
 100:Core/Src/main.c ****   return __HAL_TIM_GET_COUNTER(&htim5);
 256              		.loc 1 100 10
 257 0004 034B     		ldr	r3, .L12
 258 0006 1B68     		ldr	r3, [r3]
 259 0008 5B6A     		ldr	r3, [r3, #36]
 101:Core/Src/main.c **** }
 260              		.loc 1 101 1
 261 000a 1846     		mov	r0, r3
 262 000c BD46     		mov	sp, r7
 263              		.cfi_def_cfa_register 13
 264              		@ sp needed
 265 000e 5DF8047B 		ldr	r7, [sp], #4
 266              		.cfi_restore 7
 267              		.cfi_def_cfa_offset 0
 268 0012 7047     		bx	lr
 269              	.L13:
 270              		.align	2
 271              	.L12:
 272 0014 00000000 		.word	htim5
 273              		.cfi_endproc
 274              	.LFE327:
 276              		.section	.rodata
 277              		.align	2
 278              	.LC0:
 279 0000 74656D70 		.ascii	"temp: %f, value: %d\015\012\000"
 279      3A202566 
 279      2C207661 
 279      6C75653A 
 279      2025640D 
 280              		.section	.text.print_temperature,"ax",%progbits
 281              		.align	1
 282              		.global	print_temperature
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 8


 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 287              	print_temperature:
 288              	.LFB328:
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** void print_temperature()
 104:Core/Src/main.c **** {
 289              		.loc 1 104 1
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 1, uses_anonymous_args = 0
 293 0000 80B5     		push	{r7, lr}
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 7, -8
 296              		.cfi_offset 14, -4
 297 0002 82B0     		sub	sp, sp, #8
 298              		.cfi_def_cfa_offset 16
 299 0004 02AF     		add	r7, sp, #8
 300              		.cfi_def_cfa 7, 8
 105:Core/Src/main.c ****   sprintf(msg_buffer, "temp: %f, value: %d\r\n", GetTemperature(ADC_HOT_END, value[ADC_HOT_END]), v
 301              		.loc 1 105 83
 302 0006 104B     		ldr	r3, .L15
 303 0008 5B68     		ldr	r3, [r3, #4]
 304              		.loc 1 105 3
 305 000a 9BB2     		uxth	r3, r3
 306 000c 1946     		mov	r1, r3
 307 000e 0120     		movs	r0, #1
 308 0010 FFF7FEFF 		bl	GetTemperature
 309 0014 51EC100B 		vmov	r0, r1, d0
 310 0018 0B4B     		ldr	r3, .L15
 311 001a 5B68     		ldr	r3, [r3, #4]
 312 001c 0093     		str	r3, [sp]
 313 001e 0246     		mov	r2, r0
 314 0020 0B46     		mov	r3, r1
 315 0022 0A49     		ldr	r1, .L15+4
 316 0024 0A48     		ldr	r0, .L15+8
 317 0026 FFF7FEFF 		bl	sprintf
 106:Core/Src/main.c ****   HAL_UART_Transmit(&hlpuart1, (uint16_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 318              		.loc 1 106 56
 319 002a 0948     		ldr	r0, .L15+8
 320 002c FFF7FEFF 		bl	strlen
 321 0030 0346     		mov	r3, r0
 322              		.loc 1 106 3
 323 0032 9AB2     		uxth	r2, r3
 324 0034 4FF0FF33 		mov	r3, #-1
 325 0038 0549     		ldr	r1, .L15+8
 326 003a 0648     		ldr	r0, .L15+12
 327 003c FFF7FEFF 		bl	HAL_UART_Transmit
 107:Core/Src/main.c **** }
 328              		.loc 1 107 1
 329 0040 00BF     		nop
 330 0042 BD46     		mov	sp, r7
 331              		.cfi_def_cfa_register 13
 332              		@ sp needed
 333 0044 80BD     		pop	{r7, pc}
 334              	.L16:
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 9


 335 0046 00BF     		.align	2
 336              	.L15:
 337 0048 00000000 		.word	value
 338 004c 00000000 		.word	.LC0
 339 0050 00000000 		.word	msg_buffer
 340 0054 00000000 		.word	hlpuart1
 341              		.cfi_endproc
 342              	.LFE328:
 344              		.section	.text.main,"ax",%progbits
 345              		.align	1
 346              		.global	main
 347              		.syntax unified
 348              		.thumb
 349              		.thumb_func
 351              	main:
 352              	.LFB329:
 108:Core/Src/main.c **** /* USER CODE END 0 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /**
 111:Core/Src/main.c ****   * @brief  The application entry point.
 112:Core/Src/main.c ****   * @retval int
 113:Core/Src/main.c ****   */
 114:Core/Src/main.c **** int main(void)
 115:Core/Src/main.c **** {
 353              		.loc 1 115 1
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 8
 356              		@ frame_needed = 1, uses_anonymous_args = 0
 357 0000 80B5     		push	{r7, lr}
 358              		.cfi_def_cfa_offset 8
 359              		.cfi_offset 7, -8
 360              		.cfi_offset 14, -4
 361 0002 82B0     		sub	sp, sp, #8
 362              		.cfi_def_cfa_offset 16
 363 0004 00AF     		add	r7, sp, #0
 364              		.cfi_def_cfa_register 7
 116:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 117:Core/Src/main.c ****   // last_time = HAL_GetTick();
 118:Core/Src/main.c ****   /* USER CODE END 1 */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 123:Core/Src/main.c ****   HAL_Init();
 365              		.loc 1 123 3
 366 0006 FFF7FEFF 		bl	HAL_Init
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* USER CODE END Init */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* Configure the system clock */
 130:Core/Src/main.c ****   SystemClock_Config();
 367              		.loc 1 130 3
 368 000a FFF7FEFF 		bl	SystemClock_Config
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 10


 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /* USER CODE END SysInit */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* Initialize all configured peripherals */
 137:Core/Src/main.c ****   MX_GPIO_Init();
 369              		.loc 1 137 3
 370 000e FFF7FEFF 		bl	MX_GPIO_Init
 138:Core/Src/main.c ****   MX_DMA_Init();
 371              		.loc 1 138 3
 372 0012 FFF7FEFF 		bl	MX_DMA_Init
 139:Core/Src/main.c ****   MX_LPUART1_UART_Init();
 373              		.loc 1 139 3
 374 0016 FFF7FEFF 		bl	MX_LPUART1_UART_Init
 140:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
 375              		.loc 1 140 3
 376 001a FFF7FEFF 		bl	MX_USB_OTG_FS_PCD_Init
 141:Core/Src/main.c ****   MX_TIM4_Init();
 377              		.loc 1 141 3
 378 001e FFF7FEFF 		bl	MX_TIM4_Init
 142:Core/Src/main.c ****   MX_UART4_Init();
 379              		.loc 1 142 3
 380 0022 FFF7FEFF 		bl	MX_UART4_Init
 143:Core/Src/main.c ****   MX_TIM3_Init();
 381              		.loc 1 143 3
 382 0026 FFF7FEFF 		bl	MX_TIM3_Init
 144:Core/Src/main.c ****   MX_ADC1_Init();
 383              		.loc 1 144 3
 384 002a FFF7FEFF 		bl	MX_ADC1_Init
 145:Core/Src/main.c ****   MX_TIM5_Init();
 385              		.loc 1 145 3
 386 002e FFF7FEFF 		bl	MX_TIM5_Init
 146:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 147:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 387              		.loc 1 147 3
 388 0032 0021     		movs	r1, #0
 389 0034 4248     		ldr	r0, .L23
 390 0036 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 148:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2);
 391              		.loc 1 148 3
 392 003a 0421     		movs	r1, #4
 393 003c 4048     		ldr	r0, .L23
 394 003e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 149:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);
 395              		.loc 1 149 3
 396 0042 0821     		movs	r1, #8
 397 0044 3E48     		ldr	r0, .L23
 398 0046 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 150:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, value, ADC_CHANNELS);
 399              		.loc 1 150 3
 400 004a 0322     		movs	r2, #3
 401 004c 3D49     		ldr	r1, .L23+4
 402 004e 3E48     		ldr	r0, .L23+8
 403 0050 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 151:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim4);
 404              		.loc 1 151 3
 405 0054 3D48     		ldr	r0, .L23+12
 406 0056 FFF7FEFF 		bl	HAL_TIM_Base_Start
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 11


 152:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim5);
 407              		.loc 1 152 3
 408 005a 3D48     		ldr	r0, .L23+16
 409 005c FFF7FEFF 		bl	HAL_TIM_Base_Start
 153:Core/Src/main.c ****   HAL_UARTEx_ReceiveToIdle_DMA(&hlpuart1, RxBuf, RxBuf_SIZE);
 410              		.loc 1 153 3
 411 0060 1422     		movs	r2, #20
 412 0062 3C49     		ldr	r1, .L23+20
 413 0064 3C48     		ldr	r0, .L23+24
 414 0066 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_DMA
 154:Core/Src/main.c ****   __HAL_DMA_DISABLE_IT(&hdma_lpuart1_rx, DMA_IT_HT);
 415              		.loc 1 154 3
 416 006a 3C4B     		ldr	r3, .L23+28
 417 006c 1B68     		ldr	r3, [r3]
 418 006e 1A68     		ldr	r2, [r3]
 419 0070 3A4B     		ldr	r3, .L23+28
 420 0072 1B68     		ldr	r3, [r3]
 421 0074 22F00402 		bic	r2, r2, #4
 422 0078 1A60     		str	r2, [r3]
 155:Core/Src/main.c ****   memset(&RxBuf[0], 0, sizeof(RxBuf));
 423              		.loc 1 155 3
 424 007a 1422     		movs	r2, #20
 425 007c 0021     		movs	r1, #0
 426 007e 3548     		ldr	r0, .L23+20
 427 0080 FFF7FEFF 		bl	memset
 156:Core/Src/main.c ****   reset_args();
 428              		.loc 1 156 3
 429 0084 FFF7FEFF 		bl	reset_args
 157:Core/Src/main.c ****   // int steps = 0;
 158:Core/Src/main.c ****   uint32_t lasttimeX = 0;
 430              		.loc 1 158 12
 431 0088 0023     		movs	r3, #0
 432 008a 3B60     		str	r3, [r7]
 159:Core/Src/main.c ****   uint32_t lasttimeY = 0;
 433              		.loc 1 159 12
 434 008c 0023     		movs	r3, #0
 435 008e 7B60     		str	r3, [r7, #4]
 436              	.L22:
 160:Core/Src/main.c ****   /* USER CODE END 2 */
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /* Infinite loop */
 163:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 164:Core/Src/main.c ****   while (1)
 165:Core/Src/main.c ****   {
 166:Core/Src/main.c ****     if (RxBuf[0] != 0 && isRunning == false)
 437              		.loc 1 166 14
 438 0090 304B     		ldr	r3, .L23+20
 439 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 440              		.loc 1 166 8
 441 0094 002B     		cmp	r3, #0
 442 0096 0ED0     		beq	.L18
 443              		.loc 1 166 36 discriminator 1
 444 0098 314B     		ldr	r3, .L23+32
 445 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 446 009c 83F00103 		eor	r3, r3, #1
 447 00a0 DBB2     		uxtb	r3, r3
 448              		.loc 1 166 23 discriminator 1
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 12


 449 00a2 002B     		cmp	r3, #0
 450 00a4 07D0     		beq	.L18
 167:Core/Src/main.c ****     {
 168:Core/Src/main.c ****       get_command(RxBuf);
 451              		.loc 1 168 7
 452 00a6 2B48     		ldr	r0, .L23+20
 453 00a8 FFF7FEFF 		bl	get_command
 169:Core/Src/main.c ****       memset(&RxBuf[0], 0, sizeof(RxBuf));
 454              		.loc 1 169 7
 455 00ac 1422     		movs	r2, #20
 456 00ae 0021     		movs	r1, #0
 457 00b0 2848     		ldr	r0, .L23+20
 458 00b2 FFF7FEFF 		bl	memset
 459              	.L18:
 170:Core/Src/main.c ****     }
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****     if (HAL_GetTick() - last_time > interval && interval > 0)
 460              		.loc 1 172 9
 461 00b6 FFF7FEFF 		bl	HAL_GetTick
 462 00ba 0246     		mov	r2, r0
 463              		.loc 1 172 23
 464 00bc 294B     		ldr	r3, .L23+36
 465 00be 1B68     		ldr	r3, [r3]
 466 00c0 D31A     		subs	r3, r2, r3
 467              		.loc 1 172 35
 468 00c2 294A     		ldr	r2, .L23+40
 469 00c4 1288     		ldrh	r2, [r2]
 470              		.loc 1 172 8
 471 00c6 9342     		cmp	r3, r2
 472 00c8 0CD9     		bls	.L19
 473              		.loc 1 172 58 discriminator 1
 474 00ca 274B     		ldr	r3, .L23+40
 475 00cc 1B88     		ldrh	r3, [r3]
 476              		.loc 1 172 46 discriminator 1
 477 00ce 002B     		cmp	r3, #0
 478 00d0 08D0     		beq	.L19
 173:Core/Src/main.c ****     {
 174:Core/Src/main.c ****       M105(0, 0);
 479              		.loc 1 174 7
 480 00d2 0021     		movs	r1, #0
 481 00d4 0020     		movs	r0, #0
 482 00d6 FFF7FEFF 		bl	M105
 175:Core/Src/main.c ****       last_time = HAL_GetTick();
 483              		.loc 1 175 19
 484 00da FFF7FEFF 		bl	HAL_GetTick
 485 00de 0346     		mov	r3, r0
 486              		.loc 1 175 17
 487 00e0 204A     		ldr	r2, .L23+36
 488 00e2 1360     		str	r3, [r2]
 489              	.L19:
 176:Core/Src/main.c ****     }
 177:Core/Src/main.c ****    
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****     if(READ_PIN(X_STOP_PIN) != 1 && READ_PIN(Y_STOP_PIN) != 1) {
 490              		.loc 1 179 8
 491 00e4 1021     		movs	r1, #16
 492 00e6 2148     		ldr	r0, .L23+44
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 13


 493 00e8 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 494 00ec 0346     		mov	r3, r0
 495              		.loc 1 179 7
 496 00ee 012B     		cmp	r3, #1
 497 00f0 08D0     		beq	.L20
 498              		.loc 1 179 37 discriminator 1
 499 00f2 2021     		movs	r1, #32
 500 00f4 1D48     		ldr	r0, .L23+44
 501 00f6 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 502 00fa 0346     		mov	r3, r0
 503              		.loc 1 179 34 discriminator 1
 504 00fc 012B     		cmp	r3, #1
 505 00fe 01D0     		beq	.L20
 180:Core/Src/main.c ****       G0();
 506              		.loc 1 180 7
 507 0100 FFF7FEFF 		bl	G0
 508              	.L20:
 181:Core/Src/main.c ****     }
 182:Core/Src/main.c ****     M104();
 509              		.loc 1 182 5
 510 0104 FFF7FEFF 		bl	M104
 183:Core/Src/main.c ****     // if (steps <= 6500)
 184:Core/Src/main.c ****     // {
 185:Core/Src/main.c ****     //   MAKE_MOTOR_STEP(X_AXIS_STEP);
 186:Core/Src/main.c ****     //   DelayMicrosecond(600);
 187:Core/Src/main.c ****     //   steps++;
 188:Core/Src/main.c ****     // }
 189:Core/Src/main.c ****     if(READ_PIN(USER_BUTTON) == 1)
 511              		.loc 1 189 8
 512 0108 4FF40051 		mov	r1, #8192
 513 010c 1848     		ldr	r0, .L23+48
 514 010e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 515 0112 0346     		mov	r3, r0
 516              		.loc 1 189 7
 517 0114 012B     		cmp	r3, #1
 518 0116 BBD1     		bne	.L22
 190:Core/Src/main.c ****     {
 191:Core/Src/main.c ****       //CHANGE_MOTOR_DIR(Y_AXIS_DIR, COUNTERCLOCKWISE);
 192:Core/Src/main.c ****       // if(GetTicks() - lasttimeX >= 800)
 193:Core/Src/main.c ****       // {
 194:Core/Src/main.c ****       //     MAKE_MOTOR_STEP(X_AXIS_STEP);
 195:Core/Src/main.c ****       //     lasttimeX = GetTicks();
 196:Core/Src/main.c ****       // }
 197:Core/Src/main.c ****       if(GetTicks() - lasttimeY >= 2000)
 519              		.loc 1 197 10
 520 0118 FFF7FEFF 		bl	GetTicks
 521 011c 0346     		mov	r3, r0
 522 011e 1A46     		mov	r2, r3
 523              		.loc 1 197 21
 524 0120 7B68     		ldr	r3, [r7, #4]
 525 0122 D31A     		subs	r3, r2, r3
 526              		.loc 1 197 9
 527 0124 B3F5FA6F 		cmp	r3, #2000
 528 0128 B2D3     		bcc	.L22
 198:Core/Src/main.c ****       {
 199:Core/Src/main.c ****           MAKE_MOTOR_STEP(Y_AXIS_STEP);
 529              		.loc 1 199 11
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 14


 530 012a 8021     		movs	r1, #128
 531 012c 4FF09040 		mov	r0, #1207959552
 532 0130 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 200:Core/Src/main.c ****           lasttimeY = GetTicks();
 533              		.loc 1 200 23
 534 0134 FFF7FEFF 		bl	GetTicks
 535 0138 0346     		mov	r3, r0
 536              		.loc 1 200 21
 537 013a 7B60     		str	r3, [r7, #4]
 166:Core/Src/main.c ****     {
 538              		.loc 1 166 8
 539 013c A8E7     		b	.L22
 540              	.L24:
 541 013e 00BF     		.align	2
 542              	.L23:
 543 0140 00000000 		.word	htim3
 544 0144 00000000 		.word	value
 545 0148 00000000 		.word	hadc1
 546 014c 00000000 		.word	htim4
 547 0150 00000000 		.word	htim5
 548 0154 00000000 		.word	RxBuf
 549 0158 00000000 		.word	hlpuart1
 550 015c 00000000 		.word	hdma_lpuart1_rx
 551 0160 00000000 		.word	isRunning
 552 0164 00000000 		.word	last_time
 553 0168 00000000 		.word	interval
 554 016c 00140048 		.word	1207964672
 555 0170 00080048 		.word	1207961600
 556              		.cfi_endproc
 557              	.LFE329:
 559              		.section	.text.SystemClock_Config,"ax",%progbits
 560              		.align	1
 561              		.global	SystemClock_Config
 562              		.syntax unified
 563              		.thumb
 564              		.thumb_func
 566              	SystemClock_Config:
 567              	.LFB330:
 201:Core/Src/main.c ****       }
 202:Core/Src/main.c ****     }
 203:Core/Src/main.c ****     /* USER CODE END WHILE */
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 206:Core/Src/main.c ****   }
 207:Core/Src/main.c ****   /* USER CODE END 3 */
 208:Core/Src/main.c **** }
 209:Core/Src/main.c **** 
 210:Core/Src/main.c **** /**
 211:Core/Src/main.c ****   * @brief System Clock Configuration
 212:Core/Src/main.c ****   * @retval None
 213:Core/Src/main.c ****   */
 214:Core/Src/main.c **** void SystemClock_Config(void)
 215:Core/Src/main.c **** {
 568              		.loc 1 215 1
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 96
 571              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 15


 572 0000 80B5     		push	{r7, lr}
 573              		.cfi_def_cfa_offset 8
 574              		.cfi_offset 7, -8
 575              		.cfi_offset 14, -4
 576 0002 98B0     		sub	sp, sp, #96
 577              		.cfi_def_cfa_offset 104
 578 0004 00AF     		add	r7, sp, #0
 579              		.cfi_def_cfa_register 7
 216:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 580              		.loc 1 216 22
 581 0006 07F11803 		add	r3, r7, #24
 582 000a 4822     		movs	r2, #72
 583 000c 0021     		movs	r1, #0
 584 000e 1846     		mov	r0, r3
 585 0010 FFF7FEFF 		bl	memset
 217:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 586              		.loc 1 217 22
 587 0014 3B1D     		adds	r3, r7, #4
 588 0016 0022     		movs	r2, #0
 589 0018 1A60     		str	r2, [r3]
 590 001a 5A60     		str	r2, [r3, #4]
 591 001c 9A60     		str	r2, [r3, #8]
 592 001e DA60     		str	r2, [r3, #12]
 593 0020 1A61     		str	r2, [r3, #16]
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 220:Core/Src/main.c ****   */
 221:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST) != HAL_OK)
 594              		.loc 1 221 7
 595 0022 0020     		movs	r0, #0
 596 0024 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 597 0028 0346     		mov	r3, r0
 598              		.loc 1 221 6
 599 002a 002B     		cmp	r3, #0
 600 002c 01D0     		beq	.L26
 222:Core/Src/main.c ****   {
 223:Core/Src/main.c ****     Error_Handler();
 601              		.loc 1 223 5
 602 002e FFF7FEFF 		bl	Error_Handler
 603              	.L26:
 224:Core/Src/main.c ****   }
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 227:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 228:Core/Src/main.c ****   */
 229:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_MSI;
 604              		.loc 1 229 36
 605 0032 3023     		movs	r3, #48
 606 0034 BB61     		str	r3, [r7, #24]
 230:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 607              		.loc 1 230 32
 608 0036 0123     		movs	r3, #1
 609 0038 3B64     		str	r3, [r7, #64]
 231:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 610              		.loc 1 231 30
 611 003a 0123     		movs	r3, #1
 612 003c 7B63     		str	r3, [r7, #52]
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 16


 232:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 613              		.loc 1 232 41
 614 003e 0023     		movs	r3, #0
 615 0040 BB63     		str	r3, [r7, #56]
 233:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 616              		.loc 1 233 35
 617 0042 6023     		movs	r3, #96
 618 0044 FB63     		str	r3, [r7, #60]
 234:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 619              		.loc 1 234 34
 620 0046 0223     		movs	r3, #2
 621 0048 7B64     		str	r3, [r7, #68]
 235:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 622              		.loc 1 235 35
 623 004a 0123     		movs	r3, #1
 624 004c BB64     		str	r3, [r7, #72]
 236:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 625              		.loc 1 236 30
 626 004e 0123     		movs	r3, #1
 627 0050 FB64     		str	r3, [r7, #76]
 237:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 60;
 628              		.loc 1 237 30
 629 0052 3C23     		movs	r3, #60
 630 0054 3B65     		str	r3, [r7, #80]
 238:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 631              		.loc 1 238 30
 632 0056 0223     		movs	r3, #2
 633 0058 7B65     		str	r3, [r7, #84]
 239:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 634              		.loc 1 239 30
 635 005a 0223     		movs	r3, #2
 636 005c BB65     		str	r3, [r7, #88]
 240:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 637              		.loc 1 240 30
 638 005e 0223     		movs	r3, #2
 639 0060 FB65     		str	r3, [r7, #92]
 241:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 640              		.loc 1 241 7
 641 0062 07F11803 		add	r3, r7, #24
 642 0066 1846     		mov	r0, r3
 643 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 644 006c 0346     		mov	r3, r0
 645              		.loc 1 241 6
 646 006e 002B     		cmp	r3, #0
 647 0070 01D0     		beq	.L27
 242:Core/Src/main.c ****   {
 243:Core/Src/main.c ****     Error_Handler();
 648              		.loc 1 243 5
 649 0072 FFF7FEFF 		bl	Error_Handler
 650              	.L27:
 244:Core/Src/main.c ****   }
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 247:Core/Src/main.c ****   */
 248:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 651              		.loc 1 248 31
 652 0076 0F23     		movs	r3, #15
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 17


 653 0078 7B60     		str	r3, [r7, #4]
 249:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 250:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 654              		.loc 1 250 34
 655 007a 0323     		movs	r3, #3
 656 007c BB60     		str	r3, [r7, #8]
 251:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 657              		.loc 1 251 35
 658 007e 0023     		movs	r3, #0
 659 0080 FB60     		str	r3, [r7, #12]
 252:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 660              		.loc 1 252 36
 661 0082 0023     		movs	r3, #0
 662 0084 3B61     		str	r3, [r7, #16]
 253:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 663              		.loc 1 253 36
 664 0086 0023     		movs	r3, #0
 665 0088 7B61     		str	r3, [r7, #20]
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 666              		.loc 1 255 7
 667 008a 3B1D     		adds	r3, r7, #4
 668 008c 0521     		movs	r1, #5
 669 008e 1846     		mov	r0, r3
 670 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 671 0094 0346     		mov	r3, r0
 672              		.loc 1 255 6
 673 0096 002B     		cmp	r3, #0
 674 0098 01D0     		beq	.L29
 256:Core/Src/main.c ****   {
 257:Core/Src/main.c ****     Error_Handler();
 675              		.loc 1 257 5
 676 009a FFF7FEFF 		bl	Error_Handler
 677              	.L29:
 258:Core/Src/main.c ****   }
 259:Core/Src/main.c **** }
 678              		.loc 1 259 1
 679 009e 00BF     		nop
 680 00a0 6037     		adds	r7, r7, #96
 681              		.cfi_def_cfa_offset 8
 682 00a2 BD46     		mov	sp, r7
 683              		.cfi_def_cfa_register 13
 684              		@ sp needed
 685 00a4 80BD     		pop	{r7, pc}
 686              		.cfi_endproc
 687              	.LFE330:
 689              		.section	.text.MX_ADC1_Init,"ax",%progbits
 690              		.align	1
 691              		.syntax unified
 692              		.thumb
 693              		.thumb_func
 695              	MX_ADC1_Init:
 696              	.LFB331:
 260:Core/Src/main.c **** 
 261:Core/Src/main.c **** /**
 262:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 263:Core/Src/main.c ****   * @param None
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 18


 264:Core/Src/main.c ****   * @retval None
 265:Core/Src/main.c ****   */
 266:Core/Src/main.c **** static void MX_ADC1_Init(void)
 267:Core/Src/main.c **** {
 697              		.loc 1 267 1
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 40
 700              		@ frame_needed = 1, uses_anonymous_args = 0
 701 0000 80B5     		push	{r7, lr}
 702              		.cfi_def_cfa_offset 8
 703              		.cfi_offset 7, -8
 704              		.cfi_offset 14, -4
 705 0002 8AB0     		sub	sp, sp, #40
 706              		.cfi_def_cfa_offset 48
 707 0004 00AF     		add	r7, sp, #0
 708              		.cfi_def_cfa_register 7
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   ADC_MultiModeTypeDef multimode = {0};
 709              		.loc 1 273 24
 710 0006 07F11C03 		add	r3, r7, #28
 711 000a 0022     		movs	r2, #0
 712 000c 1A60     		str	r2, [r3]
 713 000e 5A60     		str	r2, [r3, #4]
 714 0010 9A60     		str	r2, [r3, #8]
 274:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 715              		.loc 1 274 26
 716 0012 3B1D     		adds	r3, r7, #4
 717 0014 0022     		movs	r2, #0
 718 0016 1A60     		str	r2, [r3]
 719 0018 5A60     		str	r2, [r3, #4]
 720 001a 9A60     		str	r2, [r3, #8]
 721 001c DA60     		str	r2, [r3, #12]
 722 001e 1A61     		str	r2, [r3, #16]
 723 0020 5A61     		str	r2, [r3, #20]
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /** Common config
 281:Core/Src/main.c ****   */
 282:Core/Src/main.c ****   hadc1.Instance = ADC1;
 724              		.loc 1 282 18
 725 0022 434B     		ldr	r3, .L37
 726 0024 434A     		ldr	r2, .L37+4
 727 0026 1A60     		str	r2, [r3]
 283:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 728              		.loc 1 283 29
 729 0028 414B     		ldr	r3, .L37
 730 002a 0022     		movs	r2, #0
 731 002c 5A60     		str	r2, [r3, #4]
 284:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 732              		.loc 1 284 25
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 19


 733 002e 404B     		ldr	r3, .L37
 734 0030 0022     		movs	r2, #0
 735 0032 9A60     		str	r2, [r3, #8]
 285:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 736              		.loc 1 285 24
 737 0034 3E4B     		ldr	r3, .L37
 738 0036 0022     		movs	r2, #0
 739 0038 DA60     		str	r2, [r3, #12]
 286:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 740              		.loc 1 286 27
 741 003a 3D4B     		ldr	r3, .L37
 742 003c 0122     		movs	r2, #1
 743 003e 1A61     		str	r2, [r3, #16]
 287:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 744              		.loc 1 287 27
 745 0040 3B4B     		ldr	r3, .L37
 746 0042 0422     		movs	r2, #4
 747 0044 5A61     		str	r2, [r3, #20]
 288:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 748              		.loc 1 288 31
 749 0046 3A4B     		ldr	r3, .L37
 750 0048 0022     		movs	r2, #0
 751 004a 1A76     		strb	r2, [r3, #24]
 289:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 752              		.loc 1 289 33
 753 004c 384B     		ldr	r3, .L37
 754 004e 0122     		movs	r2, #1
 755 0050 5A76     		strb	r2, [r3, #25]
 290:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 3;
 756              		.loc 1 290 30
 757 0052 374B     		ldr	r3, .L37
 758 0054 0322     		movs	r2, #3
 759 0056 DA61     		str	r2, [r3, #28]
 291:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 760              		.loc 1 291 36
 761 0058 354B     		ldr	r3, .L37
 762 005a 0022     		movs	r2, #0
 763 005c 83F82020 		strb	r2, [r3, #32]
 292:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 764              		.loc 1 292 31
 765 0060 334B     		ldr	r3, .L37
 766 0062 0022     		movs	r2, #0
 767 0064 9A62     		str	r2, [r3, #40]
 293:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 768              		.loc 1 293 35
 769 0066 324B     		ldr	r3, .L37
 770 0068 0022     		movs	r2, #0
 771 006a DA62     		str	r2, [r3, #44]
 294:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 772              		.loc 1 294 36
 773 006c 304B     		ldr	r3, .L37
 774 006e 0122     		movs	r2, #1
 775 0070 83F83020 		strb	r2, [r3, #48]
 295:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 776              		.loc 1 295 22
 777 0074 2E4B     		ldr	r3, .L37
 778 0076 0022     		movs	r2, #0
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 20


 779 0078 5A63     		str	r2, [r3, #52]
 296:Core/Src/main.c ****   hadc1.Init.OversamplingMode = ENABLE;
 780              		.loc 1 296 31
 781 007a 2D4B     		ldr	r3, .L37
 782 007c 0122     		movs	r2, #1
 783 007e 83F83820 		strb	r2, [r3, #56]
 297:Core/Src/main.c ****   hadc1.Init.Oversampling.Ratio = ADC_OVERSAMPLING_RATIO_16;
 784              		.loc 1 297 33
 785 0082 2B4B     		ldr	r3, .L37
 786 0084 0C22     		movs	r2, #12
 787 0086 DA63     		str	r2, [r3, #60]
 298:Core/Src/main.c ****   hadc1.Init.Oversampling.RightBitShift = ADC_RIGHTBITSHIFT_NONE;
 788              		.loc 1 298 41
 789 0088 294B     		ldr	r3, .L37
 790 008a 0022     		movs	r2, #0
 791 008c 1A64     		str	r2, [r3, #64]
 299:Core/Src/main.c ****   hadc1.Init.Oversampling.TriggeredMode = ADC_TRIGGEREDMODE_SINGLE_TRIGGER;
 792              		.loc 1 299 41
 793 008e 284B     		ldr	r3, .L37
 794 0090 0022     		movs	r2, #0
 795 0092 5A64     		str	r2, [r3, #68]
 300:Core/Src/main.c ****   hadc1.Init.Oversampling.OversamplingStopReset = ADC_REGOVERSAMPLING_CONTINUED_MODE;
 796              		.loc 1 300 49
 797 0094 264B     		ldr	r3, .L37
 798 0096 0122     		movs	r2, #1
 799 0098 9A64     		str	r2, [r3, #72]
 301:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800              		.loc 1 301 7
 801 009a 2548     		ldr	r0, .L37
 802 009c FFF7FEFF 		bl	HAL_ADC_Init
 803 00a0 0346     		mov	r3, r0
 804              		.loc 1 301 6
 805 00a2 002B     		cmp	r3, #0
 806 00a4 01D0     		beq	.L31
 302:Core/Src/main.c ****   {
 303:Core/Src/main.c ****     Error_Handler();
 807              		.loc 1 303 5
 808 00a6 FFF7FEFF 		bl	Error_Handler
 809              	.L31:
 304:Core/Src/main.c ****   }
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   /** Configure the ADC multi-mode
 307:Core/Src/main.c ****   */
 308:Core/Src/main.c ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 810              		.loc 1 308 18
 811 00aa 0023     		movs	r3, #0
 812 00ac FB61     		str	r3, [r7, #28]
 309:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 813              		.loc 1 309 7
 814 00ae 07F11C03 		add	r3, r7, #28
 815 00b2 1946     		mov	r1, r3
 816 00b4 1E48     		ldr	r0, .L37
 817 00b6 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 818 00ba 0346     		mov	r3, r0
 819              		.loc 1 309 6
 820 00bc 002B     		cmp	r3, #0
 821 00be 01D0     		beq	.L32
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 21


 310:Core/Src/main.c ****   {
 311:Core/Src/main.c ****     Error_Handler();
 822              		.loc 1 311 5
 823 00c0 FFF7FEFF 		bl	Error_Handler
 824              	.L32:
 312:Core/Src/main.c ****   }
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****   /** Configure Regular Channel
 315:Core/Src/main.c ****   */
 316:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 825              		.loc 1 316 19
 826 00c4 1C4B     		ldr	r3, .L37+8
 827 00c6 7B60     		str	r3, [r7, #4]
 317:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 828              		.loc 1 317 16
 829 00c8 0623     		movs	r3, #6
 830 00ca BB60     		str	r3, [r7, #8]
 318:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_247CYCLES_5;
 831              		.loc 1 318 24
 832 00cc 0623     		movs	r3, #6
 833 00ce FB60     		str	r3, [r7, #12]
 319:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 834              		.loc 1 319 22
 835 00d0 7F23     		movs	r3, #127
 836 00d2 3B61     		str	r3, [r7, #16]
 320:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 837              		.loc 1 320 24
 838 00d4 0423     		movs	r3, #4
 839 00d6 7B61     		str	r3, [r7, #20]
 321:Core/Src/main.c ****   sConfig.Offset = 0;
 840              		.loc 1 321 18
 841 00d8 0023     		movs	r3, #0
 842 00da BB61     		str	r3, [r7, #24]
 322:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 843              		.loc 1 322 7
 844 00dc 3B1D     		adds	r3, r7, #4
 845 00de 1946     		mov	r1, r3
 846 00e0 1348     		ldr	r0, .L37
 847 00e2 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 848 00e6 0346     		mov	r3, r0
 849              		.loc 1 322 6
 850 00e8 002B     		cmp	r3, #0
 851 00ea 01D0     		beq	.L33
 323:Core/Src/main.c ****   {
 324:Core/Src/main.c ****     Error_Handler();
 852              		.loc 1 324 5
 853 00ec FFF7FEFF 		bl	Error_Handler
 854              	.L33:
 325:Core/Src/main.c ****   }
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   /** Configure Regular Channel
 328:Core/Src/main.c ****   */
 329:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_2;
 855              		.loc 1 329 19
 856 00f0 124B     		ldr	r3, .L37+12
 857 00f2 7B60     		str	r3, [r7, #4]
 330:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 22


 858              		.loc 1 330 16
 859 00f4 0C23     		movs	r3, #12
 860 00f6 BB60     		str	r3, [r7, #8]
 331:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 861              		.loc 1 331 7
 862 00f8 3B1D     		adds	r3, r7, #4
 863 00fa 1946     		mov	r1, r3
 864 00fc 0C48     		ldr	r0, .L37
 865 00fe FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 866 0102 0346     		mov	r3, r0
 867              		.loc 1 331 6
 868 0104 002B     		cmp	r3, #0
 869 0106 01D0     		beq	.L34
 332:Core/Src/main.c ****   {
 333:Core/Src/main.c ****     Error_Handler();
 870              		.loc 1 333 5
 871 0108 FFF7FEFF 		bl	Error_Handler
 872              	.L34:
 334:Core/Src/main.c ****   }
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   /** Configure Regular Channel
 337:Core/Src/main.c ****   */
 338:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 873              		.loc 1 338 19
 874 010c 0C4B     		ldr	r3, .L37+16
 875 010e 7B60     		str	r3, [r7, #4]
 339:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 876              		.loc 1 339 16
 877 0110 1223     		movs	r3, #18
 878 0112 BB60     		str	r3, [r7, #8]
 340:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 879              		.loc 1 340 7
 880 0114 3B1D     		adds	r3, r7, #4
 881 0116 1946     		mov	r1, r3
 882 0118 0548     		ldr	r0, .L37
 883 011a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 884 011e 0346     		mov	r3, r0
 885              		.loc 1 340 6
 886 0120 002B     		cmp	r3, #0
 887 0122 01D0     		beq	.L36
 341:Core/Src/main.c ****   {
 342:Core/Src/main.c ****     Error_Handler();
 888              		.loc 1 342 5
 889 0124 FFF7FEFF 		bl	Error_Handler
 890              	.L36:
 343:Core/Src/main.c ****   }
 344:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 347:Core/Src/main.c **** 
 348:Core/Src/main.c **** }
 891              		.loc 1 348 1
 892 0128 00BF     		nop
 893 012a 2837     		adds	r7, r7, #40
 894              		.cfi_def_cfa_offset 8
 895 012c BD46     		mov	sp, r7
 896              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 23


 897              		@ sp needed
 898 012e 80BD     		pop	{r7, pc}
 899              	.L38:
 900              		.align	2
 901              	.L37:
 902 0130 00000000 		.word	hadc1
 903 0134 00000450 		.word	1342439424
 904 0138 02003004 		.word	70254594
 905 013c 04006008 		.word	140509188
 906 0140 000052C7 		.word	-950927360
 907              		.cfi_endproc
 908              	.LFE331:
 910              		.section	.text.MX_LPUART1_UART_Init,"ax",%progbits
 911              		.align	1
 912              		.syntax unified
 913              		.thumb
 914              		.thumb_func
 916              	MX_LPUART1_UART_Init:
 917              	.LFB332:
 349:Core/Src/main.c **** 
 350:Core/Src/main.c **** /**
 351:Core/Src/main.c ****   * @brief LPUART1 Initialization Function
 352:Core/Src/main.c ****   * @param None
 353:Core/Src/main.c ****   * @retval None
 354:Core/Src/main.c ****   */
 355:Core/Src/main.c **** static void MX_LPUART1_UART_Init(void)
 356:Core/Src/main.c **** {
 918              		.loc 1 356 1
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 0
 921              		@ frame_needed = 1, uses_anonymous_args = 0
 922 0000 80B5     		push	{r7, lr}
 923              		.cfi_def_cfa_offset 8
 924              		.cfi_offset 7, -8
 925              		.cfi_offset 14, -4
 926 0002 00AF     		add	r7, sp, #0
 927              		.cfi_def_cfa_register 7
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 0 */
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 0 */
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 1 */
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 1 */
 365:Core/Src/main.c ****   hlpuart1.Instance = LPUART1;
 928              		.loc 1 365 21
 929 0004 244B     		ldr	r3, .L45
 930 0006 254A     		ldr	r2, .L45+4
 931 0008 1A60     		str	r2, [r3]
 366:Core/Src/main.c ****   hlpuart1.Init.BaudRate = 115200;
 932              		.loc 1 366 26
 933 000a 234B     		ldr	r3, .L45
 934 000c 4FF4E132 		mov	r2, #115200
 935 0010 5A60     		str	r2, [r3, #4]
 367:Core/Src/main.c ****   hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 936              		.loc 1 367 28
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 24


 937 0012 214B     		ldr	r3, .L45
 938 0014 0022     		movs	r2, #0
 939 0016 9A60     		str	r2, [r3, #8]
 368:Core/Src/main.c ****   hlpuart1.Init.StopBits = UART_STOPBITS_1;
 940              		.loc 1 368 26
 941 0018 1F4B     		ldr	r3, .L45
 942 001a 0022     		movs	r2, #0
 943 001c DA60     		str	r2, [r3, #12]
 369:Core/Src/main.c ****   hlpuart1.Init.Parity = UART_PARITY_NONE;
 944              		.loc 1 369 24
 945 001e 1E4B     		ldr	r3, .L45
 946 0020 0022     		movs	r2, #0
 947 0022 1A61     		str	r2, [r3, #16]
 370:Core/Src/main.c ****   hlpuart1.Init.Mode = UART_MODE_TX_RX;
 948              		.loc 1 370 22
 949 0024 1C4B     		ldr	r3, .L45
 950 0026 0C22     		movs	r2, #12
 951 0028 5A61     		str	r2, [r3, #20]
 371:Core/Src/main.c ****   hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 952              		.loc 1 371 27
 953 002a 1B4B     		ldr	r3, .L45
 954 002c 0022     		movs	r2, #0
 955 002e 9A61     		str	r2, [r3, #24]
 372:Core/Src/main.c ****   hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 956              		.loc 1 372 32
 957 0030 194B     		ldr	r3, .L45
 958 0032 0022     		movs	r2, #0
 959 0034 1A62     		str	r2, [r3, #32]
 373:Core/Src/main.c ****   hlpuart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 960              		.loc 1 373 32
 961 0036 184B     		ldr	r3, .L45
 962 0038 0022     		movs	r2, #0
 963 003a 5A62     		str	r2, [r3, #36]
 374:Core/Src/main.c ****   hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_RXOVERRUNDISABLE_INIT;
 964              		.loc 1 374 40
 965 003c 164B     		ldr	r3, .L45
 966 003e 1022     		movs	r2, #16
 967 0040 9A62     		str	r2, [r3, #40]
 375:Core/Src/main.c ****   hlpuart1.AdvancedInit.OverrunDisable = UART_ADVFEATURE_OVERRUN_DISABLE;
 968              		.loc 1 375 40
 969 0042 154B     		ldr	r3, .L45
 970 0044 4FF48052 		mov	r2, #4096
 971 0048 DA63     		str	r2, [r3, #60]
 376:Core/Src/main.c ****   hlpuart1.FifoMode = UART_FIFOMODE_DISABLE;
 972              		.loc 1 376 21
 973 004a 134B     		ldr	r3, .L45
 974 004c 0022     		movs	r2, #0
 975 004e 5A66     		str	r2, [r3, #100]
 377:Core/Src/main.c ****   if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 976              		.loc 1 377 7
 977 0050 1148     		ldr	r0, .L45
 978 0052 FFF7FEFF 		bl	HAL_UART_Init
 979 0056 0346     		mov	r3, r0
 980              		.loc 1 377 6
 981 0058 002B     		cmp	r3, #0
 982 005a 01D0     		beq	.L40
 378:Core/Src/main.c ****   {
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 25


 379:Core/Src/main.c ****     Error_Handler();
 983              		.loc 1 379 5
 984 005c FFF7FEFF 		bl	Error_Handler
 985              	.L40:
 380:Core/Src/main.c ****   }
 381:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&hlpuart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 986              		.loc 1 381 7
 987 0060 0021     		movs	r1, #0
 988 0062 0D48     		ldr	r0, .L45
 989 0064 FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 990 0068 0346     		mov	r3, r0
 991              		.loc 1 381 6
 992 006a 002B     		cmp	r3, #0
 993 006c 01D0     		beq	.L41
 382:Core/Src/main.c ****   {
 383:Core/Src/main.c ****     Error_Handler();
 994              		.loc 1 383 5
 995 006e FFF7FEFF 		bl	Error_Handler
 996              	.L41:
 384:Core/Src/main.c ****   }
 385:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&hlpuart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 997              		.loc 1 385 7
 998 0072 0021     		movs	r1, #0
 999 0074 0848     		ldr	r0, .L45
 1000 0076 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 1001 007a 0346     		mov	r3, r0
 1002              		.loc 1 385 6
 1003 007c 002B     		cmp	r3, #0
 1004 007e 01D0     		beq	.L42
 386:Core/Src/main.c ****   {
 387:Core/Src/main.c ****     Error_Handler();
 1005              		.loc 1 387 5
 1006 0080 FFF7FEFF 		bl	Error_Handler
 1007              	.L42:
 388:Core/Src/main.c ****   }
 389:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&hlpuart1) != HAL_OK)
 1008              		.loc 1 389 7
 1009 0084 0448     		ldr	r0, .L45
 1010 0086 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 1011 008a 0346     		mov	r3, r0
 1012              		.loc 1 389 6
 1013 008c 002B     		cmp	r3, #0
 1014 008e 01D0     		beq	.L44
 390:Core/Src/main.c ****   {
 391:Core/Src/main.c ****     Error_Handler();
 1015              		.loc 1 391 5
 1016 0090 FFF7FEFF 		bl	Error_Handler
 1017              	.L44:
 392:Core/Src/main.c ****   }
 393:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 2 */
 394:Core/Src/main.c **** 
 395:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 2 */
 396:Core/Src/main.c **** 
 397:Core/Src/main.c **** }
 1018              		.loc 1 397 1
 1019 0094 00BF     		nop
 1020 0096 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 26


 1021              	.L46:
 1022              		.align	2
 1023              	.L45:
 1024 0098 00000000 		.word	hlpuart1
 1025 009c 00800040 		.word	1073774592
 1026              		.cfi_endproc
 1027              	.LFE332:
 1029              		.section	.text.MX_UART4_Init,"ax",%progbits
 1030              		.align	1
 1031              		.syntax unified
 1032              		.thumb
 1033              		.thumb_func
 1035              	MX_UART4_Init:
 1036              	.LFB333:
 398:Core/Src/main.c **** 
 399:Core/Src/main.c **** /**
 400:Core/Src/main.c ****   * @brief UART4 Initialization Function
 401:Core/Src/main.c ****   * @param None
 402:Core/Src/main.c ****   * @retval None
 403:Core/Src/main.c ****   */
 404:Core/Src/main.c **** static void MX_UART4_Init(void)
 405:Core/Src/main.c **** {
 1037              		.loc 1 405 1
 1038              		.cfi_startproc
 1039              		@ args = 0, pretend = 0, frame = 0
 1040              		@ frame_needed = 1, uses_anonymous_args = 0
 1041 0000 80B5     		push	{r7, lr}
 1042              		.cfi_def_cfa_offset 8
 1043              		.cfi_offset 7, -8
 1044              		.cfi_offset 14, -4
 1045 0002 00AF     		add	r7, sp, #0
 1046              		.cfi_def_cfa_register 7
 406:Core/Src/main.c **** 
 407:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 0 */
 408:Core/Src/main.c **** 
 409:Core/Src/main.c ****   /* USER CODE END UART4_Init 0 */
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 1 */
 412:Core/Src/main.c **** 
 413:Core/Src/main.c ****   /* USER CODE END UART4_Init 1 */
 414:Core/Src/main.c ****   huart4.Instance = UART4;
 1047              		.loc 1 414 19
 1048 0004 224B     		ldr	r3, .L53
 1049 0006 234A     		ldr	r2, .L53+4
 1050 0008 1A60     		str	r2, [r3]
 415:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
 1051              		.loc 1 415 24
 1052 000a 214B     		ldr	r3, .L53
 1053 000c 4FF4E132 		mov	r2, #115200
 1054 0010 5A60     		str	r2, [r3, #4]
 416:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 1055              		.loc 1 416 26
 1056 0012 1F4B     		ldr	r3, .L53
 1057 0014 0022     		movs	r2, #0
 1058 0016 9A60     		str	r2, [r3, #8]
 417:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 1059              		.loc 1 417 24
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 27


 1060 0018 1D4B     		ldr	r3, .L53
 1061 001a 0022     		movs	r2, #0
 1062 001c DA60     		str	r2, [r3, #12]
 418:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 1063              		.loc 1 418 22
 1064 001e 1C4B     		ldr	r3, .L53
 1065 0020 0022     		movs	r2, #0
 1066 0022 1A61     		str	r2, [r3, #16]
 419:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 1067              		.loc 1 419 20
 1068 0024 1A4B     		ldr	r3, .L53
 1069 0026 0C22     		movs	r2, #12
 1070 0028 5A61     		str	r2, [r3, #20]
 420:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1071              		.loc 1 420 25
 1072 002a 194B     		ldr	r3, .L53
 1073 002c 0022     		movs	r2, #0
 1074 002e 9A61     		str	r2, [r3, #24]
 421:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 1075              		.loc 1 421 28
 1076 0030 174B     		ldr	r3, .L53
 1077 0032 0022     		movs	r2, #0
 1078 0034 DA61     		str	r2, [r3, #28]
 422:Core/Src/main.c ****   huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1079              		.loc 1 422 30
 1080 0036 164B     		ldr	r3, .L53
 1081 0038 0022     		movs	r2, #0
 1082 003a 1A62     		str	r2, [r3, #32]
 423:Core/Src/main.c ****   huart4.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 1083              		.loc 1 423 30
 1084 003c 144B     		ldr	r3, .L53
 1085 003e 0022     		movs	r2, #0
 1086 0040 5A62     		str	r2, [r3, #36]
 424:Core/Src/main.c ****   huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1087              		.loc 1 424 38
 1088 0042 134B     		ldr	r3, .L53
 1089 0044 0022     		movs	r2, #0
 1090 0046 9A62     		str	r2, [r3, #40]
 425:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 1091              		.loc 1 425 7
 1092 0048 1148     		ldr	r0, .L53
 1093 004a FFF7FEFF 		bl	HAL_UART_Init
 1094 004e 0346     		mov	r3, r0
 1095              		.loc 1 425 6
 1096 0050 002B     		cmp	r3, #0
 1097 0052 01D0     		beq	.L48
 426:Core/Src/main.c ****   {
 427:Core/Src/main.c ****     Error_Handler();
 1098              		.loc 1 427 5
 1099 0054 FFF7FEFF 		bl	Error_Handler
 1100              	.L48:
 428:Core/Src/main.c ****   }
 429:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart4, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 1101              		.loc 1 429 7
 1102 0058 0021     		movs	r1, #0
 1103 005a 0D48     		ldr	r0, .L53
 1104 005c FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 28


 1105 0060 0346     		mov	r3, r0
 1106              		.loc 1 429 6
 1107 0062 002B     		cmp	r3, #0
 1108 0064 01D0     		beq	.L49
 430:Core/Src/main.c ****   {
 431:Core/Src/main.c ****     Error_Handler();
 1109              		.loc 1 431 5
 1110 0066 FFF7FEFF 		bl	Error_Handler
 1111              	.L49:
 432:Core/Src/main.c ****   }
 433:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart4, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 1112              		.loc 1 433 7
 1113 006a 0021     		movs	r1, #0
 1114 006c 0848     		ldr	r0, .L53
 1115 006e FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 1116 0072 0346     		mov	r3, r0
 1117              		.loc 1 433 6
 1118 0074 002B     		cmp	r3, #0
 1119 0076 01D0     		beq	.L50
 434:Core/Src/main.c ****   {
 435:Core/Src/main.c ****     Error_Handler();
 1120              		.loc 1 435 5
 1121 0078 FFF7FEFF 		bl	Error_Handler
 1122              	.L50:
 436:Core/Src/main.c ****   }
 437:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&huart4) != HAL_OK)
 1123              		.loc 1 437 7
 1124 007c 0448     		ldr	r0, .L53
 1125 007e FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 1126 0082 0346     		mov	r3, r0
 1127              		.loc 1 437 6
 1128 0084 002B     		cmp	r3, #0
 1129 0086 01D0     		beq	.L52
 438:Core/Src/main.c ****   {
 439:Core/Src/main.c ****     Error_Handler();
 1130              		.loc 1 439 5
 1131 0088 FFF7FEFF 		bl	Error_Handler
 1132              	.L52:
 440:Core/Src/main.c ****   }
 441:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 2 */
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****   /* USER CODE END UART4_Init 2 */
 444:Core/Src/main.c **** 
 445:Core/Src/main.c **** }
 1133              		.loc 1 445 1
 1134 008c 00BF     		nop
 1135 008e 80BD     		pop	{r7, pc}
 1136              	.L54:
 1137              		.align	2
 1138              	.L53:
 1139 0090 00000000 		.word	huart4
 1140 0094 004C0040 		.word	1073761280
 1141              		.cfi_endproc
 1142              	.LFE333:
 1144              		.section	.text.MX_TIM3_Init,"ax",%progbits
 1145              		.align	1
 1146              		.syntax unified
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 29


 1147              		.thumb
 1148              		.thumb_func
 1150              	MX_TIM3_Init:
 1151              	.LFB334:
 446:Core/Src/main.c **** 
 447:Core/Src/main.c **** /**
 448:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 449:Core/Src/main.c ****   * @param None
 450:Core/Src/main.c ****   * @retval None
 451:Core/Src/main.c ****   */
 452:Core/Src/main.c **** static void MX_TIM3_Init(void)
 453:Core/Src/main.c **** {
 1152              		.loc 1 453 1
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 56
 1155              		@ frame_needed = 1, uses_anonymous_args = 0
 1156 0000 80B5     		push	{r7, lr}
 1157              		.cfi_def_cfa_offset 8
 1158              		.cfi_offset 7, -8
 1159              		.cfi_offset 14, -4
 1160 0002 8EB0     		sub	sp, sp, #56
 1161              		.cfi_def_cfa_offset 64
 1162 0004 00AF     		add	r7, sp, #0
 1163              		.cfi_def_cfa_register 7
 454:Core/Src/main.c **** 
 455:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1164              		.loc 1 459 26
 1165 0006 07F12803 		add	r3, r7, #40
 1166 000a 0022     		movs	r2, #0
 1167 000c 1A60     		str	r2, [r3]
 1168 000e 5A60     		str	r2, [r3, #4]
 1169 0010 9A60     		str	r2, [r3, #8]
 1170 0012 DA60     		str	r2, [r3, #12]
 460:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1171              		.loc 1 460 27
 1172 0014 07F11C03 		add	r3, r7, #28
 1173 0018 0022     		movs	r2, #0
 1174 001a 1A60     		str	r2, [r3]
 1175 001c 5A60     		str	r2, [r3, #4]
 1176 001e 9A60     		str	r2, [r3, #8]
 461:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1177              		.loc 1 461 22
 1178 0020 3B46     		mov	r3, r7
 1179 0022 0022     		movs	r2, #0
 1180 0024 1A60     		str	r2, [r3]
 1181 0026 5A60     		str	r2, [r3, #4]
 1182 0028 9A60     		str	r2, [r3, #8]
 1183 002a DA60     		str	r2, [r3, #12]
 1184 002c 1A61     		str	r2, [r3, #16]
 1185 002e 5A61     		str	r2, [r3, #20]
 1186 0030 9A61     		str	r2, [r3, #24]
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 30


 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 466:Core/Src/main.c ****   htim3.Instance = TIM3;
 1187              		.loc 1 466 18
 1188 0032 374B     		ldr	r3, .L63
 1189 0034 374A     		ldr	r2, .L63+4
 1190 0036 1A60     		str	r2, [r3]
 467:Core/Src/main.c ****   htim3.Init.Prescaler = 119;
 1191              		.loc 1 467 24
 1192 0038 354B     		ldr	r3, .L63
 1193 003a 7722     		movs	r2, #119
 1194 003c 5A60     		str	r2, [r3, #4]
 468:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1195              		.loc 1 468 26
 1196 003e 344B     		ldr	r3, .L63
 1197 0040 0022     		movs	r2, #0
 1198 0042 9A60     		str	r2, [r3, #8]
 469:Core/Src/main.c ****   htim3.Init.Period = 255;
 1199              		.loc 1 469 21
 1200 0044 324B     		ldr	r3, .L63
 1201 0046 FF22     		movs	r2, #255
 1202 0048 DA60     		str	r2, [r3, #12]
 470:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1203              		.loc 1 470 28
 1204 004a 314B     		ldr	r3, .L63
 1205 004c 0022     		movs	r2, #0
 1206 004e 1A61     		str	r2, [r3, #16]
 471:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1207              		.loc 1 471 32
 1208 0050 2F4B     		ldr	r3, .L63
 1209 0052 8022     		movs	r2, #128
 1210 0054 9A61     		str	r2, [r3, #24]
 472:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1211              		.loc 1 472 7
 1212 0056 2E48     		ldr	r0, .L63
 1213 0058 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1214 005c 0346     		mov	r3, r0
 1215              		.loc 1 472 6
 1216 005e 002B     		cmp	r3, #0
 1217 0060 01D0     		beq	.L56
 473:Core/Src/main.c ****   {
 474:Core/Src/main.c ****     Error_Handler();
 1218              		.loc 1 474 5
 1219 0062 FFF7FEFF 		bl	Error_Handler
 1220              	.L56:
 475:Core/Src/main.c ****   }
 476:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1221              		.loc 1 476 34
 1222 0066 4FF48053 		mov	r3, #4096
 1223 006a BB62     		str	r3, [r7, #40]
 477:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1224              		.loc 1 477 7
 1225 006c 07F12803 		add	r3, r7, #40
 1226 0070 1946     		mov	r1, r3
 1227 0072 2748     		ldr	r0, .L63
 1228 0074 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1229 0078 0346     		mov	r3, r0
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 31


 1230              		.loc 1 477 6
 1231 007a 002B     		cmp	r3, #0
 1232 007c 01D0     		beq	.L57
 478:Core/Src/main.c ****   {
 479:Core/Src/main.c ****     Error_Handler();
 1233              		.loc 1 479 5
 1234 007e FFF7FEFF 		bl	Error_Handler
 1235              	.L57:
 480:Core/Src/main.c ****   }
 481:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 1236              		.loc 1 481 7
 1237 0082 2348     		ldr	r0, .L63
 1238 0084 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1239 0088 0346     		mov	r3, r0
 1240              		.loc 1 481 6
 1241 008a 002B     		cmp	r3, #0
 1242 008c 01D0     		beq	.L58
 482:Core/Src/main.c ****   {
 483:Core/Src/main.c ****     Error_Handler();
 1243              		.loc 1 483 5
 1244 008e FFF7FEFF 		bl	Error_Handler
 1245              	.L58:
 484:Core/Src/main.c ****   }
 485:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1246              		.loc 1 485 37
 1247 0092 0023     		movs	r3, #0
 1248 0094 FB61     		str	r3, [r7, #28]
 486:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1249              		.loc 1 486 33
 1250 0096 0023     		movs	r3, #0
 1251 0098 7B62     		str	r3, [r7, #36]
 487:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1252              		.loc 1 487 7
 1253 009a 07F11C03 		add	r3, r7, #28
 1254 009e 1946     		mov	r1, r3
 1255 00a0 1B48     		ldr	r0, .L63
 1256 00a2 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1257 00a6 0346     		mov	r3, r0
 1258              		.loc 1 487 6
 1259 00a8 002B     		cmp	r3, #0
 1260 00aa 01D0     		beq	.L59
 488:Core/Src/main.c ****   {
 489:Core/Src/main.c ****     Error_Handler();
 1261              		.loc 1 489 5
 1262 00ac FFF7FEFF 		bl	Error_Handler
 1263              	.L59:
 490:Core/Src/main.c ****   }
 491:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 1264              		.loc 1 491 20
 1265 00b0 6023     		movs	r3, #96
 1266 00b2 3B60     		str	r3, [r7]
 492:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1267              		.loc 1 492 19
 1268 00b4 0023     		movs	r3, #0
 1269 00b6 7B60     		str	r3, [r7, #4]
 493:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1270              		.loc 1 493 24
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 32


 1271 00b8 0023     		movs	r3, #0
 1272 00ba BB60     		str	r3, [r7, #8]
 494:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1273              		.loc 1 494 24
 1274 00bc 0023     		movs	r3, #0
 1275 00be 3B61     		str	r3, [r7, #16]
 495:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1276              		.loc 1 495 7
 1277 00c0 3B46     		mov	r3, r7
 1278 00c2 0022     		movs	r2, #0
 1279 00c4 1946     		mov	r1, r3
 1280 00c6 1248     		ldr	r0, .L63
 1281 00c8 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1282 00cc 0346     		mov	r3, r0
 1283              		.loc 1 495 6
 1284 00ce 002B     		cmp	r3, #0
 1285 00d0 01D0     		beq	.L60
 496:Core/Src/main.c ****   {
 497:Core/Src/main.c ****     Error_Handler();
 1286              		.loc 1 497 5
 1287 00d2 FFF7FEFF 		bl	Error_Handler
 1288              	.L60:
 498:Core/Src/main.c ****   }
 499:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 1289              		.loc 1 499 7
 1290 00d6 3B46     		mov	r3, r7
 1291 00d8 0422     		movs	r2, #4
 1292 00da 1946     		mov	r1, r3
 1293 00dc 0C48     		ldr	r0, .L63
 1294 00de FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1295 00e2 0346     		mov	r3, r0
 1296              		.loc 1 499 6
 1297 00e4 002B     		cmp	r3, #0
 1298 00e6 01D0     		beq	.L61
 500:Core/Src/main.c ****   {
 501:Core/Src/main.c ****     Error_Handler();
 1299              		.loc 1 501 5
 1300 00e8 FFF7FEFF 		bl	Error_Handler
 1301              	.L61:
 502:Core/Src/main.c ****   }
 503:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 1302              		.loc 1 503 7
 1303 00ec 3B46     		mov	r3, r7
 1304 00ee 0822     		movs	r2, #8
 1305 00f0 1946     		mov	r1, r3
 1306 00f2 0748     		ldr	r0, .L63
 1307 00f4 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1308 00f8 0346     		mov	r3, r0
 1309              		.loc 1 503 6
 1310 00fa 002B     		cmp	r3, #0
 1311 00fc 01D0     		beq	.L62
 504:Core/Src/main.c ****   {
 505:Core/Src/main.c ****     Error_Handler();
 1312              		.loc 1 505 5
 1313 00fe FFF7FEFF 		bl	Error_Handler
 1314              	.L62:
 506:Core/Src/main.c ****   }
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 33


 507:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 508:Core/Src/main.c **** 
 509:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 510:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 1315              		.loc 1 510 3
 1316 0102 0348     		ldr	r0, .L63
 1317 0104 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 511:Core/Src/main.c **** 
 512:Core/Src/main.c **** }
 1318              		.loc 1 512 1
 1319 0108 00BF     		nop
 1320 010a 3837     		adds	r7, r7, #56
 1321              		.cfi_def_cfa_offset 8
 1322 010c BD46     		mov	sp, r7
 1323              		.cfi_def_cfa_register 13
 1324              		@ sp needed
 1325 010e 80BD     		pop	{r7, pc}
 1326              	.L64:
 1327              		.align	2
 1328              	.L63:
 1329 0110 00000000 		.word	htim3
 1330 0114 00040040 		.word	1073742848
 1331              		.cfi_endproc
 1332              	.LFE334:
 1334              		.section	.text.MX_TIM4_Init,"ax",%progbits
 1335              		.align	1
 1336              		.syntax unified
 1337              		.thumb
 1338              		.thumb_func
 1340              	MX_TIM4_Init:
 1341              	.LFB335:
 513:Core/Src/main.c **** 
 514:Core/Src/main.c **** /**
 515:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 516:Core/Src/main.c ****   * @param None
 517:Core/Src/main.c ****   * @retval None
 518:Core/Src/main.c ****   */
 519:Core/Src/main.c **** static void MX_TIM4_Init(void)
 520:Core/Src/main.c **** {
 1342              		.loc 1 520 1
 1343              		.cfi_startproc
 1344              		@ args = 0, pretend = 0, frame = 32
 1345              		@ frame_needed = 1, uses_anonymous_args = 0
 1346 0000 80B5     		push	{r7, lr}
 1347              		.cfi_def_cfa_offset 8
 1348              		.cfi_offset 7, -8
 1349              		.cfi_offset 14, -4
 1350 0002 88B0     		sub	sp, sp, #32
 1351              		.cfi_def_cfa_offset 40
 1352 0004 00AF     		add	r7, sp, #0
 1353              		.cfi_def_cfa_register 7
 521:Core/Src/main.c **** 
 522:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 523:Core/Src/main.c **** 
 524:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 525:Core/Src/main.c **** 
 526:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 34


 1354              		.loc 1 526 26
 1355 0006 07F11003 		add	r3, r7, #16
 1356 000a 0022     		movs	r2, #0
 1357 000c 1A60     		str	r2, [r3]
 1358 000e 5A60     		str	r2, [r3, #4]
 1359 0010 9A60     		str	r2, [r3, #8]
 1360 0012 DA60     		str	r2, [r3, #12]
 527:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1361              		.loc 1 527 27
 1362 0014 3B1D     		adds	r3, r7, #4
 1363 0016 0022     		movs	r2, #0
 1364 0018 1A60     		str	r2, [r3]
 1365 001a 5A60     		str	r2, [r3, #4]
 1366 001c 9A60     		str	r2, [r3, #8]
 528:Core/Src/main.c **** 
 529:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 530:Core/Src/main.c **** 
 531:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 532:Core/Src/main.c ****   htim4.Instance = TIM4;
 1367              		.loc 1 532 18
 1368 001e 1D4B     		ldr	r3, .L70
 1369 0020 1D4A     		ldr	r2, .L70+4
 1370 0022 1A60     		str	r2, [r3]
 533:Core/Src/main.c ****   htim4.Init.Prescaler = 119;
 1371              		.loc 1 533 24
 1372 0024 1B4B     		ldr	r3, .L70
 1373 0026 7722     		movs	r2, #119
 1374 0028 5A60     		str	r2, [r3, #4]
 534:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 1375              		.loc 1 534 26
 1376 002a 1A4B     		ldr	r3, .L70
 1377 002c 0022     		movs	r2, #0
 1378 002e 9A60     		str	r2, [r3, #8]
 535:Core/Src/main.c ****   htim4.Init.Period = 65535;
 1379              		.loc 1 535 21
 1380 0030 184B     		ldr	r3, .L70
 1381 0032 4FF6FF72 		movw	r2, #65535
 1382 0036 DA60     		str	r2, [r3, #12]
 536:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1383              		.loc 1 536 28
 1384 0038 164B     		ldr	r3, .L70
 1385 003a 0022     		movs	r2, #0
 1386 003c 1A61     		str	r2, [r3, #16]
 537:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1387              		.loc 1 537 32
 1388 003e 154B     		ldr	r3, .L70
 1389 0040 0022     		movs	r2, #0
 1390 0042 9A61     		str	r2, [r3, #24]
 538:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 1391              		.loc 1 538 7
 1392 0044 1348     		ldr	r0, .L70
 1393 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1394 004a 0346     		mov	r3, r0
 1395              		.loc 1 538 6
 1396 004c 002B     		cmp	r3, #0
 1397 004e 01D0     		beq	.L66
 539:Core/Src/main.c ****   {
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 35


 540:Core/Src/main.c ****     Error_Handler();
 1398              		.loc 1 540 5
 1399 0050 FFF7FEFF 		bl	Error_Handler
 1400              	.L66:
 541:Core/Src/main.c ****   }
 542:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1401              		.loc 1 542 34
 1402 0054 4FF48053 		mov	r3, #4096
 1403 0058 3B61     		str	r3, [r7, #16]
 543:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 1404              		.loc 1 543 7
 1405 005a 07F11003 		add	r3, r7, #16
 1406 005e 1946     		mov	r1, r3
 1407 0060 0C48     		ldr	r0, .L70
 1408 0062 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1409 0066 0346     		mov	r3, r0
 1410              		.loc 1 543 6
 1411 0068 002B     		cmp	r3, #0
 1412 006a 01D0     		beq	.L67
 544:Core/Src/main.c ****   {
 545:Core/Src/main.c ****     Error_Handler();
 1413              		.loc 1 545 5
 1414 006c FFF7FEFF 		bl	Error_Handler
 1415              	.L67:
 546:Core/Src/main.c ****   }
 547:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1416              		.loc 1 547 37
 1417 0070 0023     		movs	r3, #0
 1418 0072 7B60     		str	r3, [r7, #4]
 548:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1419              		.loc 1 548 33
 1420 0074 0023     		movs	r3, #0
 1421 0076 FB60     		str	r3, [r7, #12]
 549:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 1422              		.loc 1 549 7
 1423 0078 3B1D     		adds	r3, r7, #4
 1424 007a 1946     		mov	r1, r3
 1425 007c 0548     		ldr	r0, .L70
 1426 007e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1427 0082 0346     		mov	r3, r0
 1428              		.loc 1 549 6
 1429 0084 002B     		cmp	r3, #0
 1430 0086 01D0     		beq	.L69
 550:Core/Src/main.c ****   {
 551:Core/Src/main.c ****     Error_Handler();
 1431              		.loc 1 551 5
 1432 0088 FFF7FEFF 		bl	Error_Handler
 1433              	.L69:
 552:Core/Src/main.c ****   }
 553:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 554:Core/Src/main.c **** 
 555:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 556:Core/Src/main.c **** 
 557:Core/Src/main.c **** }
 1434              		.loc 1 557 1
 1435 008c 00BF     		nop
 1436 008e 2037     		adds	r7, r7, #32
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 36


 1437              		.cfi_def_cfa_offset 8
 1438 0090 BD46     		mov	sp, r7
 1439              		.cfi_def_cfa_register 13
 1440              		@ sp needed
 1441 0092 80BD     		pop	{r7, pc}
 1442              	.L71:
 1443              		.align	2
 1444              	.L70:
 1445 0094 00000000 		.word	htim4
 1446 0098 00080040 		.word	1073743872
 1447              		.cfi_endproc
 1448              	.LFE335:
 1450              		.section	.text.MX_TIM5_Init,"ax",%progbits
 1451              		.align	1
 1452              		.syntax unified
 1453              		.thumb
 1454              		.thumb_func
 1456              	MX_TIM5_Init:
 1457              	.LFB336:
 558:Core/Src/main.c **** 
 559:Core/Src/main.c **** /**
 560:Core/Src/main.c ****   * @brief TIM5 Initialization Function
 561:Core/Src/main.c ****   * @param None
 562:Core/Src/main.c ****   * @retval None
 563:Core/Src/main.c ****   */
 564:Core/Src/main.c **** static void MX_TIM5_Init(void)
 565:Core/Src/main.c **** {
 1458              		.loc 1 565 1
 1459              		.cfi_startproc
 1460              		@ args = 0, pretend = 0, frame = 32
 1461              		@ frame_needed = 1, uses_anonymous_args = 0
 1462 0000 80B5     		push	{r7, lr}
 1463              		.cfi_def_cfa_offset 8
 1464              		.cfi_offset 7, -8
 1465              		.cfi_offset 14, -4
 1466 0002 88B0     		sub	sp, sp, #32
 1467              		.cfi_def_cfa_offset 40
 1468 0004 00AF     		add	r7, sp, #0
 1469              		.cfi_def_cfa_register 7
 566:Core/Src/main.c **** 
 567:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 0 */
 568:Core/Src/main.c **** 
 569:Core/Src/main.c ****   /* USER CODE END TIM5_Init 0 */
 570:Core/Src/main.c **** 
 571:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1470              		.loc 1 571 26
 1471 0006 07F11003 		add	r3, r7, #16
 1472 000a 0022     		movs	r2, #0
 1473 000c 1A60     		str	r2, [r3]
 1474 000e 5A60     		str	r2, [r3, #4]
 1475 0010 9A60     		str	r2, [r3, #8]
 1476 0012 DA60     		str	r2, [r3, #12]
 572:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1477              		.loc 1 572 27
 1478 0014 3B1D     		adds	r3, r7, #4
 1479 0016 0022     		movs	r2, #0
 1480 0018 1A60     		str	r2, [r3]
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 37


 1481 001a 5A60     		str	r2, [r3, #4]
 1482 001c 9A60     		str	r2, [r3, #8]
 573:Core/Src/main.c **** 
 574:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 1 */
 575:Core/Src/main.c **** 
 576:Core/Src/main.c ****   /* USER CODE END TIM5_Init 1 */
 577:Core/Src/main.c ****   htim5.Instance = TIM5;
 1483              		.loc 1 577 18
 1484 001e 1D4B     		ldr	r3, .L77
 1485 0020 1D4A     		ldr	r2, .L77+4
 1486 0022 1A60     		str	r2, [r3]
 578:Core/Src/main.c ****   htim5.Init.Prescaler = 119;
 1487              		.loc 1 578 24
 1488 0024 1B4B     		ldr	r3, .L77
 1489 0026 7722     		movs	r2, #119
 1490 0028 5A60     		str	r2, [r3, #4]
 579:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 1491              		.loc 1 579 26
 1492 002a 1A4B     		ldr	r3, .L77
 1493 002c 0022     		movs	r2, #0
 1494 002e 9A60     		str	r2, [r3, #8]
 580:Core/Src/main.c ****   htim5.Init.Period = 4294967295;
 1495              		.loc 1 580 21
 1496 0030 184B     		ldr	r3, .L77
 1497 0032 4FF0FF32 		mov	r2, #-1
 1498 0036 DA60     		str	r2, [r3, #12]
 581:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1499              		.loc 1 581 28
 1500 0038 164B     		ldr	r3, .L77
 1501 003a 0022     		movs	r2, #0
 1502 003c 1A61     		str	r2, [r3, #16]
 582:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1503              		.loc 1 582 32
 1504 003e 154B     		ldr	r3, .L77
 1505 0040 0022     		movs	r2, #0
 1506 0042 9A61     		str	r2, [r3, #24]
 583:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 1507              		.loc 1 583 7
 1508 0044 1348     		ldr	r0, .L77
 1509 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1510 004a 0346     		mov	r3, r0
 1511              		.loc 1 583 6
 1512 004c 002B     		cmp	r3, #0
 1513 004e 01D0     		beq	.L73
 584:Core/Src/main.c ****   {
 585:Core/Src/main.c ****     Error_Handler();
 1514              		.loc 1 585 5
 1515 0050 FFF7FEFF 		bl	Error_Handler
 1516              	.L73:
 586:Core/Src/main.c ****   }
 587:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1517              		.loc 1 587 34
 1518 0054 4FF48053 		mov	r3, #4096
 1519 0058 3B61     		str	r3, [r7, #16]
 588:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 1520              		.loc 1 588 7
 1521 005a 07F11003 		add	r3, r7, #16
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 38


 1522 005e 1946     		mov	r1, r3
 1523 0060 0C48     		ldr	r0, .L77
 1524 0062 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1525 0066 0346     		mov	r3, r0
 1526              		.loc 1 588 6
 1527 0068 002B     		cmp	r3, #0
 1528 006a 01D0     		beq	.L74
 589:Core/Src/main.c ****   {
 590:Core/Src/main.c ****     Error_Handler();
 1529              		.loc 1 590 5
 1530 006c FFF7FEFF 		bl	Error_Handler
 1531              	.L74:
 591:Core/Src/main.c ****   }
 592:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1532              		.loc 1 592 37
 1533 0070 0023     		movs	r3, #0
 1534 0072 7B60     		str	r3, [r7, #4]
 593:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1535              		.loc 1 593 33
 1536 0074 0023     		movs	r3, #0
 1537 0076 FB60     		str	r3, [r7, #12]
 594:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 1538              		.loc 1 594 7
 1539 0078 3B1D     		adds	r3, r7, #4
 1540 007a 1946     		mov	r1, r3
 1541 007c 0548     		ldr	r0, .L77
 1542 007e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1543 0082 0346     		mov	r3, r0
 1544              		.loc 1 594 6
 1545 0084 002B     		cmp	r3, #0
 1546 0086 01D0     		beq	.L76
 595:Core/Src/main.c ****   {
 596:Core/Src/main.c ****     Error_Handler();
 1547              		.loc 1 596 5
 1548 0088 FFF7FEFF 		bl	Error_Handler
 1549              	.L76:
 597:Core/Src/main.c ****   }
 598:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 2 */
 599:Core/Src/main.c **** 
 600:Core/Src/main.c ****   /* USER CODE END TIM5_Init 2 */
 601:Core/Src/main.c **** 
 602:Core/Src/main.c **** }
 1550              		.loc 1 602 1
 1551 008c 00BF     		nop
 1552 008e 2037     		adds	r7, r7, #32
 1553              		.cfi_def_cfa_offset 8
 1554 0090 BD46     		mov	sp, r7
 1555              		.cfi_def_cfa_register 13
 1556              		@ sp needed
 1557 0092 80BD     		pop	{r7, pc}
 1558              	.L78:
 1559              		.align	2
 1560              	.L77:
 1561 0094 00000000 		.word	htim5
 1562 0098 000C0040 		.word	1073744896
 1563              		.cfi_endproc
 1564              	.LFE336:
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 39


 1566              		.section	.text.MX_USB_OTG_FS_PCD_Init,"ax",%progbits
 1567              		.align	1
 1568              		.syntax unified
 1569              		.thumb
 1570              		.thumb_func
 1572              	MX_USB_OTG_FS_PCD_Init:
 1573              	.LFB337:
 603:Core/Src/main.c **** 
 604:Core/Src/main.c **** /**
 605:Core/Src/main.c ****   * @brief USB_OTG_FS Initialization Function
 606:Core/Src/main.c ****   * @param None
 607:Core/Src/main.c ****   * @retval None
 608:Core/Src/main.c ****   */
 609:Core/Src/main.c **** static void MX_USB_OTG_FS_PCD_Init(void)
 610:Core/Src/main.c **** {
 1574              		.loc 1 610 1
 1575              		.cfi_startproc
 1576              		@ args = 0, pretend = 0, frame = 0
 1577              		@ frame_needed = 1, uses_anonymous_args = 0
 1578 0000 80B5     		push	{r7, lr}
 1579              		.cfi_def_cfa_offset 8
 1580              		.cfi_offset 7, -8
 1581              		.cfi_offset 14, -4
 1582 0002 00AF     		add	r7, sp, #0
 1583              		.cfi_def_cfa_register 7
 611:Core/Src/main.c **** 
 612:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 0 */
 613:Core/Src/main.c **** 
 614:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 0 */
 615:Core/Src/main.c **** 
 616:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 1 */
 617:Core/Src/main.c **** 
 618:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 1 */
 619:Core/Src/main.c ****   hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 1584              		.loc 1 619 28
 1585 0004 124B     		ldr	r3, .L82
 1586 0006 4FF0A042 		mov	r2, #1342177280
 1587 000a 1A60     		str	r2, [r3]
 620:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 1588              		.loc 1 620 38
 1589 000c 104B     		ldr	r3, .L82
 1590 000e 0622     		movs	r2, #6
 1591 0010 5A60     		str	r2, [r3, #4]
 621:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 1592              		.loc 1 621 35
 1593 0012 0F4B     		ldr	r3, .L82
 1594 0014 0222     		movs	r2, #2
 1595 0016 9A61     		str	r2, [r3, #24]
 622:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 1596              		.loc 1 622 35
 1597 0018 0D4B     		ldr	r3, .L82
 1598 001a 0122     		movs	r2, #1
 1599 001c DA61     		str	r2, [r3, #28]
 623:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 1600              		.loc 1 623 41
 1601 001e 0C4B     		ldr	r3, .L82
 1602 0020 0022     		movs	r2, #0
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 40


 1603 0022 1A62     		str	r2, [r3, #32]
 624:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 1604              		.loc 1 624 35
 1605 0024 0A4B     		ldr	r3, .L82
 1606 0026 0022     		movs	r2, #0
 1607 0028 5A62     		str	r2, [r3, #36]
 625:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.battery_charging_enable = ENABLE;
 1608              		.loc 1 625 48
 1609 002a 094B     		ldr	r3, .L82
 1610 002c 0122     		movs	r2, #1
 1611 002e 9A62     		str	r2, [r3, #40]
 626:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 1612              		.loc 1 626 42
 1613 0030 074B     		ldr	r3, .L82
 1614 0032 0022     		movs	r2, #0
 1615 0034 1A63     		str	r2, [r3, #48]
 627:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = ENABLE;
 1616              		.loc 1 627 44
 1617 0036 064B     		ldr	r3, .L82
 1618 0038 0122     		movs	r2, #1
 1619 003a DA62     		str	r2, [r3, #44]
 628:Core/Src/main.c ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 1620              		.loc 1 628 7
 1621 003c 0448     		ldr	r0, .L82
 1622 003e FFF7FEFF 		bl	HAL_PCD_Init
 1623 0042 0346     		mov	r3, r0
 1624              		.loc 1 628 6
 1625 0044 002B     		cmp	r3, #0
 1626 0046 01D0     		beq	.L81
 629:Core/Src/main.c ****   {
 630:Core/Src/main.c ****     Error_Handler();
 1627              		.loc 1 630 5
 1628 0048 FFF7FEFF 		bl	Error_Handler
 1629              	.L81:
 631:Core/Src/main.c ****   }
 632:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 2 */
 633:Core/Src/main.c **** 
 634:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 2 */
 635:Core/Src/main.c **** 
 636:Core/Src/main.c **** }
 1630              		.loc 1 636 1
 1631 004c 00BF     		nop
 1632 004e 80BD     		pop	{r7, pc}
 1633              	.L83:
 1634              		.align	2
 1635              	.L82:
 1636 0050 00000000 		.word	hpcd_USB_OTG_FS
 1637              		.cfi_endproc
 1638              	.LFE337:
 1640              		.section	.text.MX_DMA_Init,"ax",%progbits
 1641              		.align	1
 1642              		.syntax unified
 1643              		.thumb
 1644              		.thumb_func
 1646              	MX_DMA_Init:
 1647              	.LFB338:
 637:Core/Src/main.c **** 
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 41


 638:Core/Src/main.c **** /**
 639:Core/Src/main.c ****   * Enable DMA controller clock
 640:Core/Src/main.c ****   */
 641:Core/Src/main.c **** static void MX_DMA_Init(void)
 642:Core/Src/main.c **** {
 1648              		.loc 1 642 1
 1649              		.cfi_startproc
 1650              		@ args = 0, pretend = 0, frame = 8
 1651              		@ frame_needed = 1, uses_anonymous_args = 0
 1652 0000 80B5     		push	{r7, lr}
 1653              		.cfi_def_cfa_offset 8
 1654              		.cfi_offset 7, -8
 1655              		.cfi_offset 14, -4
 1656 0002 82B0     		sub	sp, sp, #8
 1657              		.cfi_def_cfa_offset 16
 1658 0004 00AF     		add	r7, sp, #0
 1659              		.cfi_def_cfa_register 7
 1660              	.LBB4:
 643:Core/Src/main.c **** 
 644:Core/Src/main.c ****   /* DMA controller clock enable */
 645:Core/Src/main.c ****   __HAL_RCC_DMAMUX1_CLK_ENABLE();
 1661              		.loc 1 645 3
 1662 0006 164B     		ldr	r3, .L85
 1663 0008 9B6C     		ldr	r3, [r3, #72]
 1664 000a 154A     		ldr	r2, .L85
 1665 000c 43F00403 		orr	r3, r3, #4
 1666 0010 9364     		str	r3, [r2, #72]
 1667 0012 134B     		ldr	r3, .L85
 1668 0014 9B6C     		ldr	r3, [r3, #72]
 1669 0016 03F00403 		and	r3, r3, #4
 1670 001a 7B60     		str	r3, [r7, #4]
 1671 001c 7B68     		ldr	r3, [r7, #4]
 1672              	.LBE4:
 1673              	.LBB5:
 646:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 1674              		.loc 1 646 3
 1675 001e 104B     		ldr	r3, .L85
 1676 0020 9B6C     		ldr	r3, [r3, #72]
 1677 0022 0F4A     		ldr	r2, .L85
 1678 0024 43F00103 		orr	r3, r3, #1
 1679 0028 9364     		str	r3, [r2, #72]
 1680 002a 0D4B     		ldr	r3, .L85
 1681 002c 9B6C     		ldr	r3, [r3, #72]
 1682 002e 03F00103 		and	r3, r3, #1
 1683 0032 3B60     		str	r3, [r7]
 1684 0034 3B68     		ldr	r3, [r7]
 1685              	.LBE5:
 647:Core/Src/main.c **** 
 648:Core/Src/main.c ****   /* DMA interrupt init */
 649:Core/Src/main.c ****   /* DMA1_Channel1_IRQn interrupt configuration */
 650:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 1686              		.loc 1 650 3
 1687 0036 0022     		movs	r2, #0
 1688 0038 0021     		movs	r1, #0
 1689 003a 0B20     		movs	r0, #11
 1690 003c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 651:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 42


 1691              		.loc 1 651 3
 1692 0040 0B20     		movs	r0, #11
 1693 0042 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 652:Core/Src/main.c ****   /* DMA1_Channel2_IRQn interrupt configuration */
 653:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 0, 0);
 1694              		.loc 1 653 3
 1695 0046 0022     		movs	r2, #0
 1696 0048 0021     		movs	r1, #0
 1697 004a 0C20     		movs	r0, #12
 1698 004c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 654:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 1699              		.loc 1 654 3
 1700 0050 0C20     		movs	r0, #12
 1701 0052 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 655:Core/Src/main.c **** 
 656:Core/Src/main.c **** }
 1702              		.loc 1 656 1
 1703 0056 00BF     		nop
 1704 0058 0837     		adds	r7, r7, #8
 1705              		.cfi_def_cfa_offset 8
 1706 005a BD46     		mov	sp, r7
 1707              		.cfi_def_cfa_register 13
 1708              		@ sp needed
 1709 005c 80BD     		pop	{r7, pc}
 1710              	.L86:
 1711 005e 00BF     		.align	2
 1712              	.L85:
 1713 0060 00100240 		.word	1073876992
 1714              		.cfi_endproc
 1715              	.LFE338:
 1717              		.section	.text.MX_GPIO_Init,"ax",%progbits
 1718              		.align	1
 1719              		.syntax unified
 1720              		.thumb
 1721              		.thumb_func
 1723              	MX_GPIO_Init:
 1724              	.LFB339:
 657:Core/Src/main.c **** 
 658:Core/Src/main.c **** /**
 659:Core/Src/main.c ****   * @brief GPIO Initialization Function
 660:Core/Src/main.c ****   * @param None
 661:Core/Src/main.c ****   * @retval None
 662:Core/Src/main.c ****   */
 663:Core/Src/main.c **** static void MX_GPIO_Init(void)
 664:Core/Src/main.c **** {
 1725              		.loc 1 664 1
 1726              		.cfi_startproc
 1727              		@ args = 0, pretend = 0, frame = 48
 1728              		@ frame_needed = 1, uses_anonymous_args = 0
 1729 0000 80B5     		push	{r7, lr}
 1730              		.cfi_def_cfa_offset 8
 1731              		.cfi_offset 7, -8
 1732              		.cfi_offset 14, -4
 1733 0002 8CB0     		sub	sp, sp, #48
 1734              		.cfi_def_cfa_offset 56
 1735 0004 00AF     		add	r7, sp, #0
 1736              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 43


 665:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 1737              		.loc 1 665 20
 1738 0006 07F11C03 		add	r3, r7, #28
 1739 000a 0022     		movs	r2, #0
 1740 000c 1A60     		str	r2, [r3]
 1741 000e 5A60     		str	r2, [r3, #4]
 1742 0010 9A60     		str	r2, [r3, #8]
 1743 0012 DA60     		str	r2, [r3, #12]
 1744 0014 1A61     		str	r2, [r3, #16]
 1745              	.LBB6:
 666:Core/Src/main.c **** 
 667:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 668:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 1746              		.loc 1 668 3
 1747 0016 724B     		ldr	r3, .L88
 1748 0018 DB6C     		ldr	r3, [r3, #76]
 1749 001a 714A     		ldr	r2, .L88
 1750 001c 43F01003 		orr	r3, r3, #16
 1751 0020 D364     		str	r3, [r2, #76]
 1752 0022 6F4B     		ldr	r3, .L88
 1753 0024 DB6C     		ldr	r3, [r3, #76]
 1754 0026 03F01003 		and	r3, r3, #16
 1755 002a BB61     		str	r3, [r7, #24]
 1756 002c BB69     		ldr	r3, [r7, #24]
 1757              	.LBE6:
 1758              	.LBB7:
 669:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 1759              		.loc 1 669 3
 1760 002e 6C4B     		ldr	r3, .L88
 1761 0030 DB6C     		ldr	r3, [r3, #76]
 1762 0032 6B4A     		ldr	r2, .L88
 1763 0034 43F00403 		orr	r3, r3, #4
 1764 0038 D364     		str	r3, [r2, #76]
 1765 003a 694B     		ldr	r3, .L88
 1766 003c DB6C     		ldr	r3, [r3, #76]
 1767 003e 03F00403 		and	r3, r3, #4
 1768 0042 7B61     		str	r3, [r7, #20]
 1769 0044 7B69     		ldr	r3, [r7, #20]
 1770              	.LBE7:
 1771              	.LBB8:
 670:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 1772              		.loc 1 670 3
 1773 0046 664B     		ldr	r3, .L88
 1774 0048 DB6C     		ldr	r3, [r3, #76]
 1775 004a 654A     		ldr	r2, .L88
 1776 004c 43F02003 		orr	r3, r3, #32
 1777 0050 D364     		str	r3, [r2, #76]
 1778 0052 634B     		ldr	r3, .L88
 1779 0054 DB6C     		ldr	r3, [r3, #76]
 1780 0056 03F02003 		and	r3, r3, #32
 1781 005a 3B61     		str	r3, [r7, #16]
 1782 005c 3B69     		ldr	r3, [r7, #16]
 1783              	.LBE8:
 1784              	.LBB9:
 671:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 1785              		.loc 1 671 3
 1786 005e 604B     		ldr	r3, .L88
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 44


 1787 0060 DB6C     		ldr	r3, [r3, #76]
 1788 0062 5F4A     		ldr	r2, .L88
 1789 0064 43F08003 		orr	r3, r3, #128
 1790 0068 D364     		str	r3, [r2, #76]
 1791 006a 5D4B     		ldr	r3, .L88
 1792 006c DB6C     		ldr	r3, [r3, #76]
 1793 006e 03F08003 		and	r3, r3, #128
 1794 0072 FB60     		str	r3, [r7, #12]
 1795 0074 FB68     		ldr	r3, [r7, #12]
 1796              	.LBE9:
 1797              	.LBB10:
 672:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1798              		.loc 1 672 3
 1799 0076 5A4B     		ldr	r3, .L88
 1800 0078 DB6C     		ldr	r3, [r3, #76]
 1801 007a 594A     		ldr	r2, .L88
 1802 007c 43F00103 		orr	r3, r3, #1
 1803 0080 D364     		str	r3, [r2, #76]
 1804 0082 574B     		ldr	r3, .L88
 1805 0084 DB6C     		ldr	r3, [r3, #76]
 1806 0086 03F00103 		and	r3, r3, #1
 1807 008a BB60     		str	r3, [r7, #8]
 1808 008c BB68     		ldr	r3, [r7, #8]
 1809              	.LBE10:
 1810              	.LBB11:
 673:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 1811              		.loc 1 673 3
 1812 008e 544B     		ldr	r3, .L88
 1813 0090 DB6C     		ldr	r3, [r3, #76]
 1814 0092 534A     		ldr	r2, .L88
 1815 0094 43F00203 		orr	r3, r3, #2
 1816 0098 D364     		str	r3, [r2, #76]
 1817 009a 514B     		ldr	r3, .L88
 1818 009c DB6C     		ldr	r3, [r3, #76]
 1819 009e 03F00203 		and	r3, r3, #2
 1820 00a2 7B60     		str	r3, [r7, #4]
 1821 00a4 7B68     		ldr	r3, [r7, #4]
 1822              	.LBE11:
 1823              	.LBB12:
 674:Core/Src/main.c ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 1824              		.loc 1 674 3
 1825 00a6 4E4B     		ldr	r3, .L88
 1826 00a8 DB6C     		ldr	r3, [r3, #76]
 1827 00aa 4D4A     		ldr	r2, .L88
 1828 00ac 43F04003 		orr	r3, r3, #64
 1829 00b0 D364     		str	r3, [r2, #76]
 1830 00b2 4B4B     		ldr	r3, .L88
 1831 00b4 DB6C     		ldr	r3, [r3, #76]
 1832 00b6 03F04003 		and	r3, r3, #64
 1833 00ba 3B60     		str	r3, [r7]
 1834 00bc 3B68     		ldr	r3, [r7]
 1835              	.LBE12:
 675:Core/Src/main.c ****   HAL_PWREx_EnableVddIO2();
 1836              		.loc 1 675 3
 1837 00be FFF7FEFF 		bl	HAL_PWREx_EnableVddIO2
 676:Core/Src/main.c **** 
 677:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 45


 678:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOF, GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_6
 1838              		.loc 1 678 3
 1839 00c2 0022     		movs	r2, #0
 1840 00c4 4FF4E771 		mov	r1, #462
 1841 00c8 4648     		ldr	r0, .L88+4
 1842 00ca FFF7FEFF 		bl	HAL_GPIO_WritePin
 679:Core/Src/main.c ****                           |GPIO_PIN_7|GPIO_PIN_8, GPIO_PIN_RESET);
 680:Core/Src/main.c **** 
 681:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 682:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 1843              		.loc 1 682 3
 1844 00ce 0022     		movs	r2, #0
 1845 00d0 8021     		movs	r1, #128
 1846 00d2 4FF09040 		mov	r0, #1207959552
 1847 00d6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 683:Core/Src/main.c **** 
 684:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 685:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD2_Pin, GPIO_PIN_RESET);
 1848              		.loc 1 685 3
 1849 00da 0022     		movs	r2, #0
 1850 00dc 44F28301 		movw	r1, #16515
 1851 00e0 4148     		ldr	r0, .L88+8
 1852 00e2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 686:Core/Src/main.c **** 
 687:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 688:Core/Src/main.c ****   HAL_GPIO_WritePin(USB_PowerSwitchOn_GPIO_Port, USB_PowerSwitchOn_Pin, GPIO_PIN_RESET);
 1853              		.loc 1 688 3
 1854 00e6 0022     		movs	r2, #0
 1855 00e8 4021     		movs	r1, #64
 1856 00ea 4048     		ldr	r0, .L88+12
 1857 00ec FFF7FEFF 		bl	HAL_GPIO_WritePin
 689:Core/Src/main.c **** 
 690:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 691:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_6, GPIO_PIN_RESET);
 1858              		.loc 1 691 3
 1859 00f0 0022     		movs	r2, #0
 1860 00f2 4021     		movs	r1, #64
 1861 00f4 3E48     		ldr	r0, .L88+16
 1862 00f6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 692:Core/Src/main.c **** 
 693:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 694:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 1863              		.loc 1 694 23
 1864 00fa 4FF40053 		mov	r3, #8192
 1865 00fe FB61     		str	r3, [r7, #28]
 695:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 1866              		.loc 1 695 24
 1867 0100 4FF48813 		mov	r3, #1114112
 1868 0104 3B62     		str	r3, [r7, #32]
 696:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1869              		.loc 1 696 24
 1870 0106 0023     		movs	r3, #0
 1871 0108 7B62     		str	r3, [r7, #36]
 697:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 1872              		.loc 1 697 3
 1873 010a 07F11C03 		add	r3, r7, #28
 1874 010e 1946     		mov	r1, r3
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 46


 1875 0110 3748     		ldr	r0, .L88+16
 1876 0112 FFF7FEFF 		bl	HAL_GPIO_Init
 698:Core/Src/main.c **** 
 699:Core/Src/main.c ****   /*Configure GPIO pins : PF0 PF4 PF5 */
 700:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_4|GPIO_PIN_5;
 1877              		.loc 1 700 23
 1878 0116 3123     		movs	r3, #49
 1879 0118 FB61     		str	r3, [r7, #28]
 701:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 1880              		.loc 1 701 24
 1881 011a 0023     		movs	r3, #0
 1882 011c 3B62     		str	r3, [r7, #32]
 702:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1883              		.loc 1 702 24
 1884 011e 0023     		movs	r3, #0
 1885 0120 7B62     		str	r3, [r7, #36]
 703:Core/Src/main.c ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 1886              		.loc 1 703 3
 1887 0122 07F11C03 		add	r3, r7, #28
 1888 0126 1946     		mov	r1, r3
 1889 0128 2E48     		ldr	r0, .L88+4
 1890 012a FFF7FEFF 		bl	HAL_GPIO_Init
 704:Core/Src/main.c **** 
 705:Core/Src/main.c ****   /*Configure GPIO pins : PF1 PF2 PF3 PF6
 706:Core/Src/main.c ****                            PF7 PF8 */
 707:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_6
 1891              		.loc 1 707 23
 1892 012e 4FF4E773 		mov	r3, #462
 1893 0132 FB61     		str	r3, [r7, #28]
 708:Core/Src/main.c ****                           |GPIO_PIN_7|GPIO_PIN_8;
 709:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1894              		.loc 1 709 24
 1895 0134 0123     		movs	r3, #1
 1896 0136 3B62     		str	r3, [r7, #32]
 710:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1897              		.loc 1 710 24
 1898 0138 0023     		movs	r3, #0
 1899 013a 7B62     		str	r3, [r7, #36]
 711:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1900              		.loc 1 711 25
 1901 013c 0023     		movs	r3, #0
 1902 013e BB62     		str	r3, [r7, #40]
 712:Core/Src/main.c ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 1903              		.loc 1 712 3
 1904 0140 07F11C03 		add	r3, r7, #28
 1905 0144 1946     		mov	r1, r3
 1906 0146 2748     		ldr	r0, .L88+4
 1907 0148 FFF7FEFF 		bl	HAL_GPIO_Init
 713:Core/Src/main.c **** 
 714:Core/Src/main.c ****   /*Configure GPIO pin : PA7 */
 715:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_7;
 1908              		.loc 1 715 23
 1909 014c 8023     		movs	r3, #128
 1910 014e FB61     		str	r3, [r7, #28]
 716:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1911              		.loc 1 716 24
 1912 0150 0123     		movs	r3, #1
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 47


 1913 0152 3B62     		str	r3, [r7, #32]
 717:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1914              		.loc 1 717 24
 1915 0154 0023     		movs	r3, #0
 1916 0156 7B62     		str	r3, [r7, #36]
 718:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1917              		.loc 1 718 25
 1918 0158 0023     		movs	r3, #0
 1919 015a BB62     		str	r3, [r7, #40]
 719:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1920              		.loc 1 719 3
 1921 015c 07F11C03 		add	r3, r7, #28
 1922 0160 1946     		mov	r1, r3
 1923 0162 4FF09040 		mov	r0, #1207959552
 1924 0166 FFF7FEFF 		bl	HAL_GPIO_Init
 720:Core/Src/main.c **** 
 721:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 LD3_Pin LD2_Pin */
 722:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD2_Pin;
 1925              		.loc 1 722 23
 1926 016a 44F28303 		movw	r3, #16515
 1927 016e FB61     		str	r3, [r7, #28]
 723:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1928              		.loc 1 723 24
 1929 0170 0123     		movs	r3, #1
 1930 0172 3B62     		str	r3, [r7, #32]
 724:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1931              		.loc 1 724 24
 1932 0174 0023     		movs	r3, #0
 1933 0176 7B62     		str	r3, [r7, #36]
 725:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1934              		.loc 1 725 25
 1935 0178 0023     		movs	r3, #0
 1936 017a BB62     		str	r3, [r7, #40]
 726:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1937              		.loc 1 726 3
 1938 017c 07F11C03 		add	r3, r7, #28
 1939 0180 1946     		mov	r1, r3
 1940 0182 1948     		ldr	r0, .L88+8
 1941 0184 FFF7FEFF 		bl	HAL_GPIO_Init
 727:Core/Src/main.c **** 
 728:Core/Src/main.c ****   /*Configure GPIO pin : USB_OverCurrent_Pin */
 729:Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_OverCurrent_Pin;
 1942              		.loc 1 729 23
 1943 0188 2023     		movs	r3, #32
 1944 018a FB61     		str	r3, [r7, #28]
 730:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 1945              		.loc 1 730 24
 1946 018c 0023     		movs	r3, #0
 1947 018e 3B62     		str	r3, [r7, #32]
 731:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1948              		.loc 1 731 24
 1949 0190 0023     		movs	r3, #0
 1950 0192 7B62     		str	r3, [r7, #36]
 732:Core/Src/main.c ****   HAL_GPIO_Init(USB_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 1951              		.loc 1 732 3
 1952 0194 07F11C03 		add	r3, r7, #28
 1953 0198 1946     		mov	r1, r3
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 48


 1954 019a 1448     		ldr	r0, .L88+12
 1955 019c FFF7FEFF 		bl	HAL_GPIO_Init
 733:Core/Src/main.c **** 
 734:Core/Src/main.c ****   /*Configure GPIO pin : USB_PowerSwitchOn_Pin */
 735:Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_PowerSwitchOn_Pin;
 1956              		.loc 1 735 23
 1957 01a0 4023     		movs	r3, #64
 1958 01a2 FB61     		str	r3, [r7, #28]
 736:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1959              		.loc 1 736 24
 1960 01a4 0123     		movs	r3, #1
 1961 01a6 3B62     		str	r3, [r7, #32]
 737:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1962              		.loc 1 737 24
 1963 01a8 0023     		movs	r3, #0
 1964 01aa 7B62     		str	r3, [r7, #36]
 738:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1965              		.loc 1 738 25
 1966 01ac 0023     		movs	r3, #0
 1967 01ae BB62     		str	r3, [r7, #40]
 739:Core/Src/main.c ****   HAL_GPIO_Init(USB_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 1968              		.loc 1 739 3
 1969 01b0 07F11C03 		add	r3, r7, #28
 1970 01b4 1946     		mov	r1, r3
 1971 01b6 0D48     		ldr	r0, .L88+12
 1972 01b8 FFF7FEFF 		bl	HAL_GPIO_Init
 740:Core/Src/main.c **** 
 741:Core/Src/main.c ****   /*Configure GPIO pin : PC6 */
 742:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6;
 1973              		.loc 1 742 23
 1974 01bc 4023     		movs	r3, #64
 1975 01be FB61     		str	r3, [r7, #28]
 743:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1976              		.loc 1 743 24
 1977 01c0 0123     		movs	r3, #1
 1978 01c2 3B62     		str	r3, [r7, #32]
 744:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1979              		.loc 1 744 24
 1980 01c4 0023     		movs	r3, #0
 1981 01c6 7B62     		str	r3, [r7, #36]
 745:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1982              		.loc 1 745 25
 1983 01c8 0023     		movs	r3, #0
 1984 01ca BB62     		str	r3, [r7, #40]
 746:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 1985              		.loc 1 746 3
 1986 01cc 07F11C03 		add	r3, r7, #28
 1987 01d0 1946     		mov	r1, r3
 1988 01d2 0748     		ldr	r0, .L88+16
 1989 01d4 FFF7FEFF 		bl	HAL_GPIO_Init
 747:Core/Src/main.c **** 
 748:Core/Src/main.c **** }
 1990              		.loc 1 748 1
 1991 01d8 00BF     		nop
 1992 01da 3037     		adds	r7, r7, #48
 1993              		.cfi_def_cfa_offset 8
 1994 01dc BD46     		mov	sp, r7
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 49


 1995              		.cfi_def_cfa_register 13
 1996              		@ sp needed
 1997 01de 80BD     		pop	{r7, pc}
 1998              	.L89:
 1999              		.align	2
 2000              	.L88:
 2001 01e0 00100240 		.word	1073876992
 2002 01e4 00140048 		.word	1207964672
 2003 01e8 00040048 		.word	1207960576
 2004 01ec 00180048 		.word	1207965696
 2005 01f0 00080048 		.word	1207961600
 2006              		.cfi_endproc
 2007              	.LFE339:
 2009              		.section	.text.Error_Handler,"ax",%progbits
 2010              		.align	1
 2011              		.global	Error_Handler
 2012              		.syntax unified
 2013              		.thumb
 2014              		.thumb_func
 2016              	Error_Handler:
 2017              	.LFB340:
 749:Core/Src/main.c **** 
 750:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 751:Core/Src/main.c **** 
 752:Core/Src/main.c **** /* USER CODE END 4 */
 753:Core/Src/main.c **** 
 754:Core/Src/main.c **** /**
 755:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 756:Core/Src/main.c ****   * @retval None
 757:Core/Src/main.c ****   */
 758:Core/Src/main.c **** void Error_Handler(void)
 759:Core/Src/main.c **** {
 2018              		.loc 1 759 1
 2019              		.cfi_startproc
 2020              		@ args = 0, pretend = 0, frame = 0
 2021              		@ frame_needed = 1, uses_anonymous_args = 0
 2022              		@ link register save eliminated.
 2023 0000 80B4     		push	{r7}
 2024              		.cfi_def_cfa_offset 4
 2025              		.cfi_offset 7, -4
 2026 0002 00AF     		add	r7, sp, #0
 2027              		.cfi_def_cfa_register 7
 2028              	.LBB13:
 2029              	.LBB14:
 2030              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 50


  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 51


  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 52


 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 53


 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2031              		.loc 2 209 3
 2032              		.syntax unified
 2033              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2034 0004 72B6     		cpsid i
 2035              	@ 0 "" 2
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2036              		.loc 2 210 1
 2037              		.thumb
 2038              		.syntax unified
 2039 0006 00BF     		nop
 2040              	.L91:
 2041              	.LBE14:
 2042              	.LBE13:
 760:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 761:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 762:Core/Src/main.c ****   __disable_irq();
 763:Core/Src/main.c ****   while (1)
 2043              		.loc 1 763 9 discriminator 1
 2044 0008 FEE7     		b	.L91
 2045              		.cfi_endproc
 2046              	.LFE340:
 2048              		.text
 2049              	.Letext0:
 2050              		.file 3 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4p5xx.h"
 2051              		.file 4 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 2052              		.file 5 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 2053              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 2054              		.file 7 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 2055              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2056              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 2057              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 54


 2058              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 2059              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 2060              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc_ex.h"
 2061              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usb.h"
 2062              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pcd.h"
 2063              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 2064              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 2065              		.file 18 "Core/Inc/Parser.h"
 2066              		.file 19 "Core/Inc/GCodes.h"
 2067              		.file 20 "Core/Inc/main.h"
 2068              		.file 21 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
 2069              		.file 22 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim_ex.h"
 2070              		.file 23 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart_ex.h"
 2071              		.file 24 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 2072              		.file 25 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2073              		.file 26 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 2074              		.file 27 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2075              		.file 28 "Core/Inc/Functions.h"
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 55


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:20     .bss.msg_buffer:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:23     .bss.msg_buffer:0000000000000000 msg_buffer
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:26     .bss.RxBuf:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:29     .bss.RxBuf:0000000000000000 RxBuf
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:36     .bss.hadc1:0000000000000000 hadc1
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:33     .bss.hadc1:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:43     .bss.hdma_adc1:0000000000000000 hdma_adc1
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:40     .bss.hdma_adc1:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:50     .bss.hlpuart1:0000000000000000 hlpuart1
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:47     .bss.hlpuart1:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:57     .bss.huart4:0000000000000000 huart4
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:54     .bss.huart4:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:64     .bss.hdma_lpuart1_rx:0000000000000000 hdma_lpuart1_rx
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:61     .bss.hdma_lpuart1_rx:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:71     .bss.htim3:0000000000000000 htim3
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:68     .bss.htim3:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:78     .bss.htim4:0000000000000000 htim4
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:75     .bss.htim4:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:85     .bss.htim5:0000000000000000 htim5
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:82     .bss.htim5:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:92     .bss.hpcd_USB_OTG_FS:0000000000000000 hpcd_USB_OTG_FS
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:89     .bss.hpcd_USB_OTG_FS:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:99     .bss.step:0000000000000000 step
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:96     .bss.step:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:106    .bss.last_time:0000000000000000 last_time
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:103    .bss.last_time:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:113    .bss.value:0000000000000000 value
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:110    .bss.value:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:116    .text.HAL_UARTEx_RxEventCallback:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:122    .text.HAL_UARTEx_RxEventCallback:0000000000000000 HAL_UARTEx_RxEventCallback
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:172    .text.HAL_UARTEx_RxEventCallback:0000000000000038 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:180    .text.DelayMicrosecond:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:186    .text.DelayMicrosecond:0000000000000000 DelayMicrosecond
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:233    .text.DelayMicrosecond:0000000000000030 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:238    .text.GetTicks:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:244    .text.GetTicks:0000000000000000 GetTicks
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:272    .text.GetTicks:0000000000000014 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:277    .rodata:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:281    .text.print_temperature:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:287    .text.print_temperature:0000000000000000 print_temperature
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:337    .text.print_temperature:0000000000000048 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:345    .text.main:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:351    .text.main:0000000000000000 main
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:566    .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:1723   .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:1646   .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:916    .text.MX_LPUART1_UART_Init:0000000000000000 MX_LPUART1_UART_Init
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:1572   .text.MX_USB_OTG_FS_PCD_Init:0000000000000000 MX_USB_OTG_FS_PCD_Init
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:1340   .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:1035   .text.MX_UART4_Init:0000000000000000 MX_UART4_Init
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:1150   .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:695    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:1456   .text.MX_TIM5_Init:0000000000000000 MX_TIM5_Init
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:543    .text.main:0000000000000140 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:560    .text.SystemClock_Config:0000000000000000 $t
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 56


C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:2016   .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:690    .text.MX_ADC1_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:902    .text.MX_ADC1_Init:0000000000000130 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:911    .text.MX_LPUART1_UART_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:1024   .text.MX_LPUART1_UART_Init:0000000000000098 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:1030   .text.MX_UART4_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:1139   .text.MX_UART4_Init:0000000000000090 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:1145   .text.MX_TIM3_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:1329   .text.MX_TIM3_Init:0000000000000110 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:1335   .text.MX_TIM4_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:1445   .text.MX_TIM4_Init:0000000000000094 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:1451   .text.MX_TIM5_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:1561   .text.MX_TIM5_Init:0000000000000094 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:1567   .text.MX_USB_OTG_FS_PCD_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:1636   .text.MX_USB_OTG_FS_PCD_Init:0000000000000050 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:1641   .text.MX_DMA_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:1713   .text.MX_DMA_Init:0000000000000060 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:1718   .text.MX_GPIO_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:2001   .text.MX_GPIO_Init:00000000000001e0 $d
C:\Users\isan\AppData\Local\Temp\cctR4M3d.s:2010   .text.Error_Handler:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_UARTEx_ReceiveToIdle_DMA
GetTemperature
sprintf
strlen
HAL_UART_Transmit
HAL_Init
HAL_TIM_PWM_Start
HAL_ADC_Start_DMA
HAL_TIM_Base_Start
memset
reset_args
get_command
HAL_GetTick
M105
HAL_GPIO_ReadPin
G0
M104
HAL_GPIO_TogglePin
isRunning
interval
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
HAL_UART_Init
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_DisableFifoMode
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
ARM GAS  C:\Users\isan\AppData\Local\Temp\cctR4M3d.s 			page 57


HAL_TIM_MspPostInit
HAL_PCD_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_PWREx_EnableVddIO2
HAL_GPIO_WritePin
HAL_GPIO_Init
