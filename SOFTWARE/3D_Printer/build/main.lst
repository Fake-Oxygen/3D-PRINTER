ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.bss.msg_buffer,"aw",%nobits
  20              		.align	2
  23              	msg_buffer:
  24 0000 00000000 		.space	30
  24      00000000 
  24      00000000 
  24      00000000 
  24      00000000 
  25              		.section	.bss.RxBuf,"aw",%nobits
  26              		.align	2
  29              	RxBuf:
  30 0000 00000000 		.space	20
  30      00000000 
  30      00000000 
  30      00000000 
  30      00000000 
  31              		.global	hadc1
  32              		.section	.bss.hadc1,"aw",%nobits
  33              		.align	2
  36              	hadc1:
  37 0000 00000000 		.space	104
  37      00000000 
  37      00000000 
  37      00000000 
  37      00000000 
  38              		.global	hdma_adc1
  39              		.section	.bss.hdma_adc1,"aw",%nobits
  40              		.align	2
  43              	hdma_adc1:
  44 0000 00000000 		.space	96
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              		.global	hlpuart1
  46              		.section	.bss.hlpuart1,"aw",%nobits
  47              		.align	2
  50              	hlpuart1:
  51 0000 00000000 		.space	144
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 2


  51      00000000 
  51      00000000 
  51      00000000 
  51      00000000 
  52              		.global	huart4
  53              		.section	.bss.huart4,"aw",%nobits
  54              		.align	2
  57              	huart4:
  58 0000 00000000 		.space	144
  58      00000000 
  58      00000000 
  58      00000000 
  58      00000000 
  59              		.global	hdma_lpuart1_rx
  60              		.section	.bss.hdma_lpuart1_rx,"aw",%nobits
  61              		.align	2
  64              	hdma_lpuart1_rx:
  65 0000 00000000 		.space	96
  65      00000000 
  65      00000000 
  65      00000000 
  65      00000000 
  66              		.global	htim3
  67              		.section	.bss.htim3,"aw",%nobits
  68              		.align	2
  71              	htim3:
  72 0000 00000000 		.space	76
  72      00000000 
  72      00000000 
  72      00000000 
  72      00000000 
  73              		.global	htim4
  74              		.section	.bss.htim4,"aw",%nobits
  75              		.align	2
  78              	htim4:
  79 0000 00000000 		.space	76
  79      00000000 
  79      00000000 
  79      00000000 
  79      00000000 
  80              		.global	htim5
  81              		.section	.bss.htim5,"aw",%nobits
  82              		.align	2
  85              	htim5:
  86 0000 00000000 		.space	76
  86      00000000 
  86      00000000 
  86      00000000 
  86      00000000 
  87              		.global	hpcd_USB_OTG_FS
  88              		.section	.bss.hpcd_USB_OTG_FS,"aw",%nobits
  89              		.align	2
  92              	hpcd_USB_OTG_FS:
  93 0000 00000000 		.space	1292
  93      00000000 
  93      00000000 
  93      00000000 
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 3


  93      00000000 
  94              		.global	step
  95              		.section	.bss.step,"aw",%nobits
  96              		.align	1
  99              	step:
 100 0000 0000     		.space	2
 101              		.global	last_time
 102              		.section	.bss.last_time,"aw",%nobits
 103              		.align	2
 106              	last_time:
 107 0000 00000000 		.space	4
 108              		.global	value
 109              		.section	.bss.value,"aw",%nobits
 110              		.align	2
 113              	value:
 114 0000 00000000 		.space	12
 114      00000000 
 114      00000000 
 115              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 116              		.align	1
 117              		.global	HAL_UARTEx_RxEventCallback
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 122              	HAL_UARTEx_RxEventCallback:
 123              	.LFB325:
 124              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "Functions.h"
  25:Core/Src/main.c **** #include <stdio.h>
  26:Core/Src/main.c **** #include <string.h>
  27:Core/Src/main.c **** #include <ctype.h>
  28:Core/Src/main.c **** // #include "Parser.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 4


  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  47:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** UART_HandleTypeDef hlpuart1;
  50:Core/Src/main.c **** UART_HandleTypeDef huart4;
  51:Core/Src/main.c **** DMA_HandleTypeDef hdma_lpuart1_rx;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  54:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  55:Core/Src/main.c **** TIM_HandleTypeDef htim5;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** PCD_HandleTypeDef hpcd_USB_OTG_FS;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE BEGIN PV */
  60:Core/Src/main.c **** uint16_t step = 0;
  61:Core/Src/main.c **** uint32_t last_time = 0;
  62:Core/Src/main.c **** uint32_t value[ADC_CHANNELS];
  63:Core/Src/main.c **** /* USER CODE END PV */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  66:Core/Src/main.c **** void SystemClock_Config(void);
  67:Core/Src/main.c **** static void MX_GPIO_Init(void);
  68:Core/Src/main.c **** static void MX_DMA_Init(void);
  69:Core/Src/main.c **** static void MX_LPUART1_UART_Init(void);
  70:Core/Src/main.c **** static void MX_USB_OTG_FS_PCD_Init(void);
  71:Core/Src/main.c **** static void MX_TIM4_Init(void);
  72:Core/Src/main.c **** static void MX_UART4_Init(void);
  73:Core/Src/main.c **** static void MX_TIM3_Init(void);
  74:Core/Src/main.c **** static void MX_ADC1_Init(void);
  75:Core/Src/main.c **** static void MX_TIM5_Init(void);
  76:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  77:Core/Src/main.c **** /* USER CODE END PFP */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  80:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
  83:Core/Src/main.c **** {
 125              		.loc 1 83 1
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 8
 128              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 5


 129 0000 80B5     		push	{r7, lr}
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 7, -8
 132              		.cfi_offset 14, -4
 133 0002 82B0     		sub	sp, sp, #8
 134              		.cfi_def_cfa_offset 16
 135 0004 00AF     		add	r7, sp, #0
 136              		.cfi_def_cfa_register 7
 137 0006 7860     		str	r0, [r7, #4]
 138 0008 0B46     		mov	r3, r1
 139 000a 7B80     		strh	r3, [r7, #2]	@ movhi
  84:Core/Src/main.c ****   if (huart->Instance == LPUART1)
 140              		.loc 1 84 12
 141 000c 7B68     		ldr	r3, [r7, #4]
 142 000e 1B68     		ldr	r3, [r3]
 143              		.loc 1 84 6
 144 0010 094A     		ldr	r2, .L4
 145 0012 9342     		cmp	r3, r2
 146 0014 0CD1     		bne	.L3
  85:Core/Src/main.c ****   {
  86:Core/Src/main.c ****     HAL_UARTEx_ReceiveToIdle_DMA(&hlpuart1, (uint8_t *)RxBuf, RxBuf_SIZE);
 147              		.loc 1 86 5
 148 0016 1422     		movs	r2, #20
 149 0018 0849     		ldr	r1, .L4+4
 150 001a 0948     		ldr	r0, .L4+8
 151 001c FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_DMA
  87:Core/Src/main.c ****     __HAL_DMA_DISABLE_IT(&hdma_lpuart1_rx, DMA_IT_HT);
 152              		.loc 1 87 5
 153 0020 084B     		ldr	r3, .L4+12
 154 0022 1B68     		ldr	r3, [r3]
 155 0024 1A68     		ldr	r2, [r3]
 156 0026 074B     		ldr	r3, .L4+12
 157 0028 1B68     		ldr	r3, [r3]
 158 002a 22F00402 		bic	r2, r2, #4
 159 002e 1A60     		str	r2, [r3]
 160              	.L3:
  88:Core/Src/main.c ****   }
  89:Core/Src/main.c **** }
 161              		.loc 1 89 1
 162 0030 00BF     		nop
 163 0032 0837     		adds	r7, r7, #8
 164              		.cfi_def_cfa_offset 8
 165 0034 BD46     		mov	sp, r7
 166              		.cfi_def_cfa_register 13
 167              		@ sp needed
 168 0036 80BD     		pop	{r7, pc}
 169              	.L5:
 170              		.align	2
 171              	.L4:
 172 0038 00800040 		.word	1073774592
 173 003c 00000000 		.word	RxBuf
 174 0040 00000000 		.word	hlpuart1
 175 0044 00000000 		.word	hdma_lpuart1_rx
 176              		.cfi_endproc
 177              	.LFE325:
 179              		.section	.text.DelayMicrosecond,"ax",%progbits
 180              		.align	1
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 6


 181              		.global	DelayMicrosecond
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 186              	DelayMicrosecond:
 187              	.LFB326:
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** void DelayMicrosecond(uint16_t time)
  92:Core/Src/main.c **** {
 188              		.loc 1 92 1
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 8
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 193 0000 80B4     		push	{r7}
 194              		.cfi_def_cfa_offset 4
 195              		.cfi_offset 7, -4
 196 0002 83B0     		sub	sp, sp, #12
 197              		.cfi_def_cfa_offset 16
 198 0004 00AF     		add	r7, sp, #0
 199              		.cfi_def_cfa_register 7
 200 0006 0346     		mov	r3, r0
 201 0008 FB80     		strh	r3, [r7, #6]	@ movhi
  93:Core/Src/main.c ****   __HAL_TIM_SET_COUNTER(&htim4, 0);
 202              		.loc 1 93 3
 203 000a 094B     		ldr	r3, .L8
 204 000c 1B68     		ldr	r3, [r3]
 205 000e 0022     		movs	r2, #0
 206 0010 5A62     		str	r2, [r3, #36]
  94:Core/Src/main.c ****   while (__HAL_TIM_GET_COUNTER(&htim4) < time)
 207              		.loc 1 94 9
 208 0012 00BF     		nop
 209              	.L7:
 210              		.loc 1 94 10 discriminator 1
 211 0014 064B     		ldr	r3, .L8
 212 0016 1B68     		ldr	r3, [r3]
 213 0018 5A6A     		ldr	r2, [r3, #36]
 214              		.loc 1 94 40 discriminator 1
 215 001a FB88     		ldrh	r3, [r7, #6]
 216 001c 9A42     		cmp	r2, r3
 217 001e F9D3     		bcc	.L7
  95:Core/Src/main.c ****     ;
  96:Core/Src/main.c **** }
 218              		.loc 1 96 1
 219 0020 00BF     		nop
 220 0022 00BF     		nop
 221 0024 0C37     		adds	r7, r7, #12
 222              		.cfi_def_cfa_offset 4
 223 0026 BD46     		mov	sp, r7
 224              		.cfi_def_cfa_register 13
 225              		@ sp needed
 226 0028 5DF8047B 		ldr	r7, [sp], #4
 227              		.cfi_restore 7
 228              		.cfi_def_cfa_offset 0
 229 002c 7047     		bx	lr
 230              	.L9:
 231 002e 00BF     		.align	2
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 7


 232              	.L8:
 233 0030 00000000 		.word	htim4
 234              		.cfi_endproc
 235              	.LFE326:
 237              		.section	.text.GetTicks,"ax",%progbits
 238              		.align	1
 239              		.global	GetTicks
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 244              	GetTicks:
 245              	.LFB327:
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** int GetTicks()
  99:Core/Src/main.c **** {
 246              		.loc 1 99 1
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 1, uses_anonymous_args = 0
 250              		@ link register save eliminated.
 251 0000 80B4     		push	{r7}
 252              		.cfi_def_cfa_offset 4
 253              		.cfi_offset 7, -4
 254 0002 00AF     		add	r7, sp, #0
 255              		.cfi_def_cfa_register 7
 100:Core/Src/main.c ****   return __HAL_TIM_GET_COUNTER(&htim5);
 256              		.loc 1 100 10
 257 0004 034B     		ldr	r3, .L12
 258 0006 1B68     		ldr	r3, [r3]
 259 0008 5B6A     		ldr	r3, [r3, #36]
 101:Core/Src/main.c **** }
 260              		.loc 1 101 1
 261 000a 1846     		mov	r0, r3
 262 000c BD46     		mov	sp, r7
 263              		.cfi_def_cfa_register 13
 264              		@ sp needed
 265 000e 5DF8047B 		ldr	r7, [sp], #4
 266              		.cfi_restore 7
 267              		.cfi_def_cfa_offset 0
 268 0012 7047     		bx	lr
 269              	.L13:
 270              		.align	2
 271              	.L12:
 272 0014 00000000 		.word	htim5
 273              		.cfi_endproc
 274              	.LFE327:
 276              		.section	.rodata
 277              		.align	2
 278              	.LC0:
 279 0000 74656D70 		.ascii	"temp: %f, value: %d\015\012\000"
 279      3A202566 
 279      2C207661 
 279      6C75653A 
 279      2025640D 
 280              		.section	.text.print_temperature,"ax",%progbits
 281              		.align	1
 282              		.global	print_temperature
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 8


 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 287              	print_temperature:
 288              	.LFB328:
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** void print_temperature()
 104:Core/Src/main.c **** {
 289              		.loc 1 104 1
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 1, uses_anonymous_args = 0
 293 0000 80B5     		push	{r7, lr}
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 7, -8
 296              		.cfi_offset 14, -4
 297 0002 82B0     		sub	sp, sp, #8
 298              		.cfi_def_cfa_offset 16
 299 0004 02AF     		add	r7, sp, #8
 300              		.cfi_def_cfa 7, 8
 105:Core/Src/main.c ****   sprintf(msg_buffer, "temp: %f, value: %d\r\n", GetTemperature(ADC_HOT_END, value[ADC_HOT_END]), v
 301              		.loc 1 105 83
 302 0006 104B     		ldr	r3, .L15
 303 0008 5B68     		ldr	r3, [r3, #4]
 304              		.loc 1 105 3
 305 000a 9BB2     		uxth	r3, r3
 306 000c 1946     		mov	r1, r3
 307 000e 0120     		movs	r0, #1
 308 0010 FFF7FEFF 		bl	GetTemperature
 309 0014 51EC100B 		vmov	r0, r1, d0
 310 0018 0B4B     		ldr	r3, .L15
 311 001a 5B68     		ldr	r3, [r3, #4]
 312 001c 0093     		str	r3, [sp]
 313 001e 0246     		mov	r2, r0
 314 0020 0B46     		mov	r3, r1
 315 0022 0A49     		ldr	r1, .L15+4
 316 0024 0A48     		ldr	r0, .L15+8
 317 0026 FFF7FEFF 		bl	sprintf
 106:Core/Src/main.c ****   HAL_UART_Transmit(&hlpuart1, (uint16_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 318              		.loc 1 106 56
 319 002a 0948     		ldr	r0, .L15+8
 320 002c FFF7FEFF 		bl	strlen
 321 0030 0346     		mov	r3, r0
 322              		.loc 1 106 3
 323 0032 9AB2     		uxth	r2, r3
 324 0034 4FF0FF33 		mov	r3, #-1
 325 0038 0549     		ldr	r1, .L15+8
 326 003a 0648     		ldr	r0, .L15+12
 327 003c FFF7FEFF 		bl	HAL_UART_Transmit
 107:Core/Src/main.c **** }
 328              		.loc 1 107 1
 329 0040 00BF     		nop
 330 0042 BD46     		mov	sp, r7
 331              		.cfi_def_cfa_register 13
 332              		@ sp needed
 333 0044 80BD     		pop	{r7, pc}
 334              	.L16:
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 9


 335 0046 00BF     		.align	2
 336              	.L15:
 337 0048 00000000 		.word	value
 338 004c 00000000 		.word	.LC0
 339 0050 00000000 		.word	msg_buffer
 340 0054 00000000 		.word	hlpuart1
 341              		.cfi_endproc
 342              	.LFE328:
 344              		.section	.text.main,"ax",%progbits
 345              		.align	1
 346              		.global	main
 347              		.syntax unified
 348              		.thumb
 349              		.thumb_func
 351              	main:
 352              	.LFB329:
 108:Core/Src/main.c **** /* USER CODE END 0 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /**
 111:Core/Src/main.c ****   * @brief  The application entry point.
 112:Core/Src/main.c ****   * @retval int
 113:Core/Src/main.c ****   */
 114:Core/Src/main.c **** int main(void)
 115:Core/Src/main.c **** {
 353              		.loc 1 115 1
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 8
 356              		@ frame_needed = 1, uses_anonymous_args = 0
 357 0000 80B5     		push	{r7, lr}
 358              		.cfi_def_cfa_offset 8
 359              		.cfi_offset 7, -8
 360              		.cfi_offset 14, -4
 361 0002 82B0     		sub	sp, sp, #8
 362              		.cfi_def_cfa_offset 16
 363 0004 00AF     		add	r7, sp, #0
 364              		.cfi_def_cfa_register 7
 116:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 117:Core/Src/main.c ****   // last_time = HAL_GetTick();
 118:Core/Src/main.c ****   /* USER CODE END 1 */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 123:Core/Src/main.c ****   HAL_Init();
 365              		.loc 1 123 3
 366 0006 FFF7FEFF 		bl	HAL_Init
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* USER CODE END Init */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* Configure the system clock */
 130:Core/Src/main.c ****   SystemClock_Config();
 367              		.loc 1 130 3
 368 000a FFF7FEFF 		bl	SystemClock_Config
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 10


 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /* USER CODE END SysInit */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* Initialize all configured peripherals */
 137:Core/Src/main.c ****   MX_GPIO_Init();
 369              		.loc 1 137 3
 370 000e FFF7FEFF 		bl	MX_GPIO_Init
 138:Core/Src/main.c ****   MX_DMA_Init();
 371              		.loc 1 138 3
 372 0012 FFF7FEFF 		bl	MX_DMA_Init
 139:Core/Src/main.c ****   MX_LPUART1_UART_Init();
 373              		.loc 1 139 3
 374 0016 FFF7FEFF 		bl	MX_LPUART1_UART_Init
 140:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
 375              		.loc 1 140 3
 376 001a FFF7FEFF 		bl	MX_USB_OTG_FS_PCD_Init
 141:Core/Src/main.c ****   MX_TIM4_Init();
 377              		.loc 1 141 3
 378 001e FFF7FEFF 		bl	MX_TIM4_Init
 142:Core/Src/main.c ****   MX_UART4_Init();
 379              		.loc 1 142 3
 380 0022 FFF7FEFF 		bl	MX_UART4_Init
 143:Core/Src/main.c ****   MX_TIM3_Init();
 381              		.loc 1 143 3
 382 0026 FFF7FEFF 		bl	MX_TIM3_Init
 144:Core/Src/main.c ****   MX_ADC1_Init();
 383              		.loc 1 144 3
 384 002a FFF7FEFF 		bl	MX_ADC1_Init
 145:Core/Src/main.c ****   MX_TIM5_Init();
 385              		.loc 1 145 3
 386 002e FFF7FEFF 		bl	MX_TIM5_Init
 146:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 147:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 387              		.loc 1 147 3
 388 0032 0021     		movs	r1, #0
 389 0034 3C48     		ldr	r0, .L22
 390 0036 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 148:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2);
 391              		.loc 1 148 3
 392 003a 0421     		movs	r1, #4
 393 003c 3A48     		ldr	r0, .L22
 394 003e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 149:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);
 395              		.loc 1 149 3
 396 0042 0821     		movs	r1, #8
 397 0044 3848     		ldr	r0, .L22
 398 0046 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 150:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, value, ADC_CHANNELS);
 399              		.loc 1 150 3
 400 004a 0322     		movs	r2, #3
 401 004c 3749     		ldr	r1, .L22+4
 402 004e 3848     		ldr	r0, .L22+8
 403 0050 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 151:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim4);
 404              		.loc 1 151 3
 405 0054 3748     		ldr	r0, .L22+12
 406 0056 FFF7FEFF 		bl	HAL_TIM_Base_Start
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 11


 152:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim5);
 407              		.loc 1 152 3
 408 005a 3748     		ldr	r0, .L22+16
 409 005c FFF7FEFF 		bl	HAL_TIM_Base_Start
 153:Core/Src/main.c ****   HAL_UARTEx_ReceiveToIdle_DMA(&hlpuart1, RxBuf, RxBuf_SIZE);
 410              		.loc 1 153 3
 411 0060 1422     		movs	r2, #20
 412 0062 3649     		ldr	r1, .L22+20
 413 0064 3648     		ldr	r0, .L22+24
 414 0066 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_DMA
 154:Core/Src/main.c ****   __HAL_DMA_DISABLE_IT(&hdma_lpuart1_rx, DMA_IT_HT);
 415              		.loc 1 154 3
 416 006a 364B     		ldr	r3, .L22+28
 417 006c 1B68     		ldr	r3, [r3]
 418 006e 1A68     		ldr	r2, [r3]
 419 0070 344B     		ldr	r3, .L22+28
 420 0072 1B68     		ldr	r3, [r3]
 421 0074 22F00402 		bic	r2, r2, #4
 422 0078 1A60     		str	r2, [r3]
 155:Core/Src/main.c ****   memset(&RxBuf[0], 0, sizeof(RxBuf));
 423              		.loc 1 155 3
 424 007a 1422     		movs	r2, #20
 425 007c 0021     		movs	r1, #0
 426 007e 2F48     		ldr	r0, .L22+20
 427 0080 FFF7FEFF 		bl	memset
 156:Core/Src/main.c ****   reset_args();
 428              		.loc 1 156 3
 429 0084 FFF7FEFF 		bl	reset_args
 157:Core/Src/main.c ****   // int steps = 0;
 158:Core/Src/main.c ****   uint32_t lasttimeX = 0;
 430              		.loc 1 158 12
 431 0088 0023     		movs	r3, #0
 432 008a 3B60     		str	r3, [r7]
 159:Core/Src/main.c ****   uint32_t lasttimeY = 0;
 433              		.loc 1 159 12
 434 008c 0023     		movs	r3, #0
 435 008e 7B60     		str	r3, [r7, #4]
 436              	.L21:
 160:Core/Src/main.c ****   /* USER CODE END 2 */
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /* Infinite loop */
 163:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 164:Core/Src/main.c ****   while (1)
 165:Core/Src/main.c ****   {
 166:Core/Src/main.c ****     if (RxBuf[0] != 0 && isRunning == false)
 437              		.loc 1 166 14
 438 0090 2A4B     		ldr	r3, .L22+20
 439 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 440              		.loc 1 166 8
 441 0094 002B     		cmp	r3, #0
 442 0096 0ED0     		beq	.L18
 443              		.loc 1 166 36 discriminator 1
 444 0098 2B4B     		ldr	r3, .L22+32
 445 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 446 009c 83F00103 		eor	r3, r3, #1
 447 00a0 DBB2     		uxtb	r3, r3
 448              		.loc 1 166 23 discriminator 1
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 12


 449 00a2 002B     		cmp	r3, #0
 450 00a4 07D0     		beq	.L18
 167:Core/Src/main.c ****     {
 168:Core/Src/main.c ****       get_command(RxBuf);
 451              		.loc 1 168 7
 452 00a6 2548     		ldr	r0, .L22+20
 453 00a8 FFF7FEFF 		bl	get_command
 169:Core/Src/main.c ****       memset(&RxBuf[0], 0, sizeof(RxBuf));
 454              		.loc 1 169 7
 455 00ac 1422     		movs	r2, #20
 456 00ae 0021     		movs	r1, #0
 457 00b0 2248     		ldr	r0, .L22+20
 458 00b2 FFF7FEFF 		bl	memset
 459              	.L18:
 170:Core/Src/main.c ****     }
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****     if (HAL_GetTick() - last_time > interval && interval > 0)
 460              		.loc 1 172 9
 461 00b6 FFF7FEFF 		bl	HAL_GetTick
 462 00ba 0246     		mov	r2, r0
 463              		.loc 1 172 23
 464 00bc 234B     		ldr	r3, .L22+36
 465 00be 1B68     		ldr	r3, [r3]
 466 00c0 D31A     		subs	r3, r2, r3
 467              		.loc 1 172 35
 468 00c2 234A     		ldr	r2, .L22+40
 469 00c4 1288     		ldrh	r2, [r2]
 470              		.loc 1 172 8
 471 00c6 9342     		cmp	r3, r2
 472 00c8 0CD9     		bls	.L19
 473              		.loc 1 172 58 discriminator 1
 474 00ca 214B     		ldr	r3, .L22+40
 475 00cc 1B88     		ldrh	r3, [r3]
 476              		.loc 1 172 46 discriminator 1
 477 00ce 002B     		cmp	r3, #0
 478 00d0 08D0     		beq	.L19
 173:Core/Src/main.c ****     {
 174:Core/Src/main.c ****       M105(0, 0);
 479              		.loc 1 174 7
 480 00d2 0021     		movs	r1, #0
 481 00d4 0020     		movs	r0, #0
 482 00d6 FFF7FEFF 		bl	M105
 175:Core/Src/main.c ****       last_time = HAL_GetTick();
 483              		.loc 1 175 19
 484 00da FFF7FEFF 		bl	HAL_GetTick
 485 00de 0346     		mov	r3, r0
 486              		.loc 1 175 17
 487 00e0 1A4A     		ldr	r2, .L22+36
 488 00e2 1360     		str	r3, [r2]
 489              	.L19:
 176:Core/Src/main.c ****     }
 177:Core/Src/main.c ****    
 178:Core/Src/main.c ****     G0();
 490              		.loc 1 178 5
 491 00e4 FFF7FEFF 		bl	G0
 179:Core/Src/main.c ****     G50();
 492              		.loc 1 179 5
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 13


 493 00e8 FFF7FEFF 		bl	G50
 180:Core/Src/main.c ****     M104();
 494              		.loc 1 180 5
 495 00ec FFF7FEFF 		bl	M104
 181:Core/Src/main.c ****     // if (steps <= 6500)
 182:Core/Src/main.c ****     // {
 183:Core/Src/main.c ****     //   MAKE_MOTOR_STEP(X_AXIS_STEP);
 184:Core/Src/main.c ****     //   DelayMicrosecond(600);
 185:Core/Src/main.c ****     //   steps++;
 186:Core/Src/main.c ****     // }
 187:Core/Src/main.c ****     if(READ_PIN(USER_BUTTON) == 1)
 496              		.loc 1 187 8
 497 00f0 4FF40051 		mov	r1, #8192
 498 00f4 1748     		ldr	r0, .L22+44
 499 00f6 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 500 00fa 0346     		mov	r3, r0
 501              		.loc 1 187 7
 502 00fc 012B     		cmp	r3, #1
 503 00fe C7D1     		bne	.L21
 188:Core/Src/main.c ****     {
 189:Core/Src/main.c ****       //CHANGE_MOTOR_DIR(Y_AXIS_DIR, COUNTERCLOCKWISE);
 190:Core/Src/main.c ****       // if(GetTicks() - lasttimeX >= 800)
 191:Core/Src/main.c ****       // {
 192:Core/Src/main.c ****       //     MAKE_MOTOR_STEP(X_AXIS_STEP);
 193:Core/Src/main.c ****       //     lasttimeX = GetTicks();
 194:Core/Src/main.c ****       // }
 195:Core/Src/main.c ****       if(GetTicks() - lasttimeY >= 2000)
 504              		.loc 1 195 10
 505 0100 FFF7FEFF 		bl	GetTicks
 506 0104 0346     		mov	r3, r0
 507 0106 1A46     		mov	r2, r3
 508              		.loc 1 195 21
 509 0108 7B68     		ldr	r3, [r7, #4]
 510 010a D31A     		subs	r3, r2, r3
 511              		.loc 1 195 9
 512 010c B3F5FA6F 		cmp	r3, #2000
 513 0110 BED3     		bcc	.L21
 196:Core/Src/main.c ****       {
 197:Core/Src/main.c ****           MAKE_MOTOR_STEP(Y_AXIS_STEP);
 514              		.loc 1 197 11
 515 0112 8021     		movs	r1, #128
 516 0114 4FF09040 		mov	r0, #1207959552
 517 0118 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 198:Core/Src/main.c ****           lasttimeY = GetTicks();
 518              		.loc 1 198 23
 519 011c FFF7FEFF 		bl	GetTicks
 520 0120 0346     		mov	r3, r0
 521              		.loc 1 198 21
 522 0122 7B60     		str	r3, [r7, #4]
 166:Core/Src/main.c ****     {
 523              		.loc 1 166 8
 524 0124 B4E7     		b	.L21
 525              	.L23:
 526 0126 00BF     		.align	2
 527              	.L22:
 528 0128 00000000 		.word	htim3
 529 012c 00000000 		.word	value
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 14


 530 0130 00000000 		.word	hadc1
 531 0134 00000000 		.word	htim4
 532 0138 00000000 		.word	htim5
 533 013c 00000000 		.word	RxBuf
 534 0140 00000000 		.word	hlpuart1
 535 0144 00000000 		.word	hdma_lpuart1_rx
 536 0148 00000000 		.word	isRunning
 537 014c 00000000 		.word	last_time
 538 0150 00000000 		.word	interval
 539 0154 00080048 		.word	1207961600
 540              		.cfi_endproc
 541              	.LFE329:
 543              		.section	.text.SystemClock_Config,"ax",%progbits
 544              		.align	1
 545              		.global	SystemClock_Config
 546              		.syntax unified
 547              		.thumb
 548              		.thumb_func
 550              	SystemClock_Config:
 551              	.LFB330:
 199:Core/Src/main.c ****       }
 200:Core/Src/main.c ****     }
 201:Core/Src/main.c ****     /* USER CODE END WHILE */
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 204:Core/Src/main.c ****   }
 205:Core/Src/main.c ****   /* USER CODE END 3 */
 206:Core/Src/main.c **** }
 207:Core/Src/main.c **** 
 208:Core/Src/main.c **** /**
 209:Core/Src/main.c ****   * @brief System Clock Configuration
 210:Core/Src/main.c ****   * @retval None
 211:Core/Src/main.c ****   */
 212:Core/Src/main.c **** void SystemClock_Config(void)
 213:Core/Src/main.c **** {
 552              		.loc 1 213 1
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 96
 555              		@ frame_needed = 1, uses_anonymous_args = 0
 556 0000 80B5     		push	{r7, lr}
 557              		.cfi_def_cfa_offset 8
 558              		.cfi_offset 7, -8
 559              		.cfi_offset 14, -4
 560 0002 98B0     		sub	sp, sp, #96
 561              		.cfi_def_cfa_offset 104
 562 0004 00AF     		add	r7, sp, #0
 563              		.cfi_def_cfa_register 7
 214:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 564              		.loc 1 214 22
 565 0006 07F11803 		add	r3, r7, #24
 566 000a 4822     		movs	r2, #72
 567 000c 0021     		movs	r1, #0
 568 000e 1846     		mov	r0, r3
 569 0010 FFF7FEFF 		bl	memset
 215:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 570              		.loc 1 215 22
 571 0014 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 15


 572 0016 0022     		movs	r2, #0
 573 0018 1A60     		str	r2, [r3]
 574 001a 5A60     		str	r2, [r3, #4]
 575 001c 9A60     		str	r2, [r3, #8]
 576 001e DA60     		str	r2, [r3, #12]
 577 0020 1A61     		str	r2, [r3, #16]
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 218:Core/Src/main.c ****   */
 219:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST) != HAL_OK)
 578              		.loc 1 219 7
 579 0022 0020     		movs	r0, #0
 580 0024 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 581 0028 0346     		mov	r3, r0
 582              		.loc 1 219 6
 583 002a 002B     		cmp	r3, #0
 584 002c 01D0     		beq	.L25
 220:Core/Src/main.c ****   {
 221:Core/Src/main.c ****     Error_Handler();
 585              		.loc 1 221 5
 586 002e FFF7FEFF 		bl	Error_Handler
 587              	.L25:
 222:Core/Src/main.c ****   }
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 225:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 226:Core/Src/main.c ****   */
 227:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_MSI;
 588              		.loc 1 227 36
 589 0032 3023     		movs	r3, #48
 590 0034 BB61     		str	r3, [r7, #24]
 228:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 591              		.loc 1 228 32
 592 0036 0123     		movs	r3, #1
 593 0038 3B64     		str	r3, [r7, #64]
 229:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 594              		.loc 1 229 30
 595 003a 0123     		movs	r3, #1
 596 003c 7B63     		str	r3, [r7, #52]
 230:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 597              		.loc 1 230 41
 598 003e 0023     		movs	r3, #0
 599 0040 BB63     		str	r3, [r7, #56]
 231:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 600              		.loc 1 231 35
 601 0042 6023     		movs	r3, #96
 602 0044 FB63     		str	r3, [r7, #60]
 232:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 603              		.loc 1 232 34
 604 0046 0223     		movs	r3, #2
 605 0048 7B64     		str	r3, [r7, #68]
 233:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 606              		.loc 1 233 35
 607 004a 0123     		movs	r3, #1
 608 004c BB64     		str	r3, [r7, #72]
 234:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 609              		.loc 1 234 30
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 16


 610 004e 0123     		movs	r3, #1
 611 0050 FB64     		str	r3, [r7, #76]
 235:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 60;
 612              		.loc 1 235 30
 613 0052 3C23     		movs	r3, #60
 614 0054 3B65     		str	r3, [r7, #80]
 236:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 615              		.loc 1 236 30
 616 0056 0223     		movs	r3, #2
 617 0058 7B65     		str	r3, [r7, #84]
 237:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 618              		.loc 1 237 30
 619 005a 0223     		movs	r3, #2
 620 005c BB65     		str	r3, [r7, #88]
 238:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 621              		.loc 1 238 30
 622 005e 0223     		movs	r3, #2
 623 0060 FB65     		str	r3, [r7, #92]
 239:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 624              		.loc 1 239 7
 625 0062 07F11803 		add	r3, r7, #24
 626 0066 1846     		mov	r0, r3
 627 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 628 006c 0346     		mov	r3, r0
 629              		.loc 1 239 6
 630 006e 002B     		cmp	r3, #0
 631 0070 01D0     		beq	.L26
 240:Core/Src/main.c ****   {
 241:Core/Src/main.c ****     Error_Handler();
 632              		.loc 1 241 5
 633 0072 FFF7FEFF 		bl	Error_Handler
 634              	.L26:
 242:Core/Src/main.c ****   }
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 245:Core/Src/main.c ****   */
 246:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 635              		.loc 1 246 31
 636 0076 0F23     		movs	r3, #15
 637 0078 7B60     		str	r3, [r7, #4]
 247:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 248:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 638              		.loc 1 248 34
 639 007a 0323     		movs	r3, #3
 640 007c BB60     		str	r3, [r7, #8]
 249:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 641              		.loc 1 249 35
 642 007e 0023     		movs	r3, #0
 643 0080 FB60     		str	r3, [r7, #12]
 250:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 644              		.loc 1 250 36
 645 0082 0023     		movs	r3, #0
 646 0084 3B61     		str	r3, [r7, #16]
 251:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 647              		.loc 1 251 36
 648 0086 0023     		movs	r3, #0
 649 0088 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 17


 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 650              		.loc 1 253 7
 651 008a 3B1D     		adds	r3, r7, #4
 652 008c 0521     		movs	r1, #5
 653 008e 1846     		mov	r0, r3
 654 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 655 0094 0346     		mov	r3, r0
 656              		.loc 1 253 6
 657 0096 002B     		cmp	r3, #0
 658 0098 01D0     		beq	.L28
 254:Core/Src/main.c ****   {
 255:Core/Src/main.c ****     Error_Handler();
 659              		.loc 1 255 5
 660 009a FFF7FEFF 		bl	Error_Handler
 661              	.L28:
 256:Core/Src/main.c ****   }
 257:Core/Src/main.c **** }
 662              		.loc 1 257 1
 663 009e 00BF     		nop
 664 00a0 6037     		adds	r7, r7, #96
 665              		.cfi_def_cfa_offset 8
 666 00a2 BD46     		mov	sp, r7
 667              		.cfi_def_cfa_register 13
 668              		@ sp needed
 669 00a4 80BD     		pop	{r7, pc}
 670              		.cfi_endproc
 671              	.LFE330:
 673              		.section	.text.MX_ADC1_Init,"ax",%progbits
 674              		.align	1
 675              		.syntax unified
 676              		.thumb
 677              		.thumb_func
 679              	MX_ADC1_Init:
 680              	.LFB331:
 258:Core/Src/main.c **** 
 259:Core/Src/main.c **** /**
 260:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 261:Core/Src/main.c ****   * @param None
 262:Core/Src/main.c ****   * @retval None
 263:Core/Src/main.c ****   */
 264:Core/Src/main.c **** static void MX_ADC1_Init(void)
 265:Core/Src/main.c **** {
 681              		.loc 1 265 1
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 40
 684              		@ frame_needed = 1, uses_anonymous_args = 0
 685 0000 80B5     		push	{r7, lr}
 686              		.cfi_def_cfa_offset 8
 687              		.cfi_offset 7, -8
 688              		.cfi_offset 14, -4
 689 0002 8AB0     		sub	sp, sp, #40
 690              		.cfi_def_cfa_offset 48
 691 0004 00AF     		add	r7, sp, #0
 692              		.cfi_def_cfa_register 7
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 18


 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   ADC_MultiModeTypeDef multimode = {0};
 693              		.loc 1 271 24
 694 0006 07F11C03 		add	r3, r7, #28
 695 000a 0022     		movs	r2, #0
 696 000c 1A60     		str	r2, [r3]
 697 000e 5A60     		str	r2, [r3, #4]
 698 0010 9A60     		str	r2, [r3, #8]
 272:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 699              		.loc 1 272 26
 700 0012 3B1D     		adds	r3, r7, #4
 701 0014 0022     		movs	r2, #0
 702 0016 1A60     		str	r2, [r3]
 703 0018 5A60     		str	r2, [r3, #4]
 704 001a 9A60     		str	r2, [r3, #8]
 705 001c DA60     		str	r2, [r3, #12]
 706 001e 1A61     		str	r2, [r3, #16]
 707 0020 5A61     		str	r2, [r3, #20]
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /** Common config
 279:Core/Src/main.c ****   */
 280:Core/Src/main.c ****   hadc1.Instance = ADC1;
 708              		.loc 1 280 18
 709 0022 434B     		ldr	r3, .L36
 710 0024 434A     		ldr	r2, .L36+4
 711 0026 1A60     		str	r2, [r3]
 281:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 712              		.loc 1 281 29
 713 0028 414B     		ldr	r3, .L36
 714 002a 0022     		movs	r2, #0
 715 002c 5A60     		str	r2, [r3, #4]
 282:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 716              		.loc 1 282 25
 717 002e 404B     		ldr	r3, .L36
 718 0030 0022     		movs	r2, #0
 719 0032 9A60     		str	r2, [r3, #8]
 283:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 720              		.loc 1 283 24
 721 0034 3E4B     		ldr	r3, .L36
 722 0036 0022     		movs	r2, #0
 723 0038 DA60     		str	r2, [r3, #12]
 284:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 724              		.loc 1 284 27
 725 003a 3D4B     		ldr	r3, .L36
 726 003c 0122     		movs	r2, #1
 727 003e 1A61     		str	r2, [r3, #16]
 285:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 728              		.loc 1 285 27
 729 0040 3B4B     		ldr	r3, .L36
 730 0042 0422     		movs	r2, #4
 731 0044 5A61     		str	r2, [r3, #20]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 19


 286:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 732              		.loc 1 286 31
 733 0046 3A4B     		ldr	r3, .L36
 734 0048 0022     		movs	r2, #0
 735 004a 1A76     		strb	r2, [r3, #24]
 287:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 736              		.loc 1 287 33
 737 004c 384B     		ldr	r3, .L36
 738 004e 0122     		movs	r2, #1
 739 0050 5A76     		strb	r2, [r3, #25]
 288:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 3;
 740              		.loc 1 288 30
 741 0052 374B     		ldr	r3, .L36
 742 0054 0322     		movs	r2, #3
 743 0056 DA61     		str	r2, [r3, #28]
 289:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 744              		.loc 1 289 36
 745 0058 354B     		ldr	r3, .L36
 746 005a 0022     		movs	r2, #0
 747 005c 83F82020 		strb	r2, [r3, #32]
 290:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 748              		.loc 1 290 31
 749 0060 334B     		ldr	r3, .L36
 750 0062 0022     		movs	r2, #0
 751 0064 9A62     		str	r2, [r3, #40]
 291:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 752              		.loc 1 291 35
 753 0066 324B     		ldr	r3, .L36
 754 0068 0022     		movs	r2, #0
 755 006a DA62     		str	r2, [r3, #44]
 292:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 756              		.loc 1 292 36
 757 006c 304B     		ldr	r3, .L36
 758 006e 0122     		movs	r2, #1
 759 0070 83F83020 		strb	r2, [r3, #48]
 293:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 760              		.loc 1 293 22
 761 0074 2E4B     		ldr	r3, .L36
 762 0076 0022     		movs	r2, #0
 763 0078 5A63     		str	r2, [r3, #52]
 294:Core/Src/main.c ****   hadc1.Init.OversamplingMode = ENABLE;
 764              		.loc 1 294 31
 765 007a 2D4B     		ldr	r3, .L36
 766 007c 0122     		movs	r2, #1
 767 007e 83F83820 		strb	r2, [r3, #56]
 295:Core/Src/main.c ****   hadc1.Init.Oversampling.Ratio = ADC_OVERSAMPLING_RATIO_16;
 768              		.loc 1 295 33
 769 0082 2B4B     		ldr	r3, .L36
 770 0084 0C22     		movs	r2, #12
 771 0086 DA63     		str	r2, [r3, #60]
 296:Core/Src/main.c ****   hadc1.Init.Oversampling.RightBitShift = ADC_RIGHTBITSHIFT_NONE;
 772              		.loc 1 296 41
 773 0088 294B     		ldr	r3, .L36
 774 008a 0022     		movs	r2, #0
 775 008c 1A64     		str	r2, [r3, #64]
 297:Core/Src/main.c ****   hadc1.Init.Oversampling.TriggeredMode = ADC_TRIGGEREDMODE_SINGLE_TRIGGER;
 776              		.loc 1 297 41
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 20


 777 008e 284B     		ldr	r3, .L36
 778 0090 0022     		movs	r2, #0
 779 0092 5A64     		str	r2, [r3, #68]
 298:Core/Src/main.c ****   hadc1.Init.Oversampling.OversamplingStopReset = ADC_REGOVERSAMPLING_CONTINUED_MODE;
 780              		.loc 1 298 49
 781 0094 264B     		ldr	r3, .L36
 782 0096 0122     		movs	r2, #1
 783 0098 9A64     		str	r2, [r3, #72]
 299:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 784              		.loc 1 299 7
 785 009a 2548     		ldr	r0, .L36
 786 009c FFF7FEFF 		bl	HAL_ADC_Init
 787 00a0 0346     		mov	r3, r0
 788              		.loc 1 299 6
 789 00a2 002B     		cmp	r3, #0
 790 00a4 01D0     		beq	.L30
 300:Core/Src/main.c ****   {
 301:Core/Src/main.c ****     Error_Handler();
 791              		.loc 1 301 5
 792 00a6 FFF7FEFF 		bl	Error_Handler
 793              	.L30:
 302:Core/Src/main.c ****   }
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   /** Configure the ADC multi-mode
 305:Core/Src/main.c ****   */
 306:Core/Src/main.c ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 794              		.loc 1 306 18
 795 00aa 0023     		movs	r3, #0
 796 00ac FB61     		str	r3, [r7, #28]
 307:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 797              		.loc 1 307 7
 798 00ae 07F11C03 		add	r3, r7, #28
 799 00b2 1946     		mov	r1, r3
 800 00b4 1E48     		ldr	r0, .L36
 801 00b6 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 802 00ba 0346     		mov	r3, r0
 803              		.loc 1 307 6
 804 00bc 002B     		cmp	r3, #0
 805 00be 01D0     		beq	.L31
 308:Core/Src/main.c ****   {
 309:Core/Src/main.c ****     Error_Handler();
 806              		.loc 1 309 5
 807 00c0 FFF7FEFF 		bl	Error_Handler
 808              	.L31:
 310:Core/Src/main.c ****   }
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   /** Configure Regular Channel
 313:Core/Src/main.c ****   */
 314:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 809              		.loc 1 314 19
 810 00c4 1C4B     		ldr	r3, .L36+8
 811 00c6 7B60     		str	r3, [r7, #4]
 315:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 812              		.loc 1 315 16
 813 00c8 0623     		movs	r3, #6
 814 00ca BB60     		str	r3, [r7, #8]
 316:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_247CYCLES_5;
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 21


 815              		.loc 1 316 24
 816 00cc 0623     		movs	r3, #6
 817 00ce FB60     		str	r3, [r7, #12]
 317:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 818              		.loc 1 317 22
 819 00d0 7F23     		movs	r3, #127
 820 00d2 3B61     		str	r3, [r7, #16]
 318:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 821              		.loc 1 318 24
 822 00d4 0423     		movs	r3, #4
 823 00d6 7B61     		str	r3, [r7, #20]
 319:Core/Src/main.c ****   sConfig.Offset = 0;
 824              		.loc 1 319 18
 825 00d8 0023     		movs	r3, #0
 826 00da BB61     		str	r3, [r7, #24]
 320:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 827              		.loc 1 320 7
 828 00dc 3B1D     		adds	r3, r7, #4
 829 00de 1946     		mov	r1, r3
 830 00e0 1348     		ldr	r0, .L36
 831 00e2 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 832 00e6 0346     		mov	r3, r0
 833              		.loc 1 320 6
 834 00e8 002B     		cmp	r3, #0
 835 00ea 01D0     		beq	.L32
 321:Core/Src/main.c ****   {
 322:Core/Src/main.c ****     Error_Handler();
 836              		.loc 1 322 5
 837 00ec FFF7FEFF 		bl	Error_Handler
 838              	.L32:
 323:Core/Src/main.c ****   }
 324:Core/Src/main.c **** 
 325:Core/Src/main.c ****   /** Configure Regular Channel
 326:Core/Src/main.c ****   */
 327:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_2;
 839              		.loc 1 327 19
 840 00f0 124B     		ldr	r3, .L36+12
 841 00f2 7B60     		str	r3, [r7, #4]
 328:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 842              		.loc 1 328 16
 843 00f4 0C23     		movs	r3, #12
 844 00f6 BB60     		str	r3, [r7, #8]
 329:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 845              		.loc 1 329 7
 846 00f8 3B1D     		adds	r3, r7, #4
 847 00fa 1946     		mov	r1, r3
 848 00fc 0C48     		ldr	r0, .L36
 849 00fe FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 850 0102 0346     		mov	r3, r0
 851              		.loc 1 329 6
 852 0104 002B     		cmp	r3, #0
 853 0106 01D0     		beq	.L33
 330:Core/Src/main.c ****   {
 331:Core/Src/main.c ****     Error_Handler();
 854              		.loc 1 331 5
 855 0108 FFF7FEFF 		bl	Error_Handler
 856              	.L33:
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 22


 332:Core/Src/main.c ****   }
 333:Core/Src/main.c **** 
 334:Core/Src/main.c ****   /** Configure Regular Channel
 335:Core/Src/main.c ****   */
 336:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 857              		.loc 1 336 19
 858 010c 0C4B     		ldr	r3, .L36+16
 859 010e 7B60     		str	r3, [r7, #4]
 337:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 860              		.loc 1 337 16
 861 0110 1223     		movs	r3, #18
 862 0112 BB60     		str	r3, [r7, #8]
 338:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 863              		.loc 1 338 7
 864 0114 3B1D     		adds	r3, r7, #4
 865 0116 1946     		mov	r1, r3
 866 0118 0548     		ldr	r0, .L36
 867 011a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 868 011e 0346     		mov	r3, r0
 869              		.loc 1 338 6
 870 0120 002B     		cmp	r3, #0
 871 0122 01D0     		beq	.L35
 339:Core/Src/main.c ****   {
 340:Core/Src/main.c ****     Error_Handler();
 872              		.loc 1 340 5
 873 0124 FFF7FEFF 		bl	Error_Handler
 874              	.L35:
 341:Core/Src/main.c ****   }
 342:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 343:Core/Src/main.c **** 
 344:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 345:Core/Src/main.c **** 
 346:Core/Src/main.c **** }
 875              		.loc 1 346 1
 876 0128 00BF     		nop
 877 012a 2837     		adds	r7, r7, #40
 878              		.cfi_def_cfa_offset 8
 879 012c BD46     		mov	sp, r7
 880              		.cfi_def_cfa_register 13
 881              		@ sp needed
 882 012e 80BD     		pop	{r7, pc}
 883              	.L37:
 884              		.align	2
 885              	.L36:
 886 0130 00000000 		.word	hadc1
 887 0134 00000450 		.word	1342439424
 888 0138 02003004 		.word	70254594
 889 013c 04006008 		.word	140509188
 890 0140 000052C7 		.word	-950927360
 891              		.cfi_endproc
 892              	.LFE331:
 894              		.section	.text.MX_LPUART1_UART_Init,"ax",%progbits
 895              		.align	1
 896              		.syntax unified
 897              		.thumb
 898              		.thumb_func
 900              	MX_LPUART1_UART_Init:
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 23


 901              	.LFB332:
 347:Core/Src/main.c **** 
 348:Core/Src/main.c **** /**
 349:Core/Src/main.c ****   * @brief LPUART1 Initialization Function
 350:Core/Src/main.c ****   * @param None
 351:Core/Src/main.c ****   * @retval None
 352:Core/Src/main.c ****   */
 353:Core/Src/main.c **** static void MX_LPUART1_UART_Init(void)
 354:Core/Src/main.c **** {
 902              		.loc 1 354 1
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 0
 905              		@ frame_needed = 1, uses_anonymous_args = 0
 906 0000 80B5     		push	{r7, lr}
 907              		.cfi_def_cfa_offset 8
 908              		.cfi_offset 7, -8
 909              		.cfi_offset 14, -4
 910 0002 00AF     		add	r7, sp, #0
 911              		.cfi_def_cfa_register 7
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 0 */
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 0 */
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 1 */
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 1 */
 363:Core/Src/main.c ****   hlpuart1.Instance = LPUART1;
 912              		.loc 1 363 21
 913 0004 244B     		ldr	r3, .L44
 914 0006 254A     		ldr	r2, .L44+4
 915 0008 1A60     		str	r2, [r3]
 364:Core/Src/main.c ****   hlpuart1.Init.BaudRate = 115200;
 916              		.loc 1 364 26
 917 000a 234B     		ldr	r3, .L44
 918 000c 4FF4E132 		mov	r2, #115200
 919 0010 5A60     		str	r2, [r3, #4]
 365:Core/Src/main.c ****   hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 920              		.loc 1 365 28
 921 0012 214B     		ldr	r3, .L44
 922 0014 0022     		movs	r2, #0
 923 0016 9A60     		str	r2, [r3, #8]
 366:Core/Src/main.c ****   hlpuart1.Init.StopBits = UART_STOPBITS_1;
 924              		.loc 1 366 26
 925 0018 1F4B     		ldr	r3, .L44
 926 001a 0022     		movs	r2, #0
 927 001c DA60     		str	r2, [r3, #12]
 367:Core/Src/main.c ****   hlpuart1.Init.Parity = UART_PARITY_NONE;
 928              		.loc 1 367 24
 929 001e 1E4B     		ldr	r3, .L44
 930 0020 0022     		movs	r2, #0
 931 0022 1A61     		str	r2, [r3, #16]
 368:Core/Src/main.c ****   hlpuart1.Init.Mode = UART_MODE_TX_RX;
 932              		.loc 1 368 22
 933 0024 1C4B     		ldr	r3, .L44
 934 0026 0C22     		movs	r2, #12
 935 0028 5A61     		str	r2, [r3, #20]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 24


 369:Core/Src/main.c ****   hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 936              		.loc 1 369 27
 937 002a 1B4B     		ldr	r3, .L44
 938 002c 0022     		movs	r2, #0
 939 002e 9A61     		str	r2, [r3, #24]
 370:Core/Src/main.c ****   hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 940              		.loc 1 370 32
 941 0030 194B     		ldr	r3, .L44
 942 0032 0022     		movs	r2, #0
 943 0034 1A62     		str	r2, [r3, #32]
 371:Core/Src/main.c ****   hlpuart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 944              		.loc 1 371 32
 945 0036 184B     		ldr	r3, .L44
 946 0038 0022     		movs	r2, #0
 947 003a 5A62     		str	r2, [r3, #36]
 372:Core/Src/main.c ****   hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_RXOVERRUNDISABLE_INIT;
 948              		.loc 1 372 40
 949 003c 164B     		ldr	r3, .L44
 950 003e 1022     		movs	r2, #16
 951 0040 9A62     		str	r2, [r3, #40]
 373:Core/Src/main.c ****   hlpuart1.AdvancedInit.OverrunDisable = UART_ADVFEATURE_OVERRUN_DISABLE;
 952              		.loc 1 373 40
 953 0042 154B     		ldr	r3, .L44
 954 0044 4FF48052 		mov	r2, #4096
 955 0048 DA63     		str	r2, [r3, #60]
 374:Core/Src/main.c ****   hlpuart1.FifoMode = UART_FIFOMODE_DISABLE;
 956              		.loc 1 374 21
 957 004a 134B     		ldr	r3, .L44
 958 004c 0022     		movs	r2, #0
 959 004e 5A66     		str	r2, [r3, #100]
 375:Core/Src/main.c ****   if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 960              		.loc 1 375 7
 961 0050 1148     		ldr	r0, .L44
 962 0052 FFF7FEFF 		bl	HAL_UART_Init
 963 0056 0346     		mov	r3, r0
 964              		.loc 1 375 6
 965 0058 002B     		cmp	r3, #0
 966 005a 01D0     		beq	.L39
 376:Core/Src/main.c ****   {
 377:Core/Src/main.c ****     Error_Handler();
 967              		.loc 1 377 5
 968 005c FFF7FEFF 		bl	Error_Handler
 969              	.L39:
 378:Core/Src/main.c ****   }
 379:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&hlpuart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 970              		.loc 1 379 7
 971 0060 0021     		movs	r1, #0
 972 0062 0D48     		ldr	r0, .L44
 973 0064 FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 974 0068 0346     		mov	r3, r0
 975              		.loc 1 379 6
 976 006a 002B     		cmp	r3, #0
 977 006c 01D0     		beq	.L40
 380:Core/Src/main.c ****   {
 381:Core/Src/main.c ****     Error_Handler();
 978              		.loc 1 381 5
 979 006e FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 25


 980              	.L40:
 382:Core/Src/main.c ****   }
 383:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&hlpuart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 981              		.loc 1 383 7
 982 0072 0021     		movs	r1, #0
 983 0074 0848     		ldr	r0, .L44
 984 0076 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 985 007a 0346     		mov	r3, r0
 986              		.loc 1 383 6
 987 007c 002B     		cmp	r3, #0
 988 007e 01D0     		beq	.L41
 384:Core/Src/main.c ****   {
 385:Core/Src/main.c ****     Error_Handler();
 989              		.loc 1 385 5
 990 0080 FFF7FEFF 		bl	Error_Handler
 991              	.L41:
 386:Core/Src/main.c ****   }
 387:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&hlpuart1) != HAL_OK)
 992              		.loc 1 387 7
 993 0084 0448     		ldr	r0, .L44
 994 0086 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 995 008a 0346     		mov	r3, r0
 996              		.loc 1 387 6
 997 008c 002B     		cmp	r3, #0
 998 008e 01D0     		beq	.L43
 388:Core/Src/main.c ****   {
 389:Core/Src/main.c ****     Error_Handler();
 999              		.loc 1 389 5
 1000 0090 FFF7FEFF 		bl	Error_Handler
 1001              	.L43:
 390:Core/Src/main.c ****   }
 391:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 2 */
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 2 */
 394:Core/Src/main.c **** 
 395:Core/Src/main.c **** }
 1002              		.loc 1 395 1
 1003 0094 00BF     		nop
 1004 0096 80BD     		pop	{r7, pc}
 1005              	.L45:
 1006              		.align	2
 1007              	.L44:
 1008 0098 00000000 		.word	hlpuart1
 1009 009c 00800040 		.word	1073774592
 1010              		.cfi_endproc
 1011              	.LFE332:
 1013              		.section	.text.MX_UART4_Init,"ax",%progbits
 1014              		.align	1
 1015              		.syntax unified
 1016              		.thumb
 1017              		.thumb_func
 1019              	MX_UART4_Init:
 1020              	.LFB333:
 396:Core/Src/main.c **** 
 397:Core/Src/main.c **** /**
 398:Core/Src/main.c ****   * @brief UART4 Initialization Function
 399:Core/Src/main.c ****   * @param None
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 26


 400:Core/Src/main.c ****   * @retval None
 401:Core/Src/main.c ****   */
 402:Core/Src/main.c **** static void MX_UART4_Init(void)
 403:Core/Src/main.c **** {
 1021              		.loc 1 403 1
 1022              		.cfi_startproc
 1023              		@ args = 0, pretend = 0, frame = 0
 1024              		@ frame_needed = 1, uses_anonymous_args = 0
 1025 0000 80B5     		push	{r7, lr}
 1026              		.cfi_def_cfa_offset 8
 1027              		.cfi_offset 7, -8
 1028              		.cfi_offset 14, -4
 1029 0002 00AF     		add	r7, sp, #0
 1030              		.cfi_def_cfa_register 7
 404:Core/Src/main.c **** 
 405:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 0 */
 406:Core/Src/main.c **** 
 407:Core/Src/main.c ****   /* USER CODE END UART4_Init 0 */
 408:Core/Src/main.c **** 
 409:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 1 */
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /* USER CODE END UART4_Init 1 */
 412:Core/Src/main.c ****   huart4.Instance = UART4;
 1031              		.loc 1 412 19
 1032 0004 224B     		ldr	r3, .L52
 1033 0006 234A     		ldr	r2, .L52+4
 1034 0008 1A60     		str	r2, [r3]
 413:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
 1035              		.loc 1 413 24
 1036 000a 214B     		ldr	r3, .L52
 1037 000c 4FF4E132 		mov	r2, #115200
 1038 0010 5A60     		str	r2, [r3, #4]
 414:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 1039              		.loc 1 414 26
 1040 0012 1F4B     		ldr	r3, .L52
 1041 0014 0022     		movs	r2, #0
 1042 0016 9A60     		str	r2, [r3, #8]
 415:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 1043              		.loc 1 415 24
 1044 0018 1D4B     		ldr	r3, .L52
 1045 001a 0022     		movs	r2, #0
 1046 001c DA60     		str	r2, [r3, #12]
 416:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 1047              		.loc 1 416 22
 1048 001e 1C4B     		ldr	r3, .L52
 1049 0020 0022     		movs	r2, #0
 1050 0022 1A61     		str	r2, [r3, #16]
 417:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 1051              		.loc 1 417 20
 1052 0024 1A4B     		ldr	r3, .L52
 1053 0026 0C22     		movs	r2, #12
 1054 0028 5A61     		str	r2, [r3, #20]
 418:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1055              		.loc 1 418 25
 1056 002a 194B     		ldr	r3, .L52
 1057 002c 0022     		movs	r2, #0
 1058 002e 9A61     		str	r2, [r3, #24]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 27


 419:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 1059              		.loc 1 419 28
 1060 0030 174B     		ldr	r3, .L52
 1061 0032 0022     		movs	r2, #0
 1062 0034 DA61     		str	r2, [r3, #28]
 420:Core/Src/main.c ****   huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1063              		.loc 1 420 30
 1064 0036 164B     		ldr	r3, .L52
 1065 0038 0022     		movs	r2, #0
 1066 003a 1A62     		str	r2, [r3, #32]
 421:Core/Src/main.c ****   huart4.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 1067              		.loc 1 421 30
 1068 003c 144B     		ldr	r3, .L52
 1069 003e 0022     		movs	r2, #0
 1070 0040 5A62     		str	r2, [r3, #36]
 422:Core/Src/main.c ****   huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1071              		.loc 1 422 38
 1072 0042 134B     		ldr	r3, .L52
 1073 0044 0022     		movs	r2, #0
 1074 0046 9A62     		str	r2, [r3, #40]
 423:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 1075              		.loc 1 423 7
 1076 0048 1148     		ldr	r0, .L52
 1077 004a FFF7FEFF 		bl	HAL_UART_Init
 1078 004e 0346     		mov	r3, r0
 1079              		.loc 1 423 6
 1080 0050 002B     		cmp	r3, #0
 1081 0052 01D0     		beq	.L47
 424:Core/Src/main.c ****   {
 425:Core/Src/main.c ****     Error_Handler();
 1082              		.loc 1 425 5
 1083 0054 FFF7FEFF 		bl	Error_Handler
 1084              	.L47:
 426:Core/Src/main.c ****   }
 427:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart4, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 1085              		.loc 1 427 7
 1086 0058 0021     		movs	r1, #0
 1087 005a 0D48     		ldr	r0, .L52
 1088 005c FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 1089 0060 0346     		mov	r3, r0
 1090              		.loc 1 427 6
 1091 0062 002B     		cmp	r3, #0
 1092 0064 01D0     		beq	.L48
 428:Core/Src/main.c ****   {
 429:Core/Src/main.c ****     Error_Handler();
 1093              		.loc 1 429 5
 1094 0066 FFF7FEFF 		bl	Error_Handler
 1095              	.L48:
 430:Core/Src/main.c ****   }
 431:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart4, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 1096              		.loc 1 431 7
 1097 006a 0021     		movs	r1, #0
 1098 006c 0848     		ldr	r0, .L52
 1099 006e FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 1100 0072 0346     		mov	r3, r0
 1101              		.loc 1 431 6
 1102 0074 002B     		cmp	r3, #0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 28


 1103 0076 01D0     		beq	.L49
 432:Core/Src/main.c ****   {
 433:Core/Src/main.c ****     Error_Handler();
 1104              		.loc 1 433 5
 1105 0078 FFF7FEFF 		bl	Error_Handler
 1106              	.L49:
 434:Core/Src/main.c ****   }
 435:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&huart4) != HAL_OK)
 1107              		.loc 1 435 7
 1108 007c 0448     		ldr	r0, .L52
 1109 007e FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 1110 0082 0346     		mov	r3, r0
 1111              		.loc 1 435 6
 1112 0084 002B     		cmp	r3, #0
 1113 0086 01D0     		beq	.L51
 436:Core/Src/main.c ****   {
 437:Core/Src/main.c ****     Error_Handler();
 1114              		.loc 1 437 5
 1115 0088 FFF7FEFF 		bl	Error_Handler
 1116              	.L51:
 438:Core/Src/main.c ****   }
 439:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 2 */
 440:Core/Src/main.c **** 
 441:Core/Src/main.c ****   /* USER CODE END UART4_Init 2 */
 442:Core/Src/main.c **** 
 443:Core/Src/main.c **** }
 1117              		.loc 1 443 1
 1118 008c 00BF     		nop
 1119 008e 80BD     		pop	{r7, pc}
 1120              	.L53:
 1121              		.align	2
 1122              	.L52:
 1123 0090 00000000 		.word	huart4
 1124 0094 004C0040 		.word	1073761280
 1125              		.cfi_endproc
 1126              	.LFE333:
 1128              		.section	.text.MX_TIM3_Init,"ax",%progbits
 1129              		.align	1
 1130              		.syntax unified
 1131              		.thumb
 1132              		.thumb_func
 1134              	MX_TIM3_Init:
 1135              	.LFB334:
 444:Core/Src/main.c **** 
 445:Core/Src/main.c **** /**
 446:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 447:Core/Src/main.c ****   * @param None
 448:Core/Src/main.c ****   * @retval None
 449:Core/Src/main.c ****   */
 450:Core/Src/main.c **** static void MX_TIM3_Init(void)
 451:Core/Src/main.c **** {
 1136              		.loc 1 451 1
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 56
 1139              		@ frame_needed = 1, uses_anonymous_args = 0
 1140 0000 80B5     		push	{r7, lr}
 1141              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 29


 1142              		.cfi_offset 7, -8
 1143              		.cfi_offset 14, -4
 1144 0002 8EB0     		sub	sp, sp, #56
 1145              		.cfi_def_cfa_offset 64
 1146 0004 00AF     		add	r7, sp, #0
 1147              		.cfi_def_cfa_register 7
 452:Core/Src/main.c **** 
 453:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 454:Core/Src/main.c **** 
 455:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1148              		.loc 1 457 26
 1149 0006 07F12803 		add	r3, r7, #40
 1150 000a 0022     		movs	r2, #0
 1151 000c 1A60     		str	r2, [r3]
 1152 000e 5A60     		str	r2, [r3, #4]
 1153 0010 9A60     		str	r2, [r3, #8]
 1154 0012 DA60     		str	r2, [r3, #12]
 458:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1155              		.loc 1 458 27
 1156 0014 07F11C03 		add	r3, r7, #28
 1157 0018 0022     		movs	r2, #0
 1158 001a 1A60     		str	r2, [r3]
 1159 001c 5A60     		str	r2, [r3, #4]
 1160 001e 9A60     		str	r2, [r3, #8]
 459:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1161              		.loc 1 459 22
 1162 0020 3B46     		mov	r3, r7
 1163 0022 0022     		movs	r2, #0
 1164 0024 1A60     		str	r2, [r3]
 1165 0026 5A60     		str	r2, [r3, #4]
 1166 0028 9A60     		str	r2, [r3, #8]
 1167 002a DA60     		str	r2, [r3, #12]
 1168 002c 1A61     		str	r2, [r3, #16]
 1169 002e 5A61     		str	r2, [r3, #20]
 1170 0030 9A61     		str	r2, [r3, #24]
 460:Core/Src/main.c **** 
 461:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 464:Core/Src/main.c ****   htim3.Instance = TIM3;
 1171              		.loc 1 464 18
 1172 0032 374B     		ldr	r3, .L62
 1173 0034 374A     		ldr	r2, .L62+4
 1174 0036 1A60     		str	r2, [r3]
 465:Core/Src/main.c ****   htim3.Init.Prescaler = 119;
 1175              		.loc 1 465 24
 1176 0038 354B     		ldr	r3, .L62
 1177 003a 7722     		movs	r2, #119
 1178 003c 5A60     		str	r2, [r3, #4]
 466:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1179              		.loc 1 466 26
 1180 003e 344B     		ldr	r3, .L62
 1181 0040 0022     		movs	r2, #0
 1182 0042 9A60     		str	r2, [r3, #8]
 467:Core/Src/main.c ****   htim3.Init.Period = 255;
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 30


 1183              		.loc 1 467 21
 1184 0044 324B     		ldr	r3, .L62
 1185 0046 FF22     		movs	r2, #255
 1186 0048 DA60     		str	r2, [r3, #12]
 468:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1187              		.loc 1 468 28
 1188 004a 314B     		ldr	r3, .L62
 1189 004c 0022     		movs	r2, #0
 1190 004e 1A61     		str	r2, [r3, #16]
 469:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1191              		.loc 1 469 32
 1192 0050 2F4B     		ldr	r3, .L62
 1193 0052 8022     		movs	r2, #128
 1194 0054 9A61     		str	r2, [r3, #24]
 470:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1195              		.loc 1 470 7
 1196 0056 2E48     		ldr	r0, .L62
 1197 0058 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1198 005c 0346     		mov	r3, r0
 1199              		.loc 1 470 6
 1200 005e 002B     		cmp	r3, #0
 1201 0060 01D0     		beq	.L55
 471:Core/Src/main.c ****   {
 472:Core/Src/main.c ****     Error_Handler();
 1202              		.loc 1 472 5
 1203 0062 FFF7FEFF 		bl	Error_Handler
 1204              	.L55:
 473:Core/Src/main.c ****   }
 474:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1205              		.loc 1 474 34
 1206 0066 4FF48053 		mov	r3, #4096
 1207 006a BB62     		str	r3, [r7, #40]
 475:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1208              		.loc 1 475 7
 1209 006c 07F12803 		add	r3, r7, #40
 1210 0070 1946     		mov	r1, r3
 1211 0072 2748     		ldr	r0, .L62
 1212 0074 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1213 0078 0346     		mov	r3, r0
 1214              		.loc 1 475 6
 1215 007a 002B     		cmp	r3, #0
 1216 007c 01D0     		beq	.L56
 476:Core/Src/main.c ****   {
 477:Core/Src/main.c ****     Error_Handler();
 1217              		.loc 1 477 5
 1218 007e FFF7FEFF 		bl	Error_Handler
 1219              	.L56:
 478:Core/Src/main.c ****   }
 479:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 1220              		.loc 1 479 7
 1221 0082 2348     		ldr	r0, .L62
 1222 0084 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1223 0088 0346     		mov	r3, r0
 1224              		.loc 1 479 6
 1225 008a 002B     		cmp	r3, #0
 1226 008c 01D0     		beq	.L57
 480:Core/Src/main.c ****   {
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 31


 481:Core/Src/main.c ****     Error_Handler();
 1227              		.loc 1 481 5
 1228 008e FFF7FEFF 		bl	Error_Handler
 1229              	.L57:
 482:Core/Src/main.c ****   }
 483:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1230              		.loc 1 483 37
 1231 0092 0023     		movs	r3, #0
 1232 0094 FB61     		str	r3, [r7, #28]
 484:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1233              		.loc 1 484 33
 1234 0096 0023     		movs	r3, #0
 1235 0098 7B62     		str	r3, [r7, #36]
 485:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1236              		.loc 1 485 7
 1237 009a 07F11C03 		add	r3, r7, #28
 1238 009e 1946     		mov	r1, r3
 1239 00a0 1B48     		ldr	r0, .L62
 1240 00a2 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1241 00a6 0346     		mov	r3, r0
 1242              		.loc 1 485 6
 1243 00a8 002B     		cmp	r3, #0
 1244 00aa 01D0     		beq	.L58
 486:Core/Src/main.c ****   {
 487:Core/Src/main.c ****     Error_Handler();
 1245              		.loc 1 487 5
 1246 00ac FFF7FEFF 		bl	Error_Handler
 1247              	.L58:
 488:Core/Src/main.c ****   }
 489:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 1248              		.loc 1 489 20
 1249 00b0 6023     		movs	r3, #96
 1250 00b2 3B60     		str	r3, [r7]
 490:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1251              		.loc 1 490 19
 1252 00b4 0023     		movs	r3, #0
 1253 00b6 7B60     		str	r3, [r7, #4]
 491:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1254              		.loc 1 491 24
 1255 00b8 0023     		movs	r3, #0
 1256 00ba BB60     		str	r3, [r7, #8]
 492:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1257              		.loc 1 492 24
 1258 00bc 0023     		movs	r3, #0
 1259 00be 3B61     		str	r3, [r7, #16]
 493:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1260              		.loc 1 493 7
 1261 00c0 3B46     		mov	r3, r7
 1262 00c2 0022     		movs	r2, #0
 1263 00c4 1946     		mov	r1, r3
 1264 00c6 1248     		ldr	r0, .L62
 1265 00c8 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1266 00cc 0346     		mov	r3, r0
 1267              		.loc 1 493 6
 1268 00ce 002B     		cmp	r3, #0
 1269 00d0 01D0     		beq	.L59
 494:Core/Src/main.c ****   {
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 32


 495:Core/Src/main.c ****     Error_Handler();
 1270              		.loc 1 495 5
 1271 00d2 FFF7FEFF 		bl	Error_Handler
 1272              	.L59:
 496:Core/Src/main.c ****   }
 497:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 1273              		.loc 1 497 7
 1274 00d6 3B46     		mov	r3, r7
 1275 00d8 0422     		movs	r2, #4
 1276 00da 1946     		mov	r1, r3
 1277 00dc 0C48     		ldr	r0, .L62
 1278 00de FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1279 00e2 0346     		mov	r3, r0
 1280              		.loc 1 497 6
 1281 00e4 002B     		cmp	r3, #0
 1282 00e6 01D0     		beq	.L60
 498:Core/Src/main.c ****   {
 499:Core/Src/main.c ****     Error_Handler();
 1283              		.loc 1 499 5
 1284 00e8 FFF7FEFF 		bl	Error_Handler
 1285              	.L60:
 500:Core/Src/main.c ****   }
 501:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 1286              		.loc 1 501 7
 1287 00ec 3B46     		mov	r3, r7
 1288 00ee 0822     		movs	r2, #8
 1289 00f0 1946     		mov	r1, r3
 1290 00f2 0748     		ldr	r0, .L62
 1291 00f4 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1292 00f8 0346     		mov	r3, r0
 1293              		.loc 1 501 6
 1294 00fa 002B     		cmp	r3, #0
 1295 00fc 01D0     		beq	.L61
 502:Core/Src/main.c ****   {
 503:Core/Src/main.c ****     Error_Handler();
 1296              		.loc 1 503 5
 1297 00fe FFF7FEFF 		bl	Error_Handler
 1298              	.L61:
 504:Core/Src/main.c ****   }
 505:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 506:Core/Src/main.c **** 
 507:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 508:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 1299              		.loc 1 508 3
 1300 0102 0348     		ldr	r0, .L62
 1301 0104 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 509:Core/Src/main.c **** 
 510:Core/Src/main.c **** }
 1302              		.loc 1 510 1
 1303 0108 00BF     		nop
 1304 010a 3837     		adds	r7, r7, #56
 1305              		.cfi_def_cfa_offset 8
 1306 010c BD46     		mov	sp, r7
 1307              		.cfi_def_cfa_register 13
 1308              		@ sp needed
 1309 010e 80BD     		pop	{r7, pc}
 1310              	.L63:
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 33


 1311              		.align	2
 1312              	.L62:
 1313 0110 00000000 		.word	htim3
 1314 0114 00040040 		.word	1073742848
 1315              		.cfi_endproc
 1316              	.LFE334:
 1318              		.section	.text.MX_TIM4_Init,"ax",%progbits
 1319              		.align	1
 1320              		.syntax unified
 1321              		.thumb
 1322              		.thumb_func
 1324              	MX_TIM4_Init:
 1325              	.LFB335:
 511:Core/Src/main.c **** 
 512:Core/Src/main.c **** /**
 513:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 514:Core/Src/main.c ****   * @param None
 515:Core/Src/main.c ****   * @retval None
 516:Core/Src/main.c ****   */
 517:Core/Src/main.c **** static void MX_TIM4_Init(void)
 518:Core/Src/main.c **** {
 1326              		.loc 1 518 1
 1327              		.cfi_startproc
 1328              		@ args = 0, pretend = 0, frame = 32
 1329              		@ frame_needed = 1, uses_anonymous_args = 0
 1330 0000 80B5     		push	{r7, lr}
 1331              		.cfi_def_cfa_offset 8
 1332              		.cfi_offset 7, -8
 1333              		.cfi_offset 14, -4
 1334 0002 88B0     		sub	sp, sp, #32
 1335              		.cfi_def_cfa_offset 40
 1336 0004 00AF     		add	r7, sp, #0
 1337              		.cfi_def_cfa_register 7
 519:Core/Src/main.c **** 
 520:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 521:Core/Src/main.c **** 
 522:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 523:Core/Src/main.c **** 
 524:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1338              		.loc 1 524 26
 1339 0006 07F11003 		add	r3, r7, #16
 1340 000a 0022     		movs	r2, #0
 1341 000c 1A60     		str	r2, [r3]
 1342 000e 5A60     		str	r2, [r3, #4]
 1343 0010 9A60     		str	r2, [r3, #8]
 1344 0012 DA60     		str	r2, [r3, #12]
 525:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1345              		.loc 1 525 27
 1346 0014 3B1D     		adds	r3, r7, #4
 1347 0016 0022     		movs	r2, #0
 1348 0018 1A60     		str	r2, [r3]
 1349 001a 5A60     		str	r2, [r3, #4]
 1350 001c 9A60     		str	r2, [r3, #8]
 526:Core/Src/main.c **** 
 527:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 528:Core/Src/main.c **** 
 529:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 34


 530:Core/Src/main.c ****   htim4.Instance = TIM4;
 1351              		.loc 1 530 18
 1352 001e 1D4B     		ldr	r3, .L69
 1353 0020 1D4A     		ldr	r2, .L69+4
 1354 0022 1A60     		str	r2, [r3]
 531:Core/Src/main.c ****   htim4.Init.Prescaler = 119;
 1355              		.loc 1 531 24
 1356 0024 1B4B     		ldr	r3, .L69
 1357 0026 7722     		movs	r2, #119
 1358 0028 5A60     		str	r2, [r3, #4]
 532:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 1359              		.loc 1 532 26
 1360 002a 1A4B     		ldr	r3, .L69
 1361 002c 0022     		movs	r2, #0
 1362 002e 9A60     		str	r2, [r3, #8]
 533:Core/Src/main.c ****   htim4.Init.Period = 65535;
 1363              		.loc 1 533 21
 1364 0030 184B     		ldr	r3, .L69
 1365 0032 4FF6FF72 		movw	r2, #65535
 1366 0036 DA60     		str	r2, [r3, #12]
 534:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1367              		.loc 1 534 28
 1368 0038 164B     		ldr	r3, .L69
 1369 003a 0022     		movs	r2, #0
 1370 003c 1A61     		str	r2, [r3, #16]
 535:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1371              		.loc 1 535 32
 1372 003e 154B     		ldr	r3, .L69
 1373 0040 0022     		movs	r2, #0
 1374 0042 9A61     		str	r2, [r3, #24]
 536:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 1375              		.loc 1 536 7
 1376 0044 1348     		ldr	r0, .L69
 1377 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1378 004a 0346     		mov	r3, r0
 1379              		.loc 1 536 6
 1380 004c 002B     		cmp	r3, #0
 1381 004e 01D0     		beq	.L65
 537:Core/Src/main.c ****   {
 538:Core/Src/main.c ****     Error_Handler();
 1382              		.loc 1 538 5
 1383 0050 FFF7FEFF 		bl	Error_Handler
 1384              	.L65:
 539:Core/Src/main.c ****   }
 540:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1385              		.loc 1 540 34
 1386 0054 4FF48053 		mov	r3, #4096
 1387 0058 3B61     		str	r3, [r7, #16]
 541:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 1388              		.loc 1 541 7
 1389 005a 07F11003 		add	r3, r7, #16
 1390 005e 1946     		mov	r1, r3
 1391 0060 0C48     		ldr	r0, .L69
 1392 0062 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1393 0066 0346     		mov	r3, r0
 1394              		.loc 1 541 6
 1395 0068 002B     		cmp	r3, #0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 35


 1396 006a 01D0     		beq	.L66
 542:Core/Src/main.c ****   {
 543:Core/Src/main.c ****     Error_Handler();
 1397              		.loc 1 543 5
 1398 006c FFF7FEFF 		bl	Error_Handler
 1399              	.L66:
 544:Core/Src/main.c ****   }
 545:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1400              		.loc 1 545 37
 1401 0070 0023     		movs	r3, #0
 1402 0072 7B60     		str	r3, [r7, #4]
 546:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1403              		.loc 1 546 33
 1404 0074 0023     		movs	r3, #0
 1405 0076 FB60     		str	r3, [r7, #12]
 547:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 1406              		.loc 1 547 7
 1407 0078 3B1D     		adds	r3, r7, #4
 1408 007a 1946     		mov	r1, r3
 1409 007c 0548     		ldr	r0, .L69
 1410 007e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1411 0082 0346     		mov	r3, r0
 1412              		.loc 1 547 6
 1413 0084 002B     		cmp	r3, #0
 1414 0086 01D0     		beq	.L68
 548:Core/Src/main.c ****   {
 549:Core/Src/main.c ****     Error_Handler();
 1415              		.loc 1 549 5
 1416 0088 FFF7FEFF 		bl	Error_Handler
 1417              	.L68:
 550:Core/Src/main.c ****   }
 551:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 552:Core/Src/main.c **** 
 553:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 554:Core/Src/main.c **** 
 555:Core/Src/main.c **** }
 1418              		.loc 1 555 1
 1419 008c 00BF     		nop
 1420 008e 2037     		adds	r7, r7, #32
 1421              		.cfi_def_cfa_offset 8
 1422 0090 BD46     		mov	sp, r7
 1423              		.cfi_def_cfa_register 13
 1424              		@ sp needed
 1425 0092 80BD     		pop	{r7, pc}
 1426              	.L70:
 1427              		.align	2
 1428              	.L69:
 1429 0094 00000000 		.word	htim4
 1430 0098 00080040 		.word	1073743872
 1431              		.cfi_endproc
 1432              	.LFE335:
 1434              		.section	.text.MX_TIM5_Init,"ax",%progbits
 1435              		.align	1
 1436              		.syntax unified
 1437              		.thumb
 1438              		.thumb_func
 1440              	MX_TIM5_Init:
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 36


 1441              	.LFB336:
 556:Core/Src/main.c **** 
 557:Core/Src/main.c **** /**
 558:Core/Src/main.c ****   * @brief TIM5 Initialization Function
 559:Core/Src/main.c ****   * @param None
 560:Core/Src/main.c ****   * @retval None
 561:Core/Src/main.c ****   */
 562:Core/Src/main.c **** static void MX_TIM5_Init(void)
 563:Core/Src/main.c **** {
 1442              		.loc 1 563 1
 1443              		.cfi_startproc
 1444              		@ args = 0, pretend = 0, frame = 32
 1445              		@ frame_needed = 1, uses_anonymous_args = 0
 1446 0000 80B5     		push	{r7, lr}
 1447              		.cfi_def_cfa_offset 8
 1448              		.cfi_offset 7, -8
 1449              		.cfi_offset 14, -4
 1450 0002 88B0     		sub	sp, sp, #32
 1451              		.cfi_def_cfa_offset 40
 1452 0004 00AF     		add	r7, sp, #0
 1453              		.cfi_def_cfa_register 7
 564:Core/Src/main.c **** 
 565:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 0 */
 566:Core/Src/main.c **** 
 567:Core/Src/main.c ****   /* USER CODE END TIM5_Init 0 */
 568:Core/Src/main.c **** 
 569:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1454              		.loc 1 569 26
 1455 0006 07F11003 		add	r3, r7, #16
 1456 000a 0022     		movs	r2, #0
 1457 000c 1A60     		str	r2, [r3]
 1458 000e 5A60     		str	r2, [r3, #4]
 1459 0010 9A60     		str	r2, [r3, #8]
 1460 0012 DA60     		str	r2, [r3, #12]
 570:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1461              		.loc 1 570 27
 1462 0014 3B1D     		adds	r3, r7, #4
 1463 0016 0022     		movs	r2, #0
 1464 0018 1A60     		str	r2, [r3]
 1465 001a 5A60     		str	r2, [r3, #4]
 1466 001c 9A60     		str	r2, [r3, #8]
 571:Core/Src/main.c **** 
 572:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 1 */
 573:Core/Src/main.c **** 
 574:Core/Src/main.c ****   /* USER CODE END TIM5_Init 1 */
 575:Core/Src/main.c ****   htim5.Instance = TIM5;
 1467              		.loc 1 575 18
 1468 001e 1D4B     		ldr	r3, .L76
 1469 0020 1D4A     		ldr	r2, .L76+4
 1470 0022 1A60     		str	r2, [r3]
 576:Core/Src/main.c ****   htim5.Init.Prescaler = 119;
 1471              		.loc 1 576 24
 1472 0024 1B4B     		ldr	r3, .L76
 1473 0026 7722     		movs	r2, #119
 1474 0028 5A60     		str	r2, [r3, #4]
 577:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 1475              		.loc 1 577 26
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 37


 1476 002a 1A4B     		ldr	r3, .L76
 1477 002c 0022     		movs	r2, #0
 1478 002e 9A60     		str	r2, [r3, #8]
 578:Core/Src/main.c ****   htim5.Init.Period = 4294967295;
 1479              		.loc 1 578 21
 1480 0030 184B     		ldr	r3, .L76
 1481 0032 4FF0FF32 		mov	r2, #-1
 1482 0036 DA60     		str	r2, [r3, #12]
 579:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1483              		.loc 1 579 28
 1484 0038 164B     		ldr	r3, .L76
 1485 003a 0022     		movs	r2, #0
 1486 003c 1A61     		str	r2, [r3, #16]
 580:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1487              		.loc 1 580 32
 1488 003e 154B     		ldr	r3, .L76
 1489 0040 0022     		movs	r2, #0
 1490 0042 9A61     		str	r2, [r3, #24]
 581:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 1491              		.loc 1 581 7
 1492 0044 1348     		ldr	r0, .L76
 1493 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1494 004a 0346     		mov	r3, r0
 1495              		.loc 1 581 6
 1496 004c 002B     		cmp	r3, #0
 1497 004e 01D0     		beq	.L72
 582:Core/Src/main.c ****   {
 583:Core/Src/main.c ****     Error_Handler();
 1498              		.loc 1 583 5
 1499 0050 FFF7FEFF 		bl	Error_Handler
 1500              	.L72:
 584:Core/Src/main.c ****   }
 585:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1501              		.loc 1 585 34
 1502 0054 4FF48053 		mov	r3, #4096
 1503 0058 3B61     		str	r3, [r7, #16]
 586:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 1504              		.loc 1 586 7
 1505 005a 07F11003 		add	r3, r7, #16
 1506 005e 1946     		mov	r1, r3
 1507 0060 0C48     		ldr	r0, .L76
 1508 0062 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1509 0066 0346     		mov	r3, r0
 1510              		.loc 1 586 6
 1511 0068 002B     		cmp	r3, #0
 1512 006a 01D0     		beq	.L73
 587:Core/Src/main.c ****   {
 588:Core/Src/main.c ****     Error_Handler();
 1513              		.loc 1 588 5
 1514 006c FFF7FEFF 		bl	Error_Handler
 1515              	.L73:
 589:Core/Src/main.c ****   }
 590:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1516              		.loc 1 590 37
 1517 0070 0023     		movs	r3, #0
 1518 0072 7B60     		str	r3, [r7, #4]
 591:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 38


 1519              		.loc 1 591 33
 1520 0074 0023     		movs	r3, #0
 1521 0076 FB60     		str	r3, [r7, #12]
 592:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 1522              		.loc 1 592 7
 1523 0078 3B1D     		adds	r3, r7, #4
 1524 007a 1946     		mov	r1, r3
 1525 007c 0548     		ldr	r0, .L76
 1526 007e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1527 0082 0346     		mov	r3, r0
 1528              		.loc 1 592 6
 1529 0084 002B     		cmp	r3, #0
 1530 0086 01D0     		beq	.L75
 593:Core/Src/main.c ****   {
 594:Core/Src/main.c ****     Error_Handler();
 1531              		.loc 1 594 5
 1532 0088 FFF7FEFF 		bl	Error_Handler
 1533              	.L75:
 595:Core/Src/main.c ****   }
 596:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 2 */
 597:Core/Src/main.c **** 
 598:Core/Src/main.c ****   /* USER CODE END TIM5_Init 2 */
 599:Core/Src/main.c **** 
 600:Core/Src/main.c **** }
 1534              		.loc 1 600 1
 1535 008c 00BF     		nop
 1536 008e 2037     		adds	r7, r7, #32
 1537              		.cfi_def_cfa_offset 8
 1538 0090 BD46     		mov	sp, r7
 1539              		.cfi_def_cfa_register 13
 1540              		@ sp needed
 1541 0092 80BD     		pop	{r7, pc}
 1542              	.L77:
 1543              		.align	2
 1544              	.L76:
 1545 0094 00000000 		.word	htim5
 1546 0098 000C0040 		.word	1073744896
 1547              		.cfi_endproc
 1548              	.LFE336:
 1550              		.section	.text.MX_USB_OTG_FS_PCD_Init,"ax",%progbits
 1551              		.align	1
 1552              		.syntax unified
 1553              		.thumb
 1554              		.thumb_func
 1556              	MX_USB_OTG_FS_PCD_Init:
 1557              	.LFB337:
 601:Core/Src/main.c **** 
 602:Core/Src/main.c **** /**
 603:Core/Src/main.c ****   * @brief USB_OTG_FS Initialization Function
 604:Core/Src/main.c ****   * @param None
 605:Core/Src/main.c ****   * @retval None
 606:Core/Src/main.c ****   */
 607:Core/Src/main.c **** static void MX_USB_OTG_FS_PCD_Init(void)
 608:Core/Src/main.c **** {
 1558              		.loc 1 608 1
 1559              		.cfi_startproc
 1560              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 39


 1561              		@ frame_needed = 1, uses_anonymous_args = 0
 1562 0000 80B5     		push	{r7, lr}
 1563              		.cfi_def_cfa_offset 8
 1564              		.cfi_offset 7, -8
 1565              		.cfi_offset 14, -4
 1566 0002 00AF     		add	r7, sp, #0
 1567              		.cfi_def_cfa_register 7
 609:Core/Src/main.c **** 
 610:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 0 */
 611:Core/Src/main.c **** 
 612:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 0 */
 613:Core/Src/main.c **** 
 614:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 1 */
 615:Core/Src/main.c **** 
 616:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 1 */
 617:Core/Src/main.c ****   hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 1568              		.loc 1 617 28
 1569 0004 124B     		ldr	r3, .L81
 1570 0006 4FF0A042 		mov	r2, #1342177280
 1571 000a 1A60     		str	r2, [r3]
 618:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 1572              		.loc 1 618 38
 1573 000c 104B     		ldr	r3, .L81
 1574 000e 0622     		movs	r2, #6
 1575 0010 5A60     		str	r2, [r3, #4]
 619:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 1576              		.loc 1 619 35
 1577 0012 0F4B     		ldr	r3, .L81
 1578 0014 0222     		movs	r2, #2
 1579 0016 9A61     		str	r2, [r3, #24]
 620:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 1580              		.loc 1 620 35
 1581 0018 0D4B     		ldr	r3, .L81
 1582 001a 0122     		movs	r2, #1
 1583 001c DA61     		str	r2, [r3, #28]
 621:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 1584              		.loc 1 621 41
 1585 001e 0C4B     		ldr	r3, .L81
 1586 0020 0022     		movs	r2, #0
 1587 0022 1A62     		str	r2, [r3, #32]
 622:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 1588              		.loc 1 622 35
 1589 0024 0A4B     		ldr	r3, .L81
 1590 0026 0022     		movs	r2, #0
 1591 0028 5A62     		str	r2, [r3, #36]
 623:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.battery_charging_enable = ENABLE;
 1592              		.loc 1 623 48
 1593 002a 094B     		ldr	r3, .L81
 1594 002c 0122     		movs	r2, #1
 1595 002e 9A62     		str	r2, [r3, #40]
 624:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 1596              		.loc 1 624 42
 1597 0030 074B     		ldr	r3, .L81
 1598 0032 0022     		movs	r2, #0
 1599 0034 1A63     		str	r2, [r3, #48]
 625:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = ENABLE;
 1600              		.loc 1 625 44
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 40


 1601 0036 064B     		ldr	r3, .L81
 1602 0038 0122     		movs	r2, #1
 1603 003a DA62     		str	r2, [r3, #44]
 626:Core/Src/main.c ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 1604              		.loc 1 626 7
 1605 003c 0448     		ldr	r0, .L81
 1606 003e FFF7FEFF 		bl	HAL_PCD_Init
 1607 0042 0346     		mov	r3, r0
 1608              		.loc 1 626 6
 1609 0044 002B     		cmp	r3, #0
 1610 0046 01D0     		beq	.L80
 627:Core/Src/main.c ****   {
 628:Core/Src/main.c ****     Error_Handler();
 1611              		.loc 1 628 5
 1612 0048 FFF7FEFF 		bl	Error_Handler
 1613              	.L80:
 629:Core/Src/main.c ****   }
 630:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 2 */
 631:Core/Src/main.c **** 
 632:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 2 */
 633:Core/Src/main.c **** 
 634:Core/Src/main.c **** }
 1614              		.loc 1 634 1
 1615 004c 00BF     		nop
 1616 004e 80BD     		pop	{r7, pc}
 1617              	.L82:
 1618              		.align	2
 1619              	.L81:
 1620 0050 00000000 		.word	hpcd_USB_OTG_FS
 1621              		.cfi_endproc
 1622              	.LFE337:
 1624              		.section	.text.MX_DMA_Init,"ax",%progbits
 1625              		.align	1
 1626              		.syntax unified
 1627              		.thumb
 1628              		.thumb_func
 1630              	MX_DMA_Init:
 1631              	.LFB338:
 635:Core/Src/main.c **** 
 636:Core/Src/main.c **** /**
 637:Core/Src/main.c ****   * Enable DMA controller clock
 638:Core/Src/main.c ****   */
 639:Core/Src/main.c **** static void MX_DMA_Init(void)
 640:Core/Src/main.c **** {
 1632              		.loc 1 640 1
 1633              		.cfi_startproc
 1634              		@ args = 0, pretend = 0, frame = 8
 1635              		@ frame_needed = 1, uses_anonymous_args = 0
 1636 0000 80B5     		push	{r7, lr}
 1637              		.cfi_def_cfa_offset 8
 1638              		.cfi_offset 7, -8
 1639              		.cfi_offset 14, -4
 1640 0002 82B0     		sub	sp, sp, #8
 1641              		.cfi_def_cfa_offset 16
 1642 0004 00AF     		add	r7, sp, #0
 1643              		.cfi_def_cfa_register 7
 1644              	.LBB4:
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 41


 641:Core/Src/main.c **** 
 642:Core/Src/main.c ****   /* DMA controller clock enable */
 643:Core/Src/main.c ****   __HAL_RCC_DMAMUX1_CLK_ENABLE();
 1645              		.loc 1 643 3
 1646 0006 164B     		ldr	r3, .L84
 1647 0008 9B6C     		ldr	r3, [r3, #72]
 1648 000a 154A     		ldr	r2, .L84
 1649 000c 43F00403 		orr	r3, r3, #4
 1650 0010 9364     		str	r3, [r2, #72]
 1651 0012 134B     		ldr	r3, .L84
 1652 0014 9B6C     		ldr	r3, [r3, #72]
 1653 0016 03F00403 		and	r3, r3, #4
 1654 001a 7B60     		str	r3, [r7, #4]
 1655 001c 7B68     		ldr	r3, [r7, #4]
 1656              	.LBE4:
 1657              	.LBB5:
 644:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 1658              		.loc 1 644 3
 1659 001e 104B     		ldr	r3, .L84
 1660 0020 9B6C     		ldr	r3, [r3, #72]
 1661 0022 0F4A     		ldr	r2, .L84
 1662 0024 43F00103 		orr	r3, r3, #1
 1663 0028 9364     		str	r3, [r2, #72]
 1664 002a 0D4B     		ldr	r3, .L84
 1665 002c 9B6C     		ldr	r3, [r3, #72]
 1666 002e 03F00103 		and	r3, r3, #1
 1667 0032 3B60     		str	r3, [r7]
 1668 0034 3B68     		ldr	r3, [r7]
 1669              	.LBE5:
 645:Core/Src/main.c **** 
 646:Core/Src/main.c ****   /* DMA interrupt init */
 647:Core/Src/main.c ****   /* DMA1_Channel1_IRQn interrupt configuration */
 648:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 1670              		.loc 1 648 3
 1671 0036 0022     		movs	r2, #0
 1672 0038 0021     		movs	r1, #0
 1673 003a 0B20     		movs	r0, #11
 1674 003c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 649:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 1675              		.loc 1 649 3
 1676 0040 0B20     		movs	r0, #11
 1677 0042 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 650:Core/Src/main.c ****   /* DMA1_Channel2_IRQn interrupt configuration */
 651:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 0, 0);
 1678              		.loc 1 651 3
 1679 0046 0022     		movs	r2, #0
 1680 0048 0021     		movs	r1, #0
 1681 004a 0C20     		movs	r0, #12
 1682 004c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 652:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 1683              		.loc 1 652 3
 1684 0050 0C20     		movs	r0, #12
 1685 0052 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 653:Core/Src/main.c **** 
 654:Core/Src/main.c **** }
 1686              		.loc 1 654 1
 1687 0056 00BF     		nop
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 42


 1688 0058 0837     		adds	r7, r7, #8
 1689              		.cfi_def_cfa_offset 8
 1690 005a BD46     		mov	sp, r7
 1691              		.cfi_def_cfa_register 13
 1692              		@ sp needed
 1693 005c 80BD     		pop	{r7, pc}
 1694              	.L85:
 1695 005e 00BF     		.align	2
 1696              	.L84:
 1697 0060 00100240 		.word	1073876992
 1698              		.cfi_endproc
 1699              	.LFE338:
 1701              		.section	.text.MX_GPIO_Init,"ax",%progbits
 1702              		.align	1
 1703              		.syntax unified
 1704              		.thumb
 1705              		.thumb_func
 1707              	MX_GPIO_Init:
 1708              	.LFB339:
 655:Core/Src/main.c **** 
 656:Core/Src/main.c **** /**
 657:Core/Src/main.c ****   * @brief GPIO Initialization Function
 658:Core/Src/main.c ****   * @param None
 659:Core/Src/main.c ****   * @retval None
 660:Core/Src/main.c ****   */
 661:Core/Src/main.c **** static void MX_GPIO_Init(void)
 662:Core/Src/main.c **** {
 1709              		.loc 1 662 1
 1710              		.cfi_startproc
 1711              		@ args = 0, pretend = 0, frame = 48
 1712              		@ frame_needed = 1, uses_anonymous_args = 0
 1713 0000 80B5     		push	{r7, lr}
 1714              		.cfi_def_cfa_offset 8
 1715              		.cfi_offset 7, -8
 1716              		.cfi_offset 14, -4
 1717 0002 8CB0     		sub	sp, sp, #48
 1718              		.cfi_def_cfa_offset 56
 1719 0004 00AF     		add	r7, sp, #0
 1720              		.cfi_def_cfa_register 7
 663:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 1721              		.loc 1 663 20
 1722 0006 07F11C03 		add	r3, r7, #28
 1723 000a 0022     		movs	r2, #0
 1724 000c 1A60     		str	r2, [r3]
 1725 000e 5A60     		str	r2, [r3, #4]
 1726 0010 9A60     		str	r2, [r3, #8]
 1727 0012 DA60     		str	r2, [r3, #12]
 1728 0014 1A61     		str	r2, [r3, #16]
 1729              	.LBB6:
 664:Core/Src/main.c **** 
 665:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 666:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 1730              		.loc 1 666 3
 1731 0016 724B     		ldr	r3, .L87
 1732 0018 DB6C     		ldr	r3, [r3, #76]
 1733 001a 714A     		ldr	r2, .L87
 1734 001c 43F01003 		orr	r3, r3, #16
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 43


 1735 0020 D364     		str	r3, [r2, #76]
 1736 0022 6F4B     		ldr	r3, .L87
 1737 0024 DB6C     		ldr	r3, [r3, #76]
 1738 0026 03F01003 		and	r3, r3, #16
 1739 002a BB61     		str	r3, [r7, #24]
 1740 002c BB69     		ldr	r3, [r7, #24]
 1741              	.LBE6:
 1742              	.LBB7:
 667:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 1743              		.loc 1 667 3
 1744 002e 6C4B     		ldr	r3, .L87
 1745 0030 DB6C     		ldr	r3, [r3, #76]
 1746 0032 6B4A     		ldr	r2, .L87
 1747 0034 43F00403 		orr	r3, r3, #4
 1748 0038 D364     		str	r3, [r2, #76]
 1749 003a 694B     		ldr	r3, .L87
 1750 003c DB6C     		ldr	r3, [r3, #76]
 1751 003e 03F00403 		and	r3, r3, #4
 1752 0042 7B61     		str	r3, [r7, #20]
 1753 0044 7B69     		ldr	r3, [r7, #20]
 1754              	.LBE7:
 1755              	.LBB8:
 668:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 1756              		.loc 1 668 3
 1757 0046 664B     		ldr	r3, .L87
 1758 0048 DB6C     		ldr	r3, [r3, #76]
 1759 004a 654A     		ldr	r2, .L87
 1760 004c 43F02003 		orr	r3, r3, #32
 1761 0050 D364     		str	r3, [r2, #76]
 1762 0052 634B     		ldr	r3, .L87
 1763 0054 DB6C     		ldr	r3, [r3, #76]
 1764 0056 03F02003 		and	r3, r3, #32
 1765 005a 3B61     		str	r3, [r7, #16]
 1766 005c 3B69     		ldr	r3, [r7, #16]
 1767              	.LBE8:
 1768              	.LBB9:
 669:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 1769              		.loc 1 669 3
 1770 005e 604B     		ldr	r3, .L87
 1771 0060 DB6C     		ldr	r3, [r3, #76]
 1772 0062 5F4A     		ldr	r2, .L87
 1773 0064 43F08003 		orr	r3, r3, #128
 1774 0068 D364     		str	r3, [r2, #76]
 1775 006a 5D4B     		ldr	r3, .L87
 1776 006c DB6C     		ldr	r3, [r3, #76]
 1777 006e 03F08003 		and	r3, r3, #128
 1778 0072 FB60     		str	r3, [r7, #12]
 1779 0074 FB68     		ldr	r3, [r7, #12]
 1780              	.LBE9:
 1781              	.LBB10:
 670:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1782              		.loc 1 670 3
 1783 0076 5A4B     		ldr	r3, .L87
 1784 0078 DB6C     		ldr	r3, [r3, #76]
 1785 007a 594A     		ldr	r2, .L87
 1786 007c 43F00103 		orr	r3, r3, #1
 1787 0080 D364     		str	r3, [r2, #76]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 44


 1788 0082 574B     		ldr	r3, .L87
 1789 0084 DB6C     		ldr	r3, [r3, #76]
 1790 0086 03F00103 		and	r3, r3, #1
 1791 008a BB60     		str	r3, [r7, #8]
 1792 008c BB68     		ldr	r3, [r7, #8]
 1793              	.LBE10:
 1794              	.LBB11:
 671:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 1795              		.loc 1 671 3
 1796 008e 544B     		ldr	r3, .L87
 1797 0090 DB6C     		ldr	r3, [r3, #76]
 1798 0092 534A     		ldr	r2, .L87
 1799 0094 43F00203 		orr	r3, r3, #2
 1800 0098 D364     		str	r3, [r2, #76]
 1801 009a 514B     		ldr	r3, .L87
 1802 009c DB6C     		ldr	r3, [r3, #76]
 1803 009e 03F00203 		and	r3, r3, #2
 1804 00a2 7B60     		str	r3, [r7, #4]
 1805 00a4 7B68     		ldr	r3, [r7, #4]
 1806              	.LBE11:
 1807              	.LBB12:
 672:Core/Src/main.c ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 1808              		.loc 1 672 3
 1809 00a6 4E4B     		ldr	r3, .L87
 1810 00a8 DB6C     		ldr	r3, [r3, #76]
 1811 00aa 4D4A     		ldr	r2, .L87
 1812 00ac 43F04003 		orr	r3, r3, #64
 1813 00b0 D364     		str	r3, [r2, #76]
 1814 00b2 4B4B     		ldr	r3, .L87
 1815 00b4 DB6C     		ldr	r3, [r3, #76]
 1816 00b6 03F04003 		and	r3, r3, #64
 1817 00ba 3B60     		str	r3, [r7]
 1818 00bc 3B68     		ldr	r3, [r7]
 1819              	.LBE12:
 673:Core/Src/main.c ****   HAL_PWREx_EnableVddIO2();
 1820              		.loc 1 673 3
 1821 00be FFF7FEFF 		bl	HAL_PWREx_EnableVddIO2
 674:Core/Src/main.c **** 
 675:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 676:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOF, GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_6
 1822              		.loc 1 676 3
 1823 00c2 0022     		movs	r2, #0
 1824 00c4 4FF4E771 		mov	r1, #462
 1825 00c8 4648     		ldr	r0, .L87+4
 1826 00ca FFF7FEFF 		bl	HAL_GPIO_WritePin
 677:Core/Src/main.c ****                           |GPIO_PIN_7|GPIO_PIN_8, GPIO_PIN_RESET);
 678:Core/Src/main.c **** 
 679:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 680:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 1827              		.loc 1 680 3
 1828 00ce 0022     		movs	r2, #0
 1829 00d0 8021     		movs	r1, #128
 1830 00d2 4FF09040 		mov	r0, #1207959552
 1831 00d6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 681:Core/Src/main.c **** 
 682:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 683:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD2_Pin, GPIO_PIN_RESET);
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 45


 1832              		.loc 1 683 3
 1833 00da 0022     		movs	r2, #0
 1834 00dc 44F28301 		movw	r1, #16515
 1835 00e0 4148     		ldr	r0, .L87+8
 1836 00e2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 684:Core/Src/main.c **** 
 685:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 686:Core/Src/main.c ****   HAL_GPIO_WritePin(USB_PowerSwitchOn_GPIO_Port, USB_PowerSwitchOn_Pin, GPIO_PIN_RESET);
 1837              		.loc 1 686 3
 1838 00e6 0022     		movs	r2, #0
 1839 00e8 4021     		movs	r1, #64
 1840 00ea 4048     		ldr	r0, .L87+12
 1841 00ec FFF7FEFF 		bl	HAL_GPIO_WritePin
 687:Core/Src/main.c **** 
 688:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 689:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_6, GPIO_PIN_RESET);
 1842              		.loc 1 689 3
 1843 00f0 0022     		movs	r2, #0
 1844 00f2 4021     		movs	r1, #64
 1845 00f4 3E48     		ldr	r0, .L87+16
 1846 00f6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 690:Core/Src/main.c **** 
 691:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 692:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 1847              		.loc 1 692 23
 1848 00fa 4FF40053 		mov	r3, #8192
 1849 00fe FB61     		str	r3, [r7, #28]
 693:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 1850              		.loc 1 693 24
 1851 0100 4FF48813 		mov	r3, #1114112
 1852 0104 3B62     		str	r3, [r7, #32]
 694:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1853              		.loc 1 694 24
 1854 0106 0023     		movs	r3, #0
 1855 0108 7B62     		str	r3, [r7, #36]
 695:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 1856              		.loc 1 695 3
 1857 010a 07F11C03 		add	r3, r7, #28
 1858 010e 1946     		mov	r1, r3
 1859 0110 3748     		ldr	r0, .L87+16
 1860 0112 FFF7FEFF 		bl	HAL_GPIO_Init
 696:Core/Src/main.c **** 
 697:Core/Src/main.c ****   /*Configure GPIO pins : PF0 PF4 PF5 */
 698:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_4|GPIO_PIN_5;
 1861              		.loc 1 698 23
 1862 0116 3123     		movs	r3, #49
 1863 0118 FB61     		str	r3, [r7, #28]
 699:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 1864              		.loc 1 699 24
 1865 011a 0023     		movs	r3, #0
 1866 011c 3B62     		str	r3, [r7, #32]
 700:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1867              		.loc 1 700 24
 1868 011e 0023     		movs	r3, #0
 1869 0120 7B62     		str	r3, [r7, #36]
 701:Core/Src/main.c ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 1870              		.loc 1 701 3
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 46


 1871 0122 07F11C03 		add	r3, r7, #28
 1872 0126 1946     		mov	r1, r3
 1873 0128 2E48     		ldr	r0, .L87+4
 1874 012a FFF7FEFF 		bl	HAL_GPIO_Init
 702:Core/Src/main.c **** 
 703:Core/Src/main.c ****   /*Configure GPIO pins : PF1 PF2 PF3 PF6
 704:Core/Src/main.c ****                            PF7 PF8 */
 705:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_6
 1875              		.loc 1 705 23
 1876 012e 4FF4E773 		mov	r3, #462
 1877 0132 FB61     		str	r3, [r7, #28]
 706:Core/Src/main.c ****                           |GPIO_PIN_7|GPIO_PIN_8;
 707:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1878              		.loc 1 707 24
 1879 0134 0123     		movs	r3, #1
 1880 0136 3B62     		str	r3, [r7, #32]
 708:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1881              		.loc 1 708 24
 1882 0138 0023     		movs	r3, #0
 1883 013a 7B62     		str	r3, [r7, #36]
 709:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1884              		.loc 1 709 25
 1885 013c 0023     		movs	r3, #0
 1886 013e BB62     		str	r3, [r7, #40]
 710:Core/Src/main.c ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 1887              		.loc 1 710 3
 1888 0140 07F11C03 		add	r3, r7, #28
 1889 0144 1946     		mov	r1, r3
 1890 0146 2748     		ldr	r0, .L87+4
 1891 0148 FFF7FEFF 		bl	HAL_GPIO_Init
 711:Core/Src/main.c **** 
 712:Core/Src/main.c ****   /*Configure GPIO pin : PA7 */
 713:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_7;
 1892              		.loc 1 713 23
 1893 014c 8023     		movs	r3, #128
 1894 014e FB61     		str	r3, [r7, #28]
 714:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1895              		.loc 1 714 24
 1896 0150 0123     		movs	r3, #1
 1897 0152 3B62     		str	r3, [r7, #32]
 715:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1898              		.loc 1 715 24
 1899 0154 0023     		movs	r3, #0
 1900 0156 7B62     		str	r3, [r7, #36]
 716:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1901              		.loc 1 716 25
 1902 0158 0023     		movs	r3, #0
 1903 015a BB62     		str	r3, [r7, #40]
 717:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1904              		.loc 1 717 3
 1905 015c 07F11C03 		add	r3, r7, #28
 1906 0160 1946     		mov	r1, r3
 1907 0162 4FF09040 		mov	r0, #1207959552
 1908 0166 FFF7FEFF 		bl	HAL_GPIO_Init
 718:Core/Src/main.c **** 
 719:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 LD3_Pin LD2_Pin */
 720:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD2_Pin;
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 47


 1909              		.loc 1 720 23
 1910 016a 44F28303 		movw	r3, #16515
 1911 016e FB61     		str	r3, [r7, #28]
 721:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1912              		.loc 1 721 24
 1913 0170 0123     		movs	r3, #1
 1914 0172 3B62     		str	r3, [r7, #32]
 722:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1915              		.loc 1 722 24
 1916 0174 0023     		movs	r3, #0
 1917 0176 7B62     		str	r3, [r7, #36]
 723:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1918              		.loc 1 723 25
 1919 0178 0023     		movs	r3, #0
 1920 017a BB62     		str	r3, [r7, #40]
 724:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1921              		.loc 1 724 3
 1922 017c 07F11C03 		add	r3, r7, #28
 1923 0180 1946     		mov	r1, r3
 1924 0182 1948     		ldr	r0, .L87+8
 1925 0184 FFF7FEFF 		bl	HAL_GPIO_Init
 725:Core/Src/main.c **** 
 726:Core/Src/main.c ****   /*Configure GPIO pin : USB_OverCurrent_Pin */
 727:Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_OverCurrent_Pin;
 1926              		.loc 1 727 23
 1927 0188 2023     		movs	r3, #32
 1928 018a FB61     		str	r3, [r7, #28]
 728:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 1929              		.loc 1 728 24
 1930 018c 0023     		movs	r3, #0
 1931 018e 3B62     		str	r3, [r7, #32]
 729:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1932              		.loc 1 729 24
 1933 0190 0023     		movs	r3, #0
 1934 0192 7B62     		str	r3, [r7, #36]
 730:Core/Src/main.c ****   HAL_GPIO_Init(USB_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 1935              		.loc 1 730 3
 1936 0194 07F11C03 		add	r3, r7, #28
 1937 0198 1946     		mov	r1, r3
 1938 019a 1448     		ldr	r0, .L87+12
 1939 019c FFF7FEFF 		bl	HAL_GPIO_Init
 731:Core/Src/main.c **** 
 732:Core/Src/main.c ****   /*Configure GPIO pin : USB_PowerSwitchOn_Pin */
 733:Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_PowerSwitchOn_Pin;
 1940              		.loc 1 733 23
 1941 01a0 4023     		movs	r3, #64
 1942 01a2 FB61     		str	r3, [r7, #28]
 734:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1943              		.loc 1 734 24
 1944 01a4 0123     		movs	r3, #1
 1945 01a6 3B62     		str	r3, [r7, #32]
 735:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1946              		.loc 1 735 24
 1947 01a8 0023     		movs	r3, #0
 1948 01aa 7B62     		str	r3, [r7, #36]
 736:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1949              		.loc 1 736 25
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 48


 1950 01ac 0023     		movs	r3, #0
 1951 01ae BB62     		str	r3, [r7, #40]
 737:Core/Src/main.c ****   HAL_GPIO_Init(USB_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 1952              		.loc 1 737 3
 1953 01b0 07F11C03 		add	r3, r7, #28
 1954 01b4 1946     		mov	r1, r3
 1955 01b6 0D48     		ldr	r0, .L87+12
 1956 01b8 FFF7FEFF 		bl	HAL_GPIO_Init
 738:Core/Src/main.c **** 
 739:Core/Src/main.c ****   /*Configure GPIO pin : PC6 */
 740:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6;
 1957              		.loc 1 740 23
 1958 01bc 4023     		movs	r3, #64
 1959 01be FB61     		str	r3, [r7, #28]
 741:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1960              		.loc 1 741 24
 1961 01c0 0123     		movs	r3, #1
 1962 01c2 3B62     		str	r3, [r7, #32]
 742:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1963              		.loc 1 742 24
 1964 01c4 0023     		movs	r3, #0
 1965 01c6 7B62     		str	r3, [r7, #36]
 743:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1966              		.loc 1 743 25
 1967 01c8 0023     		movs	r3, #0
 1968 01ca BB62     		str	r3, [r7, #40]
 744:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 1969              		.loc 1 744 3
 1970 01cc 07F11C03 		add	r3, r7, #28
 1971 01d0 1946     		mov	r1, r3
 1972 01d2 0748     		ldr	r0, .L87+16
 1973 01d4 FFF7FEFF 		bl	HAL_GPIO_Init
 745:Core/Src/main.c **** 
 746:Core/Src/main.c **** }
 1974              		.loc 1 746 1
 1975 01d8 00BF     		nop
 1976 01da 3037     		adds	r7, r7, #48
 1977              		.cfi_def_cfa_offset 8
 1978 01dc BD46     		mov	sp, r7
 1979              		.cfi_def_cfa_register 13
 1980              		@ sp needed
 1981 01de 80BD     		pop	{r7, pc}
 1982              	.L88:
 1983              		.align	2
 1984              	.L87:
 1985 01e0 00100240 		.word	1073876992
 1986 01e4 00140048 		.word	1207964672
 1987 01e8 00040048 		.word	1207960576
 1988 01ec 00180048 		.word	1207965696
 1989 01f0 00080048 		.word	1207961600
 1990              		.cfi_endproc
 1991              	.LFE339:
 1993              		.section	.text.Error_Handler,"ax",%progbits
 1994              		.align	1
 1995              		.global	Error_Handler
 1996              		.syntax unified
 1997              		.thumb
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 49


 1998              		.thumb_func
 2000              	Error_Handler:
 2001              	.LFB340:
 747:Core/Src/main.c **** 
 748:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 749:Core/Src/main.c **** 
 750:Core/Src/main.c **** /* USER CODE END 4 */
 751:Core/Src/main.c **** 
 752:Core/Src/main.c **** /**
 753:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 754:Core/Src/main.c ****   * @retval None
 755:Core/Src/main.c ****   */
 756:Core/Src/main.c **** void Error_Handler(void)
 757:Core/Src/main.c **** {
 2002              		.loc 1 757 1
 2003              		.cfi_startproc
 2004              		@ args = 0, pretend = 0, frame = 0
 2005              		@ frame_needed = 1, uses_anonymous_args = 0
 2006              		@ link register save eliminated.
 2007 0000 80B4     		push	{r7}
 2008              		.cfi_def_cfa_offset 4
 2009              		.cfi_offset 7, -4
 2010 0002 00AF     		add	r7, sp, #0
 2011              		.cfi_def_cfa_register 7
 2012              	.LBB13:
 2013              	.LBB14:
 2014              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 50


  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 51


  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 52


 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 53


 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2015              		.loc 2 209 3
 2016              		.syntax unified
 2017              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2018 0004 72B6     		cpsid i
 2019              	@ 0 "" 2
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2020              		.loc 2 210 1
 2021              		.thumb
 2022              		.syntax unified
 2023 0006 00BF     		nop
 2024              	.L90:
 2025              	.LBE14:
 2026              	.LBE13:
 758:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 759:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 760:Core/Src/main.c ****   __disable_irq();
 761:Core/Src/main.c ****   while (1)
 2027              		.loc 1 761 9 discriminator 1
 2028 0008 FEE7     		b	.L90
 2029              		.cfi_endproc
 2030              	.LFE340:
 2032              		.text
 2033              	.Letext0:
 2034              		.file 3 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4p5xx.h"
 2035              		.file 4 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 2036              		.file 5 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 2037              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 2038              		.file 7 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 2039              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2040              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 2041              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 2042              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 2043              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 2044              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc_ex.h"
 2045              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usb.h"
 2046              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pcd.h"
 2047              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 2048              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 2049              		.file 18 "Core/Inc/Parser.h"
 2050              		.file 19 "Core/Inc/GCodes.h"
 2051              		.file 20 "Core/Inc/main.h"
 2052              		.file 21 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
 2053              		.file 22 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim_ex.h"
 2054              		.file 23 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart_ex.h"
 2055              		.file 24 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 2056              		.file 25 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2057              		.file 26 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 2058              		.file 27 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2059              		.file 28 "Core/Inc/Functions.h"
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 54


ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 55


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:20     .bss.msg_buffer:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:23     .bss.msg_buffer:0000000000000000 msg_buffer
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:26     .bss.RxBuf:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:29     .bss.RxBuf:0000000000000000 RxBuf
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:36     .bss.hadc1:0000000000000000 hadc1
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:33     .bss.hadc1:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:43     .bss.hdma_adc1:0000000000000000 hdma_adc1
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:40     .bss.hdma_adc1:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:50     .bss.hlpuart1:0000000000000000 hlpuart1
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:47     .bss.hlpuart1:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:57     .bss.huart4:0000000000000000 huart4
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:54     .bss.huart4:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:64     .bss.hdma_lpuart1_rx:0000000000000000 hdma_lpuart1_rx
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:61     .bss.hdma_lpuart1_rx:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:71     .bss.htim3:0000000000000000 htim3
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:68     .bss.htim3:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:78     .bss.htim4:0000000000000000 htim4
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:75     .bss.htim4:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:85     .bss.htim5:0000000000000000 htim5
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:82     .bss.htim5:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:92     .bss.hpcd_USB_OTG_FS:0000000000000000 hpcd_USB_OTG_FS
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:89     .bss.hpcd_USB_OTG_FS:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:99     .bss.step:0000000000000000 step
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:96     .bss.step:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:106    .bss.last_time:0000000000000000 last_time
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:103    .bss.last_time:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:113    .bss.value:0000000000000000 value
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:110    .bss.value:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:116    .text.HAL_UARTEx_RxEventCallback:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:122    .text.HAL_UARTEx_RxEventCallback:0000000000000000 HAL_UARTEx_RxEventCallback
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:172    .text.HAL_UARTEx_RxEventCallback:0000000000000038 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:180    .text.DelayMicrosecond:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:186    .text.DelayMicrosecond:0000000000000000 DelayMicrosecond
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:233    .text.DelayMicrosecond:0000000000000030 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:238    .text.GetTicks:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:244    .text.GetTicks:0000000000000000 GetTicks
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:272    .text.GetTicks:0000000000000014 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:277    .rodata:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:281    .text.print_temperature:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:287    .text.print_temperature:0000000000000000 print_temperature
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:337    .text.print_temperature:0000000000000048 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:345    .text.main:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:351    .text.main:0000000000000000 main
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:550    .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:1707   .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:1630   .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:900    .text.MX_LPUART1_UART_Init:0000000000000000 MX_LPUART1_UART_Init
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:1556   .text.MX_USB_OTG_FS_PCD_Init:0000000000000000 MX_USB_OTG_FS_PCD_Init
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:1324   .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:1019   .text.MX_UART4_Init:0000000000000000 MX_UART4_Init
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:1134   .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:679    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:1440   .text.MX_TIM5_Init:0000000000000000 MX_TIM5_Init
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:528    .text.main:0000000000000128 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:544    .text.SystemClock_Config:0000000000000000 $t
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 56


C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:2000   .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:674    .text.MX_ADC1_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:886    .text.MX_ADC1_Init:0000000000000130 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:895    .text.MX_LPUART1_UART_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:1008   .text.MX_LPUART1_UART_Init:0000000000000098 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:1014   .text.MX_UART4_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:1123   .text.MX_UART4_Init:0000000000000090 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:1129   .text.MX_TIM3_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:1313   .text.MX_TIM3_Init:0000000000000110 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:1319   .text.MX_TIM4_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:1429   .text.MX_TIM4_Init:0000000000000094 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:1435   .text.MX_TIM5_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:1545   .text.MX_TIM5_Init:0000000000000094 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:1551   .text.MX_USB_OTG_FS_PCD_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:1620   .text.MX_USB_OTG_FS_PCD_Init:0000000000000050 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:1625   .text.MX_DMA_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:1697   .text.MX_DMA_Init:0000000000000060 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:1702   .text.MX_GPIO_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:1985   .text.MX_GPIO_Init:00000000000001e0 $d
C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s:1994   .text.Error_Handler:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_UARTEx_ReceiveToIdle_DMA
GetTemperature
sprintf
strlen
HAL_UART_Transmit
HAL_Init
HAL_TIM_PWM_Start
HAL_ADC_Start_DMA
HAL_TIM_Base_Start
memset
reset_args
get_command
HAL_GetTick
M105
G0
G50
M104
HAL_GPIO_ReadPin
HAL_GPIO_TogglePin
isRunning
interval
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
HAL_UART_Init
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_DisableFifoMode
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccgAQHYV.s 			page 57


HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_PCD_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_PWREx_EnableVddIO2
HAL_GPIO_WritePin
HAL_GPIO_Init
