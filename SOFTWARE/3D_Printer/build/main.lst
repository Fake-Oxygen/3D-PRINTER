ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	hadc1
  20              		.section	.bss.hadc1,"aw",%nobits
  21              		.align	2
  24              	hadc1:
  25 0000 00000000 		.space	104
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.global	hdma_adc1
  27              		.section	.bss.hdma_adc1,"aw",%nobits
  28              		.align	2
  31              	hdma_adc1:
  32 0000 00000000 		.space	96
  32      00000000 
  32      00000000 
  32      00000000 
  32      00000000 
  33              		.global	hlpuart1
  34              		.section	.bss.hlpuart1,"aw",%nobits
  35              		.align	2
  38              	hlpuart1:
  39 0000 00000000 		.space	144
  39      00000000 
  39      00000000 
  39      00000000 
  39      00000000 
  40              		.global	huart4
  41              		.section	.bss.huart4,"aw",%nobits
  42              		.align	2
  45              	huart4:
  46 0000 00000000 		.space	144
  46      00000000 
  46      00000000 
  46      00000000 
  46      00000000 
  47              		.global	hdma_lpuart1_rx
  48              		.section	.bss.hdma_lpuart1_rx,"aw",%nobits
  49              		.align	2
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 2


  52              	hdma_lpuart1_rx:
  53 0000 00000000 		.space	96
  53      00000000 
  53      00000000 
  53      00000000 
  53      00000000 
  54              		.global	htim3
  55              		.section	.bss.htim3,"aw",%nobits
  56              		.align	2
  59              	htim3:
  60 0000 00000000 		.space	76
  60      00000000 
  60      00000000 
  60      00000000 
  60      00000000 
  61              		.global	htim4
  62              		.section	.bss.htim4,"aw",%nobits
  63              		.align	2
  66              	htim4:
  67 0000 00000000 		.space	76
  67      00000000 
  67      00000000 
  67      00000000 
  67      00000000 
  68              		.global	htim5
  69              		.section	.bss.htim5,"aw",%nobits
  70              		.align	2
  73              	htim5:
  74 0000 00000000 		.space	76
  74      00000000 
  74      00000000 
  74      00000000 
  74      00000000 
  75              		.global	hpcd_USB_OTG_FS
  76              		.section	.bss.hpcd_USB_OTG_FS,"aw",%nobits
  77              		.align	2
  80              	hpcd_USB_OTG_FS:
  81 0000 00000000 		.space	1292
  81      00000000 
  81      00000000 
  81      00000000 
  81      00000000 
  82              		.global	step
  83              		.section	.bss.step,"aw",%nobits
  84              		.align	1
  87              	step:
  88 0000 0000     		.space	2
  89              		.global	last_time
  90              		.section	.bss.last_time,"aw",%nobits
  91              		.align	2
  94              	last_time:
  95 0000 00000000 		.space	4
  96              		.global	value
  97              		.section	.bss.value,"aw",%nobits
  98              		.align	2
 101              	value:
 102 0000 00000000 		.space	12
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 3


 102      00000000 
 102      00000000 
 103              		.global	reader
 104              		.section	.bss.reader,"aw",%nobits
 105              		.align	3
 108              	reader:
 109 0000 00000000 		.space	168
 109      00000000 
 109      00000000 
 109      00000000 
 109      00000000 
 110              		.global	state
 111              		.section	.bss.state,"aw",%nobits
 112              		.align	2
 115              	state:
 116 0000 00000000 		.space	4
 117              		.global	rx_buff
 118              		.section	.bss.rx_buff,"aw",%nobits
 119              		.align	2
 122              	rx_buff:
 123 0000 00000000 		.space	64
 123      00000000 
 123      00000000 
 123      00000000 
 123      00000000 
 124              		.global	gcode_buff
 125              		.section	.bss.gcode_buff,"aw",%nobits
 126              		.align	2
 129              	gcode_buff:
 130 0000 00000000 		.space	64
 130      00000000 
 130      00000000 
 130      00000000 
 130      00000000 
 131              		.global	read_count
 132              		.section	.bss.read_count,"aw",%nobits
 133              		.align	2
 136              	read_count:
 137 0000 00000000 		.space	4
 138              		.global	i
 139              		.section	.bss.i,"aw",%nobits
 140              		.align	2
 143              	i:
 144 0000 00000000 		.space	4
 145              		.global	j
 146              		.section	.bss.j,"aw",%nobits
 147              		.align	2
 150              	j:
 151 0000 00000000 		.space	4
 152              		.global	should_print
 153              		.section	.bss.should_print,"aw",%nobits
 154              		.align	2
 157              	should_print:
 158 0000 00000000 		.space	4
 159              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 160              		.align	1
 161              		.global	HAL_UARTEx_RxEventCallback
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 4


 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 166              	HAL_UARTEx_RxEventCallback:
 167              	.LFB325:
 168              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** /* USER CODE END Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PD */
  33:Core/Src/main.c **** /* USER CODE END PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PM */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  41:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  42:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** UART_HandleTypeDef hlpuart1;
  45:Core/Src/main.c **** UART_HandleTypeDef huart4;
  46:Core/Src/main.c **** DMA_HandleTypeDef hdma_lpuart1_rx;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  49:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  50:Core/Src/main.c **** TIM_HandleTypeDef htim5;
  51:Core/Src/main.c **** 
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 5


  52:Core/Src/main.c **** PCD_HandleTypeDef hpcd_USB_OTG_FS;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE BEGIN PV */
  55:Core/Src/main.c **** uint16_t step = 0;
  56:Core/Src/main.c **** uint32_t last_time = 0;
  57:Core/Src/main.c **** uint32_t value[ADC_CHANNELS];
  58:Core/Src/main.c **** gc_reader reader;
  59:Core/Src/main.c **** int state = 0;
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** uint8_t rx_buff[GCODE_BUFF_SIZE];
  62:Core/Src/main.c **** uint8_t gcode_buff[GCODE_BUFF_SIZE];
  63:Core/Src/main.c **** size_t read_count = 0;
  64:Core/Src/main.c **** int i = 0;
  65:Core/Src/main.c **** int j = 0;
  66:Core/Src/main.c **** int should_print = 0;
  67:Core/Src/main.c **** /* USER CODE END PV */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  70:Core/Src/main.c **** void SystemClock_Config(void);
  71:Core/Src/main.c **** static void MX_GPIO_Init(void);
  72:Core/Src/main.c **** static void MX_DMA_Init(void);
  73:Core/Src/main.c **** static void MX_LPUART1_UART_Init(void);
  74:Core/Src/main.c **** static void MX_USB_OTG_FS_PCD_Init(void);
  75:Core/Src/main.c **** static void MX_TIM4_Init(void);
  76:Core/Src/main.c **** static void MX_UART4_Init(void);
  77:Core/Src/main.c **** static void MX_TIM3_Init(void);
  78:Core/Src/main.c **** static void MX_ADC1_Init(void);
  79:Core/Src/main.c **** static void MX_TIM5_Init(void);
  80:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  81:Core/Src/main.c **** /* USER CODE END PFP */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  84:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
  87:Core/Src/main.c **** {
 169              		.loc 1 87 1
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 16
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173 0000 80B5     		push	{r7, lr}
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 7, -8
 176              		.cfi_offset 14, -4
 177 0002 84B0     		sub	sp, sp, #16
 178              		.cfi_def_cfa_offset 24
 179 0004 00AF     		add	r7, sp, #0
 180              		.cfi_def_cfa_register 7
 181 0006 7860     		str	r0, [r7, #4]
 182 0008 0B46     		mov	r3, r1
 183 000a 7B80     		strh	r3, [r7, #2]	@ movhi
  88:Core/Src/main.c ****   if (huart->Instance == LPUART1)
 184              		.loc 1 88 12
 185 000c 7B68     		ldr	r3, [r7, #4]
 186 000e 1B68     		ldr	r3, [r3]
 187              		.loc 1 88 6
 188 0010 1E4A     		ldr	r2, .L6
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 6


 189 0012 9342     		cmp	r3, r2
 190 0014 29D1     		bne	.L2
 191              	.LBB4:
  89:Core/Src/main.c ****   {
  90:Core/Src/main.c ****     // if(i + Size > GCODE_BUFF_SIZE) {
  91:Core/Src/main.c ****     //   int a = GCODE_BUFF_SIZE - i;
  92:Core/Src/main.c ****     //   memcpy(gcode_buff + i, rx_buff, a);
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****     //   memcpy(gcode_buff, rx_buff + a, Size - a);
  95:Core/Src/main.c ****     //   i = Size - a;
  96:Core/Src/main.c ****     // } else {
  97:Core/Src/main.c ****     //   memcpy(gcode_buff + i, rx_buff, Size);
  98:Core/Src/main.c ****     //   i += Size;
  99:Core/Src/main.c ****     // }
 100:Core/Src/main.c ****     // should_print = 1;
 101:Core/Src/main.c ****     for(int c = 0; c < Size && read_count < GCODE_BUFF_SIZE; i = (i + 1) % GCODE_BUFF_SIZE, c++) {
 192              		.loc 1 101 13
 193 0016 0023     		movs	r3, #0
 194 0018 FB60     		str	r3, [r7, #12]
 195              		.loc 1 101 5
 196 001a 1BE0     		b	.L3
 197              	.L5:
 102:Core/Src/main.c ****       gcode_buff[i] = rx_buff[c];
 198              		.loc 1 102 17 discriminator 4
 199 001c 1C4B     		ldr	r3, .L6+4
 200 001e 1B68     		ldr	r3, [r3]
 201              		.loc 1 102 30 discriminator 4
 202 0020 1C49     		ldr	r1, .L6+8
 203 0022 FA68     		ldr	r2, [r7, #12]
 204 0024 0A44     		add	r2, r2, r1
 205 0026 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 206              		.loc 1 102 21 discriminator 4
 207 0028 1B4A     		ldr	r2, .L6+12
 208 002a D154     		strb	r1, [r2, r3]
 103:Core/Src/main.c ****       read_count++;
 209              		.loc 1 103 17 discriminator 4
 210 002c 1B4B     		ldr	r3, .L6+16
 211 002e 1B68     		ldr	r3, [r3]
 212 0030 0133     		adds	r3, r3, #1
 213 0032 1A4A     		ldr	r2, .L6+16
 214 0034 1360     		str	r3, [r2]
 101:Core/Src/main.c ****       gcode_buff[i] = rx_buff[c];
 215              		.loc 1 101 69 discriminator 4
 216 0036 164B     		ldr	r3, .L6+4
 217 0038 1B68     		ldr	r3, [r3]
 218 003a 0133     		adds	r3, r3, #1
 101:Core/Src/main.c ****       gcode_buff[i] = rx_buff[c];
 219              		.loc 1 101 74 discriminator 4
 220 003c 5A42     		rsbs	r2, r3, #0
 221 003e 03F03F03 		and	r3, r3, #63
 222 0042 02F03F02 		and	r2, r2, #63
 223 0046 58BF     		it	pl
 224 0048 5342     		rsbpl	r3, r2, #0
 101:Core/Src/main.c ****       gcode_buff[i] = rx_buff[c];
 225              		.loc 1 101 64 discriminator 4
 226 004a 114A     		ldr	r2, .L6+4
 227 004c 1360     		str	r3, [r2]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 7


 101:Core/Src/main.c ****       gcode_buff[i] = rx_buff[c];
 228              		.loc 1 101 94 discriminator 4
 229 004e FB68     		ldr	r3, [r7, #12]
 230 0050 0133     		adds	r3, r3, #1
 231 0052 FB60     		str	r3, [r7, #12]
 232              	.L3:
 101:Core/Src/main.c ****       gcode_buff[i] = rx_buff[c];
 233              		.loc 1 101 22 discriminator 1
 234 0054 7B88     		ldrh	r3, [r7, #2]
 101:Core/Src/main.c ****       gcode_buff[i] = rx_buff[c];
 235              		.loc 1 101 29 discriminator 1
 236 0056 FA68     		ldr	r2, [r7, #12]
 237 0058 9A42     		cmp	r2, r3
 238 005a 03DA     		bge	.L4
 101:Core/Src/main.c ****       gcode_buff[i] = rx_buff[c];
 239              		.loc 1 101 43 discriminator 3
 240 005c 0F4B     		ldr	r3, .L6+16
 241 005e 1B68     		ldr	r3, [r3]
 101:Core/Src/main.c ****       gcode_buff[i] = rx_buff[c];
 242              		.loc 1 101 29 discriminator 3
 243 0060 3F2B     		cmp	r3, #63
 244 0062 DBD9     		bls	.L5
 245              	.L4:
 246              	.LBE4:
 104:Core/Src/main.c ****     }
 105:Core/Src/main.c ****     should_print = 1;
 247              		.loc 1 105 18
 248 0064 0E4B     		ldr	r3, .L6+20
 249 0066 0122     		movs	r2, #1
 250 0068 1A60     		str	r2, [r3]
 251              	.L2:
 106:Core/Src/main.c ****   }
 107:Core/Src/main.c ****   HAL_UARTEx_ReceiveToIdle_DMA(&hlpuart1, rx_buff, GCODE_BUFF_SIZE);
 252              		.loc 1 107 3
 253 006a 4022     		movs	r2, #64
 254 006c 0949     		ldr	r1, .L6+8
 255 006e 0D48     		ldr	r0, .L6+24
 256 0070 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_DMA
 108:Core/Src/main.c ****   __HAL_DMA_DISABLE_IT(&hdma_lpuart1_rx, DMA_IT_HT);
 257              		.loc 1 108 3
 258 0074 0C4B     		ldr	r3, .L6+28
 259 0076 1B68     		ldr	r3, [r3]
 260 0078 1A68     		ldr	r2, [r3]
 261 007a 0B4B     		ldr	r3, .L6+28
 262 007c 1B68     		ldr	r3, [r3]
 263 007e 22F00402 		bic	r2, r2, #4
 264 0082 1A60     		str	r2, [r3]
 109:Core/Src/main.c **** }
 265              		.loc 1 109 1
 266 0084 00BF     		nop
 267 0086 1037     		adds	r7, r7, #16
 268              		.cfi_def_cfa_offset 8
 269 0088 BD46     		mov	sp, r7
 270              		.cfi_def_cfa_register 13
 271              		@ sp needed
 272 008a 80BD     		pop	{r7, pc}
 273              	.L7:
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 8


 274              		.align	2
 275              	.L6:
 276 008c 00800040 		.word	1073774592
 277 0090 00000000 		.word	i
 278 0094 00000000 		.word	rx_buff
 279 0098 00000000 		.word	gcode_buff
 280 009c 00000000 		.word	read_count
 281 00a0 00000000 		.word	should_print
 282 00a4 00000000 		.word	hlpuart1
 283 00a8 00000000 		.word	hdma_lpuart1_rx
 284              		.cfi_endproc
 285              	.LFE325:
 287              		.section	.rodata
 288              		.align	2
 289              	.LC0:
 290 0000 4572726F 		.ascii	"Error occurred!\012\000"
 290      72206F63 
 290      63757272 
 290      6564210A 
 290      00
 291 0011 000000   		.align	2
 292              	.LC1:
 293 0014 25632025 		.ascii	"%c %d\012\000"
 293      640A00
 294              		.section	.text.main,"ax",%progbits
 295              		.align	1
 296              		.global	main
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 301              	main:
 302              	.LFB326:
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** // void DelayMicrosecond(uint16_t time)
 112:Core/Src/main.c **** // {
 113:Core/Src/main.c **** //   __HAL_TIM_SET_COUNTER(&htim4, 0);
 114:Core/Src/main.c **** //   while (__HAL_TIM_GET_COUNTER(&htim4) < time)
 115:Core/Src/main.c **** //     ;
 116:Core/Src/main.c **** // }
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** // void print_temperature()
 119:Core/Src/main.c **** // {
 120:Core/Src/main.c **** //   sprintf(msg_buffer, "temp: %f, value: %d\r\n", GetTemperature(ADC_HOT_END, value[ADC_HOT_END])
 121:Core/Src/main.c **** //   HAL_UART_Transmit(&hlpuart1, (uint16_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 122:Core/Src/main.c **** // }
 123:Core/Src/main.c **** /* USER CODE END 0 */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** /**
 126:Core/Src/main.c ****   * @brief  The application entry point.
 127:Core/Src/main.c ****   * @retval int
 128:Core/Src/main.c ****   */
 129:Core/Src/main.c **** int main(void)
 130:Core/Src/main.c **** {
 303              		.loc 1 130 1
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 112
 306              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 9


 307 0000 80B5     		push	{r7, lr}
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 7, -8
 310              		.cfi_offset 14, -4
 311 0002 9CB0     		sub	sp, sp, #112
 312              		.cfi_def_cfa_offset 120
 313 0004 00AF     		add	r7, sp, #0
 314              		.cfi_def_cfa_register 7
 131:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 132:Core/Src/main.c ****   // last_time = HAL_GetTick();
 133:Core/Src/main.c ****   /* USER CODE END 1 */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 138:Core/Src/main.c ****   HAL_Init();
 315              		.loc 1 138 3
 316 0006 FFF7FEFF 		bl	HAL_Init
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* USER CODE END Init */
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /* Configure the system clock */
 145:Core/Src/main.c ****   SystemClock_Config();
 317              		.loc 1 145 3
 318 000a FFF7FEFF 		bl	SystemClock_Config
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /* USER CODE END SysInit */
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /* Initialize all configured peripherals */
 152:Core/Src/main.c ****   MX_GPIO_Init();
 319              		.loc 1 152 3
 320 000e FFF7FEFF 		bl	MX_GPIO_Init
 153:Core/Src/main.c ****   MX_DMA_Init();
 321              		.loc 1 153 3
 322 0012 FFF7FEFF 		bl	MX_DMA_Init
 154:Core/Src/main.c ****   MX_LPUART1_UART_Init();
 323              		.loc 1 154 3
 324 0016 FFF7FEFF 		bl	MX_LPUART1_UART_Init
 155:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
 325              		.loc 1 155 3
 326 001a FFF7FEFF 		bl	MX_USB_OTG_FS_PCD_Init
 156:Core/Src/main.c ****   MX_TIM4_Init();
 327              		.loc 1 156 3
 328 001e FFF7FEFF 		bl	MX_TIM4_Init
 157:Core/Src/main.c ****   MX_UART4_Init();
 329              		.loc 1 157 3
 330 0022 FFF7FEFF 		bl	MX_UART4_Init
 158:Core/Src/main.c ****   MX_TIM3_Init();
 331              		.loc 1 158 3
 332 0026 FFF7FEFF 		bl	MX_TIM3_Init
 159:Core/Src/main.c ****   MX_ADC1_Init();
 333              		.loc 1 159 3
 334 002a FFF7FEFF 		bl	MX_ADC1_Init
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 10


 160:Core/Src/main.c ****   MX_TIM5_Init();
 335              		.loc 1 160 3
 336 002e FFF7FEFF 		bl	MX_TIM5_Init
 161:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 162:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 337              		.loc 1 162 3
 338 0032 0021     		movs	r1, #0
 339 0034 4348     		ldr	r0, .L15
 340 0036 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 163:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2);
 341              		.loc 1 163 3
 342 003a 0421     		movs	r1, #4
 343 003c 4148     		ldr	r0, .L15
 344 003e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 164:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);
 345              		.loc 1 164 3
 346 0042 0821     		movs	r1, #8
 347 0044 3F48     		ldr	r0, .L15
 348 0046 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 165:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, value, ADC_CHANNELS);
 349              		.loc 1 165 3
 350 004a 0322     		movs	r2, #3
 351 004c 3E49     		ldr	r1, .L15+4
 352 004e 3F48     		ldr	r0, .L15+8
 353 0050 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 166:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim4);
 354              		.loc 1 166 3
 355 0054 3E48     		ldr	r0, .L15+12
 356 0056 FFF7FEFF 		bl	HAL_TIM_Base_Start
 167:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim5);
 357              		.loc 1 167 3
 358 005a 3E48     		ldr	r0, .L15+16
 359 005c FFF7FEFF 		bl	HAL_TIM_Base_Start
 168:Core/Src/main.c ****   HAL_UARTEx_ReceiveToIdle_DMA(&hlpuart1, rx_buff, GCODE_BUFF_SIZE);
 360              		.loc 1 168 3
 361 0060 4022     		movs	r2, #64
 362 0062 3D49     		ldr	r1, .L15+20
 363 0064 3D48     		ldr	r0, .L15+24
 364 0066 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_DMA
 169:Core/Src/main.c ****   __HAL_DMA_DISABLE_IT(&hdma_lpuart1_rx, DMA_IT_HT);
 365              		.loc 1 169 3
 366 006a 3D4B     		ldr	r3, .L15+28
 367 006c 1B68     		ldr	r3, [r3]
 368 006e 1A68     		ldr	r2, [r3]
 369 0070 3B4B     		ldr	r3, .L15+28
 370 0072 1B68     		ldr	r3, [r3]
 371 0074 22F00402 		bic	r2, r2, #4
 372 0078 1A60     		str	r2, [r3]
 170:Core/Src/main.c ****   memset(rx_buff, 0, GCODE_BUFF_SIZE);
 373              		.loc 1 170 3
 374 007a 4022     		movs	r2, #64
 375 007c 0021     		movs	r1, #0
 376 007e 3648     		ldr	r0, .L15+20
 377 0080 FFF7FEFF 		bl	memset
 378              	.L14:
 171:Core/Src/main.c ****   /* USER CODE END 2 */
 172:Core/Src/main.c **** 
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 11


 173:Core/Src/main.c ****   /* Infinite loop */
 174:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 175:Core/Src/main.c ****   while (1) {
 176:Core/Src/main.c ****     if(should_print) {
 379              		.loc 1 176 8
 380 0084 374B     		ldr	r3, .L15+32
 381 0086 1B68     		ldr	r3, [r3]
 382              		.loc 1 176 7
 383 0088 002B     		cmp	r3, #0
 384 008a FBD0     		beq	.L14
 385              	.LBB5:
 177:Core/Src/main.c ****       int done_reading_gcode = 0;
 386              		.loc 1 177 11
 387 008c 0023     		movs	r3, #0
 388 008e 7B66     		str	r3, [r7, #100]
 178:Core/Src/main.c ****       int error_code = GC_READER_ERROR_NOT_OCCURED, new_error;
 389              		.loc 1 178 11
 390 0090 0023     		movs	r3, #0
 391 0092 FB66     		str	r3, [r7, #108]
 179:Core/Src/main.c ****       while(read_count > 0) {
 392              		.loc 1 179 12
 393 0094 29E0     		b	.L10
 394              	.L12:
 180:Core/Src/main.c ****         if(error_code == GC_READER_ERROR_NOT_OCCURED) {
 395              		.loc 1 180 11
 396 0096 FB6E     		ldr	r3, [r7, #108]
 397 0098 002B     		cmp	r3, #0
 398 009a 15D1     		bne	.L11
 181:Core/Src/main.c ****           new_error = read_code(&reader, gcode_buff[j], &done_reading_gcode);
 399              		.loc 1 181 23
 400 009c 324B     		ldr	r3, .L15+36
 401 009e 1B68     		ldr	r3, [r3]
 402              		.loc 1 181 52
 403 00a0 324A     		ldr	r2, .L15+40
 404 00a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 405              		.loc 1 181 23
 406 00a4 07F16402 		add	r2, r7, #100
 407 00a8 1946     		mov	r1, r3
 408 00aa 3148     		ldr	r0, .L15+44
 409 00ac FFF7FEFF 		bl	read_code
 410 00b0 B866     		str	r0, [r7, #104]
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****           if(new_error != GC_READER_ERROR_NOT_OCCURED) {
 411              		.loc 1 183 13
 412 00b2 BB6E     		ldr	r3, [r7, #104]
 413 00b4 002B     		cmp	r3, #0
 414 00b6 07D0     		beq	.L11
 184:Core/Src/main.c ****             HAL_UART_Transmit(&hlpuart1, "Error occurred!\n", 16, 100);
 415              		.loc 1 184 13
 416 00b8 6423     		movs	r3, #100
 417 00ba 1022     		movs	r2, #16
 418 00bc 2D49     		ldr	r1, .L15+48
 419 00be 2748     		ldr	r0, .L15+24
 420 00c0 FFF7FEFF 		bl	HAL_UART_Transmit
 185:Core/Src/main.c ****             error_code = new_error;
 421              		.loc 1 185 24
 422 00c4 BB6E     		ldr	r3, [r7, #104]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 12


 423 00c6 FB66     		str	r3, [r7, #108]
 424              	.L11:
 186:Core/Src/main.c ****           }
 187:Core/Src/main.c ****         }
 188:Core/Src/main.c ****         j = (j + 1) % GCODE_BUFF_SIZE;
 425              		.loc 1 188 16
 426 00c8 274B     		ldr	r3, .L15+36
 427 00ca 1B68     		ldr	r3, [r3]
 428 00cc 0133     		adds	r3, r3, #1
 429              		.loc 1 188 21
 430 00ce 5A42     		rsbs	r2, r3, #0
 431 00d0 03F03F03 		and	r3, r3, #63
 432 00d4 02F03F02 		and	r2, r2, #63
 433 00d8 58BF     		it	pl
 434 00da 5342     		rsbpl	r3, r2, #0
 435              		.loc 1 188 11
 436 00dc 224A     		ldr	r2, .L15+36
 437 00de 1360     		str	r3, [r2]
 189:Core/Src/main.c ****         read_count--;
 438              		.loc 1 189 19
 439 00e0 254B     		ldr	r3, .L15+52
 440 00e2 1B68     		ldr	r3, [r3]
 441 00e4 013B     		subs	r3, r3, #1
 442 00e6 244A     		ldr	r2, .L15+52
 443 00e8 1360     		str	r3, [r2]
 444              	.L10:
 179:Core/Src/main.c ****         if(error_code == GC_READER_ERROR_NOT_OCCURED) {
 445              		.loc 1 179 24
 446 00ea 234B     		ldr	r3, .L15+52
 447 00ec 1B68     		ldr	r3, [r3]
 448 00ee 002B     		cmp	r3, #0
 449 00f0 D1D1     		bne	.L12
 190:Core/Src/main.c ****       }
 191:Core/Src/main.c ****       if(done_reading_gcode && error_code == GC_READER_ERROR_NOT_OCCURED) {
 450              		.loc 1 191 10
 451 00f2 7B6E     		ldr	r3, [r7, #100]
 452              		.loc 1 191 9
 453 00f4 002B     		cmp	r3, #0
 454 00f6 21D0     		beq	.L13
 455              		.loc 1 191 29 discriminator 1
 456 00f8 FB6E     		ldr	r3, [r7, #108]
 457 00fa 002B     		cmp	r3, #0
 458 00fc 1ED1     		bne	.L13
 459              	.LBB6:
 192:Core/Src/main.c ****         uint8_t result[100];
 193:Core/Src/main.c ****         memset(result, 0, 100);
 460              		.loc 1 193 9
 461 00fe 3B46     		mov	r3, r7
 462 0100 6422     		movs	r2, #100
 463 0102 0021     		movs	r1, #0
 464 0104 1846     		mov	r0, r3
 465 0106 FFF7FEFF 		bl	memset
 194:Core/Src/main.c ****         sprintf(result, "%c %d\n", reader.code_type, reader.code_id);
 466              		.loc 1 194 42
 467 010a 194B     		ldr	r3, .L15+44
 468 010c 9B7F     		ldrb	r3, [r3, #30]	@ zero_extendqisi2
 469              		.loc 1 194 9
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 13


 470 010e 1A46     		mov	r2, r3
 471 0110 174B     		ldr	r3, .L15+44
 472 0112 1B6A     		ldr	r3, [r3, #32]
 473 0114 3846     		mov	r0, r7
 474 0116 1949     		ldr	r1, .L15+56
 475 0118 FFF7FEFF 		bl	sprintf
 195:Core/Src/main.c ****         HAL_UART_Transmit(&hlpuart1, result, strlen(result), 100);
 476              		.loc 1 195 46
 477 011c 3B46     		mov	r3, r7
 478 011e 1846     		mov	r0, r3
 479 0120 FFF7FEFF 		bl	strlen
 480 0124 0346     		mov	r3, r0
 481              		.loc 1 195 9
 482 0126 9AB2     		uxth	r2, r3
 483 0128 3946     		mov	r1, r7
 484 012a 6423     		movs	r3, #100
 485 012c 0B48     		ldr	r0, .L15+24
 486 012e FFF7FEFF 		bl	HAL_UART_Transmit
 196:Core/Src/main.c ****         memset(&reader, 0, sizeof(gc_reader));
 487              		.loc 1 196 9
 488 0132 A822     		movs	r2, #168
 489 0134 0021     		movs	r1, #0
 490 0136 0E48     		ldr	r0, .L15+44
 491 0138 FFF7FEFF 		bl	memset
 492              	.L13:
 493              	.LBE6:
 197:Core/Src/main.c ****       }
 198:Core/Src/main.c ****       should_print = 0;
 494              		.loc 1 198 20 discriminator 1
 495 013c 094B     		ldr	r3, .L15+32
 496 013e 0022     		movs	r2, #0
 497 0140 1A60     		str	r2, [r3]
 498              	.LBE5:
 176:Core/Src/main.c ****       int done_reading_gcode = 0;
 499              		.loc 1 176 7 discriminator 1
 500 0142 9FE7     		b	.L14
 501              	.L16:
 502              		.align	2
 503              	.L15:
 504 0144 00000000 		.word	htim3
 505 0148 00000000 		.word	value
 506 014c 00000000 		.word	hadc1
 507 0150 00000000 		.word	htim4
 508 0154 00000000 		.word	htim5
 509 0158 00000000 		.word	rx_buff
 510 015c 00000000 		.word	hlpuart1
 511 0160 00000000 		.word	hdma_lpuart1_rx
 512 0164 00000000 		.word	should_print
 513 0168 00000000 		.word	j
 514 016c 00000000 		.word	gcode_buff
 515 0170 00000000 		.word	reader
 516 0174 00000000 		.word	.LC0
 517 0178 00000000 		.word	read_count
 518 017c 14000000 		.word	.LC1
 519              		.cfi_endproc
 520              	.LFE326:
 522              		.section	.text.SystemClock_Config,"ax",%progbits
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 14


 523              		.align	1
 524              		.global	SystemClock_Config
 525              		.syntax unified
 526              		.thumb
 527              		.thumb_func
 529              	SystemClock_Config:
 530              	.LFB327:
 199:Core/Src/main.c ****     }
 200:Core/Src/main.c ****     // if (rx_buff[0] != '\0') {
 201:Core/Src/main.c ****     //   int error_code = read_code((char*)rx_buff, &reader);
 202:Core/Src/main.c ****     // }
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****     // if (HAL_GetTick() - last_time > interval && interval > 0)
 205:Core/Src/main.c ****     // {
 206:Core/Src/main.c ****     //   M105(0, 0);
 207:Core/Src/main.c ****     //   last_time = HAL_GetTick();
 208:Core/Src/main.c ****     // }
 209:Core/Src/main.c ****    
 210:Core/Src/main.c ****     // G0();
 211:Core/Src/main.c ****     // M104();
 212:Core/Src/main.c ****     // if(READ_PIN(USER_BUTTON) == 1)
 213:Core/Src/main.c ****     // {
 214:Core/Src/main.c ****     //   if(GetTicks() - lasttimeY >= 2000)
 215:Core/Src/main.c ****     //   {
 216:Core/Src/main.c ****     //       MAKE_MOTOR_STEP(Y_AXIS_STEP);
 217:Core/Src/main.c ****     //       lasttimeY = GetTicks();
 218:Core/Src/main.c ****     //   }
 219:Core/Src/main.c ****     // }
 220:Core/Src/main.c ****     /* USER CODE END WHILE */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 223:Core/Src/main.c ****   }
 224:Core/Src/main.c ****   /* USER CODE END 3 */
 225:Core/Src/main.c **** }
 226:Core/Src/main.c **** 
 227:Core/Src/main.c **** /**
 228:Core/Src/main.c ****   * @brief System Clock Configuration
 229:Core/Src/main.c ****   * @retval None
 230:Core/Src/main.c ****   */
 231:Core/Src/main.c **** void SystemClock_Config(void)
 232:Core/Src/main.c **** {
 531              		.loc 1 232 1
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 96
 534              		@ frame_needed = 1, uses_anonymous_args = 0
 535 0000 80B5     		push	{r7, lr}
 536              		.cfi_def_cfa_offset 8
 537              		.cfi_offset 7, -8
 538              		.cfi_offset 14, -4
 539 0002 98B0     		sub	sp, sp, #96
 540              		.cfi_def_cfa_offset 104
 541 0004 00AF     		add	r7, sp, #0
 542              		.cfi_def_cfa_register 7
 233:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 543              		.loc 1 233 22
 544 0006 07F11803 		add	r3, r7, #24
 545 000a 4822     		movs	r2, #72
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 15


 546 000c 0021     		movs	r1, #0
 547 000e 1846     		mov	r0, r3
 548 0010 FFF7FEFF 		bl	memset
 234:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 549              		.loc 1 234 22
 550 0014 3B1D     		adds	r3, r7, #4
 551 0016 0022     		movs	r2, #0
 552 0018 1A60     		str	r2, [r3]
 553 001a 5A60     		str	r2, [r3, #4]
 554 001c 9A60     		str	r2, [r3, #8]
 555 001e DA60     		str	r2, [r3, #12]
 556 0020 1A61     		str	r2, [r3, #16]
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 237:Core/Src/main.c ****   */
 238:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST) != HAL_OK)
 557              		.loc 1 238 7
 558 0022 0020     		movs	r0, #0
 559 0024 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 560 0028 0346     		mov	r3, r0
 561              		.loc 1 238 6
 562 002a 002B     		cmp	r3, #0
 563 002c 01D0     		beq	.L18
 239:Core/Src/main.c ****   {
 240:Core/Src/main.c ****     Error_Handler();
 564              		.loc 1 240 5
 565 002e FFF7FEFF 		bl	Error_Handler
 566              	.L18:
 241:Core/Src/main.c ****   }
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 244:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 245:Core/Src/main.c ****   */
 246:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_MSI;
 567              		.loc 1 246 36
 568 0032 3023     		movs	r3, #48
 569 0034 BB61     		str	r3, [r7, #24]
 247:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 570              		.loc 1 247 32
 571 0036 0123     		movs	r3, #1
 572 0038 3B64     		str	r3, [r7, #64]
 248:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 573              		.loc 1 248 30
 574 003a 0123     		movs	r3, #1
 575 003c 7B63     		str	r3, [r7, #52]
 249:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 576              		.loc 1 249 41
 577 003e 0023     		movs	r3, #0
 578 0040 BB63     		str	r3, [r7, #56]
 250:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 579              		.loc 1 250 35
 580 0042 6023     		movs	r3, #96
 581 0044 FB63     		str	r3, [r7, #60]
 251:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 582              		.loc 1 251 34
 583 0046 0223     		movs	r3, #2
 584 0048 7B64     		str	r3, [r7, #68]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 16


 252:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 585              		.loc 1 252 35
 586 004a 0123     		movs	r3, #1
 587 004c BB64     		str	r3, [r7, #72]
 253:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 588              		.loc 1 253 30
 589 004e 0123     		movs	r3, #1
 590 0050 FB64     		str	r3, [r7, #76]
 254:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 60;
 591              		.loc 1 254 30
 592 0052 3C23     		movs	r3, #60
 593 0054 3B65     		str	r3, [r7, #80]
 255:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 594              		.loc 1 255 30
 595 0056 0223     		movs	r3, #2
 596 0058 7B65     		str	r3, [r7, #84]
 256:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 597              		.loc 1 256 30
 598 005a 0223     		movs	r3, #2
 599 005c BB65     		str	r3, [r7, #88]
 257:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 600              		.loc 1 257 30
 601 005e 0223     		movs	r3, #2
 602 0060 FB65     		str	r3, [r7, #92]
 258:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 603              		.loc 1 258 7
 604 0062 07F11803 		add	r3, r7, #24
 605 0066 1846     		mov	r0, r3
 606 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 607 006c 0346     		mov	r3, r0
 608              		.loc 1 258 6
 609 006e 002B     		cmp	r3, #0
 610 0070 01D0     		beq	.L19
 259:Core/Src/main.c ****   {
 260:Core/Src/main.c ****     Error_Handler();
 611              		.loc 1 260 5
 612 0072 FFF7FEFF 		bl	Error_Handler
 613              	.L19:
 261:Core/Src/main.c ****   }
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 264:Core/Src/main.c ****   */
 265:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 614              		.loc 1 265 31
 615 0076 0F23     		movs	r3, #15
 616 0078 7B60     		str	r3, [r7, #4]
 266:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 267:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 617              		.loc 1 267 34
 618 007a 0323     		movs	r3, #3
 619 007c BB60     		str	r3, [r7, #8]
 268:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 620              		.loc 1 268 35
 621 007e 0023     		movs	r3, #0
 622 0080 FB60     		str	r3, [r7, #12]
 269:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 623              		.loc 1 269 36
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 17


 624 0082 0023     		movs	r3, #0
 625 0084 3B61     		str	r3, [r7, #16]
 270:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 626              		.loc 1 270 36
 627 0086 0023     		movs	r3, #0
 628 0088 7B61     		str	r3, [r7, #20]
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 629              		.loc 1 272 7
 630 008a 3B1D     		adds	r3, r7, #4
 631 008c 0521     		movs	r1, #5
 632 008e 1846     		mov	r0, r3
 633 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 634 0094 0346     		mov	r3, r0
 635              		.loc 1 272 6
 636 0096 002B     		cmp	r3, #0
 637 0098 01D0     		beq	.L21
 273:Core/Src/main.c ****   {
 274:Core/Src/main.c ****     Error_Handler();
 638              		.loc 1 274 5
 639 009a FFF7FEFF 		bl	Error_Handler
 640              	.L21:
 275:Core/Src/main.c ****   }
 276:Core/Src/main.c **** }
 641              		.loc 1 276 1
 642 009e 00BF     		nop
 643 00a0 6037     		adds	r7, r7, #96
 644              		.cfi_def_cfa_offset 8
 645 00a2 BD46     		mov	sp, r7
 646              		.cfi_def_cfa_register 13
 647              		@ sp needed
 648 00a4 80BD     		pop	{r7, pc}
 649              		.cfi_endproc
 650              	.LFE327:
 652              		.section	.text.MX_ADC1_Init,"ax",%progbits
 653              		.align	1
 654              		.syntax unified
 655              		.thumb
 656              		.thumb_func
 658              	MX_ADC1_Init:
 659              	.LFB328:
 277:Core/Src/main.c **** 
 278:Core/Src/main.c **** /**
 279:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 280:Core/Src/main.c ****   * @param None
 281:Core/Src/main.c ****   * @retval None
 282:Core/Src/main.c ****   */
 283:Core/Src/main.c **** static void MX_ADC1_Init(void)
 284:Core/Src/main.c **** {
 660              		.loc 1 284 1
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 40
 663              		@ frame_needed = 1, uses_anonymous_args = 0
 664 0000 80B5     		push	{r7, lr}
 665              		.cfi_def_cfa_offset 8
 666              		.cfi_offset 7, -8
 667              		.cfi_offset 14, -4
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 18


 668 0002 8AB0     		sub	sp, sp, #40
 669              		.cfi_def_cfa_offset 48
 670 0004 00AF     		add	r7, sp, #0
 671              		.cfi_def_cfa_register 7
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****   ADC_MultiModeTypeDef multimode = {0};
 672              		.loc 1 290 24
 673 0006 07F11C03 		add	r3, r7, #28
 674 000a 0022     		movs	r2, #0
 675 000c 1A60     		str	r2, [r3]
 676 000e 5A60     		str	r2, [r3, #4]
 677 0010 9A60     		str	r2, [r3, #8]
 291:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 678              		.loc 1 291 26
 679 0012 3B1D     		adds	r3, r7, #4
 680 0014 0022     		movs	r2, #0
 681 0016 1A60     		str	r2, [r3]
 682 0018 5A60     		str	r2, [r3, #4]
 683 001a 9A60     		str	r2, [r3, #8]
 684 001c DA60     		str	r2, [r3, #12]
 685 001e 1A61     		str	r2, [r3, #16]
 686 0020 5A61     		str	r2, [r3, #20]
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /** Common config
 298:Core/Src/main.c ****   */
 299:Core/Src/main.c ****   hadc1.Instance = ADC1;
 687              		.loc 1 299 18
 688 0022 434B     		ldr	r3, .L29
 689 0024 434A     		ldr	r2, .L29+4
 690 0026 1A60     		str	r2, [r3]
 300:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 691              		.loc 1 300 29
 692 0028 414B     		ldr	r3, .L29
 693 002a 0022     		movs	r2, #0
 694 002c 5A60     		str	r2, [r3, #4]
 301:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 695              		.loc 1 301 25
 696 002e 404B     		ldr	r3, .L29
 697 0030 0022     		movs	r2, #0
 698 0032 9A60     		str	r2, [r3, #8]
 302:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 699              		.loc 1 302 24
 700 0034 3E4B     		ldr	r3, .L29
 701 0036 0022     		movs	r2, #0
 702 0038 DA60     		str	r2, [r3, #12]
 303:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 703              		.loc 1 303 27
 704 003a 3D4B     		ldr	r3, .L29
 705 003c 0122     		movs	r2, #1
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 19


 706 003e 1A61     		str	r2, [r3, #16]
 304:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 707              		.loc 1 304 27
 708 0040 3B4B     		ldr	r3, .L29
 709 0042 0422     		movs	r2, #4
 710 0044 5A61     		str	r2, [r3, #20]
 305:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 711              		.loc 1 305 31
 712 0046 3A4B     		ldr	r3, .L29
 713 0048 0022     		movs	r2, #0
 714 004a 1A76     		strb	r2, [r3, #24]
 306:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 715              		.loc 1 306 33
 716 004c 384B     		ldr	r3, .L29
 717 004e 0122     		movs	r2, #1
 718 0050 5A76     		strb	r2, [r3, #25]
 307:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 3;
 719              		.loc 1 307 30
 720 0052 374B     		ldr	r3, .L29
 721 0054 0322     		movs	r2, #3
 722 0056 DA61     		str	r2, [r3, #28]
 308:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 723              		.loc 1 308 36
 724 0058 354B     		ldr	r3, .L29
 725 005a 0022     		movs	r2, #0
 726 005c 83F82020 		strb	r2, [r3, #32]
 309:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 727              		.loc 1 309 31
 728 0060 334B     		ldr	r3, .L29
 729 0062 0022     		movs	r2, #0
 730 0064 9A62     		str	r2, [r3, #40]
 310:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 731              		.loc 1 310 35
 732 0066 324B     		ldr	r3, .L29
 733 0068 0022     		movs	r2, #0
 734 006a DA62     		str	r2, [r3, #44]
 311:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 735              		.loc 1 311 36
 736 006c 304B     		ldr	r3, .L29
 737 006e 0122     		movs	r2, #1
 738 0070 83F83020 		strb	r2, [r3, #48]
 312:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 739              		.loc 1 312 22
 740 0074 2E4B     		ldr	r3, .L29
 741 0076 0022     		movs	r2, #0
 742 0078 5A63     		str	r2, [r3, #52]
 313:Core/Src/main.c ****   hadc1.Init.OversamplingMode = ENABLE;
 743              		.loc 1 313 31
 744 007a 2D4B     		ldr	r3, .L29
 745 007c 0122     		movs	r2, #1
 746 007e 83F83820 		strb	r2, [r3, #56]
 314:Core/Src/main.c ****   hadc1.Init.Oversampling.Ratio = ADC_OVERSAMPLING_RATIO_16;
 747              		.loc 1 314 33
 748 0082 2B4B     		ldr	r3, .L29
 749 0084 0C22     		movs	r2, #12
 750 0086 DA63     		str	r2, [r3, #60]
 315:Core/Src/main.c ****   hadc1.Init.Oversampling.RightBitShift = ADC_RIGHTBITSHIFT_NONE;
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 20


 751              		.loc 1 315 41
 752 0088 294B     		ldr	r3, .L29
 753 008a 0022     		movs	r2, #0
 754 008c 1A64     		str	r2, [r3, #64]
 316:Core/Src/main.c ****   hadc1.Init.Oversampling.TriggeredMode = ADC_TRIGGEREDMODE_SINGLE_TRIGGER;
 755              		.loc 1 316 41
 756 008e 284B     		ldr	r3, .L29
 757 0090 0022     		movs	r2, #0
 758 0092 5A64     		str	r2, [r3, #68]
 317:Core/Src/main.c ****   hadc1.Init.Oversampling.OversamplingStopReset = ADC_REGOVERSAMPLING_CONTINUED_MODE;
 759              		.loc 1 317 49
 760 0094 264B     		ldr	r3, .L29
 761 0096 0122     		movs	r2, #1
 762 0098 9A64     		str	r2, [r3, #72]
 318:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 763              		.loc 1 318 7
 764 009a 2548     		ldr	r0, .L29
 765 009c FFF7FEFF 		bl	HAL_ADC_Init
 766 00a0 0346     		mov	r3, r0
 767              		.loc 1 318 6
 768 00a2 002B     		cmp	r3, #0
 769 00a4 01D0     		beq	.L23
 319:Core/Src/main.c ****   {
 320:Core/Src/main.c ****     Error_Handler();
 770              		.loc 1 320 5
 771 00a6 FFF7FEFF 		bl	Error_Handler
 772              	.L23:
 321:Core/Src/main.c ****   }
 322:Core/Src/main.c **** 
 323:Core/Src/main.c ****   /** Configure the ADC multi-mode
 324:Core/Src/main.c ****   */
 325:Core/Src/main.c ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 773              		.loc 1 325 18
 774 00aa 0023     		movs	r3, #0
 775 00ac FB61     		str	r3, [r7, #28]
 326:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 776              		.loc 1 326 7
 777 00ae 07F11C03 		add	r3, r7, #28
 778 00b2 1946     		mov	r1, r3
 779 00b4 1E48     		ldr	r0, .L29
 780 00b6 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 781 00ba 0346     		mov	r3, r0
 782              		.loc 1 326 6
 783 00bc 002B     		cmp	r3, #0
 784 00be 01D0     		beq	.L24
 327:Core/Src/main.c ****   {
 328:Core/Src/main.c ****     Error_Handler();
 785              		.loc 1 328 5
 786 00c0 FFF7FEFF 		bl	Error_Handler
 787              	.L24:
 329:Core/Src/main.c ****   }
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****   /** Configure Regular Channel
 332:Core/Src/main.c ****   */
 333:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 788              		.loc 1 333 19
 789 00c4 1C4B     		ldr	r3, .L29+8
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 21


 790 00c6 7B60     		str	r3, [r7, #4]
 334:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 791              		.loc 1 334 16
 792 00c8 0623     		movs	r3, #6
 793 00ca BB60     		str	r3, [r7, #8]
 335:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_247CYCLES_5;
 794              		.loc 1 335 24
 795 00cc 0623     		movs	r3, #6
 796 00ce FB60     		str	r3, [r7, #12]
 336:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 797              		.loc 1 336 22
 798 00d0 7F23     		movs	r3, #127
 799 00d2 3B61     		str	r3, [r7, #16]
 337:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 800              		.loc 1 337 24
 801 00d4 0423     		movs	r3, #4
 802 00d6 7B61     		str	r3, [r7, #20]
 338:Core/Src/main.c ****   sConfig.Offset = 0;
 803              		.loc 1 338 18
 804 00d8 0023     		movs	r3, #0
 805 00da BB61     		str	r3, [r7, #24]
 339:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 806              		.loc 1 339 7
 807 00dc 3B1D     		adds	r3, r7, #4
 808 00de 1946     		mov	r1, r3
 809 00e0 1348     		ldr	r0, .L29
 810 00e2 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 811 00e6 0346     		mov	r3, r0
 812              		.loc 1 339 6
 813 00e8 002B     		cmp	r3, #0
 814 00ea 01D0     		beq	.L25
 340:Core/Src/main.c ****   {
 341:Core/Src/main.c ****     Error_Handler();
 815              		.loc 1 341 5
 816 00ec FFF7FEFF 		bl	Error_Handler
 817              	.L25:
 342:Core/Src/main.c ****   }
 343:Core/Src/main.c **** 
 344:Core/Src/main.c ****   /** Configure Regular Channel
 345:Core/Src/main.c ****   */
 346:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_2;
 818              		.loc 1 346 19
 819 00f0 124B     		ldr	r3, .L29+12
 820 00f2 7B60     		str	r3, [r7, #4]
 347:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 821              		.loc 1 347 16
 822 00f4 0C23     		movs	r3, #12
 823 00f6 BB60     		str	r3, [r7, #8]
 348:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 824              		.loc 1 348 7
 825 00f8 3B1D     		adds	r3, r7, #4
 826 00fa 1946     		mov	r1, r3
 827 00fc 0C48     		ldr	r0, .L29
 828 00fe FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 829 0102 0346     		mov	r3, r0
 830              		.loc 1 348 6
 831 0104 002B     		cmp	r3, #0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 22


 832 0106 01D0     		beq	.L26
 349:Core/Src/main.c ****   {
 350:Core/Src/main.c ****     Error_Handler();
 833              		.loc 1 350 5
 834 0108 FFF7FEFF 		bl	Error_Handler
 835              	.L26:
 351:Core/Src/main.c ****   }
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   /** Configure Regular Channel
 354:Core/Src/main.c ****   */
 355:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 836              		.loc 1 355 19
 837 010c 0C4B     		ldr	r3, .L29+16
 838 010e 7B60     		str	r3, [r7, #4]
 356:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 839              		.loc 1 356 16
 840 0110 1223     		movs	r3, #18
 841 0112 BB60     		str	r3, [r7, #8]
 357:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 842              		.loc 1 357 7
 843 0114 3B1D     		adds	r3, r7, #4
 844 0116 1946     		mov	r1, r3
 845 0118 0548     		ldr	r0, .L29
 846 011a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 847 011e 0346     		mov	r3, r0
 848              		.loc 1 357 6
 849 0120 002B     		cmp	r3, #0
 850 0122 01D0     		beq	.L28
 358:Core/Src/main.c ****   {
 359:Core/Src/main.c ****     Error_Handler();
 851              		.loc 1 359 5
 852 0124 FFF7FEFF 		bl	Error_Handler
 853              	.L28:
 360:Core/Src/main.c ****   }
 361:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 362:Core/Src/main.c **** 
 363:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 364:Core/Src/main.c **** 
 365:Core/Src/main.c **** }
 854              		.loc 1 365 1
 855 0128 00BF     		nop
 856 012a 2837     		adds	r7, r7, #40
 857              		.cfi_def_cfa_offset 8
 858 012c BD46     		mov	sp, r7
 859              		.cfi_def_cfa_register 13
 860              		@ sp needed
 861 012e 80BD     		pop	{r7, pc}
 862              	.L30:
 863              		.align	2
 864              	.L29:
 865 0130 00000000 		.word	hadc1
 866 0134 00000450 		.word	1342439424
 867 0138 02003004 		.word	70254594
 868 013c 04006008 		.word	140509188
 869 0140 000052C7 		.word	-950927360
 870              		.cfi_endproc
 871              	.LFE328:
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 23


 873              		.section	.text.MX_LPUART1_UART_Init,"ax",%progbits
 874              		.align	1
 875              		.syntax unified
 876              		.thumb
 877              		.thumb_func
 879              	MX_LPUART1_UART_Init:
 880              	.LFB329:
 366:Core/Src/main.c **** 
 367:Core/Src/main.c **** /**
 368:Core/Src/main.c ****   * @brief LPUART1 Initialization Function
 369:Core/Src/main.c ****   * @param None
 370:Core/Src/main.c ****   * @retval None
 371:Core/Src/main.c ****   */
 372:Core/Src/main.c **** static void MX_LPUART1_UART_Init(void)
 373:Core/Src/main.c **** {
 881              		.loc 1 373 1
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 1, uses_anonymous_args = 0
 885 0000 80B5     		push	{r7, lr}
 886              		.cfi_def_cfa_offset 8
 887              		.cfi_offset 7, -8
 888              		.cfi_offset 14, -4
 889 0002 00AF     		add	r7, sp, #0
 890              		.cfi_def_cfa_register 7
 374:Core/Src/main.c **** 
 375:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 0 */
 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 0 */
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 1 */
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 1 */
 382:Core/Src/main.c ****   hlpuart1.Instance = LPUART1;
 891              		.loc 1 382 21
 892 0004 244B     		ldr	r3, .L37
 893 0006 254A     		ldr	r2, .L37+4
 894 0008 1A60     		str	r2, [r3]
 383:Core/Src/main.c ****   hlpuart1.Init.BaudRate = 115200;
 895              		.loc 1 383 26
 896 000a 234B     		ldr	r3, .L37
 897 000c 4FF4E132 		mov	r2, #115200
 898 0010 5A60     		str	r2, [r3, #4]
 384:Core/Src/main.c ****   hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 899              		.loc 1 384 28
 900 0012 214B     		ldr	r3, .L37
 901 0014 0022     		movs	r2, #0
 902 0016 9A60     		str	r2, [r3, #8]
 385:Core/Src/main.c ****   hlpuart1.Init.StopBits = UART_STOPBITS_1;
 903              		.loc 1 385 26
 904 0018 1F4B     		ldr	r3, .L37
 905 001a 0022     		movs	r2, #0
 906 001c DA60     		str	r2, [r3, #12]
 386:Core/Src/main.c ****   hlpuart1.Init.Parity = UART_PARITY_NONE;
 907              		.loc 1 386 24
 908 001e 1E4B     		ldr	r3, .L37
 909 0020 0022     		movs	r2, #0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 24


 910 0022 1A61     		str	r2, [r3, #16]
 387:Core/Src/main.c ****   hlpuart1.Init.Mode = UART_MODE_TX_RX;
 911              		.loc 1 387 22
 912 0024 1C4B     		ldr	r3, .L37
 913 0026 0C22     		movs	r2, #12
 914 0028 5A61     		str	r2, [r3, #20]
 388:Core/Src/main.c ****   hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 915              		.loc 1 388 27
 916 002a 1B4B     		ldr	r3, .L37
 917 002c 0022     		movs	r2, #0
 918 002e 9A61     		str	r2, [r3, #24]
 389:Core/Src/main.c ****   hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 919              		.loc 1 389 32
 920 0030 194B     		ldr	r3, .L37
 921 0032 0022     		movs	r2, #0
 922 0034 1A62     		str	r2, [r3, #32]
 390:Core/Src/main.c ****   hlpuart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 923              		.loc 1 390 32
 924 0036 184B     		ldr	r3, .L37
 925 0038 0022     		movs	r2, #0
 926 003a 5A62     		str	r2, [r3, #36]
 391:Core/Src/main.c ****   hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_RXOVERRUNDISABLE_INIT;
 927              		.loc 1 391 40
 928 003c 164B     		ldr	r3, .L37
 929 003e 1022     		movs	r2, #16
 930 0040 9A62     		str	r2, [r3, #40]
 392:Core/Src/main.c ****   hlpuart1.AdvancedInit.OverrunDisable = UART_ADVFEATURE_OVERRUN_DISABLE;
 931              		.loc 1 392 40
 932 0042 154B     		ldr	r3, .L37
 933 0044 4FF48052 		mov	r2, #4096
 934 0048 DA63     		str	r2, [r3, #60]
 393:Core/Src/main.c ****   hlpuart1.FifoMode = UART_FIFOMODE_DISABLE;
 935              		.loc 1 393 21
 936 004a 134B     		ldr	r3, .L37
 937 004c 0022     		movs	r2, #0
 938 004e 5A66     		str	r2, [r3, #100]
 394:Core/Src/main.c ****   if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 939              		.loc 1 394 7
 940 0050 1148     		ldr	r0, .L37
 941 0052 FFF7FEFF 		bl	HAL_UART_Init
 942 0056 0346     		mov	r3, r0
 943              		.loc 1 394 6
 944 0058 002B     		cmp	r3, #0
 945 005a 01D0     		beq	.L32
 395:Core/Src/main.c ****   {
 396:Core/Src/main.c ****     Error_Handler();
 946              		.loc 1 396 5
 947 005c FFF7FEFF 		bl	Error_Handler
 948              	.L32:
 397:Core/Src/main.c ****   }
 398:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&hlpuart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 949              		.loc 1 398 7
 950 0060 0021     		movs	r1, #0
 951 0062 0D48     		ldr	r0, .L37
 952 0064 FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 953 0068 0346     		mov	r3, r0
 954              		.loc 1 398 6
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 25


 955 006a 002B     		cmp	r3, #0
 956 006c 01D0     		beq	.L33
 399:Core/Src/main.c ****   {
 400:Core/Src/main.c ****     Error_Handler();
 957              		.loc 1 400 5
 958 006e FFF7FEFF 		bl	Error_Handler
 959              	.L33:
 401:Core/Src/main.c ****   }
 402:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&hlpuart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 960              		.loc 1 402 7
 961 0072 0021     		movs	r1, #0
 962 0074 0848     		ldr	r0, .L37
 963 0076 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 964 007a 0346     		mov	r3, r0
 965              		.loc 1 402 6
 966 007c 002B     		cmp	r3, #0
 967 007e 01D0     		beq	.L34
 403:Core/Src/main.c ****   {
 404:Core/Src/main.c ****     Error_Handler();
 968              		.loc 1 404 5
 969 0080 FFF7FEFF 		bl	Error_Handler
 970              	.L34:
 405:Core/Src/main.c ****   }
 406:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&hlpuart1) != HAL_OK)
 971              		.loc 1 406 7
 972 0084 0448     		ldr	r0, .L37
 973 0086 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 974 008a 0346     		mov	r3, r0
 975              		.loc 1 406 6
 976 008c 002B     		cmp	r3, #0
 977 008e 01D0     		beq	.L36
 407:Core/Src/main.c ****   {
 408:Core/Src/main.c ****     Error_Handler();
 978              		.loc 1 408 5
 979 0090 FFF7FEFF 		bl	Error_Handler
 980              	.L36:
 409:Core/Src/main.c ****   }
 410:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 2 */
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 2 */
 413:Core/Src/main.c **** 
 414:Core/Src/main.c **** }
 981              		.loc 1 414 1
 982 0094 00BF     		nop
 983 0096 80BD     		pop	{r7, pc}
 984              	.L38:
 985              		.align	2
 986              	.L37:
 987 0098 00000000 		.word	hlpuart1
 988 009c 00800040 		.word	1073774592
 989              		.cfi_endproc
 990              	.LFE329:
 992              		.section	.text.MX_UART4_Init,"ax",%progbits
 993              		.align	1
 994              		.syntax unified
 995              		.thumb
 996              		.thumb_func
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 26


 998              	MX_UART4_Init:
 999              	.LFB330:
 415:Core/Src/main.c **** 
 416:Core/Src/main.c **** /**
 417:Core/Src/main.c ****   * @brief UART4 Initialization Function
 418:Core/Src/main.c ****   * @param None
 419:Core/Src/main.c ****   * @retval None
 420:Core/Src/main.c ****   */
 421:Core/Src/main.c **** static void MX_UART4_Init(void)
 422:Core/Src/main.c **** {
 1000              		.loc 1 422 1
 1001              		.cfi_startproc
 1002              		@ args = 0, pretend = 0, frame = 0
 1003              		@ frame_needed = 1, uses_anonymous_args = 0
 1004 0000 80B5     		push	{r7, lr}
 1005              		.cfi_def_cfa_offset 8
 1006              		.cfi_offset 7, -8
 1007              		.cfi_offset 14, -4
 1008 0002 00AF     		add	r7, sp, #0
 1009              		.cfi_def_cfa_register 7
 423:Core/Src/main.c **** 
 424:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 0 */
 425:Core/Src/main.c **** 
 426:Core/Src/main.c ****   /* USER CODE END UART4_Init 0 */
 427:Core/Src/main.c **** 
 428:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 1 */
 429:Core/Src/main.c **** 
 430:Core/Src/main.c ****   /* USER CODE END UART4_Init 1 */
 431:Core/Src/main.c ****   huart4.Instance = UART4;
 1010              		.loc 1 431 19
 1011 0004 224B     		ldr	r3, .L45
 1012 0006 234A     		ldr	r2, .L45+4
 1013 0008 1A60     		str	r2, [r3]
 432:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
 1014              		.loc 1 432 24
 1015 000a 214B     		ldr	r3, .L45
 1016 000c 4FF4E132 		mov	r2, #115200
 1017 0010 5A60     		str	r2, [r3, #4]
 433:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 1018              		.loc 1 433 26
 1019 0012 1F4B     		ldr	r3, .L45
 1020 0014 0022     		movs	r2, #0
 1021 0016 9A60     		str	r2, [r3, #8]
 434:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 1022              		.loc 1 434 24
 1023 0018 1D4B     		ldr	r3, .L45
 1024 001a 0022     		movs	r2, #0
 1025 001c DA60     		str	r2, [r3, #12]
 435:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 1026              		.loc 1 435 22
 1027 001e 1C4B     		ldr	r3, .L45
 1028 0020 0022     		movs	r2, #0
 1029 0022 1A61     		str	r2, [r3, #16]
 436:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 1030              		.loc 1 436 20
 1031 0024 1A4B     		ldr	r3, .L45
 1032 0026 0C22     		movs	r2, #12
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 27


 1033 0028 5A61     		str	r2, [r3, #20]
 437:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1034              		.loc 1 437 25
 1035 002a 194B     		ldr	r3, .L45
 1036 002c 0022     		movs	r2, #0
 1037 002e 9A61     		str	r2, [r3, #24]
 438:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 1038              		.loc 1 438 28
 1039 0030 174B     		ldr	r3, .L45
 1040 0032 0022     		movs	r2, #0
 1041 0034 DA61     		str	r2, [r3, #28]
 439:Core/Src/main.c ****   huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1042              		.loc 1 439 30
 1043 0036 164B     		ldr	r3, .L45
 1044 0038 0022     		movs	r2, #0
 1045 003a 1A62     		str	r2, [r3, #32]
 440:Core/Src/main.c ****   huart4.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 1046              		.loc 1 440 30
 1047 003c 144B     		ldr	r3, .L45
 1048 003e 0022     		movs	r2, #0
 1049 0040 5A62     		str	r2, [r3, #36]
 441:Core/Src/main.c ****   huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1050              		.loc 1 441 38
 1051 0042 134B     		ldr	r3, .L45
 1052 0044 0022     		movs	r2, #0
 1053 0046 9A62     		str	r2, [r3, #40]
 442:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 1054              		.loc 1 442 7
 1055 0048 1148     		ldr	r0, .L45
 1056 004a FFF7FEFF 		bl	HAL_UART_Init
 1057 004e 0346     		mov	r3, r0
 1058              		.loc 1 442 6
 1059 0050 002B     		cmp	r3, #0
 1060 0052 01D0     		beq	.L40
 443:Core/Src/main.c ****   {
 444:Core/Src/main.c ****     Error_Handler();
 1061              		.loc 1 444 5
 1062 0054 FFF7FEFF 		bl	Error_Handler
 1063              	.L40:
 445:Core/Src/main.c ****   }
 446:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart4, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 1064              		.loc 1 446 7
 1065 0058 0021     		movs	r1, #0
 1066 005a 0D48     		ldr	r0, .L45
 1067 005c FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 1068 0060 0346     		mov	r3, r0
 1069              		.loc 1 446 6
 1070 0062 002B     		cmp	r3, #0
 1071 0064 01D0     		beq	.L41
 447:Core/Src/main.c ****   {
 448:Core/Src/main.c ****     Error_Handler();
 1072              		.loc 1 448 5
 1073 0066 FFF7FEFF 		bl	Error_Handler
 1074              	.L41:
 449:Core/Src/main.c ****   }
 450:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart4, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 1075              		.loc 1 450 7
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 28


 1076 006a 0021     		movs	r1, #0
 1077 006c 0848     		ldr	r0, .L45
 1078 006e FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 1079 0072 0346     		mov	r3, r0
 1080              		.loc 1 450 6
 1081 0074 002B     		cmp	r3, #0
 1082 0076 01D0     		beq	.L42
 451:Core/Src/main.c ****   {
 452:Core/Src/main.c ****     Error_Handler();
 1083              		.loc 1 452 5
 1084 0078 FFF7FEFF 		bl	Error_Handler
 1085              	.L42:
 453:Core/Src/main.c ****   }
 454:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&huart4) != HAL_OK)
 1086              		.loc 1 454 7
 1087 007c 0448     		ldr	r0, .L45
 1088 007e FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 1089 0082 0346     		mov	r3, r0
 1090              		.loc 1 454 6
 1091 0084 002B     		cmp	r3, #0
 1092 0086 01D0     		beq	.L44
 455:Core/Src/main.c ****   {
 456:Core/Src/main.c ****     Error_Handler();
 1093              		.loc 1 456 5
 1094 0088 FFF7FEFF 		bl	Error_Handler
 1095              	.L44:
 457:Core/Src/main.c ****   }
 458:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 2 */
 459:Core/Src/main.c **** 
 460:Core/Src/main.c ****   /* USER CODE END UART4_Init 2 */
 461:Core/Src/main.c **** 
 462:Core/Src/main.c **** }
 1096              		.loc 1 462 1
 1097 008c 00BF     		nop
 1098 008e 80BD     		pop	{r7, pc}
 1099              	.L46:
 1100              		.align	2
 1101              	.L45:
 1102 0090 00000000 		.word	huart4
 1103 0094 004C0040 		.word	1073761280
 1104              		.cfi_endproc
 1105              	.LFE330:
 1107              		.section	.text.MX_TIM3_Init,"ax",%progbits
 1108              		.align	1
 1109              		.syntax unified
 1110              		.thumb
 1111              		.thumb_func
 1113              	MX_TIM3_Init:
 1114              	.LFB331:
 463:Core/Src/main.c **** 
 464:Core/Src/main.c **** /**
 465:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 466:Core/Src/main.c ****   * @param None
 467:Core/Src/main.c ****   * @retval None
 468:Core/Src/main.c ****   */
 469:Core/Src/main.c **** static void MX_TIM3_Init(void)
 470:Core/Src/main.c **** {
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 29


 1115              		.loc 1 470 1
 1116              		.cfi_startproc
 1117              		@ args = 0, pretend = 0, frame = 56
 1118              		@ frame_needed = 1, uses_anonymous_args = 0
 1119 0000 80B5     		push	{r7, lr}
 1120              		.cfi_def_cfa_offset 8
 1121              		.cfi_offset 7, -8
 1122              		.cfi_offset 14, -4
 1123 0002 8EB0     		sub	sp, sp, #56
 1124              		.cfi_def_cfa_offset 64
 1125 0004 00AF     		add	r7, sp, #0
 1126              		.cfi_def_cfa_register 7
 471:Core/Src/main.c **** 
 472:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 473:Core/Src/main.c **** 
 474:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 475:Core/Src/main.c **** 
 476:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1127              		.loc 1 476 26
 1128 0006 07F12803 		add	r3, r7, #40
 1129 000a 0022     		movs	r2, #0
 1130 000c 1A60     		str	r2, [r3]
 1131 000e 5A60     		str	r2, [r3, #4]
 1132 0010 9A60     		str	r2, [r3, #8]
 1133 0012 DA60     		str	r2, [r3, #12]
 477:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1134              		.loc 1 477 27
 1135 0014 07F11C03 		add	r3, r7, #28
 1136 0018 0022     		movs	r2, #0
 1137 001a 1A60     		str	r2, [r3]
 1138 001c 5A60     		str	r2, [r3, #4]
 1139 001e 9A60     		str	r2, [r3, #8]
 478:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1140              		.loc 1 478 22
 1141 0020 3B46     		mov	r3, r7
 1142 0022 0022     		movs	r2, #0
 1143 0024 1A60     		str	r2, [r3]
 1144 0026 5A60     		str	r2, [r3, #4]
 1145 0028 9A60     		str	r2, [r3, #8]
 1146 002a DA60     		str	r2, [r3, #12]
 1147 002c 1A61     		str	r2, [r3, #16]
 1148 002e 5A61     		str	r2, [r3, #20]
 1149 0030 9A61     		str	r2, [r3, #24]
 479:Core/Src/main.c **** 
 480:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 481:Core/Src/main.c **** 
 482:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 483:Core/Src/main.c ****   htim3.Instance = TIM3;
 1150              		.loc 1 483 18
 1151 0032 374B     		ldr	r3, .L55
 1152 0034 374A     		ldr	r2, .L55+4
 1153 0036 1A60     		str	r2, [r3]
 484:Core/Src/main.c ****   htim3.Init.Prescaler = 119;
 1154              		.loc 1 484 24
 1155 0038 354B     		ldr	r3, .L55
 1156 003a 7722     		movs	r2, #119
 1157 003c 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 30


 485:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1158              		.loc 1 485 26
 1159 003e 344B     		ldr	r3, .L55
 1160 0040 0022     		movs	r2, #0
 1161 0042 9A60     		str	r2, [r3, #8]
 486:Core/Src/main.c ****   htim3.Init.Period = 255;
 1162              		.loc 1 486 21
 1163 0044 324B     		ldr	r3, .L55
 1164 0046 FF22     		movs	r2, #255
 1165 0048 DA60     		str	r2, [r3, #12]
 487:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1166              		.loc 1 487 28
 1167 004a 314B     		ldr	r3, .L55
 1168 004c 0022     		movs	r2, #0
 1169 004e 1A61     		str	r2, [r3, #16]
 488:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1170              		.loc 1 488 32
 1171 0050 2F4B     		ldr	r3, .L55
 1172 0052 8022     		movs	r2, #128
 1173 0054 9A61     		str	r2, [r3, #24]
 489:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1174              		.loc 1 489 7
 1175 0056 2E48     		ldr	r0, .L55
 1176 0058 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1177 005c 0346     		mov	r3, r0
 1178              		.loc 1 489 6
 1179 005e 002B     		cmp	r3, #0
 1180 0060 01D0     		beq	.L48
 490:Core/Src/main.c ****   {
 491:Core/Src/main.c ****     Error_Handler();
 1181              		.loc 1 491 5
 1182 0062 FFF7FEFF 		bl	Error_Handler
 1183              	.L48:
 492:Core/Src/main.c ****   }
 493:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1184              		.loc 1 493 34
 1185 0066 4FF48053 		mov	r3, #4096
 1186 006a BB62     		str	r3, [r7, #40]
 494:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1187              		.loc 1 494 7
 1188 006c 07F12803 		add	r3, r7, #40
 1189 0070 1946     		mov	r1, r3
 1190 0072 2748     		ldr	r0, .L55
 1191 0074 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1192 0078 0346     		mov	r3, r0
 1193              		.loc 1 494 6
 1194 007a 002B     		cmp	r3, #0
 1195 007c 01D0     		beq	.L49
 495:Core/Src/main.c ****   {
 496:Core/Src/main.c ****     Error_Handler();
 1196              		.loc 1 496 5
 1197 007e FFF7FEFF 		bl	Error_Handler
 1198              	.L49:
 497:Core/Src/main.c ****   }
 498:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 1199              		.loc 1 498 7
 1200 0082 2348     		ldr	r0, .L55
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 31


 1201 0084 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1202 0088 0346     		mov	r3, r0
 1203              		.loc 1 498 6
 1204 008a 002B     		cmp	r3, #0
 1205 008c 01D0     		beq	.L50
 499:Core/Src/main.c ****   {
 500:Core/Src/main.c ****     Error_Handler();
 1206              		.loc 1 500 5
 1207 008e FFF7FEFF 		bl	Error_Handler
 1208              	.L50:
 501:Core/Src/main.c ****   }
 502:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1209              		.loc 1 502 37
 1210 0092 0023     		movs	r3, #0
 1211 0094 FB61     		str	r3, [r7, #28]
 503:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1212              		.loc 1 503 33
 1213 0096 0023     		movs	r3, #0
 1214 0098 7B62     		str	r3, [r7, #36]
 504:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1215              		.loc 1 504 7
 1216 009a 07F11C03 		add	r3, r7, #28
 1217 009e 1946     		mov	r1, r3
 1218 00a0 1B48     		ldr	r0, .L55
 1219 00a2 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1220 00a6 0346     		mov	r3, r0
 1221              		.loc 1 504 6
 1222 00a8 002B     		cmp	r3, #0
 1223 00aa 01D0     		beq	.L51
 505:Core/Src/main.c ****   {
 506:Core/Src/main.c ****     Error_Handler();
 1224              		.loc 1 506 5
 1225 00ac FFF7FEFF 		bl	Error_Handler
 1226              	.L51:
 507:Core/Src/main.c ****   }
 508:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 1227              		.loc 1 508 20
 1228 00b0 6023     		movs	r3, #96
 1229 00b2 3B60     		str	r3, [r7]
 509:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1230              		.loc 1 509 19
 1231 00b4 0023     		movs	r3, #0
 1232 00b6 7B60     		str	r3, [r7, #4]
 510:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1233              		.loc 1 510 24
 1234 00b8 0023     		movs	r3, #0
 1235 00ba BB60     		str	r3, [r7, #8]
 511:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1236              		.loc 1 511 24
 1237 00bc 0023     		movs	r3, #0
 1238 00be 3B61     		str	r3, [r7, #16]
 512:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1239              		.loc 1 512 7
 1240 00c0 3B46     		mov	r3, r7
 1241 00c2 0022     		movs	r2, #0
 1242 00c4 1946     		mov	r1, r3
 1243 00c6 1248     		ldr	r0, .L55
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 32


 1244 00c8 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1245 00cc 0346     		mov	r3, r0
 1246              		.loc 1 512 6
 1247 00ce 002B     		cmp	r3, #0
 1248 00d0 01D0     		beq	.L52
 513:Core/Src/main.c ****   {
 514:Core/Src/main.c ****     Error_Handler();
 1249              		.loc 1 514 5
 1250 00d2 FFF7FEFF 		bl	Error_Handler
 1251              	.L52:
 515:Core/Src/main.c ****   }
 516:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 1252              		.loc 1 516 7
 1253 00d6 3B46     		mov	r3, r7
 1254 00d8 0422     		movs	r2, #4
 1255 00da 1946     		mov	r1, r3
 1256 00dc 0C48     		ldr	r0, .L55
 1257 00de FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1258 00e2 0346     		mov	r3, r0
 1259              		.loc 1 516 6
 1260 00e4 002B     		cmp	r3, #0
 1261 00e6 01D0     		beq	.L53
 517:Core/Src/main.c ****   {
 518:Core/Src/main.c ****     Error_Handler();
 1262              		.loc 1 518 5
 1263 00e8 FFF7FEFF 		bl	Error_Handler
 1264              	.L53:
 519:Core/Src/main.c ****   }
 520:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 1265              		.loc 1 520 7
 1266 00ec 3B46     		mov	r3, r7
 1267 00ee 0822     		movs	r2, #8
 1268 00f0 1946     		mov	r1, r3
 1269 00f2 0748     		ldr	r0, .L55
 1270 00f4 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1271 00f8 0346     		mov	r3, r0
 1272              		.loc 1 520 6
 1273 00fa 002B     		cmp	r3, #0
 1274 00fc 01D0     		beq	.L54
 521:Core/Src/main.c ****   {
 522:Core/Src/main.c ****     Error_Handler();
 1275              		.loc 1 522 5
 1276 00fe FFF7FEFF 		bl	Error_Handler
 1277              	.L54:
 523:Core/Src/main.c ****   }
 524:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 525:Core/Src/main.c **** 
 526:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 527:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 1278              		.loc 1 527 3
 1279 0102 0348     		ldr	r0, .L55
 1280 0104 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 528:Core/Src/main.c **** 
 529:Core/Src/main.c **** }
 1281              		.loc 1 529 1
 1282 0108 00BF     		nop
 1283 010a 3837     		adds	r7, r7, #56
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 33


 1284              		.cfi_def_cfa_offset 8
 1285 010c BD46     		mov	sp, r7
 1286              		.cfi_def_cfa_register 13
 1287              		@ sp needed
 1288 010e 80BD     		pop	{r7, pc}
 1289              	.L56:
 1290              		.align	2
 1291              	.L55:
 1292 0110 00000000 		.word	htim3
 1293 0114 00040040 		.word	1073742848
 1294              		.cfi_endproc
 1295              	.LFE331:
 1297              		.section	.text.MX_TIM4_Init,"ax",%progbits
 1298              		.align	1
 1299              		.syntax unified
 1300              		.thumb
 1301              		.thumb_func
 1303              	MX_TIM4_Init:
 1304              	.LFB332:
 530:Core/Src/main.c **** 
 531:Core/Src/main.c **** /**
 532:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 533:Core/Src/main.c ****   * @param None
 534:Core/Src/main.c ****   * @retval None
 535:Core/Src/main.c ****   */
 536:Core/Src/main.c **** static void MX_TIM4_Init(void)
 537:Core/Src/main.c **** {
 1305              		.loc 1 537 1
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 32
 1308              		@ frame_needed = 1, uses_anonymous_args = 0
 1309 0000 80B5     		push	{r7, lr}
 1310              		.cfi_def_cfa_offset 8
 1311              		.cfi_offset 7, -8
 1312              		.cfi_offset 14, -4
 1313 0002 88B0     		sub	sp, sp, #32
 1314              		.cfi_def_cfa_offset 40
 1315 0004 00AF     		add	r7, sp, #0
 1316              		.cfi_def_cfa_register 7
 538:Core/Src/main.c **** 
 539:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 540:Core/Src/main.c **** 
 541:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 542:Core/Src/main.c **** 
 543:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1317              		.loc 1 543 26
 1318 0006 07F11003 		add	r3, r7, #16
 1319 000a 0022     		movs	r2, #0
 1320 000c 1A60     		str	r2, [r3]
 1321 000e 5A60     		str	r2, [r3, #4]
 1322 0010 9A60     		str	r2, [r3, #8]
 1323 0012 DA60     		str	r2, [r3, #12]
 544:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1324              		.loc 1 544 27
 1325 0014 3B1D     		adds	r3, r7, #4
 1326 0016 0022     		movs	r2, #0
 1327 0018 1A60     		str	r2, [r3]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 34


 1328 001a 5A60     		str	r2, [r3, #4]
 1329 001c 9A60     		str	r2, [r3, #8]
 545:Core/Src/main.c **** 
 546:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 547:Core/Src/main.c **** 
 548:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 549:Core/Src/main.c ****   htim4.Instance = TIM4;
 1330              		.loc 1 549 18
 1331 001e 1D4B     		ldr	r3, .L62
 1332 0020 1D4A     		ldr	r2, .L62+4
 1333 0022 1A60     		str	r2, [r3]
 550:Core/Src/main.c ****   htim4.Init.Prescaler = 119;
 1334              		.loc 1 550 24
 1335 0024 1B4B     		ldr	r3, .L62
 1336 0026 7722     		movs	r2, #119
 1337 0028 5A60     		str	r2, [r3, #4]
 551:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 1338              		.loc 1 551 26
 1339 002a 1A4B     		ldr	r3, .L62
 1340 002c 0022     		movs	r2, #0
 1341 002e 9A60     		str	r2, [r3, #8]
 552:Core/Src/main.c ****   htim4.Init.Period = 65535;
 1342              		.loc 1 552 21
 1343 0030 184B     		ldr	r3, .L62
 1344 0032 4FF6FF72 		movw	r2, #65535
 1345 0036 DA60     		str	r2, [r3, #12]
 553:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1346              		.loc 1 553 28
 1347 0038 164B     		ldr	r3, .L62
 1348 003a 0022     		movs	r2, #0
 1349 003c 1A61     		str	r2, [r3, #16]
 554:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1350              		.loc 1 554 32
 1351 003e 154B     		ldr	r3, .L62
 1352 0040 0022     		movs	r2, #0
 1353 0042 9A61     		str	r2, [r3, #24]
 555:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 1354              		.loc 1 555 7
 1355 0044 1348     		ldr	r0, .L62
 1356 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1357 004a 0346     		mov	r3, r0
 1358              		.loc 1 555 6
 1359 004c 002B     		cmp	r3, #0
 1360 004e 01D0     		beq	.L58
 556:Core/Src/main.c ****   {
 557:Core/Src/main.c ****     Error_Handler();
 1361              		.loc 1 557 5
 1362 0050 FFF7FEFF 		bl	Error_Handler
 1363              	.L58:
 558:Core/Src/main.c ****   }
 559:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1364              		.loc 1 559 34
 1365 0054 4FF48053 		mov	r3, #4096
 1366 0058 3B61     		str	r3, [r7, #16]
 560:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 1367              		.loc 1 560 7
 1368 005a 07F11003 		add	r3, r7, #16
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 35


 1369 005e 1946     		mov	r1, r3
 1370 0060 0C48     		ldr	r0, .L62
 1371 0062 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1372 0066 0346     		mov	r3, r0
 1373              		.loc 1 560 6
 1374 0068 002B     		cmp	r3, #0
 1375 006a 01D0     		beq	.L59
 561:Core/Src/main.c ****   {
 562:Core/Src/main.c ****     Error_Handler();
 1376              		.loc 1 562 5
 1377 006c FFF7FEFF 		bl	Error_Handler
 1378              	.L59:
 563:Core/Src/main.c ****   }
 564:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1379              		.loc 1 564 37
 1380 0070 0023     		movs	r3, #0
 1381 0072 7B60     		str	r3, [r7, #4]
 565:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1382              		.loc 1 565 33
 1383 0074 0023     		movs	r3, #0
 1384 0076 FB60     		str	r3, [r7, #12]
 566:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 1385              		.loc 1 566 7
 1386 0078 3B1D     		adds	r3, r7, #4
 1387 007a 1946     		mov	r1, r3
 1388 007c 0548     		ldr	r0, .L62
 1389 007e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1390 0082 0346     		mov	r3, r0
 1391              		.loc 1 566 6
 1392 0084 002B     		cmp	r3, #0
 1393 0086 01D0     		beq	.L61
 567:Core/Src/main.c ****   {
 568:Core/Src/main.c ****     Error_Handler();
 1394              		.loc 1 568 5
 1395 0088 FFF7FEFF 		bl	Error_Handler
 1396              	.L61:
 569:Core/Src/main.c ****   }
 570:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 571:Core/Src/main.c **** 
 572:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 573:Core/Src/main.c **** 
 574:Core/Src/main.c **** }
 1397              		.loc 1 574 1
 1398 008c 00BF     		nop
 1399 008e 2037     		adds	r7, r7, #32
 1400              		.cfi_def_cfa_offset 8
 1401 0090 BD46     		mov	sp, r7
 1402              		.cfi_def_cfa_register 13
 1403              		@ sp needed
 1404 0092 80BD     		pop	{r7, pc}
 1405              	.L63:
 1406              		.align	2
 1407              	.L62:
 1408 0094 00000000 		.word	htim4
 1409 0098 00080040 		.word	1073743872
 1410              		.cfi_endproc
 1411              	.LFE332:
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 36


 1413              		.section	.text.MX_TIM5_Init,"ax",%progbits
 1414              		.align	1
 1415              		.syntax unified
 1416              		.thumb
 1417              		.thumb_func
 1419              	MX_TIM5_Init:
 1420              	.LFB333:
 575:Core/Src/main.c **** 
 576:Core/Src/main.c **** /**
 577:Core/Src/main.c ****   * @brief TIM5 Initialization Function
 578:Core/Src/main.c ****   * @param None
 579:Core/Src/main.c ****   * @retval None
 580:Core/Src/main.c ****   */
 581:Core/Src/main.c **** static void MX_TIM5_Init(void)
 582:Core/Src/main.c **** {
 1421              		.loc 1 582 1
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 32
 1424              		@ frame_needed = 1, uses_anonymous_args = 0
 1425 0000 80B5     		push	{r7, lr}
 1426              		.cfi_def_cfa_offset 8
 1427              		.cfi_offset 7, -8
 1428              		.cfi_offset 14, -4
 1429 0002 88B0     		sub	sp, sp, #32
 1430              		.cfi_def_cfa_offset 40
 1431 0004 00AF     		add	r7, sp, #0
 1432              		.cfi_def_cfa_register 7
 583:Core/Src/main.c **** 
 584:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 0 */
 585:Core/Src/main.c **** 
 586:Core/Src/main.c ****   /* USER CODE END TIM5_Init 0 */
 587:Core/Src/main.c **** 
 588:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1433              		.loc 1 588 26
 1434 0006 07F11003 		add	r3, r7, #16
 1435 000a 0022     		movs	r2, #0
 1436 000c 1A60     		str	r2, [r3]
 1437 000e 5A60     		str	r2, [r3, #4]
 1438 0010 9A60     		str	r2, [r3, #8]
 1439 0012 DA60     		str	r2, [r3, #12]
 589:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1440              		.loc 1 589 27
 1441 0014 3B1D     		adds	r3, r7, #4
 1442 0016 0022     		movs	r2, #0
 1443 0018 1A60     		str	r2, [r3]
 1444 001a 5A60     		str	r2, [r3, #4]
 1445 001c 9A60     		str	r2, [r3, #8]
 590:Core/Src/main.c **** 
 591:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 1 */
 592:Core/Src/main.c **** 
 593:Core/Src/main.c ****   /* USER CODE END TIM5_Init 1 */
 594:Core/Src/main.c ****   htim5.Instance = TIM5;
 1446              		.loc 1 594 18
 1447 001e 1D4B     		ldr	r3, .L69
 1448 0020 1D4A     		ldr	r2, .L69+4
 1449 0022 1A60     		str	r2, [r3]
 595:Core/Src/main.c ****   htim5.Init.Prescaler = 119;
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 37


 1450              		.loc 1 595 24
 1451 0024 1B4B     		ldr	r3, .L69
 1452 0026 7722     		movs	r2, #119
 1453 0028 5A60     		str	r2, [r3, #4]
 596:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 1454              		.loc 1 596 26
 1455 002a 1A4B     		ldr	r3, .L69
 1456 002c 0022     		movs	r2, #0
 1457 002e 9A60     		str	r2, [r3, #8]
 597:Core/Src/main.c ****   htim5.Init.Period = 4294967295;
 1458              		.loc 1 597 21
 1459 0030 184B     		ldr	r3, .L69
 1460 0032 4FF0FF32 		mov	r2, #-1
 1461 0036 DA60     		str	r2, [r3, #12]
 598:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1462              		.loc 1 598 28
 1463 0038 164B     		ldr	r3, .L69
 1464 003a 0022     		movs	r2, #0
 1465 003c 1A61     		str	r2, [r3, #16]
 599:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1466              		.loc 1 599 32
 1467 003e 154B     		ldr	r3, .L69
 1468 0040 0022     		movs	r2, #0
 1469 0042 9A61     		str	r2, [r3, #24]
 600:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 1470              		.loc 1 600 7
 1471 0044 1348     		ldr	r0, .L69
 1472 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1473 004a 0346     		mov	r3, r0
 1474              		.loc 1 600 6
 1475 004c 002B     		cmp	r3, #0
 1476 004e 01D0     		beq	.L65
 601:Core/Src/main.c ****   {
 602:Core/Src/main.c ****     Error_Handler();
 1477              		.loc 1 602 5
 1478 0050 FFF7FEFF 		bl	Error_Handler
 1479              	.L65:
 603:Core/Src/main.c ****   }
 604:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1480              		.loc 1 604 34
 1481 0054 4FF48053 		mov	r3, #4096
 1482 0058 3B61     		str	r3, [r7, #16]
 605:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 1483              		.loc 1 605 7
 1484 005a 07F11003 		add	r3, r7, #16
 1485 005e 1946     		mov	r1, r3
 1486 0060 0C48     		ldr	r0, .L69
 1487 0062 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1488 0066 0346     		mov	r3, r0
 1489              		.loc 1 605 6
 1490 0068 002B     		cmp	r3, #0
 1491 006a 01D0     		beq	.L66
 606:Core/Src/main.c ****   {
 607:Core/Src/main.c ****     Error_Handler();
 1492              		.loc 1 607 5
 1493 006c FFF7FEFF 		bl	Error_Handler
 1494              	.L66:
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 38


 608:Core/Src/main.c ****   }
 609:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1495              		.loc 1 609 37
 1496 0070 0023     		movs	r3, #0
 1497 0072 7B60     		str	r3, [r7, #4]
 610:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1498              		.loc 1 610 33
 1499 0074 0023     		movs	r3, #0
 1500 0076 FB60     		str	r3, [r7, #12]
 611:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 1501              		.loc 1 611 7
 1502 0078 3B1D     		adds	r3, r7, #4
 1503 007a 1946     		mov	r1, r3
 1504 007c 0548     		ldr	r0, .L69
 1505 007e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1506 0082 0346     		mov	r3, r0
 1507              		.loc 1 611 6
 1508 0084 002B     		cmp	r3, #0
 1509 0086 01D0     		beq	.L68
 612:Core/Src/main.c ****   {
 613:Core/Src/main.c ****     Error_Handler();
 1510              		.loc 1 613 5
 1511 0088 FFF7FEFF 		bl	Error_Handler
 1512              	.L68:
 614:Core/Src/main.c ****   }
 615:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 2 */
 616:Core/Src/main.c **** 
 617:Core/Src/main.c ****   /* USER CODE END TIM5_Init 2 */
 618:Core/Src/main.c **** 
 619:Core/Src/main.c **** }
 1513              		.loc 1 619 1
 1514 008c 00BF     		nop
 1515 008e 2037     		adds	r7, r7, #32
 1516              		.cfi_def_cfa_offset 8
 1517 0090 BD46     		mov	sp, r7
 1518              		.cfi_def_cfa_register 13
 1519              		@ sp needed
 1520 0092 80BD     		pop	{r7, pc}
 1521              	.L70:
 1522              		.align	2
 1523              	.L69:
 1524 0094 00000000 		.word	htim5
 1525 0098 000C0040 		.word	1073744896
 1526              		.cfi_endproc
 1527              	.LFE333:
 1529              		.section	.text.MX_USB_OTG_FS_PCD_Init,"ax",%progbits
 1530              		.align	1
 1531              		.syntax unified
 1532              		.thumb
 1533              		.thumb_func
 1535              	MX_USB_OTG_FS_PCD_Init:
 1536              	.LFB334:
 620:Core/Src/main.c **** 
 621:Core/Src/main.c **** /**
 622:Core/Src/main.c ****   * @brief USB_OTG_FS Initialization Function
 623:Core/Src/main.c ****   * @param None
 624:Core/Src/main.c ****   * @retval None
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 39


 625:Core/Src/main.c ****   */
 626:Core/Src/main.c **** static void MX_USB_OTG_FS_PCD_Init(void)
 627:Core/Src/main.c **** {
 1537              		.loc 1 627 1
 1538              		.cfi_startproc
 1539              		@ args = 0, pretend = 0, frame = 0
 1540              		@ frame_needed = 1, uses_anonymous_args = 0
 1541 0000 80B5     		push	{r7, lr}
 1542              		.cfi_def_cfa_offset 8
 1543              		.cfi_offset 7, -8
 1544              		.cfi_offset 14, -4
 1545 0002 00AF     		add	r7, sp, #0
 1546              		.cfi_def_cfa_register 7
 628:Core/Src/main.c **** 
 629:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 0 */
 630:Core/Src/main.c **** 
 631:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 0 */
 632:Core/Src/main.c **** 
 633:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 1 */
 634:Core/Src/main.c **** 
 635:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 1 */
 636:Core/Src/main.c ****   hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 1547              		.loc 1 636 28
 1548 0004 124B     		ldr	r3, .L74
 1549 0006 4FF0A042 		mov	r2, #1342177280
 1550 000a 1A60     		str	r2, [r3]
 637:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 1551              		.loc 1 637 38
 1552 000c 104B     		ldr	r3, .L74
 1553 000e 0622     		movs	r2, #6
 1554 0010 5A60     		str	r2, [r3, #4]
 638:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 1555              		.loc 1 638 35
 1556 0012 0F4B     		ldr	r3, .L74
 1557 0014 0222     		movs	r2, #2
 1558 0016 9A61     		str	r2, [r3, #24]
 639:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 1559              		.loc 1 639 35
 1560 0018 0D4B     		ldr	r3, .L74
 1561 001a 0122     		movs	r2, #1
 1562 001c DA61     		str	r2, [r3, #28]
 640:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 1563              		.loc 1 640 41
 1564 001e 0C4B     		ldr	r3, .L74
 1565 0020 0022     		movs	r2, #0
 1566 0022 1A62     		str	r2, [r3, #32]
 641:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 1567              		.loc 1 641 35
 1568 0024 0A4B     		ldr	r3, .L74
 1569 0026 0022     		movs	r2, #0
 1570 0028 5A62     		str	r2, [r3, #36]
 642:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.battery_charging_enable = ENABLE;
 1571              		.loc 1 642 48
 1572 002a 094B     		ldr	r3, .L74
 1573 002c 0122     		movs	r2, #1
 1574 002e 9A62     		str	r2, [r3, #40]
 643:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 40


 1575              		.loc 1 643 42
 1576 0030 074B     		ldr	r3, .L74
 1577 0032 0022     		movs	r2, #0
 1578 0034 1A63     		str	r2, [r3, #48]
 644:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = ENABLE;
 1579              		.loc 1 644 44
 1580 0036 064B     		ldr	r3, .L74
 1581 0038 0122     		movs	r2, #1
 1582 003a DA62     		str	r2, [r3, #44]
 645:Core/Src/main.c ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 1583              		.loc 1 645 7
 1584 003c 0448     		ldr	r0, .L74
 1585 003e FFF7FEFF 		bl	HAL_PCD_Init
 1586 0042 0346     		mov	r3, r0
 1587              		.loc 1 645 6
 1588 0044 002B     		cmp	r3, #0
 1589 0046 01D0     		beq	.L73
 646:Core/Src/main.c ****   {
 647:Core/Src/main.c ****     Error_Handler();
 1590              		.loc 1 647 5
 1591 0048 FFF7FEFF 		bl	Error_Handler
 1592              	.L73:
 648:Core/Src/main.c ****   }
 649:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 2 */
 650:Core/Src/main.c **** 
 651:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 2 */
 652:Core/Src/main.c **** 
 653:Core/Src/main.c **** }
 1593              		.loc 1 653 1
 1594 004c 00BF     		nop
 1595 004e 80BD     		pop	{r7, pc}
 1596              	.L75:
 1597              		.align	2
 1598              	.L74:
 1599 0050 00000000 		.word	hpcd_USB_OTG_FS
 1600              		.cfi_endproc
 1601              	.LFE334:
 1603              		.section	.text.MX_DMA_Init,"ax",%progbits
 1604              		.align	1
 1605              		.syntax unified
 1606              		.thumb
 1607              		.thumb_func
 1609              	MX_DMA_Init:
 1610              	.LFB335:
 654:Core/Src/main.c **** 
 655:Core/Src/main.c **** /**
 656:Core/Src/main.c ****   * Enable DMA controller clock
 657:Core/Src/main.c ****   */
 658:Core/Src/main.c **** static void MX_DMA_Init(void)
 659:Core/Src/main.c **** {
 1611              		.loc 1 659 1
 1612              		.cfi_startproc
 1613              		@ args = 0, pretend = 0, frame = 8
 1614              		@ frame_needed = 1, uses_anonymous_args = 0
 1615 0000 80B5     		push	{r7, lr}
 1616              		.cfi_def_cfa_offset 8
 1617              		.cfi_offset 7, -8
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 41


 1618              		.cfi_offset 14, -4
 1619 0002 82B0     		sub	sp, sp, #8
 1620              		.cfi_def_cfa_offset 16
 1621 0004 00AF     		add	r7, sp, #0
 1622              		.cfi_def_cfa_register 7
 1623              	.LBB7:
 660:Core/Src/main.c **** 
 661:Core/Src/main.c ****   /* DMA controller clock enable */
 662:Core/Src/main.c ****   __HAL_RCC_DMAMUX1_CLK_ENABLE();
 1624              		.loc 1 662 3
 1625 0006 164B     		ldr	r3, .L77
 1626 0008 9B6C     		ldr	r3, [r3, #72]
 1627 000a 154A     		ldr	r2, .L77
 1628 000c 43F00403 		orr	r3, r3, #4
 1629 0010 9364     		str	r3, [r2, #72]
 1630 0012 134B     		ldr	r3, .L77
 1631 0014 9B6C     		ldr	r3, [r3, #72]
 1632 0016 03F00403 		and	r3, r3, #4
 1633 001a 7B60     		str	r3, [r7, #4]
 1634 001c 7B68     		ldr	r3, [r7, #4]
 1635              	.LBE7:
 1636              	.LBB8:
 663:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 1637              		.loc 1 663 3
 1638 001e 104B     		ldr	r3, .L77
 1639 0020 9B6C     		ldr	r3, [r3, #72]
 1640 0022 0F4A     		ldr	r2, .L77
 1641 0024 43F00103 		orr	r3, r3, #1
 1642 0028 9364     		str	r3, [r2, #72]
 1643 002a 0D4B     		ldr	r3, .L77
 1644 002c 9B6C     		ldr	r3, [r3, #72]
 1645 002e 03F00103 		and	r3, r3, #1
 1646 0032 3B60     		str	r3, [r7]
 1647 0034 3B68     		ldr	r3, [r7]
 1648              	.LBE8:
 664:Core/Src/main.c **** 
 665:Core/Src/main.c ****   /* DMA interrupt init */
 666:Core/Src/main.c ****   /* DMA1_Channel1_IRQn interrupt configuration */
 667:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 1649              		.loc 1 667 3
 1650 0036 0022     		movs	r2, #0
 1651 0038 0021     		movs	r1, #0
 1652 003a 0B20     		movs	r0, #11
 1653 003c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 668:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 1654              		.loc 1 668 3
 1655 0040 0B20     		movs	r0, #11
 1656 0042 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 669:Core/Src/main.c ****   /* DMA1_Channel2_IRQn interrupt configuration */
 670:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 0, 0);
 1657              		.loc 1 670 3
 1658 0046 0022     		movs	r2, #0
 1659 0048 0021     		movs	r1, #0
 1660 004a 0C20     		movs	r0, #12
 1661 004c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 671:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 1662              		.loc 1 671 3
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 42


 1663 0050 0C20     		movs	r0, #12
 1664 0052 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 672:Core/Src/main.c **** 
 673:Core/Src/main.c **** }
 1665              		.loc 1 673 1
 1666 0056 00BF     		nop
 1667 0058 0837     		adds	r7, r7, #8
 1668              		.cfi_def_cfa_offset 8
 1669 005a BD46     		mov	sp, r7
 1670              		.cfi_def_cfa_register 13
 1671              		@ sp needed
 1672 005c 80BD     		pop	{r7, pc}
 1673              	.L78:
 1674 005e 00BF     		.align	2
 1675              	.L77:
 1676 0060 00100240 		.word	1073876992
 1677              		.cfi_endproc
 1678              	.LFE335:
 1680              		.section	.text.MX_GPIO_Init,"ax",%progbits
 1681              		.align	1
 1682              		.syntax unified
 1683              		.thumb
 1684              		.thumb_func
 1686              	MX_GPIO_Init:
 1687              	.LFB336:
 674:Core/Src/main.c **** 
 675:Core/Src/main.c **** /**
 676:Core/Src/main.c ****   * @brief GPIO Initialization Function
 677:Core/Src/main.c ****   * @param None
 678:Core/Src/main.c ****   * @retval None
 679:Core/Src/main.c ****   */
 680:Core/Src/main.c **** static void MX_GPIO_Init(void)
 681:Core/Src/main.c **** {
 1688              		.loc 1 681 1
 1689              		.cfi_startproc
 1690              		@ args = 0, pretend = 0, frame = 48
 1691              		@ frame_needed = 1, uses_anonymous_args = 0
 1692 0000 80B5     		push	{r7, lr}
 1693              		.cfi_def_cfa_offset 8
 1694              		.cfi_offset 7, -8
 1695              		.cfi_offset 14, -4
 1696 0002 8CB0     		sub	sp, sp, #48
 1697              		.cfi_def_cfa_offset 56
 1698 0004 00AF     		add	r7, sp, #0
 1699              		.cfi_def_cfa_register 7
 682:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 1700              		.loc 1 682 20
 1701 0006 07F11C03 		add	r3, r7, #28
 1702 000a 0022     		movs	r2, #0
 1703 000c 1A60     		str	r2, [r3]
 1704 000e 5A60     		str	r2, [r3, #4]
 1705 0010 9A60     		str	r2, [r3, #8]
 1706 0012 DA60     		str	r2, [r3, #12]
 1707 0014 1A61     		str	r2, [r3, #16]
 1708              	.LBB9:
 683:Core/Src/main.c **** 
 684:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 43


 685:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 1709              		.loc 1 685 3
 1710 0016 724B     		ldr	r3, .L80
 1711 0018 DB6C     		ldr	r3, [r3, #76]
 1712 001a 714A     		ldr	r2, .L80
 1713 001c 43F01003 		orr	r3, r3, #16
 1714 0020 D364     		str	r3, [r2, #76]
 1715 0022 6F4B     		ldr	r3, .L80
 1716 0024 DB6C     		ldr	r3, [r3, #76]
 1717 0026 03F01003 		and	r3, r3, #16
 1718 002a BB61     		str	r3, [r7, #24]
 1719 002c BB69     		ldr	r3, [r7, #24]
 1720              	.LBE9:
 1721              	.LBB10:
 686:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 1722              		.loc 1 686 3
 1723 002e 6C4B     		ldr	r3, .L80
 1724 0030 DB6C     		ldr	r3, [r3, #76]
 1725 0032 6B4A     		ldr	r2, .L80
 1726 0034 43F00403 		orr	r3, r3, #4
 1727 0038 D364     		str	r3, [r2, #76]
 1728 003a 694B     		ldr	r3, .L80
 1729 003c DB6C     		ldr	r3, [r3, #76]
 1730 003e 03F00403 		and	r3, r3, #4
 1731 0042 7B61     		str	r3, [r7, #20]
 1732 0044 7B69     		ldr	r3, [r7, #20]
 1733              	.LBE10:
 1734              	.LBB11:
 687:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 1735              		.loc 1 687 3
 1736 0046 664B     		ldr	r3, .L80
 1737 0048 DB6C     		ldr	r3, [r3, #76]
 1738 004a 654A     		ldr	r2, .L80
 1739 004c 43F02003 		orr	r3, r3, #32
 1740 0050 D364     		str	r3, [r2, #76]
 1741 0052 634B     		ldr	r3, .L80
 1742 0054 DB6C     		ldr	r3, [r3, #76]
 1743 0056 03F02003 		and	r3, r3, #32
 1744 005a 3B61     		str	r3, [r7, #16]
 1745 005c 3B69     		ldr	r3, [r7, #16]
 1746              	.LBE11:
 1747              	.LBB12:
 688:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 1748              		.loc 1 688 3
 1749 005e 604B     		ldr	r3, .L80
 1750 0060 DB6C     		ldr	r3, [r3, #76]
 1751 0062 5F4A     		ldr	r2, .L80
 1752 0064 43F08003 		orr	r3, r3, #128
 1753 0068 D364     		str	r3, [r2, #76]
 1754 006a 5D4B     		ldr	r3, .L80
 1755 006c DB6C     		ldr	r3, [r3, #76]
 1756 006e 03F08003 		and	r3, r3, #128
 1757 0072 FB60     		str	r3, [r7, #12]
 1758 0074 FB68     		ldr	r3, [r7, #12]
 1759              	.LBE12:
 1760              	.LBB13:
 689:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 44


 1761              		.loc 1 689 3
 1762 0076 5A4B     		ldr	r3, .L80
 1763 0078 DB6C     		ldr	r3, [r3, #76]
 1764 007a 594A     		ldr	r2, .L80
 1765 007c 43F00103 		orr	r3, r3, #1
 1766 0080 D364     		str	r3, [r2, #76]
 1767 0082 574B     		ldr	r3, .L80
 1768 0084 DB6C     		ldr	r3, [r3, #76]
 1769 0086 03F00103 		and	r3, r3, #1
 1770 008a BB60     		str	r3, [r7, #8]
 1771 008c BB68     		ldr	r3, [r7, #8]
 1772              	.LBE13:
 1773              	.LBB14:
 690:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 1774              		.loc 1 690 3
 1775 008e 544B     		ldr	r3, .L80
 1776 0090 DB6C     		ldr	r3, [r3, #76]
 1777 0092 534A     		ldr	r2, .L80
 1778 0094 43F00203 		orr	r3, r3, #2
 1779 0098 D364     		str	r3, [r2, #76]
 1780 009a 514B     		ldr	r3, .L80
 1781 009c DB6C     		ldr	r3, [r3, #76]
 1782 009e 03F00203 		and	r3, r3, #2
 1783 00a2 7B60     		str	r3, [r7, #4]
 1784 00a4 7B68     		ldr	r3, [r7, #4]
 1785              	.LBE14:
 1786              	.LBB15:
 691:Core/Src/main.c ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 1787              		.loc 1 691 3
 1788 00a6 4E4B     		ldr	r3, .L80
 1789 00a8 DB6C     		ldr	r3, [r3, #76]
 1790 00aa 4D4A     		ldr	r2, .L80
 1791 00ac 43F04003 		orr	r3, r3, #64
 1792 00b0 D364     		str	r3, [r2, #76]
 1793 00b2 4B4B     		ldr	r3, .L80
 1794 00b4 DB6C     		ldr	r3, [r3, #76]
 1795 00b6 03F04003 		and	r3, r3, #64
 1796 00ba 3B60     		str	r3, [r7]
 1797 00bc 3B68     		ldr	r3, [r7]
 1798              	.LBE15:
 692:Core/Src/main.c ****   HAL_PWREx_EnableVddIO2();
 1799              		.loc 1 692 3
 1800 00be FFF7FEFF 		bl	HAL_PWREx_EnableVddIO2
 693:Core/Src/main.c **** 
 694:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 695:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOF, GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_6
 1801              		.loc 1 695 3
 1802 00c2 0022     		movs	r2, #0
 1803 00c4 4FF4E771 		mov	r1, #462
 1804 00c8 4648     		ldr	r0, .L80+4
 1805 00ca FFF7FEFF 		bl	HAL_GPIO_WritePin
 696:Core/Src/main.c ****                           |GPIO_PIN_7|GPIO_PIN_8, GPIO_PIN_RESET);
 697:Core/Src/main.c **** 
 698:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 699:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 1806              		.loc 1 699 3
 1807 00ce 0022     		movs	r2, #0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 45


 1808 00d0 8021     		movs	r1, #128
 1809 00d2 4FF09040 		mov	r0, #1207959552
 1810 00d6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 700:Core/Src/main.c **** 
 701:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 702:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD2_Pin, GPIO_PIN_RESET);
 1811              		.loc 1 702 3
 1812 00da 0022     		movs	r2, #0
 1813 00dc 44F28301 		movw	r1, #16515
 1814 00e0 4148     		ldr	r0, .L80+8
 1815 00e2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 703:Core/Src/main.c **** 
 704:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 705:Core/Src/main.c ****   HAL_GPIO_WritePin(USB_PowerSwitchOn_GPIO_Port, USB_PowerSwitchOn_Pin, GPIO_PIN_RESET);
 1816              		.loc 1 705 3
 1817 00e6 0022     		movs	r2, #0
 1818 00e8 4021     		movs	r1, #64
 1819 00ea 4048     		ldr	r0, .L80+12
 1820 00ec FFF7FEFF 		bl	HAL_GPIO_WritePin
 706:Core/Src/main.c **** 
 707:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 708:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_6, GPIO_PIN_RESET);
 1821              		.loc 1 708 3
 1822 00f0 0022     		movs	r2, #0
 1823 00f2 4021     		movs	r1, #64
 1824 00f4 3E48     		ldr	r0, .L80+16
 1825 00f6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 709:Core/Src/main.c **** 
 710:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 711:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 1826              		.loc 1 711 23
 1827 00fa 4FF40053 		mov	r3, #8192
 1828 00fe FB61     		str	r3, [r7, #28]
 712:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 1829              		.loc 1 712 24
 1830 0100 4FF48813 		mov	r3, #1114112
 1831 0104 3B62     		str	r3, [r7, #32]
 713:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1832              		.loc 1 713 24
 1833 0106 0023     		movs	r3, #0
 1834 0108 7B62     		str	r3, [r7, #36]
 714:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 1835              		.loc 1 714 3
 1836 010a 07F11C03 		add	r3, r7, #28
 1837 010e 1946     		mov	r1, r3
 1838 0110 3748     		ldr	r0, .L80+16
 1839 0112 FFF7FEFF 		bl	HAL_GPIO_Init
 715:Core/Src/main.c **** 
 716:Core/Src/main.c ****   /*Configure GPIO pins : PF0 PF4 PF5 */
 717:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_4|GPIO_PIN_5;
 1840              		.loc 1 717 23
 1841 0116 3123     		movs	r3, #49
 1842 0118 FB61     		str	r3, [r7, #28]
 718:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 1843              		.loc 1 718 24
 1844 011a 0023     		movs	r3, #0
 1845 011c 3B62     		str	r3, [r7, #32]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 46


 719:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1846              		.loc 1 719 24
 1847 011e 0023     		movs	r3, #0
 1848 0120 7B62     		str	r3, [r7, #36]
 720:Core/Src/main.c ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 1849              		.loc 1 720 3
 1850 0122 07F11C03 		add	r3, r7, #28
 1851 0126 1946     		mov	r1, r3
 1852 0128 2E48     		ldr	r0, .L80+4
 1853 012a FFF7FEFF 		bl	HAL_GPIO_Init
 721:Core/Src/main.c **** 
 722:Core/Src/main.c ****   /*Configure GPIO pins : PF1 PF2 PF3 PF6
 723:Core/Src/main.c ****                            PF7 PF8 */
 724:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_6
 1854              		.loc 1 724 23
 1855 012e 4FF4E773 		mov	r3, #462
 1856 0132 FB61     		str	r3, [r7, #28]
 725:Core/Src/main.c ****                           |GPIO_PIN_7|GPIO_PIN_8;
 726:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1857              		.loc 1 726 24
 1858 0134 0123     		movs	r3, #1
 1859 0136 3B62     		str	r3, [r7, #32]
 727:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1860              		.loc 1 727 24
 1861 0138 0023     		movs	r3, #0
 1862 013a 7B62     		str	r3, [r7, #36]
 728:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1863              		.loc 1 728 25
 1864 013c 0023     		movs	r3, #0
 1865 013e BB62     		str	r3, [r7, #40]
 729:Core/Src/main.c ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 1866              		.loc 1 729 3
 1867 0140 07F11C03 		add	r3, r7, #28
 1868 0144 1946     		mov	r1, r3
 1869 0146 2748     		ldr	r0, .L80+4
 1870 0148 FFF7FEFF 		bl	HAL_GPIO_Init
 730:Core/Src/main.c **** 
 731:Core/Src/main.c ****   /*Configure GPIO pin : PA7 */
 732:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_7;
 1871              		.loc 1 732 23
 1872 014c 8023     		movs	r3, #128
 1873 014e FB61     		str	r3, [r7, #28]
 733:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1874              		.loc 1 733 24
 1875 0150 0123     		movs	r3, #1
 1876 0152 3B62     		str	r3, [r7, #32]
 734:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1877              		.loc 1 734 24
 1878 0154 0023     		movs	r3, #0
 1879 0156 7B62     		str	r3, [r7, #36]
 735:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1880              		.loc 1 735 25
 1881 0158 0023     		movs	r3, #0
 1882 015a BB62     		str	r3, [r7, #40]
 736:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1883              		.loc 1 736 3
 1884 015c 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 47


 1885 0160 1946     		mov	r1, r3
 1886 0162 4FF09040 		mov	r0, #1207959552
 1887 0166 FFF7FEFF 		bl	HAL_GPIO_Init
 737:Core/Src/main.c **** 
 738:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 LD3_Pin LD2_Pin */
 739:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD2_Pin;
 1888              		.loc 1 739 23
 1889 016a 44F28303 		movw	r3, #16515
 1890 016e FB61     		str	r3, [r7, #28]
 740:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1891              		.loc 1 740 24
 1892 0170 0123     		movs	r3, #1
 1893 0172 3B62     		str	r3, [r7, #32]
 741:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1894              		.loc 1 741 24
 1895 0174 0023     		movs	r3, #0
 1896 0176 7B62     		str	r3, [r7, #36]
 742:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1897              		.loc 1 742 25
 1898 0178 0023     		movs	r3, #0
 1899 017a BB62     		str	r3, [r7, #40]
 743:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1900              		.loc 1 743 3
 1901 017c 07F11C03 		add	r3, r7, #28
 1902 0180 1946     		mov	r1, r3
 1903 0182 1948     		ldr	r0, .L80+8
 1904 0184 FFF7FEFF 		bl	HAL_GPIO_Init
 744:Core/Src/main.c **** 
 745:Core/Src/main.c ****   /*Configure GPIO pin : USB_OverCurrent_Pin */
 746:Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_OverCurrent_Pin;
 1905              		.loc 1 746 23
 1906 0188 2023     		movs	r3, #32
 1907 018a FB61     		str	r3, [r7, #28]
 747:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 1908              		.loc 1 747 24
 1909 018c 0023     		movs	r3, #0
 1910 018e 3B62     		str	r3, [r7, #32]
 748:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1911              		.loc 1 748 24
 1912 0190 0023     		movs	r3, #0
 1913 0192 7B62     		str	r3, [r7, #36]
 749:Core/Src/main.c ****   HAL_GPIO_Init(USB_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 1914              		.loc 1 749 3
 1915 0194 07F11C03 		add	r3, r7, #28
 1916 0198 1946     		mov	r1, r3
 1917 019a 1448     		ldr	r0, .L80+12
 1918 019c FFF7FEFF 		bl	HAL_GPIO_Init
 750:Core/Src/main.c **** 
 751:Core/Src/main.c ****   /*Configure GPIO pin : USB_PowerSwitchOn_Pin */
 752:Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_PowerSwitchOn_Pin;
 1919              		.loc 1 752 23
 1920 01a0 4023     		movs	r3, #64
 1921 01a2 FB61     		str	r3, [r7, #28]
 753:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1922              		.loc 1 753 24
 1923 01a4 0123     		movs	r3, #1
 1924 01a6 3B62     		str	r3, [r7, #32]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 48


 754:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1925              		.loc 1 754 24
 1926 01a8 0023     		movs	r3, #0
 1927 01aa 7B62     		str	r3, [r7, #36]
 755:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1928              		.loc 1 755 25
 1929 01ac 0023     		movs	r3, #0
 1930 01ae BB62     		str	r3, [r7, #40]
 756:Core/Src/main.c ****   HAL_GPIO_Init(USB_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 1931              		.loc 1 756 3
 1932 01b0 07F11C03 		add	r3, r7, #28
 1933 01b4 1946     		mov	r1, r3
 1934 01b6 0D48     		ldr	r0, .L80+12
 1935 01b8 FFF7FEFF 		bl	HAL_GPIO_Init
 757:Core/Src/main.c **** 
 758:Core/Src/main.c ****   /*Configure GPIO pin : PC6 */
 759:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6;
 1936              		.loc 1 759 23
 1937 01bc 4023     		movs	r3, #64
 1938 01be FB61     		str	r3, [r7, #28]
 760:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1939              		.loc 1 760 24
 1940 01c0 0123     		movs	r3, #1
 1941 01c2 3B62     		str	r3, [r7, #32]
 761:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1942              		.loc 1 761 24
 1943 01c4 0023     		movs	r3, #0
 1944 01c6 7B62     		str	r3, [r7, #36]
 762:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1945              		.loc 1 762 25
 1946 01c8 0023     		movs	r3, #0
 1947 01ca BB62     		str	r3, [r7, #40]
 763:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 1948              		.loc 1 763 3
 1949 01cc 07F11C03 		add	r3, r7, #28
 1950 01d0 1946     		mov	r1, r3
 1951 01d2 0748     		ldr	r0, .L80+16
 1952 01d4 FFF7FEFF 		bl	HAL_GPIO_Init
 764:Core/Src/main.c **** 
 765:Core/Src/main.c **** }
 1953              		.loc 1 765 1
 1954 01d8 00BF     		nop
 1955 01da 3037     		adds	r7, r7, #48
 1956              		.cfi_def_cfa_offset 8
 1957 01dc BD46     		mov	sp, r7
 1958              		.cfi_def_cfa_register 13
 1959              		@ sp needed
 1960 01de 80BD     		pop	{r7, pc}
 1961              	.L81:
 1962              		.align	2
 1963              	.L80:
 1964 01e0 00100240 		.word	1073876992
 1965 01e4 00140048 		.word	1207964672
 1966 01e8 00040048 		.word	1207960576
 1967 01ec 00180048 		.word	1207965696
 1968 01f0 00080048 		.word	1207961600
 1969              		.cfi_endproc
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 49


 1970              	.LFE336:
 1972              		.section	.text.Error_Handler,"ax",%progbits
 1973              		.align	1
 1974              		.global	Error_Handler
 1975              		.syntax unified
 1976              		.thumb
 1977              		.thumb_func
 1979              	Error_Handler:
 1980              	.LFB337:
 766:Core/Src/main.c **** 
 767:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 768:Core/Src/main.c **** 
 769:Core/Src/main.c **** /* USER CODE END 4 */
 770:Core/Src/main.c **** 
 771:Core/Src/main.c **** /**
 772:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 773:Core/Src/main.c ****   * @retval None
 774:Core/Src/main.c ****   */
 775:Core/Src/main.c **** void Error_Handler(void)
 776:Core/Src/main.c **** {
 1981              		.loc 1 776 1
 1982              		.cfi_startproc
 1983              		@ args = 0, pretend = 0, frame = 0
 1984              		@ frame_needed = 1, uses_anonymous_args = 0
 1985              		@ link register save eliminated.
 1986 0000 80B4     		push	{r7}
 1987              		.cfi_def_cfa_offset 4
 1988              		.cfi_offset 7, -4
 1989 0002 00AF     		add	r7, sp, #0
 1990              		.cfi_def_cfa_register 7
 1991              	.LBB16:
 1992              	.LBB17:
 1993              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 50


  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 51


  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 52


 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 53


 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1994              		.loc 2 209 3
 1995              		.syntax unified
 1996              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1997 0004 72B6     		cpsid i
 1998              	@ 0 "" 2
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1999              		.loc 2 210 1
 2000              		.thumb
 2001              		.syntax unified
 2002 0006 00BF     		nop
 2003              	.L83:
 2004              	.LBE17:
 2005              	.LBE16:
 777:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 778:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 779:Core/Src/main.c ****   __disable_irq();
 780:Core/Src/main.c ****   while (1)
 2006              		.loc 1 780 9 discriminator 1
 2007 0008 FEE7     		b	.L83
 2008              		.cfi_endproc
 2009              	.LFE337:
 2011              		.text
 2012              	.Letext0:
 2013              		.file 3 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4p5xx.h"
 2014              		.file 4 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 2015              		.file 5 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 2016              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 2017              		.file 7 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 2018              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2019              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 2020              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 2021              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 2022              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 2023              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc_ex.h"
 2024              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usb.h"
 2025              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pcd.h"
 2026              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 2027              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 2028              		.file 18 "Core/Inc/./gcodes/types.h"
 2029              		.file 19 "Core/Inc/main.h"
 2030              		.file 20 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
 2031              		.file 21 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim_ex.h"
 2032              		.file 22 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart_ex.h"
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 54


 2033              		.file 23 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 2034              		.file 24 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2035              		.file 25 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2036              		.file 26 "Core/Inc/./gcodes/reader.h"
 2037              		.file 27 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 55


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:24     .bss.hadc1:0000000000000000 hadc1
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:21     .bss.hadc1:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:31     .bss.hdma_adc1:0000000000000000 hdma_adc1
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:28     .bss.hdma_adc1:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:38     .bss.hlpuart1:0000000000000000 hlpuart1
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:35     .bss.hlpuart1:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:45     .bss.huart4:0000000000000000 huart4
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:42     .bss.huart4:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:52     .bss.hdma_lpuart1_rx:0000000000000000 hdma_lpuart1_rx
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:49     .bss.hdma_lpuart1_rx:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:59     .bss.htim3:0000000000000000 htim3
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:56     .bss.htim3:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:66     .bss.htim4:0000000000000000 htim4
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:63     .bss.htim4:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:73     .bss.htim5:0000000000000000 htim5
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:70     .bss.htim5:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:80     .bss.hpcd_USB_OTG_FS:0000000000000000 hpcd_USB_OTG_FS
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:77     .bss.hpcd_USB_OTG_FS:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:87     .bss.step:0000000000000000 step
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:84     .bss.step:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:94     .bss.last_time:0000000000000000 last_time
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:91     .bss.last_time:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:101    .bss.value:0000000000000000 value
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:98     .bss.value:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:108    .bss.reader:0000000000000000 reader
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:105    .bss.reader:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:115    .bss.state:0000000000000000 state
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:112    .bss.state:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:122    .bss.rx_buff:0000000000000000 rx_buff
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:119    .bss.rx_buff:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:129    .bss.gcode_buff:0000000000000000 gcode_buff
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:126    .bss.gcode_buff:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:136    .bss.read_count:0000000000000000 read_count
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:133    .bss.read_count:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:143    .bss.i:0000000000000000 i
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:140    .bss.i:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:150    .bss.j:0000000000000000 j
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:147    .bss.j:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:157    .bss.should_print:0000000000000000 should_print
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:154    .bss.should_print:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:160    .text.HAL_UARTEx_RxEventCallback:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:166    .text.HAL_UARTEx_RxEventCallback:0000000000000000 HAL_UARTEx_RxEventCallback
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:276    .text.HAL_UARTEx_RxEventCallback:000000000000008c $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:288    .rodata:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:295    .text.main:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:301    .text.main:0000000000000000 main
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:529    .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:1686   .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:1609   .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:879    .text.MX_LPUART1_UART_Init:0000000000000000 MX_LPUART1_UART_Init
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:1535   .text.MX_USB_OTG_FS_PCD_Init:0000000000000000 MX_USB_OTG_FS_PCD_Init
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:1303   .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:998    .text.MX_UART4_Init:0000000000000000 MX_UART4_Init
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:1113   .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:658    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 56


C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:1419   .text.MX_TIM5_Init:0000000000000000 MX_TIM5_Init
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:504    .text.main:0000000000000144 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:523    .text.SystemClock_Config:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:1979   .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:653    .text.MX_ADC1_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:865    .text.MX_ADC1_Init:0000000000000130 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:874    .text.MX_LPUART1_UART_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:987    .text.MX_LPUART1_UART_Init:0000000000000098 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:993    .text.MX_UART4_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:1102   .text.MX_UART4_Init:0000000000000090 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:1108   .text.MX_TIM3_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:1292   .text.MX_TIM3_Init:0000000000000110 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:1298   .text.MX_TIM4_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:1408   .text.MX_TIM4_Init:0000000000000094 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:1414   .text.MX_TIM5_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:1524   .text.MX_TIM5_Init:0000000000000094 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:1530   .text.MX_USB_OTG_FS_PCD_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:1599   .text.MX_USB_OTG_FS_PCD_Init:0000000000000050 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:1604   .text.MX_DMA_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:1676   .text.MX_DMA_Init:0000000000000060 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:1681   .text.MX_GPIO_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:1964   .text.MX_GPIO_Init:00000000000001e0 $d
C:\Users\isan\AppData\Local\Temp\ccM20gv1.s:1973   .text.Error_Handler:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_UARTEx_ReceiveToIdle_DMA
HAL_Init
HAL_TIM_PWM_Start
HAL_ADC_Start_DMA
HAL_TIM_Base_Start
memset
read_code
HAL_UART_Transmit
sprintf
strlen
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
HAL_UART_Init
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_DisableFifoMode
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_PCD_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_PWREx_EnableVddIO2
HAL_GPIO_WritePin
HAL_GPIO_Init
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccM20gv1.s 			page 57


