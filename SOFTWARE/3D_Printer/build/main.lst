ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	hadc1
  20              		.section	.bss.hadc1,"aw",%nobits
  21              		.align	2
  24              	hadc1:
  25 0000 00000000 		.space	104
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.global	hdma_adc1
  27              		.section	.bss.hdma_adc1,"aw",%nobits
  28              		.align	2
  31              	hdma_adc1:
  32 0000 00000000 		.space	96
  32      00000000 
  32      00000000 
  32      00000000 
  32      00000000 
  33              		.global	hlpuart1
  34              		.section	.bss.hlpuart1,"aw",%nobits
  35              		.align	2
  38              	hlpuart1:
  39 0000 00000000 		.space	144
  39      00000000 
  39      00000000 
  39      00000000 
  39      00000000 
  40              		.global	huart4
  41              		.section	.bss.huart4,"aw",%nobits
  42              		.align	2
  45              	huart4:
  46 0000 00000000 		.space	144
  46      00000000 
  46      00000000 
  46      00000000 
  46      00000000 
  47              		.global	hdma_lpuart1_rx
  48              		.section	.bss.hdma_lpuart1_rx,"aw",%nobits
  49              		.align	2
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 2


  52              	hdma_lpuart1_rx:
  53 0000 00000000 		.space	96
  53      00000000 
  53      00000000 
  53      00000000 
  53      00000000 
  54              		.global	htim3
  55              		.section	.bss.htim3,"aw",%nobits
  56              		.align	2
  59              	htim3:
  60 0000 00000000 		.space	76
  60      00000000 
  60      00000000 
  60      00000000 
  60      00000000 
  61              		.global	htim4
  62              		.section	.bss.htim4,"aw",%nobits
  63              		.align	2
  66              	htim4:
  67 0000 00000000 		.space	76
  67      00000000 
  67      00000000 
  67      00000000 
  67      00000000 
  68              		.global	htim5
  69              		.section	.bss.htim5,"aw",%nobits
  70              		.align	2
  73              	htim5:
  74 0000 00000000 		.space	76
  74      00000000 
  74      00000000 
  74      00000000 
  74      00000000 
  75              		.global	hpcd_USB_OTG_FS
  76              		.section	.bss.hpcd_USB_OTG_FS,"aw",%nobits
  77              		.align	2
  80              	hpcd_USB_OTG_FS:
  81 0000 00000000 		.space	1292
  81      00000000 
  81      00000000 
  81      00000000 
  81      00000000 
  82              		.global	step
  83              		.section	.bss.step,"aw",%nobits
  84              		.align	1
  87              	step:
  88 0000 0000     		.space	2
  89              		.global	last_time
  90              		.section	.bss.last_time,"aw",%nobits
  91              		.align	2
  94              	last_time:
  95 0000 00000000 		.space	4
  96              		.global	value
  97              		.section	.bss.value,"aw",%nobits
  98              		.align	2
 101              	value:
 102 0000 00000000 		.space	12
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 3


 102      00000000 
 102      00000000 
 103              		.global	reader
 104              		.section	.bss.reader,"aw",%nobits
 105              		.align	3
 108              	reader:
 109 0000 00000000 		.space	168
 109      00000000 
 109      00000000 
 109      00000000 
 109      00000000 
 110              		.global	read_count
 111              		.section	.bss.read_count,"aw",%nobits
 112              		.align	2
 115              	read_count:
 116 0000 00000000 		.space	4
 117              		.global	state
 118              		.section	.bss.state,"aw",%nobits
 119              		.align	2
 122              	state:
 123 0000 00000000 		.space	4
 124              		.global	rx_buff
 125              		.section	.bss.rx_buff,"aw",%nobits
 126              		.align	2
 129              	rx_buff:
 130 0000 00000000 		.space	64
 130      00000000 
 130      00000000 
 130      00000000 
 130      00000000 
 131              		.global	gcode_buff
 132              		.section	.bss.gcode_buff,"aw",%nobits
 133              		.align	2
 136              	gcode_buff:
 137 0000 00000000 		.space	64
 137      00000000 
 137      00000000 
 137      00000000 
 137      00000000 
 138              		.global	i
 139              		.section	.bss.i,"aw",%nobits
 140              		.align	2
 143              	i:
 144 0000 00000000 		.space	4
 145              		.global	j
 146              		.section	.bss.j,"aw",%nobits
 147              		.align	2
 150              	j:
 151 0000 00000000 		.space	4
 152              		.global	should_print
 153              		.section	.bss.should_print,"aw",%nobits
 154              		.align	2
 157              	should_print:
 158 0000 00000000 		.space	4
 159              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 160              		.align	1
 161              		.global	HAL_UARTEx_RxEventCallback
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 4


 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 166              	HAL_UARTEx_RxEventCallback:
 167              	.LFB325:
 168              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** /* USER CODE END Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PD */
  33:Core/Src/main.c **** /* USER CODE END PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PM */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  41:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  42:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** UART_HandleTypeDef hlpuart1;
  45:Core/Src/main.c **** UART_HandleTypeDef huart4;
  46:Core/Src/main.c **** DMA_HandleTypeDef hdma_lpuart1_rx;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  49:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  50:Core/Src/main.c **** TIM_HandleTypeDef htim5;
  51:Core/Src/main.c **** 
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 5


  52:Core/Src/main.c **** PCD_HandleTypeDef hpcd_USB_OTG_FS;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE BEGIN PV */
  55:Core/Src/main.c **** uint16_t step = 0;
  56:Core/Src/main.c **** uint32_t last_time = 0;
  57:Core/Src/main.c **** uint32_t value[ADC_CHANNELS];
  58:Core/Src/main.c **** gc_reader reader;
  59:Core/Src/main.c **** size_t read_count = 0;
  60:Core/Src/main.c **** int state = 0;
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** uint8_t rx_buff[GCODE_BUFF_SIZE];
  63:Core/Src/main.c **** uint8_t gcode_buff[GCODE_BUFF_SIZE];
  64:Core/Src/main.c **** int i = 0;
  65:Core/Src/main.c **** int j = 0;
  66:Core/Src/main.c **** int should_print = 0;
  67:Core/Src/main.c **** /* USER CODE END PV */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  70:Core/Src/main.c **** void SystemClock_Config(void);
  71:Core/Src/main.c **** static void MX_GPIO_Init(void);
  72:Core/Src/main.c **** static void MX_DMA_Init(void);
  73:Core/Src/main.c **** static void MX_LPUART1_UART_Init(void);
  74:Core/Src/main.c **** static void MX_USB_OTG_FS_PCD_Init(void);
  75:Core/Src/main.c **** static void MX_TIM4_Init(void);
  76:Core/Src/main.c **** static void MX_UART4_Init(void);
  77:Core/Src/main.c **** static void MX_TIM3_Init(void);
  78:Core/Src/main.c **** static void MX_ADC1_Init(void);
  79:Core/Src/main.c **** static void MX_TIM5_Init(void);
  80:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  81:Core/Src/main.c **** /* USER CODE END PFP */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  84:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
  87:Core/Src/main.c **** {
 169              		.loc 1 87 1
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 16
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173 0000 80B5     		push	{r7, lr}
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 7, -8
 176              		.cfi_offset 14, -4
 177 0002 84B0     		sub	sp, sp, #16
 178              		.cfi_def_cfa_offset 24
 179 0004 00AF     		add	r7, sp, #0
 180              		.cfi_def_cfa_register 7
 181 0006 7860     		str	r0, [r7, #4]
 182 0008 0B46     		mov	r3, r1
 183 000a 7B80     		strh	r3, [r7, #2]	@ movhi
  88:Core/Src/main.c ****   if (huart->Instance == LPUART1)
 184              		.loc 1 88 12
 185 000c 7B68     		ldr	r3, [r7, #4]
 186 000e 1B68     		ldr	r3, [r3]
 187              		.loc 1 88 6
 188 0010 254A     		ldr	r2, .L5
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 6


 189 0012 9342     		cmp	r3, r2
 190 0014 37D1     		bne	.L2
  89:Core/Src/main.c ****   {
  90:Core/Src/main.c ****     if(i + Size > GCODE_BUFF_SIZE) {
 191              		.loc 1 90 10
 192 0016 7A88     		ldrh	r2, [r7, #2]
 193 0018 244B     		ldr	r3, .L5+4
 194 001a 1B68     		ldr	r3, [r3]
 195 001c 1344     		add	r3, r3, r2
 196              		.loc 1 90 7
 197 001e 402B     		cmp	r3, #64
 198 0020 1EDD     		ble	.L3
 199              	.LBB4:
  91:Core/Src/main.c ****       int a = GCODE_BUFF_SIZE - i;
 200              		.loc 1 91 31
 201 0022 224B     		ldr	r3, .L5+4
 202 0024 1B68     		ldr	r3, [r3]
 203              		.loc 1 91 11
 204 0026 C3F14003 		rsb	r3, r3, #64
 205 002a FB60     		str	r3, [r7, #12]
  92:Core/Src/main.c ****       memcpy(gcode_buff + i, rx_buff, a);
 206              		.loc 1 92 7
 207 002c 1F4B     		ldr	r3, .L5+4
 208 002e 1B68     		ldr	r3, [r3]
 209 0030 1A46     		mov	r2, r3
 210 0032 1F4B     		ldr	r3, .L5+8
 211 0034 1344     		add	r3, r3, r2
 212 0036 FA68     		ldr	r2, [r7, #12]
 213 0038 1E49     		ldr	r1, .L5+12
 214 003a 1846     		mov	r0, r3
 215 003c FFF7FEFF 		bl	memcpy
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****       memcpy(gcode_buff, rx_buff + a, Size - a);
 216              		.loc 1 94 7
 217 0040 FB68     		ldr	r3, [r7, #12]
 218 0042 1C4A     		ldr	r2, .L5+12
 219 0044 9918     		adds	r1, r3, r2
 220              		.loc 1 94 44
 221 0046 7A88     		ldrh	r2, [r7, #2]
 222 0048 FB68     		ldr	r3, [r7, #12]
 223 004a D31A     		subs	r3, r2, r3
 224              		.loc 1 94 7
 225 004c 1A46     		mov	r2, r3
 226 004e 1848     		ldr	r0, .L5+8
 227 0050 FFF7FEFF 		bl	memcpy
  95:Core/Src/main.c ****       i = Size - a;
 228              		.loc 1 95 16
 229 0054 7A88     		ldrh	r2, [r7, #2]
 230 0056 FB68     		ldr	r3, [r7, #12]
 231 0058 D31A     		subs	r3, r2, r3
 232              		.loc 1 95 9
 233 005a 144A     		ldr	r2, .L5+4
 234 005c 1360     		str	r3, [r2]
 235              	.LBE4:
 236 005e 0FE0     		b	.L4
 237              	.L3:
  96:Core/Src/main.c ****     } else {
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 7


  97:Core/Src/main.c ****       memcpy(gcode_buff + i, rx_buff, Size);
 238              		.loc 1 97 7
 239 0060 124B     		ldr	r3, .L5+4
 240 0062 1B68     		ldr	r3, [r3]
 241 0064 1A46     		mov	r2, r3
 242 0066 124B     		ldr	r3, .L5+8
 243 0068 1344     		add	r3, r3, r2
 244 006a 7A88     		ldrh	r2, [r7, #2]
 245 006c 1149     		ldr	r1, .L5+12
 246 006e 1846     		mov	r0, r3
 247 0070 FFF7FEFF 		bl	memcpy
  98:Core/Src/main.c ****       i += Size;
 248              		.loc 1 98 9
 249 0074 7A88     		ldrh	r2, [r7, #2]
 250 0076 0D4B     		ldr	r3, .L5+4
 251 0078 1B68     		ldr	r3, [r3]
 252 007a 1344     		add	r3, r3, r2
 253 007c 0B4A     		ldr	r2, .L5+4
 254 007e 1360     		str	r3, [r2]
 255              	.L4:
  99:Core/Src/main.c ****     }
 100:Core/Src/main.c ****     should_print = 1;
 256              		.loc 1 100 18
 257 0080 0D4B     		ldr	r3, .L5+16
 258 0082 0122     		movs	r2, #1
 259 0084 1A60     		str	r2, [r3]
 260              	.L2:
 101:Core/Src/main.c ****   }
 102:Core/Src/main.c ****   HAL_UARTEx_ReceiveToIdle_DMA(&hlpuart1, rx_buff, GCODE_BUFF_SIZE);
 261              		.loc 1 102 3
 262 0086 4022     		movs	r2, #64
 263 0088 0A49     		ldr	r1, .L5+12
 264 008a 0C48     		ldr	r0, .L5+20
 265 008c FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_DMA
 103:Core/Src/main.c ****   __HAL_DMA_DISABLE_IT(&hdma_lpuart1_rx, DMA_IT_HT);
 266              		.loc 1 103 3
 267 0090 0B4B     		ldr	r3, .L5+24
 268 0092 1B68     		ldr	r3, [r3]
 269 0094 1A68     		ldr	r2, [r3]
 270 0096 0A4B     		ldr	r3, .L5+24
 271 0098 1B68     		ldr	r3, [r3]
 272 009a 22F00402 		bic	r2, r2, #4
 273 009e 1A60     		str	r2, [r3]
 104:Core/Src/main.c **** }
 274              		.loc 1 104 1
 275 00a0 00BF     		nop
 276 00a2 1037     		adds	r7, r7, #16
 277              		.cfi_def_cfa_offset 8
 278 00a4 BD46     		mov	sp, r7
 279              		.cfi_def_cfa_register 13
 280              		@ sp needed
 281 00a6 80BD     		pop	{r7, pc}
 282              	.L6:
 283              		.align	2
 284              	.L5:
 285 00a8 00800040 		.word	1073774592
 286 00ac 00000000 		.word	i
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 8


 287 00b0 00000000 		.word	gcode_buff
 288 00b4 00000000 		.word	rx_buff
 289 00b8 00000000 		.word	should_print
 290 00bc 00000000 		.word	hlpuart1
 291 00c0 00000000 		.word	hdma_lpuart1_rx
 292              		.cfi_endproc
 293              	.LFE325:
 295              		.section	.rodata
 296              		.align	2
 297              	.LC0:
 298 0000 4572726F 		.ascii	"Error occurred!\012\000"
 298      72206F63 
 298      63757272 
 298      6564210A 
 298      00
 299 0011 000000   		.align	2
 300              	.LC1:
 301 0014 25632025 		.ascii	"%c %d\012\000"
 301      640A00
 302              		.section	.text.main,"ax",%progbits
 303              		.align	1
 304              		.global	main
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 309              	main:
 310              	.LFB326:
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** // void DelayMicrosecond(uint16_t time)
 107:Core/Src/main.c **** // {
 108:Core/Src/main.c **** //   __HAL_TIM_SET_COUNTER(&htim4, 0);
 109:Core/Src/main.c **** //   while (__HAL_TIM_GET_COUNTER(&htim4) < time)
 110:Core/Src/main.c **** //     ;
 111:Core/Src/main.c **** // }
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** // void print_temperature()
 114:Core/Src/main.c **** // {
 115:Core/Src/main.c **** //   sprintf(msg_buffer, "temp: %f, value: %d\r\n", GetTemperature(ADC_HOT_END, value[ADC_HOT_END])
 116:Core/Src/main.c **** //   HAL_UART_Transmit(&hlpuart1, (uint16_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 117:Core/Src/main.c **** // }
 118:Core/Src/main.c **** /* USER CODE END 0 */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c **** /**
 121:Core/Src/main.c ****   * @brief  The application entry point.
 122:Core/Src/main.c ****   * @retval int
 123:Core/Src/main.c ****   */
 124:Core/Src/main.c **** int main(void)
 125:Core/Src/main.c **** {
 311              		.loc 1 125 1
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 112
 314              		@ frame_needed = 1, uses_anonymous_args = 0
 315 0000 80B5     		push	{r7, lr}
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 7, -8
 318              		.cfi_offset 14, -4
 319 0002 9CB0     		sub	sp, sp, #112
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 9


 320              		.cfi_def_cfa_offset 120
 321 0004 00AF     		add	r7, sp, #0
 322              		.cfi_def_cfa_register 7
 126:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 127:Core/Src/main.c ****   // last_time = HAL_GetTick();
 128:Core/Src/main.c ****   /* USER CODE END 1 */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 133:Core/Src/main.c ****   HAL_Init();
 323              		.loc 1 133 3
 324 0006 FFF7FEFF 		bl	HAL_Init
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /* USER CODE END Init */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* Configure the system clock */
 140:Core/Src/main.c ****   SystemClock_Config();
 325              		.loc 1 140 3
 326 000a FFF7FEFF 		bl	SystemClock_Config
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /* USER CODE END SysInit */
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   /* Initialize all configured peripherals */
 147:Core/Src/main.c ****   MX_GPIO_Init();
 327              		.loc 1 147 3
 328 000e FFF7FEFF 		bl	MX_GPIO_Init
 148:Core/Src/main.c ****   MX_DMA_Init();
 329              		.loc 1 148 3
 330 0012 FFF7FEFF 		bl	MX_DMA_Init
 149:Core/Src/main.c ****   MX_LPUART1_UART_Init();
 331              		.loc 1 149 3
 332 0016 FFF7FEFF 		bl	MX_LPUART1_UART_Init
 150:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
 333              		.loc 1 150 3
 334 001a FFF7FEFF 		bl	MX_USB_OTG_FS_PCD_Init
 151:Core/Src/main.c ****   MX_TIM4_Init();
 335              		.loc 1 151 3
 336 001e FFF7FEFF 		bl	MX_TIM4_Init
 152:Core/Src/main.c ****   MX_UART4_Init();
 337              		.loc 1 152 3
 338 0022 FFF7FEFF 		bl	MX_UART4_Init
 153:Core/Src/main.c ****   MX_TIM3_Init();
 339              		.loc 1 153 3
 340 0026 FFF7FEFF 		bl	MX_TIM3_Init
 154:Core/Src/main.c ****   MX_ADC1_Init();
 341              		.loc 1 154 3
 342 002a FFF7FEFF 		bl	MX_ADC1_Init
 155:Core/Src/main.c ****   MX_TIM5_Init();
 343              		.loc 1 155 3
 344 002e FFF7FEFF 		bl	MX_TIM5_Init
 156:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 157:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 10


 345              		.loc 1 157 3
 346 0032 0021     		movs	r1, #0
 347 0034 4248     		ldr	r0, .L13
 348 0036 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 158:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2);
 349              		.loc 1 158 3
 350 003a 0421     		movs	r1, #4
 351 003c 4048     		ldr	r0, .L13
 352 003e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 159:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);
 353              		.loc 1 159 3
 354 0042 0821     		movs	r1, #8
 355 0044 3E48     		ldr	r0, .L13
 356 0046 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 160:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, value, ADC_CHANNELS);
 357              		.loc 1 160 3
 358 004a 0322     		movs	r2, #3
 359 004c 3D49     		ldr	r1, .L13+4
 360 004e 3E48     		ldr	r0, .L13+8
 361 0050 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 161:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim4);
 362              		.loc 1 161 3
 363 0054 3D48     		ldr	r0, .L13+12
 364 0056 FFF7FEFF 		bl	HAL_TIM_Base_Start
 162:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim5);
 365              		.loc 1 162 3
 366 005a 3D48     		ldr	r0, .L13+16
 367 005c FFF7FEFF 		bl	HAL_TIM_Base_Start
 163:Core/Src/main.c ****   HAL_UARTEx_ReceiveToIdle_DMA(&hlpuart1, rx_buff, GCODE_BUFF_SIZE);
 368              		.loc 1 163 3
 369 0060 4022     		movs	r2, #64
 370 0062 3C49     		ldr	r1, .L13+20
 371 0064 3C48     		ldr	r0, .L13+24
 372 0066 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_DMA
 164:Core/Src/main.c ****   __HAL_DMA_DISABLE_IT(&hdma_lpuart1_rx, DMA_IT_HT);
 373              		.loc 1 164 3
 374 006a 3C4B     		ldr	r3, .L13+28
 375 006c 1B68     		ldr	r3, [r3]
 376 006e 1A68     		ldr	r2, [r3]
 377 0070 3A4B     		ldr	r3, .L13+28
 378 0072 1B68     		ldr	r3, [r3]
 379 0074 22F00402 		bic	r2, r2, #4
 380 0078 1A60     		str	r2, [r3]
 165:Core/Src/main.c ****   memset(rx_buff, 0, GCODE_BUFF_SIZE);
 381              		.loc 1 165 3
 382 007a 4022     		movs	r2, #64
 383 007c 0021     		movs	r1, #0
 384 007e 3548     		ldr	r0, .L13+20
 385 0080 FFF7FEFF 		bl	memset
 386              	.L12:
 166:Core/Src/main.c ****   /* USER CODE END 2 */
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* Infinite loop */
 169:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 170:Core/Src/main.c ****   while (1) {
 171:Core/Src/main.c ****     if(should_print) {
 387              		.loc 1 171 8
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 11


 388 0084 364B     		ldr	r3, .L13+32
 389 0086 1B68     		ldr	r3, [r3]
 390              		.loc 1 171 7
 391 0088 002B     		cmp	r3, #0
 392 008a FBD0     		beq	.L12
 393              	.LBB5:
 172:Core/Src/main.c ****       int done_reading_gcode = 0;
 394              		.loc 1 172 11
 395 008c 0023     		movs	r3, #0
 396 008e 7B66     		str	r3, [r7, #100]
 173:Core/Src/main.c ****       int error_code = GC_READER_ERROR_NOT_OCCURED, new_error;
 397              		.loc 1 173 11
 398 0090 0023     		movs	r3, #0
 399 0092 FB66     		str	r3, [r7, #108]
 174:Core/Src/main.c ****       while(j != i % GCODE_BUFF_SIZE) {
 400              		.loc 1 174 12
 401 0094 24E0     		b	.L9
 402              	.L11:
 175:Core/Src/main.c ****         if(error_code == GC_READER_ERROR_NOT_OCCURED) {
 403              		.loc 1 175 11
 404 0096 FB6E     		ldr	r3, [r7, #108]
 405 0098 002B     		cmp	r3, #0
 406 009a 15D1     		bne	.L10
 176:Core/Src/main.c ****           new_error = read_code(&reader, gcode_buff[j], &done_reading_gcode);
 407              		.loc 1 176 23
 408 009c 314B     		ldr	r3, .L13+36
 409 009e 1B68     		ldr	r3, [r3]
 410              		.loc 1 176 52
 411 00a0 314A     		ldr	r2, .L13+40
 412 00a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 413              		.loc 1 176 23
 414 00a4 07F16402 		add	r2, r7, #100
 415 00a8 1946     		mov	r1, r3
 416 00aa 3048     		ldr	r0, .L13+44
 417 00ac FFF7FEFF 		bl	read_code
 418 00b0 B866     		str	r0, [r7, #104]
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****           if(new_error != GC_READER_ERROR_NOT_OCCURED) {
 419              		.loc 1 178 13
 420 00b2 BB6E     		ldr	r3, [r7, #104]
 421 00b4 002B     		cmp	r3, #0
 422 00b6 07D0     		beq	.L10
 179:Core/Src/main.c ****             HAL_UART_Transmit(&hlpuart1, "Error occurred!\n", 16, 100);
 423              		.loc 1 179 13
 424 00b8 6423     		movs	r3, #100
 425 00ba 1022     		movs	r2, #16
 426 00bc 2C49     		ldr	r1, .L13+48
 427 00be 2648     		ldr	r0, .L13+24
 428 00c0 FFF7FEFF 		bl	HAL_UART_Transmit
 180:Core/Src/main.c ****             error_code = new_error;
 429              		.loc 1 180 24
 430 00c4 BB6E     		ldr	r3, [r7, #104]
 431 00c6 FB66     		str	r3, [r7, #108]
 432              	.L10:
 181:Core/Src/main.c ****           }
 182:Core/Src/main.c ****         }
 183:Core/Src/main.c ****         j = (j + 1) % GCODE_BUFF_SIZE;
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 12


 433              		.loc 1 183 16
 434 00c8 264B     		ldr	r3, .L13+36
 435 00ca 1B68     		ldr	r3, [r3]
 436 00cc 0133     		adds	r3, r3, #1
 437              		.loc 1 183 21
 438 00ce 5A42     		rsbs	r2, r3, #0
 439 00d0 03F03F03 		and	r3, r3, #63
 440 00d4 02F03F02 		and	r2, r2, #63
 441 00d8 58BF     		it	pl
 442 00da 5342     		rsbpl	r3, r2, #0
 443              		.loc 1 183 11
 444 00dc 214A     		ldr	r2, .L13+36
 445 00de 1360     		str	r3, [r2]
 446              	.L9:
 174:Core/Src/main.c ****         if(error_code == GC_READER_ERROR_NOT_OCCURED) {
 447              		.loc 1 174 20
 448 00e0 244B     		ldr	r3, .L13+52
 449 00e2 1B68     		ldr	r3, [r3]
 450 00e4 5A42     		rsbs	r2, r3, #0
 451 00e6 03F03F03 		and	r3, r3, #63
 452 00ea 02F03F02 		and	r2, r2, #63
 453 00ee 58BF     		it	pl
 454 00f0 5342     		rsbpl	r3, r2, #0
 174:Core/Src/main.c ****         if(error_code == GC_READER_ERROR_NOT_OCCURED) {
 455              		.loc 1 174 15
 456 00f2 1C4A     		ldr	r2, .L13+36
 457 00f4 1268     		ldr	r2, [r2]
 458 00f6 9342     		cmp	r3, r2
 459 00f8 CDD1     		bne	.L11
 184:Core/Src/main.c ****       }
 185:Core/Src/main.c ****       uint8_t result[100];
 186:Core/Src/main.c ****       memset(result, 0, 100);
 460              		.loc 1 186 7
 461 00fa 3B46     		mov	r3, r7
 462 00fc 6422     		movs	r2, #100
 463 00fe 0021     		movs	r1, #0
 464 0100 1846     		mov	r0, r3
 465 0102 FFF7FEFF 		bl	memset
 187:Core/Src/main.c ****       sprintf(result, "%c %d\n", reader.code_type, reader.code_id);
 466              		.loc 1 187 40
 467 0106 194B     		ldr	r3, .L13+44
 468 0108 9B7F     		ldrb	r3, [r3, #30]	@ zero_extendqisi2
 469              		.loc 1 187 7
 470 010a 1A46     		mov	r2, r3
 471 010c 174B     		ldr	r3, .L13+44
 472 010e 1B6A     		ldr	r3, [r3, #32]
 473 0110 3846     		mov	r0, r7
 474 0112 1949     		ldr	r1, .L13+56
 475 0114 FFF7FEFF 		bl	sprintf
 188:Core/Src/main.c ****       HAL_UART_Transmit(&hlpuart1, result, strlen(result), 100);
 476              		.loc 1 188 44
 477 0118 3B46     		mov	r3, r7
 478 011a 1846     		mov	r0, r3
 479 011c FFF7FEFF 		bl	strlen
 480 0120 0346     		mov	r3, r0
 481              		.loc 1 188 7
 482 0122 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 13


 483 0124 3946     		mov	r1, r7
 484 0126 6423     		movs	r3, #100
 485 0128 0B48     		ldr	r0, .L13+24
 486 012a FFF7FEFF 		bl	HAL_UART_Transmit
 189:Core/Src/main.c ****       memset(&reader, 0, sizeof(gc_reader));
 487              		.loc 1 189 7
 488 012e A822     		movs	r2, #168
 489 0130 0021     		movs	r1, #0
 490 0132 0E48     		ldr	r0, .L13+44
 491 0134 FFF7FEFF 		bl	memset
 190:Core/Src/main.c ****       should_print = 0;
 492              		.loc 1 190 20
 493 0138 094B     		ldr	r3, .L13+32
 494 013a 0022     		movs	r2, #0
 495 013c 1A60     		str	r2, [r3]
 496              	.LBE5:
 171:Core/Src/main.c ****       int done_reading_gcode = 0;
 497              		.loc 1 171 7
 498 013e A1E7     		b	.L12
 499              	.L14:
 500              		.align	2
 501              	.L13:
 502 0140 00000000 		.word	htim3
 503 0144 00000000 		.word	value
 504 0148 00000000 		.word	hadc1
 505 014c 00000000 		.word	htim4
 506 0150 00000000 		.word	htim5
 507 0154 00000000 		.word	rx_buff
 508 0158 00000000 		.word	hlpuart1
 509 015c 00000000 		.word	hdma_lpuart1_rx
 510 0160 00000000 		.word	should_print
 511 0164 00000000 		.word	j
 512 0168 00000000 		.word	gcode_buff
 513 016c 00000000 		.word	reader
 514 0170 00000000 		.word	.LC0
 515 0174 00000000 		.word	i
 516 0178 14000000 		.word	.LC1
 517              		.cfi_endproc
 518              	.LFE326:
 520              		.section	.text.SystemClock_Config,"ax",%progbits
 521              		.align	1
 522              		.global	SystemClock_Config
 523              		.syntax unified
 524              		.thumb
 525              		.thumb_func
 527              	SystemClock_Config:
 528              	.LFB327:
 191:Core/Src/main.c ****     }
 192:Core/Src/main.c ****     // if (rx_buff[0] != '\0') {
 193:Core/Src/main.c ****     //   int error_code = read_code((char*)rx_buff, &reader);
 194:Core/Src/main.c ****     // }
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****     // if (HAL_GetTick() - last_time > interval && interval > 0)
 197:Core/Src/main.c ****     // {
 198:Core/Src/main.c ****     //   M105(0, 0);
 199:Core/Src/main.c ****     //   last_time = HAL_GetTick();
 200:Core/Src/main.c ****     // }
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 14


 201:Core/Src/main.c ****    
 202:Core/Src/main.c ****     // G0();
 203:Core/Src/main.c ****     // M104();
 204:Core/Src/main.c ****     // if(READ_PIN(USER_BUTTON) == 1)
 205:Core/Src/main.c ****     // {
 206:Core/Src/main.c ****     //   if(GetTicks() - lasttimeY >= 2000)
 207:Core/Src/main.c ****     //   {
 208:Core/Src/main.c ****     //       MAKE_MOTOR_STEP(Y_AXIS_STEP);
 209:Core/Src/main.c ****     //       lasttimeY = GetTicks();
 210:Core/Src/main.c ****     //   }
 211:Core/Src/main.c ****     // }
 212:Core/Src/main.c ****     /* USER CODE END WHILE */
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 215:Core/Src/main.c ****   }
 216:Core/Src/main.c ****   /* USER CODE END 3 */
 217:Core/Src/main.c **** }
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** /**
 220:Core/Src/main.c ****   * @brief System Clock Configuration
 221:Core/Src/main.c ****   * @retval None
 222:Core/Src/main.c ****   */
 223:Core/Src/main.c **** void SystemClock_Config(void)
 224:Core/Src/main.c **** {
 529              		.loc 1 224 1
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 96
 532              		@ frame_needed = 1, uses_anonymous_args = 0
 533 0000 80B5     		push	{r7, lr}
 534              		.cfi_def_cfa_offset 8
 535              		.cfi_offset 7, -8
 536              		.cfi_offset 14, -4
 537 0002 98B0     		sub	sp, sp, #96
 538              		.cfi_def_cfa_offset 104
 539 0004 00AF     		add	r7, sp, #0
 540              		.cfi_def_cfa_register 7
 225:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 541              		.loc 1 225 22
 542 0006 07F11803 		add	r3, r7, #24
 543 000a 4822     		movs	r2, #72
 544 000c 0021     		movs	r1, #0
 545 000e 1846     		mov	r0, r3
 546 0010 FFF7FEFF 		bl	memset
 226:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 547              		.loc 1 226 22
 548 0014 3B1D     		adds	r3, r7, #4
 549 0016 0022     		movs	r2, #0
 550 0018 1A60     		str	r2, [r3]
 551 001a 5A60     		str	r2, [r3, #4]
 552 001c 9A60     		str	r2, [r3, #8]
 553 001e DA60     		str	r2, [r3, #12]
 554 0020 1A61     		str	r2, [r3, #16]
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 229:Core/Src/main.c ****   */
 230:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST) != HAL_OK)
 555              		.loc 1 230 7
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 15


 556 0022 0020     		movs	r0, #0
 557 0024 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 558 0028 0346     		mov	r3, r0
 559              		.loc 1 230 6
 560 002a 002B     		cmp	r3, #0
 561 002c 01D0     		beq	.L16
 231:Core/Src/main.c ****   {
 232:Core/Src/main.c ****     Error_Handler();
 562              		.loc 1 232 5
 563 002e FFF7FEFF 		bl	Error_Handler
 564              	.L16:
 233:Core/Src/main.c ****   }
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 236:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 237:Core/Src/main.c ****   */
 238:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_MSI;
 565              		.loc 1 238 36
 566 0032 3023     		movs	r3, #48
 567 0034 BB61     		str	r3, [r7, #24]
 239:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 568              		.loc 1 239 32
 569 0036 0123     		movs	r3, #1
 570 0038 3B64     		str	r3, [r7, #64]
 240:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 571              		.loc 1 240 30
 572 003a 0123     		movs	r3, #1
 573 003c 7B63     		str	r3, [r7, #52]
 241:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 574              		.loc 1 241 41
 575 003e 0023     		movs	r3, #0
 576 0040 BB63     		str	r3, [r7, #56]
 242:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 577              		.loc 1 242 35
 578 0042 6023     		movs	r3, #96
 579 0044 FB63     		str	r3, [r7, #60]
 243:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 580              		.loc 1 243 34
 581 0046 0223     		movs	r3, #2
 582 0048 7B64     		str	r3, [r7, #68]
 244:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 583              		.loc 1 244 35
 584 004a 0123     		movs	r3, #1
 585 004c BB64     		str	r3, [r7, #72]
 245:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 586              		.loc 1 245 30
 587 004e 0123     		movs	r3, #1
 588 0050 FB64     		str	r3, [r7, #76]
 246:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 60;
 589              		.loc 1 246 30
 590 0052 3C23     		movs	r3, #60
 591 0054 3B65     		str	r3, [r7, #80]
 247:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 592              		.loc 1 247 30
 593 0056 0223     		movs	r3, #2
 594 0058 7B65     		str	r3, [r7, #84]
 248:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 16


 595              		.loc 1 248 30
 596 005a 0223     		movs	r3, #2
 597 005c BB65     		str	r3, [r7, #88]
 249:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 598              		.loc 1 249 30
 599 005e 0223     		movs	r3, #2
 600 0060 FB65     		str	r3, [r7, #92]
 250:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 601              		.loc 1 250 7
 602 0062 07F11803 		add	r3, r7, #24
 603 0066 1846     		mov	r0, r3
 604 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 605 006c 0346     		mov	r3, r0
 606              		.loc 1 250 6
 607 006e 002B     		cmp	r3, #0
 608 0070 01D0     		beq	.L17
 251:Core/Src/main.c ****   {
 252:Core/Src/main.c ****     Error_Handler();
 609              		.loc 1 252 5
 610 0072 FFF7FEFF 		bl	Error_Handler
 611              	.L17:
 253:Core/Src/main.c ****   }
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 256:Core/Src/main.c ****   */
 257:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 612              		.loc 1 257 31
 613 0076 0F23     		movs	r3, #15
 614 0078 7B60     		str	r3, [r7, #4]
 258:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 259:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 615              		.loc 1 259 34
 616 007a 0323     		movs	r3, #3
 617 007c BB60     		str	r3, [r7, #8]
 260:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 618              		.loc 1 260 35
 619 007e 0023     		movs	r3, #0
 620 0080 FB60     		str	r3, [r7, #12]
 261:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 621              		.loc 1 261 36
 622 0082 0023     		movs	r3, #0
 623 0084 3B61     		str	r3, [r7, #16]
 262:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 624              		.loc 1 262 36
 625 0086 0023     		movs	r3, #0
 626 0088 7B61     		str	r3, [r7, #20]
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 627              		.loc 1 264 7
 628 008a 3B1D     		adds	r3, r7, #4
 629 008c 0521     		movs	r1, #5
 630 008e 1846     		mov	r0, r3
 631 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 632 0094 0346     		mov	r3, r0
 633              		.loc 1 264 6
 634 0096 002B     		cmp	r3, #0
 635 0098 01D0     		beq	.L19
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 17


 265:Core/Src/main.c ****   {
 266:Core/Src/main.c ****     Error_Handler();
 636              		.loc 1 266 5
 637 009a FFF7FEFF 		bl	Error_Handler
 638              	.L19:
 267:Core/Src/main.c ****   }
 268:Core/Src/main.c **** }
 639              		.loc 1 268 1
 640 009e 00BF     		nop
 641 00a0 6037     		adds	r7, r7, #96
 642              		.cfi_def_cfa_offset 8
 643 00a2 BD46     		mov	sp, r7
 644              		.cfi_def_cfa_register 13
 645              		@ sp needed
 646 00a4 80BD     		pop	{r7, pc}
 647              		.cfi_endproc
 648              	.LFE327:
 650              		.section	.text.MX_ADC1_Init,"ax",%progbits
 651              		.align	1
 652              		.syntax unified
 653              		.thumb
 654              		.thumb_func
 656              	MX_ADC1_Init:
 657              	.LFB328:
 269:Core/Src/main.c **** 
 270:Core/Src/main.c **** /**
 271:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 272:Core/Src/main.c ****   * @param None
 273:Core/Src/main.c ****   * @retval None
 274:Core/Src/main.c ****   */
 275:Core/Src/main.c **** static void MX_ADC1_Init(void)
 276:Core/Src/main.c **** {
 658              		.loc 1 276 1
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 40
 661              		@ frame_needed = 1, uses_anonymous_args = 0
 662 0000 80B5     		push	{r7, lr}
 663              		.cfi_def_cfa_offset 8
 664              		.cfi_offset 7, -8
 665              		.cfi_offset 14, -4
 666 0002 8AB0     		sub	sp, sp, #40
 667              		.cfi_def_cfa_offset 48
 668 0004 00AF     		add	r7, sp, #0
 669              		.cfi_def_cfa_register 7
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   ADC_MultiModeTypeDef multimode = {0};
 670              		.loc 1 282 24
 671 0006 07F11C03 		add	r3, r7, #28
 672 000a 0022     		movs	r2, #0
 673 000c 1A60     		str	r2, [r3]
 674 000e 5A60     		str	r2, [r3, #4]
 675 0010 9A60     		str	r2, [r3, #8]
 283:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 18


 676              		.loc 1 283 26
 677 0012 3B1D     		adds	r3, r7, #4
 678 0014 0022     		movs	r2, #0
 679 0016 1A60     		str	r2, [r3]
 680 0018 5A60     		str	r2, [r3, #4]
 681 001a 9A60     		str	r2, [r3, #8]
 682 001c DA60     		str	r2, [r3, #12]
 683 001e 1A61     		str	r2, [r3, #16]
 684 0020 5A61     		str	r2, [r3, #20]
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /** Common config
 290:Core/Src/main.c ****   */
 291:Core/Src/main.c ****   hadc1.Instance = ADC1;
 685              		.loc 1 291 18
 686 0022 434B     		ldr	r3, .L27
 687 0024 434A     		ldr	r2, .L27+4
 688 0026 1A60     		str	r2, [r3]
 292:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 689              		.loc 1 292 29
 690 0028 414B     		ldr	r3, .L27
 691 002a 0022     		movs	r2, #0
 692 002c 5A60     		str	r2, [r3, #4]
 293:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 693              		.loc 1 293 25
 694 002e 404B     		ldr	r3, .L27
 695 0030 0022     		movs	r2, #0
 696 0032 9A60     		str	r2, [r3, #8]
 294:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 697              		.loc 1 294 24
 698 0034 3E4B     		ldr	r3, .L27
 699 0036 0022     		movs	r2, #0
 700 0038 DA60     		str	r2, [r3, #12]
 295:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 701              		.loc 1 295 27
 702 003a 3D4B     		ldr	r3, .L27
 703 003c 0122     		movs	r2, #1
 704 003e 1A61     		str	r2, [r3, #16]
 296:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 705              		.loc 1 296 27
 706 0040 3B4B     		ldr	r3, .L27
 707 0042 0422     		movs	r2, #4
 708 0044 5A61     		str	r2, [r3, #20]
 297:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 709              		.loc 1 297 31
 710 0046 3A4B     		ldr	r3, .L27
 711 0048 0022     		movs	r2, #0
 712 004a 1A76     		strb	r2, [r3, #24]
 298:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 713              		.loc 1 298 33
 714 004c 384B     		ldr	r3, .L27
 715 004e 0122     		movs	r2, #1
 716 0050 5A76     		strb	r2, [r3, #25]
 299:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 3;
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 19


 717              		.loc 1 299 30
 718 0052 374B     		ldr	r3, .L27
 719 0054 0322     		movs	r2, #3
 720 0056 DA61     		str	r2, [r3, #28]
 300:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 721              		.loc 1 300 36
 722 0058 354B     		ldr	r3, .L27
 723 005a 0022     		movs	r2, #0
 724 005c 83F82020 		strb	r2, [r3, #32]
 301:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 725              		.loc 1 301 31
 726 0060 334B     		ldr	r3, .L27
 727 0062 0022     		movs	r2, #0
 728 0064 9A62     		str	r2, [r3, #40]
 302:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 729              		.loc 1 302 35
 730 0066 324B     		ldr	r3, .L27
 731 0068 0022     		movs	r2, #0
 732 006a DA62     		str	r2, [r3, #44]
 303:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 733              		.loc 1 303 36
 734 006c 304B     		ldr	r3, .L27
 735 006e 0122     		movs	r2, #1
 736 0070 83F83020 		strb	r2, [r3, #48]
 304:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 737              		.loc 1 304 22
 738 0074 2E4B     		ldr	r3, .L27
 739 0076 0022     		movs	r2, #0
 740 0078 5A63     		str	r2, [r3, #52]
 305:Core/Src/main.c ****   hadc1.Init.OversamplingMode = ENABLE;
 741              		.loc 1 305 31
 742 007a 2D4B     		ldr	r3, .L27
 743 007c 0122     		movs	r2, #1
 744 007e 83F83820 		strb	r2, [r3, #56]
 306:Core/Src/main.c ****   hadc1.Init.Oversampling.Ratio = ADC_OVERSAMPLING_RATIO_16;
 745              		.loc 1 306 33
 746 0082 2B4B     		ldr	r3, .L27
 747 0084 0C22     		movs	r2, #12
 748 0086 DA63     		str	r2, [r3, #60]
 307:Core/Src/main.c ****   hadc1.Init.Oversampling.RightBitShift = ADC_RIGHTBITSHIFT_NONE;
 749              		.loc 1 307 41
 750 0088 294B     		ldr	r3, .L27
 751 008a 0022     		movs	r2, #0
 752 008c 1A64     		str	r2, [r3, #64]
 308:Core/Src/main.c ****   hadc1.Init.Oversampling.TriggeredMode = ADC_TRIGGEREDMODE_SINGLE_TRIGGER;
 753              		.loc 1 308 41
 754 008e 284B     		ldr	r3, .L27
 755 0090 0022     		movs	r2, #0
 756 0092 5A64     		str	r2, [r3, #68]
 309:Core/Src/main.c ****   hadc1.Init.Oversampling.OversamplingStopReset = ADC_REGOVERSAMPLING_CONTINUED_MODE;
 757              		.loc 1 309 49
 758 0094 264B     		ldr	r3, .L27
 759 0096 0122     		movs	r2, #1
 760 0098 9A64     		str	r2, [r3, #72]
 310:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 761              		.loc 1 310 7
 762 009a 2548     		ldr	r0, .L27
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 20


 763 009c FFF7FEFF 		bl	HAL_ADC_Init
 764 00a0 0346     		mov	r3, r0
 765              		.loc 1 310 6
 766 00a2 002B     		cmp	r3, #0
 767 00a4 01D0     		beq	.L21
 311:Core/Src/main.c ****   {
 312:Core/Src/main.c ****     Error_Handler();
 768              		.loc 1 312 5
 769 00a6 FFF7FEFF 		bl	Error_Handler
 770              	.L21:
 313:Core/Src/main.c ****   }
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****   /** Configure the ADC multi-mode
 316:Core/Src/main.c ****   */
 317:Core/Src/main.c ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 771              		.loc 1 317 18
 772 00aa 0023     		movs	r3, #0
 773 00ac FB61     		str	r3, [r7, #28]
 318:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 774              		.loc 1 318 7
 775 00ae 07F11C03 		add	r3, r7, #28
 776 00b2 1946     		mov	r1, r3
 777 00b4 1E48     		ldr	r0, .L27
 778 00b6 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 779 00ba 0346     		mov	r3, r0
 780              		.loc 1 318 6
 781 00bc 002B     		cmp	r3, #0
 782 00be 01D0     		beq	.L22
 319:Core/Src/main.c ****   {
 320:Core/Src/main.c ****     Error_Handler();
 783              		.loc 1 320 5
 784 00c0 FFF7FEFF 		bl	Error_Handler
 785              	.L22:
 321:Core/Src/main.c ****   }
 322:Core/Src/main.c **** 
 323:Core/Src/main.c ****   /** Configure Regular Channel
 324:Core/Src/main.c ****   */
 325:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 786              		.loc 1 325 19
 787 00c4 1C4B     		ldr	r3, .L27+8
 788 00c6 7B60     		str	r3, [r7, #4]
 326:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 789              		.loc 1 326 16
 790 00c8 0623     		movs	r3, #6
 791 00ca BB60     		str	r3, [r7, #8]
 327:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_247CYCLES_5;
 792              		.loc 1 327 24
 793 00cc 0623     		movs	r3, #6
 794 00ce FB60     		str	r3, [r7, #12]
 328:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 795              		.loc 1 328 22
 796 00d0 7F23     		movs	r3, #127
 797 00d2 3B61     		str	r3, [r7, #16]
 329:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 798              		.loc 1 329 24
 799 00d4 0423     		movs	r3, #4
 800 00d6 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 21


 330:Core/Src/main.c ****   sConfig.Offset = 0;
 801              		.loc 1 330 18
 802 00d8 0023     		movs	r3, #0
 803 00da BB61     		str	r3, [r7, #24]
 331:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 804              		.loc 1 331 7
 805 00dc 3B1D     		adds	r3, r7, #4
 806 00de 1946     		mov	r1, r3
 807 00e0 1348     		ldr	r0, .L27
 808 00e2 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 809 00e6 0346     		mov	r3, r0
 810              		.loc 1 331 6
 811 00e8 002B     		cmp	r3, #0
 812 00ea 01D0     		beq	.L23
 332:Core/Src/main.c ****   {
 333:Core/Src/main.c ****     Error_Handler();
 813              		.loc 1 333 5
 814 00ec FFF7FEFF 		bl	Error_Handler
 815              	.L23:
 334:Core/Src/main.c ****   }
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   /** Configure Regular Channel
 337:Core/Src/main.c ****   */
 338:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_2;
 816              		.loc 1 338 19
 817 00f0 124B     		ldr	r3, .L27+12
 818 00f2 7B60     		str	r3, [r7, #4]
 339:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 819              		.loc 1 339 16
 820 00f4 0C23     		movs	r3, #12
 821 00f6 BB60     		str	r3, [r7, #8]
 340:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 822              		.loc 1 340 7
 823 00f8 3B1D     		adds	r3, r7, #4
 824 00fa 1946     		mov	r1, r3
 825 00fc 0C48     		ldr	r0, .L27
 826 00fe FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 827 0102 0346     		mov	r3, r0
 828              		.loc 1 340 6
 829 0104 002B     		cmp	r3, #0
 830 0106 01D0     		beq	.L24
 341:Core/Src/main.c ****   {
 342:Core/Src/main.c ****     Error_Handler();
 831              		.loc 1 342 5
 832 0108 FFF7FEFF 		bl	Error_Handler
 833              	.L24:
 343:Core/Src/main.c ****   }
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****   /** Configure Regular Channel
 346:Core/Src/main.c ****   */
 347:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 834              		.loc 1 347 19
 835 010c 0C4B     		ldr	r3, .L27+16
 836 010e 7B60     		str	r3, [r7, #4]
 348:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 837              		.loc 1 348 16
 838 0110 1223     		movs	r3, #18
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 22


 839 0112 BB60     		str	r3, [r7, #8]
 349:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 840              		.loc 1 349 7
 841 0114 3B1D     		adds	r3, r7, #4
 842 0116 1946     		mov	r1, r3
 843 0118 0548     		ldr	r0, .L27
 844 011a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 845 011e 0346     		mov	r3, r0
 846              		.loc 1 349 6
 847 0120 002B     		cmp	r3, #0
 848 0122 01D0     		beq	.L26
 350:Core/Src/main.c ****   {
 351:Core/Src/main.c ****     Error_Handler();
 849              		.loc 1 351 5
 850 0124 FFF7FEFF 		bl	Error_Handler
 851              	.L26:
 352:Core/Src/main.c ****   }
 353:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 356:Core/Src/main.c **** 
 357:Core/Src/main.c **** }
 852              		.loc 1 357 1
 853 0128 00BF     		nop
 854 012a 2837     		adds	r7, r7, #40
 855              		.cfi_def_cfa_offset 8
 856 012c BD46     		mov	sp, r7
 857              		.cfi_def_cfa_register 13
 858              		@ sp needed
 859 012e 80BD     		pop	{r7, pc}
 860              	.L28:
 861              		.align	2
 862              	.L27:
 863 0130 00000000 		.word	hadc1
 864 0134 00000450 		.word	1342439424
 865 0138 02003004 		.word	70254594
 866 013c 04006008 		.word	140509188
 867 0140 000052C7 		.word	-950927360
 868              		.cfi_endproc
 869              	.LFE328:
 871              		.section	.text.MX_LPUART1_UART_Init,"ax",%progbits
 872              		.align	1
 873              		.syntax unified
 874              		.thumb
 875              		.thumb_func
 877              	MX_LPUART1_UART_Init:
 878              	.LFB329:
 358:Core/Src/main.c **** 
 359:Core/Src/main.c **** /**
 360:Core/Src/main.c ****   * @brief LPUART1 Initialization Function
 361:Core/Src/main.c ****   * @param None
 362:Core/Src/main.c ****   * @retval None
 363:Core/Src/main.c ****   */
 364:Core/Src/main.c **** static void MX_LPUART1_UART_Init(void)
 365:Core/Src/main.c **** {
 879              		.loc 1 365 1
 880              		.cfi_startproc
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 23


 881              		@ args = 0, pretend = 0, frame = 0
 882              		@ frame_needed = 1, uses_anonymous_args = 0
 883 0000 80B5     		push	{r7, lr}
 884              		.cfi_def_cfa_offset 8
 885              		.cfi_offset 7, -8
 886              		.cfi_offset 14, -4
 887 0002 00AF     		add	r7, sp, #0
 888              		.cfi_def_cfa_register 7
 366:Core/Src/main.c **** 
 367:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 0 */
 368:Core/Src/main.c **** 
 369:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 0 */
 370:Core/Src/main.c **** 
 371:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 1 */
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 1 */
 374:Core/Src/main.c ****   hlpuart1.Instance = LPUART1;
 889              		.loc 1 374 21
 890 0004 244B     		ldr	r3, .L35
 891 0006 254A     		ldr	r2, .L35+4
 892 0008 1A60     		str	r2, [r3]
 375:Core/Src/main.c ****   hlpuart1.Init.BaudRate = 115200;
 893              		.loc 1 375 26
 894 000a 234B     		ldr	r3, .L35
 895 000c 4FF4E132 		mov	r2, #115200
 896 0010 5A60     		str	r2, [r3, #4]
 376:Core/Src/main.c ****   hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 897              		.loc 1 376 28
 898 0012 214B     		ldr	r3, .L35
 899 0014 0022     		movs	r2, #0
 900 0016 9A60     		str	r2, [r3, #8]
 377:Core/Src/main.c ****   hlpuart1.Init.StopBits = UART_STOPBITS_1;
 901              		.loc 1 377 26
 902 0018 1F4B     		ldr	r3, .L35
 903 001a 0022     		movs	r2, #0
 904 001c DA60     		str	r2, [r3, #12]
 378:Core/Src/main.c ****   hlpuart1.Init.Parity = UART_PARITY_NONE;
 905              		.loc 1 378 24
 906 001e 1E4B     		ldr	r3, .L35
 907 0020 0022     		movs	r2, #0
 908 0022 1A61     		str	r2, [r3, #16]
 379:Core/Src/main.c ****   hlpuart1.Init.Mode = UART_MODE_TX_RX;
 909              		.loc 1 379 22
 910 0024 1C4B     		ldr	r3, .L35
 911 0026 0C22     		movs	r2, #12
 912 0028 5A61     		str	r2, [r3, #20]
 380:Core/Src/main.c ****   hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 913              		.loc 1 380 27
 914 002a 1B4B     		ldr	r3, .L35
 915 002c 0022     		movs	r2, #0
 916 002e 9A61     		str	r2, [r3, #24]
 381:Core/Src/main.c ****   hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 917              		.loc 1 381 32
 918 0030 194B     		ldr	r3, .L35
 919 0032 0022     		movs	r2, #0
 920 0034 1A62     		str	r2, [r3, #32]
 382:Core/Src/main.c ****   hlpuart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 24


 921              		.loc 1 382 32
 922 0036 184B     		ldr	r3, .L35
 923 0038 0022     		movs	r2, #0
 924 003a 5A62     		str	r2, [r3, #36]
 383:Core/Src/main.c ****   hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_RXOVERRUNDISABLE_INIT;
 925              		.loc 1 383 40
 926 003c 164B     		ldr	r3, .L35
 927 003e 1022     		movs	r2, #16
 928 0040 9A62     		str	r2, [r3, #40]
 384:Core/Src/main.c ****   hlpuart1.AdvancedInit.OverrunDisable = UART_ADVFEATURE_OVERRUN_DISABLE;
 929              		.loc 1 384 40
 930 0042 154B     		ldr	r3, .L35
 931 0044 4FF48052 		mov	r2, #4096
 932 0048 DA63     		str	r2, [r3, #60]
 385:Core/Src/main.c ****   hlpuart1.FifoMode = UART_FIFOMODE_DISABLE;
 933              		.loc 1 385 21
 934 004a 134B     		ldr	r3, .L35
 935 004c 0022     		movs	r2, #0
 936 004e 5A66     		str	r2, [r3, #100]
 386:Core/Src/main.c ****   if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 937              		.loc 1 386 7
 938 0050 1148     		ldr	r0, .L35
 939 0052 FFF7FEFF 		bl	HAL_UART_Init
 940 0056 0346     		mov	r3, r0
 941              		.loc 1 386 6
 942 0058 002B     		cmp	r3, #0
 943 005a 01D0     		beq	.L30
 387:Core/Src/main.c ****   {
 388:Core/Src/main.c ****     Error_Handler();
 944              		.loc 1 388 5
 945 005c FFF7FEFF 		bl	Error_Handler
 946              	.L30:
 389:Core/Src/main.c ****   }
 390:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&hlpuart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 947              		.loc 1 390 7
 948 0060 0021     		movs	r1, #0
 949 0062 0D48     		ldr	r0, .L35
 950 0064 FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 951 0068 0346     		mov	r3, r0
 952              		.loc 1 390 6
 953 006a 002B     		cmp	r3, #0
 954 006c 01D0     		beq	.L31
 391:Core/Src/main.c ****   {
 392:Core/Src/main.c ****     Error_Handler();
 955              		.loc 1 392 5
 956 006e FFF7FEFF 		bl	Error_Handler
 957              	.L31:
 393:Core/Src/main.c ****   }
 394:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&hlpuart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 958              		.loc 1 394 7
 959 0072 0021     		movs	r1, #0
 960 0074 0848     		ldr	r0, .L35
 961 0076 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 962 007a 0346     		mov	r3, r0
 963              		.loc 1 394 6
 964 007c 002B     		cmp	r3, #0
 965 007e 01D0     		beq	.L32
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 25


 395:Core/Src/main.c ****   {
 396:Core/Src/main.c ****     Error_Handler();
 966              		.loc 1 396 5
 967 0080 FFF7FEFF 		bl	Error_Handler
 968              	.L32:
 397:Core/Src/main.c ****   }
 398:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&hlpuart1) != HAL_OK)
 969              		.loc 1 398 7
 970 0084 0448     		ldr	r0, .L35
 971 0086 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 972 008a 0346     		mov	r3, r0
 973              		.loc 1 398 6
 974 008c 002B     		cmp	r3, #0
 975 008e 01D0     		beq	.L34
 399:Core/Src/main.c ****   {
 400:Core/Src/main.c ****     Error_Handler();
 976              		.loc 1 400 5
 977 0090 FFF7FEFF 		bl	Error_Handler
 978              	.L34:
 401:Core/Src/main.c ****   }
 402:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 2 */
 403:Core/Src/main.c **** 
 404:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 2 */
 405:Core/Src/main.c **** 
 406:Core/Src/main.c **** }
 979              		.loc 1 406 1
 980 0094 00BF     		nop
 981 0096 80BD     		pop	{r7, pc}
 982              	.L36:
 983              		.align	2
 984              	.L35:
 985 0098 00000000 		.word	hlpuart1
 986 009c 00800040 		.word	1073774592
 987              		.cfi_endproc
 988              	.LFE329:
 990              		.section	.text.MX_UART4_Init,"ax",%progbits
 991              		.align	1
 992              		.syntax unified
 993              		.thumb
 994              		.thumb_func
 996              	MX_UART4_Init:
 997              	.LFB330:
 407:Core/Src/main.c **** 
 408:Core/Src/main.c **** /**
 409:Core/Src/main.c ****   * @brief UART4 Initialization Function
 410:Core/Src/main.c ****   * @param None
 411:Core/Src/main.c ****   * @retval None
 412:Core/Src/main.c ****   */
 413:Core/Src/main.c **** static void MX_UART4_Init(void)
 414:Core/Src/main.c **** {
 998              		.loc 1 414 1
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 0
 1001              		@ frame_needed = 1, uses_anonymous_args = 0
 1002 0000 80B5     		push	{r7, lr}
 1003              		.cfi_def_cfa_offset 8
 1004              		.cfi_offset 7, -8
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 26


 1005              		.cfi_offset 14, -4
 1006 0002 00AF     		add	r7, sp, #0
 1007              		.cfi_def_cfa_register 7
 415:Core/Src/main.c **** 
 416:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 0 */
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****   /* USER CODE END UART4_Init 0 */
 419:Core/Src/main.c **** 
 420:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 1 */
 421:Core/Src/main.c **** 
 422:Core/Src/main.c ****   /* USER CODE END UART4_Init 1 */
 423:Core/Src/main.c ****   huart4.Instance = UART4;
 1008              		.loc 1 423 19
 1009 0004 224B     		ldr	r3, .L43
 1010 0006 234A     		ldr	r2, .L43+4
 1011 0008 1A60     		str	r2, [r3]
 424:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
 1012              		.loc 1 424 24
 1013 000a 214B     		ldr	r3, .L43
 1014 000c 4FF4E132 		mov	r2, #115200
 1015 0010 5A60     		str	r2, [r3, #4]
 425:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 1016              		.loc 1 425 26
 1017 0012 1F4B     		ldr	r3, .L43
 1018 0014 0022     		movs	r2, #0
 1019 0016 9A60     		str	r2, [r3, #8]
 426:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 1020              		.loc 1 426 24
 1021 0018 1D4B     		ldr	r3, .L43
 1022 001a 0022     		movs	r2, #0
 1023 001c DA60     		str	r2, [r3, #12]
 427:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 1024              		.loc 1 427 22
 1025 001e 1C4B     		ldr	r3, .L43
 1026 0020 0022     		movs	r2, #0
 1027 0022 1A61     		str	r2, [r3, #16]
 428:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 1028              		.loc 1 428 20
 1029 0024 1A4B     		ldr	r3, .L43
 1030 0026 0C22     		movs	r2, #12
 1031 0028 5A61     		str	r2, [r3, #20]
 429:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1032              		.loc 1 429 25
 1033 002a 194B     		ldr	r3, .L43
 1034 002c 0022     		movs	r2, #0
 1035 002e 9A61     		str	r2, [r3, #24]
 430:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 1036              		.loc 1 430 28
 1037 0030 174B     		ldr	r3, .L43
 1038 0032 0022     		movs	r2, #0
 1039 0034 DA61     		str	r2, [r3, #28]
 431:Core/Src/main.c ****   huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1040              		.loc 1 431 30
 1041 0036 164B     		ldr	r3, .L43
 1042 0038 0022     		movs	r2, #0
 1043 003a 1A62     		str	r2, [r3, #32]
 432:Core/Src/main.c ****   huart4.Init.ClockPrescaler = UART_PRESCALER_DIV1;
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 27


 1044              		.loc 1 432 30
 1045 003c 144B     		ldr	r3, .L43
 1046 003e 0022     		movs	r2, #0
 1047 0040 5A62     		str	r2, [r3, #36]
 433:Core/Src/main.c ****   huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1048              		.loc 1 433 38
 1049 0042 134B     		ldr	r3, .L43
 1050 0044 0022     		movs	r2, #0
 1051 0046 9A62     		str	r2, [r3, #40]
 434:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 1052              		.loc 1 434 7
 1053 0048 1148     		ldr	r0, .L43
 1054 004a FFF7FEFF 		bl	HAL_UART_Init
 1055 004e 0346     		mov	r3, r0
 1056              		.loc 1 434 6
 1057 0050 002B     		cmp	r3, #0
 1058 0052 01D0     		beq	.L38
 435:Core/Src/main.c ****   {
 436:Core/Src/main.c ****     Error_Handler();
 1059              		.loc 1 436 5
 1060 0054 FFF7FEFF 		bl	Error_Handler
 1061              	.L38:
 437:Core/Src/main.c ****   }
 438:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart4, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 1062              		.loc 1 438 7
 1063 0058 0021     		movs	r1, #0
 1064 005a 0D48     		ldr	r0, .L43
 1065 005c FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 1066 0060 0346     		mov	r3, r0
 1067              		.loc 1 438 6
 1068 0062 002B     		cmp	r3, #0
 1069 0064 01D0     		beq	.L39
 439:Core/Src/main.c ****   {
 440:Core/Src/main.c ****     Error_Handler();
 1070              		.loc 1 440 5
 1071 0066 FFF7FEFF 		bl	Error_Handler
 1072              	.L39:
 441:Core/Src/main.c ****   }
 442:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart4, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 1073              		.loc 1 442 7
 1074 006a 0021     		movs	r1, #0
 1075 006c 0848     		ldr	r0, .L43
 1076 006e FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 1077 0072 0346     		mov	r3, r0
 1078              		.loc 1 442 6
 1079 0074 002B     		cmp	r3, #0
 1080 0076 01D0     		beq	.L40
 443:Core/Src/main.c ****   {
 444:Core/Src/main.c ****     Error_Handler();
 1081              		.loc 1 444 5
 1082 0078 FFF7FEFF 		bl	Error_Handler
 1083              	.L40:
 445:Core/Src/main.c ****   }
 446:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&huart4) != HAL_OK)
 1084              		.loc 1 446 7
 1085 007c 0448     		ldr	r0, .L43
 1086 007e FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 28


 1087 0082 0346     		mov	r3, r0
 1088              		.loc 1 446 6
 1089 0084 002B     		cmp	r3, #0
 1090 0086 01D0     		beq	.L42
 447:Core/Src/main.c ****   {
 448:Core/Src/main.c ****     Error_Handler();
 1091              		.loc 1 448 5
 1092 0088 FFF7FEFF 		bl	Error_Handler
 1093              	.L42:
 449:Core/Src/main.c ****   }
 450:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 2 */
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****   /* USER CODE END UART4_Init 2 */
 453:Core/Src/main.c **** 
 454:Core/Src/main.c **** }
 1094              		.loc 1 454 1
 1095 008c 00BF     		nop
 1096 008e 80BD     		pop	{r7, pc}
 1097              	.L44:
 1098              		.align	2
 1099              	.L43:
 1100 0090 00000000 		.word	huart4
 1101 0094 004C0040 		.word	1073761280
 1102              		.cfi_endproc
 1103              	.LFE330:
 1105              		.section	.text.MX_TIM3_Init,"ax",%progbits
 1106              		.align	1
 1107              		.syntax unified
 1108              		.thumb
 1109              		.thumb_func
 1111              	MX_TIM3_Init:
 1112              	.LFB331:
 455:Core/Src/main.c **** 
 456:Core/Src/main.c **** /**
 457:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 458:Core/Src/main.c ****   * @param None
 459:Core/Src/main.c ****   * @retval None
 460:Core/Src/main.c ****   */
 461:Core/Src/main.c **** static void MX_TIM3_Init(void)
 462:Core/Src/main.c **** {
 1113              		.loc 1 462 1
 1114              		.cfi_startproc
 1115              		@ args = 0, pretend = 0, frame = 56
 1116              		@ frame_needed = 1, uses_anonymous_args = 0
 1117 0000 80B5     		push	{r7, lr}
 1118              		.cfi_def_cfa_offset 8
 1119              		.cfi_offset 7, -8
 1120              		.cfi_offset 14, -4
 1121 0002 8EB0     		sub	sp, sp, #56
 1122              		.cfi_def_cfa_offset 64
 1123 0004 00AF     		add	r7, sp, #0
 1124              		.cfi_def_cfa_register 7
 463:Core/Src/main.c **** 
 464:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 465:Core/Src/main.c **** 
 466:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 467:Core/Src/main.c **** 
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 29


 468:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1125              		.loc 1 468 26
 1126 0006 07F12803 		add	r3, r7, #40
 1127 000a 0022     		movs	r2, #0
 1128 000c 1A60     		str	r2, [r3]
 1129 000e 5A60     		str	r2, [r3, #4]
 1130 0010 9A60     		str	r2, [r3, #8]
 1131 0012 DA60     		str	r2, [r3, #12]
 469:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1132              		.loc 1 469 27
 1133 0014 07F11C03 		add	r3, r7, #28
 1134 0018 0022     		movs	r2, #0
 1135 001a 1A60     		str	r2, [r3]
 1136 001c 5A60     		str	r2, [r3, #4]
 1137 001e 9A60     		str	r2, [r3, #8]
 470:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1138              		.loc 1 470 22
 1139 0020 3B46     		mov	r3, r7
 1140 0022 0022     		movs	r2, #0
 1141 0024 1A60     		str	r2, [r3]
 1142 0026 5A60     		str	r2, [r3, #4]
 1143 0028 9A60     		str	r2, [r3, #8]
 1144 002a DA60     		str	r2, [r3, #12]
 1145 002c 1A61     		str	r2, [r3, #16]
 1146 002e 5A61     		str	r2, [r3, #20]
 1147 0030 9A61     		str	r2, [r3, #24]
 471:Core/Src/main.c **** 
 472:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 473:Core/Src/main.c **** 
 474:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 475:Core/Src/main.c ****   htim3.Instance = TIM3;
 1148              		.loc 1 475 18
 1149 0032 374B     		ldr	r3, .L53
 1150 0034 374A     		ldr	r2, .L53+4
 1151 0036 1A60     		str	r2, [r3]
 476:Core/Src/main.c ****   htim3.Init.Prescaler = 119;
 1152              		.loc 1 476 24
 1153 0038 354B     		ldr	r3, .L53
 1154 003a 7722     		movs	r2, #119
 1155 003c 5A60     		str	r2, [r3, #4]
 477:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1156              		.loc 1 477 26
 1157 003e 344B     		ldr	r3, .L53
 1158 0040 0022     		movs	r2, #0
 1159 0042 9A60     		str	r2, [r3, #8]
 478:Core/Src/main.c ****   htim3.Init.Period = 255;
 1160              		.loc 1 478 21
 1161 0044 324B     		ldr	r3, .L53
 1162 0046 FF22     		movs	r2, #255
 1163 0048 DA60     		str	r2, [r3, #12]
 479:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1164              		.loc 1 479 28
 1165 004a 314B     		ldr	r3, .L53
 1166 004c 0022     		movs	r2, #0
 1167 004e 1A61     		str	r2, [r3, #16]
 480:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1168              		.loc 1 480 32
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 30


 1169 0050 2F4B     		ldr	r3, .L53
 1170 0052 8022     		movs	r2, #128
 1171 0054 9A61     		str	r2, [r3, #24]
 481:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1172              		.loc 1 481 7
 1173 0056 2E48     		ldr	r0, .L53
 1174 0058 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1175 005c 0346     		mov	r3, r0
 1176              		.loc 1 481 6
 1177 005e 002B     		cmp	r3, #0
 1178 0060 01D0     		beq	.L46
 482:Core/Src/main.c ****   {
 483:Core/Src/main.c ****     Error_Handler();
 1179              		.loc 1 483 5
 1180 0062 FFF7FEFF 		bl	Error_Handler
 1181              	.L46:
 484:Core/Src/main.c ****   }
 485:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1182              		.loc 1 485 34
 1183 0066 4FF48053 		mov	r3, #4096
 1184 006a BB62     		str	r3, [r7, #40]
 486:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1185              		.loc 1 486 7
 1186 006c 07F12803 		add	r3, r7, #40
 1187 0070 1946     		mov	r1, r3
 1188 0072 2748     		ldr	r0, .L53
 1189 0074 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1190 0078 0346     		mov	r3, r0
 1191              		.loc 1 486 6
 1192 007a 002B     		cmp	r3, #0
 1193 007c 01D0     		beq	.L47
 487:Core/Src/main.c ****   {
 488:Core/Src/main.c ****     Error_Handler();
 1194              		.loc 1 488 5
 1195 007e FFF7FEFF 		bl	Error_Handler
 1196              	.L47:
 489:Core/Src/main.c ****   }
 490:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 1197              		.loc 1 490 7
 1198 0082 2348     		ldr	r0, .L53
 1199 0084 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1200 0088 0346     		mov	r3, r0
 1201              		.loc 1 490 6
 1202 008a 002B     		cmp	r3, #0
 1203 008c 01D0     		beq	.L48
 491:Core/Src/main.c ****   {
 492:Core/Src/main.c ****     Error_Handler();
 1204              		.loc 1 492 5
 1205 008e FFF7FEFF 		bl	Error_Handler
 1206              	.L48:
 493:Core/Src/main.c ****   }
 494:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1207              		.loc 1 494 37
 1208 0092 0023     		movs	r3, #0
 1209 0094 FB61     		str	r3, [r7, #28]
 495:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1210              		.loc 1 495 33
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 31


 1211 0096 0023     		movs	r3, #0
 1212 0098 7B62     		str	r3, [r7, #36]
 496:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1213              		.loc 1 496 7
 1214 009a 07F11C03 		add	r3, r7, #28
 1215 009e 1946     		mov	r1, r3
 1216 00a0 1B48     		ldr	r0, .L53
 1217 00a2 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1218 00a6 0346     		mov	r3, r0
 1219              		.loc 1 496 6
 1220 00a8 002B     		cmp	r3, #0
 1221 00aa 01D0     		beq	.L49
 497:Core/Src/main.c ****   {
 498:Core/Src/main.c ****     Error_Handler();
 1222              		.loc 1 498 5
 1223 00ac FFF7FEFF 		bl	Error_Handler
 1224              	.L49:
 499:Core/Src/main.c ****   }
 500:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 1225              		.loc 1 500 20
 1226 00b0 6023     		movs	r3, #96
 1227 00b2 3B60     		str	r3, [r7]
 501:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1228              		.loc 1 501 19
 1229 00b4 0023     		movs	r3, #0
 1230 00b6 7B60     		str	r3, [r7, #4]
 502:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1231              		.loc 1 502 24
 1232 00b8 0023     		movs	r3, #0
 1233 00ba BB60     		str	r3, [r7, #8]
 503:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1234              		.loc 1 503 24
 1235 00bc 0023     		movs	r3, #0
 1236 00be 3B61     		str	r3, [r7, #16]
 504:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1237              		.loc 1 504 7
 1238 00c0 3B46     		mov	r3, r7
 1239 00c2 0022     		movs	r2, #0
 1240 00c4 1946     		mov	r1, r3
 1241 00c6 1248     		ldr	r0, .L53
 1242 00c8 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1243 00cc 0346     		mov	r3, r0
 1244              		.loc 1 504 6
 1245 00ce 002B     		cmp	r3, #0
 1246 00d0 01D0     		beq	.L50
 505:Core/Src/main.c ****   {
 506:Core/Src/main.c ****     Error_Handler();
 1247              		.loc 1 506 5
 1248 00d2 FFF7FEFF 		bl	Error_Handler
 1249              	.L50:
 507:Core/Src/main.c ****   }
 508:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 1250              		.loc 1 508 7
 1251 00d6 3B46     		mov	r3, r7
 1252 00d8 0422     		movs	r2, #4
 1253 00da 1946     		mov	r1, r3
 1254 00dc 0C48     		ldr	r0, .L53
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 32


 1255 00de FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1256 00e2 0346     		mov	r3, r0
 1257              		.loc 1 508 6
 1258 00e4 002B     		cmp	r3, #0
 1259 00e6 01D0     		beq	.L51
 509:Core/Src/main.c ****   {
 510:Core/Src/main.c ****     Error_Handler();
 1260              		.loc 1 510 5
 1261 00e8 FFF7FEFF 		bl	Error_Handler
 1262              	.L51:
 511:Core/Src/main.c ****   }
 512:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 1263              		.loc 1 512 7
 1264 00ec 3B46     		mov	r3, r7
 1265 00ee 0822     		movs	r2, #8
 1266 00f0 1946     		mov	r1, r3
 1267 00f2 0748     		ldr	r0, .L53
 1268 00f4 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1269 00f8 0346     		mov	r3, r0
 1270              		.loc 1 512 6
 1271 00fa 002B     		cmp	r3, #0
 1272 00fc 01D0     		beq	.L52
 513:Core/Src/main.c ****   {
 514:Core/Src/main.c ****     Error_Handler();
 1273              		.loc 1 514 5
 1274 00fe FFF7FEFF 		bl	Error_Handler
 1275              	.L52:
 515:Core/Src/main.c ****   }
 516:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 517:Core/Src/main.c **** 
 518:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 519:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 1276              		.loc 1 519 3
 1277 0102 0348     		ldr	r0, .L53
 1278 0104 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 520:Core/Src/main.c **** 
 521:Core/Src/main.c **** }
 1279              		.loc 1 521 1
 1280 0108 00BF     		nop
 1281 010a 3837     		adds	r7, r7, #56
 1282              		.cfi_def_cfa_offset 8
 1283 010c BD46     		mov	sp, r7
 1284              		.cfi_def_cfa_register 13
 1285              		@ sp needed
 1286 010e 80BD     		pop	{r7, pc}
 1287              	.L54:
 1288              		.align	2
 1289              	.L53:
 1290 0110 00000000 		.word	htim3
 1291 0114 00040040 		.word	1073742848
 1292              		.cfi_endproc
 1293              	.LFE331:
 1295              		.section	.text.MX_TIM4_Init,"ax",%progbits
 1296              		.align	1
 1297              		.syntax unified
 1298              		.thumb
 1299              		.thumb_func
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 33


 1301              	MX_TIM4_Init:
 1302              	.LFB332:
 522:Core/Src/main.c **** 
 523:Core/Src/main.c **** /**
 524:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 525:Core/Src/main.c ****   * @param None
 526:Core/Src/main.c ****   * @retval None
 527:Core/Src/main.c ****   */
 528:Core/Src/main.c **** static void MX_TIM4_Init(void)
 529:Core/Src/main.c **** {
 1303              		.loc 1 529 1
 1304              		.cfi_startproc
 1305              		@ args = 0, pretend = 0, frame = 32
 1306              		@ frame_needed = 1, uses_anonymous_args = 0
 1307 0000 80B5     		push	{r7, lr}
 1308              		.cfi_def_cfa_offset 8
 1309              		.cfi_offset 7, -8
 1310              		.cfi_offset 14, -4
 1311 0002 88B0     		sub	sp, sp, #32
 1312              		.cfi_def_cfa_offset 40
 1313 0004 00AF     		add	r7, sp, #0
 1314              		.cfi_def_cfa_register 7
 530:Core/Src/main.c **** 
 531:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 532:Core/Src/main.c **** 
 533:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 534:Core/Src/main.c **** 
 535:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1315              		.loc 1 535 26
 1316 0006 07F11003 		add	r3, r7, #16
 1317 000a 0022     		movs	r2, #0
 1318 000c 1A60     		str	r2, [r3]
 1319 000e 5A60     		str	r2, [r3, #4]
 1320 0010 9A60     		str	r2, [r3, #8]
 1321 0012 DA60     		str	r2, [r3, #12]
 536:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1322              		.loc 1 536 27
 1323 0014 3B1D     		adds	r3, r7, #4
 1324 0016 0022     		movs	r2, #0
 1325 0018 1A60     		str	r2, [r3]
 1326 001a 5A60     		str	r2, [r3, #4]
 1327 001c 9A60     		str	r2, [r3, #8]
 537:Core/Src/main.c **** 
 538:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 539:Core/Src/main.c **** 
 540:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 541:Core/Src/main.c ****   htim4.Instance = TIM4;
 1328              		.loc 1 541 18
 1329 001e 1D4B     		ldr	r3, .L60
 1330 0020 1D4A     		ldr	r2, .L60+4
 1331 0022 1A60     		str	r2, [r3]
 542:Core/Src/main.c ****   htim4.Init.Prescaler = 119;
 1332              		.loc 1 542 24
 1333 0024 1B4B     		ldr	r3, .L60
 1334 0026 7722     		movs	r2, #119
 1335 0028 5A60     		str	r2, [r3, #4]
 543:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 34


 1336              		.loc 1 543 26
 1337 002a 1A4B     		ldr	r3, .L60
 1338 002c 0022     		movs	r2, #0
 1339 002e 9A60     		str	r2, [r3, #8]
 544:Core/Src/main.c ****   htim4.Init.Period = 65535;
 1340              		.loc 1 544 21
 1341 0030 184B     		ldr	r3, .L60
 1342 0032 4FF6FF72 		movw	r2, #65535
 1343 0036 DA60     		str	r2, [r3, #12]
 545:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1344              		.loc 1 545 28
 1345 0038 164B     		ldr	r3, .L60
 1346 003a 0022     		movs	r2, #0
 1347 003c 1A61     		str	r2, [r3, #16]
 546:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1348              		.loc 1 546 32
 1349 003e 154B     		ldr	r3, .L60
 1350 0040 0022     		movs	r2, #0
 1351 0042 9A61     		str	r2, [r3, #24]
 547:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 1352              		.loc 1 547 7
 1353 0044 1348     		ldr	r0, .L60
 1354 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1355 004a 0346     		mov	r3, r0
 1356              		.loc 1 547 6
 1357 004c 002B     		cmp	r3, #0
 1358 004e 01D0     		beq	.L56
 548:Core/Src/main.c ****   {
 549:Core/Src/main.c ****     Error_Handler();
 1359              		.loc 1 549 5
 1360 0050 FFF7FEFF 		bl	Error_Handler
 1361              	.L56:
 550:Core/Src/main.c ****   }
 551:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1362              		.loc 1 551 34
 1363 0054 4FF48053 		mov	r3, #4096
 1364 0058 3B61     		str	r3, [r7, #16]
 552:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 1365              		.loc 1 552 7
 1366 005a 07F11003 		add	r3, r7, #16
 1367 005e 1946     		mov	r1, r3
 1368 0060 0C48     		ldr	r0, .L60
 1369 0062 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1370 0066 0346     		mov	r3, r0
 1371              		.loc 1 552 6
 1372 0068 002B     		cmp	r3, #0
 1373 006a 01D0     		beq	.L57
 553:Core/Src/main.c ****   {
 554:Core/Src/main.c ****     Error_Handler();
 1374              		.loc 1 554 5
 1375 006c FFF7FEFF 		bl	Error_Handler
 1376              	.L57:
 555:Core/Src/main.c ****   }
 556:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1377              		.loc 1 556 37
 1378 0070 0023     		movs	r3, #0
 1379 0072 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 35


 557:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1380              		.loc 1 557 33
 1381 0074 0023     		movs	r3, #0
 1382 0076 FB60     		str	r3, [r7, #12]
 558:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 1383              		.loc 1 558 7
 1384 0078 3B1D     		adds	r3, r7, #4
 1385 007a 1946     		mov	r1, r3
 1386 007c 0548     		ldr	r0, .L60
 1387 007e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1388 0082 0346     		mov	r3, r0
 1389              		.loc 1 558 6
 1390 0084 002B     		cmp	r3, #0
 1391 0086 01D0     		beq	.L59
 559:Core/Src/main.c ****   {
 560:Core/Src/main.c ****     Error_Handler();
 1392              		.loc 1 560 5
 1393 0088 FFF7FEFF 		bl	Error_Handler
 1394              	.L59:
 561:Core/Src/main.c ****   }
 562:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 563:Core/Src/main.c **** 
 564:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 565:Core/Src/main.c **** 
 566:Core/Src/main.c **** }
 1395              		.loc 1 566 1
 1396 008c 00BF     		nop
 1397 008e 2037     		adds	r7, r7, #32
 1398              		.cfi_def_cfa_offset 8
 1399 0090 BD46     		mov	sp, r7
 1400              		.cfi_def_cfa_register 13
 1401              		@ sp needed
 1402 0092 80BD     		pop	{r7, pc}
 1403              	.L61:
 1404              		.align	2
 1405              	.L60:
 1406 0094 00000000 		.word	htim4
 1407 0098 00080040 		.word	1073743872
 1408              		.cfi_endproc
 1409              	.LFE332:
 1411              		.section	.text.MX_TIM5_Init,"ax",%progbits
 1412              		.align	1
 1413              		.syntax unified
 1414              		.thumb
 1415              		.thumb_func
 1417              	MX_TIM5_Init:
 1418              	.LFB333:
 567:Core/Src/main.c **** 
 568:Core/Src/main.c **** /**
 569:Core/Src/main.c ****   * @brief TIM5 Initialization Function
 570:Core/Src/main.c ****   * @param None
 571:Core/Src/main.c ****   * @retval None
 572:Core/Src/main.c ****   */
 573:Core/Src/main.c **** static void MX_TIM5_Init(void)
 574:Core/Src/main.c **** {
 1419              		.loc 1 574 1
 1420              		.cfi_startproc
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 36


 1421              		@ args = 0, pretend = 0, frame = 32
 1422              		@ frame_needed = 1, uses_anonymous_args = 0
 1423 0000 80B5     		push	{r7, lr}
 1424              		.cfi_def_cfa_offset 8
 1425              		.cfi_offset 7, -8
 1426              		.cfi_offset 14, -4
 1427 0002 88B0     		sub	sp, sp, #32
 1428              		.cfi_def_cfa_offset 40
 1429 0004 00AF     		add	r7, sp, #0
 1430              		.cfi_def_cfa_register 7
 575:Core/Src/main.c **** 
 576:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 0 */
 577:Core/Src/main.c **** 
 578:Core/Src/main.c ****   /* USER CODE END TIM5_Init 0 */
 579:Core/Src/main.c **** 
 580:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1431              		.loc 1 580 26
 1432 0006 07F11003 		add	r3, r7, #16
 1433 000a 0022     		movs	r2, #0
 1434 000c 1A60     		str	r2, [r3]
 1435 000e 5A60     		str	r2, [r3, #4]
 1436 0010 9A60     		str	r2, [r3, #8]
 1437 0012 DA60     		str	r2, [r3, #12]
 581:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1438              		.loc 1 581 27
 1439 0014 3B1D     		adds	r3, r7, #4
 1440 0016 0022     		movs	r2, #0
 1441 0018 1A60     		str	r2, [r3]
 1442 001a 5A60     		str	r2, [r3, #4]
 1443 001c 9A60     		str	r2, [r3, #8]
 582:Core/Src/main.c **** 
 583:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 1 */
 584:Core/Src/main.c **** 
 585:Core/Src/main.c ****   /* USER CODE END TIM5_Init 1 */
 586:Core/Src/main.c ****   htim5.Instance = TIM5;
 1444              		.loc 1 586 18
 1445 001e 1D4B     		ldr	r3, .L67
 1446 0020 1D4A     		ldr	r2, .L67+4
 1447 0022 1A60     		str	r2, [r3]
 587:Core/Src/main.c ****   htim5.Init.Prescaler = 119;
 1448              		.loc 1 587 24
 1449 0024 1B4B     		ldr	r3, .L67
 1450 0026 7722     		movs	r2, #119
 1451 0028 5A60     		str	r2, [r3, #4]
 588:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 1452              		.loc 1 588 26
 1453 002a 1A4B     		ldr	r3, .L67
 1454 002c 0022     		movs	r2, #0
 1455 002e 9A60     		str	r2, [r3, #8]
 589:Core/Src/main.c ****   htim5.Init.Period = 4294967295;
 1456              		.loc 1 589 21
 1457 0030 184B     		ldr	r3, .L67
 1458 0032 4FF0FF32 		mov	r2, #-1
 1459 0036 DA60     		str	r2, [r3, #12]
 590:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1460              		.loc 1 590 28
 1461 0038 164B     		ldr	r3, .L67
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 37


 1462 003a 0022     		movs	r2, #0
 1463 003c 1A61     		str	r2, [r3, #16]
 591:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1464              		.loc 1 591 32
 1465 003e 154B     		ldr	r3, .L67
 1466 0040 0022     		movs	r2, #0
 1467 0042 9A61     		str	r2, [r3, #24]
 592:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 1468              		.loc 1 592 7
 1469 0044 1348     		ldr	r0, .L67
 1470 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1471 004a 0346     		mov	r3, r0
 1472              		.loc 1 592 6
 1473 004c 002B     		cmp	r3, #0
 1474 004e 01D0     		beq	.L63
 593:Core/Src/main.c ****   {
 594:Core/Src/main.c ****     Error_Handler();
 1475              		.loc 1 594 5
 1476 0050 FFF7FEFF 		bl	Error_Handler
 1477              	.L63:
 595:Core/Src/main.c ****   }
 596:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1478              		.loc 1 596 34
 1479 0054 4FF48053 		mov	r3, #4096
 1480 0058 3B61     		str	r3, [r7, #16]
 597:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 1481              		.loc 1 597 7
 1482 005a 07F11003 		add	r3, r7, #16
 1483 005e 1946     		mov	r1, r3
 1484 0060 0C48     		ldr	r0, .L67
 1485 0062 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1486 0066 0346     		mov	r3, r0
 1487              		.loc 1 597 6
 1488 0068 002B     		cmp	r3, #0
 1489 006a 01D0     		beq	.L64
 598:Core/Src/main.c ****   {
 599:Core/Src/main.c ****     Error_Handler();
 1490              		.loc 1 599 5
 1491 006c FFF7FEFF 		bl	Error_Handler
 1492              	.L64:
 600:Core/Src/main.c ****   }
 601:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1493              		.loc 1 601 37
 1494 0070 0023     		movs	r3, #0
 1495 0072 7B60     		str	r3, [r7, #4]
 602:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1496              		.loc 1 602 33
 1497 0074 0023     		movs	r3, #0
 1498 0076 FB60     		str	r3, [r7, #12]
 603:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 1499              		.loc 1 603 7
 1500 0078 3B1D     		adds	r3, r7, #4
 1501 007a 1946     		mov	r1, r3
 1502 007c 0548     		ldr	r0, .L67
 1503 007e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1504 0082 0346     		mov	r3, r0
 1505              		.loc 1 603 6
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 38


 1506 0084 002B     		cmp	r3, #0
 1507 0086 01D0     		beq	.L66
 604:Core/Src/main.c ****   {
 605:Core/Src/main.c ****     Error_Handler();
 1508              		.loc 1 605 5
 1509 0088 FFF7FEFF 		bl	Error_Handler
 1510              	.L66:
 606:Core/Src/main.c ****   }
 607:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 2 */
 608:Core/Src/main.c **** 
 609:Core/Src/main.c ****   /* USER CODE END TIM5_Init 2 */
 610:Core/Src/main.c **** 
 611:Core/Src/main.c **** }
 1511              		.loc 1 611 1
 1512 008c 00BF     		nop
 1513 008e 2037     		adds	r7, r7, #32
 1514              		.cfi_def_cfa_offset 8
 1515 0090 BD46     		mov	sp, r7
 1516              		.cfi_def_cfa_register 13
 1517              		@ sp needed
 1518 0092 80BD     		pop	{r7, pc}
 1519              	.L68:
 1520              		.align	2
 1521              	.L67:
 1522 0094 00000000 		.word	htim5
 1523 0098 000C0040 		.word	1073744896
 1524              		.cfi_endproc
 1525              	.LFE333:
 1527              		.section	.text.MX_USB_OTG_FS_PCD_Init,"ax",%progbits
 1528              		.align	1
 1529              		.syntax unified
 1530              		.thumb
 1531              		.thumb_func
 1533              	MX_USB_OTG_FS_PCD_Init:
 1534              	.LFB334:
 612:Core/Src/main.c **** 
 613:Core/Src/main.c **** /**
 614:Core/Src/main.c ****   * @brief USB_OTG_FS Initialization Function
 615:Core/Src/main.c ****   * @param None
 616:Core/Src/main.c ****   * @retval None
 617:Core/Src/main.c ****   */
 618:Core/Src/main.c **** static void MX_USB_OTG_FS_PCD_Init(void)
 619:Core/Src/main.c **** {
 1535              		.loc 1 619 1
 1536              		.cfi_startproc
 1537              		@ args = 0, pretend = 0, frame = 0
 1538              		@ frame_needed = 1, uses_anonymous_args = 0
 1539 0000 80B5     		push	{r7, lr}
 1540              		.cfi_def_cfa_offset 8
 1541              		.cfi_offset 7, -8
 1542              		.cfi_offset 14, -4
 1543 0002 00AF     		add	r7, sp, #0
 1544              		.cfi_def_cfa_register 7
 620:Core/Src/main.c **** 
 621:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 0 */
 622:Core/Src/main.c **** 
 623:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 0 */
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 39


 624:Core/Src/main.c **** 
 625:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 1 */
 626:Core/Src/main.c **** 
 627:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 1 */
 628:Core/Src/main.c ****   hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 1545              		.loc 1 628 28
 1546 0004 124B     		ldr	r3, .L72
 1547 0006 4FF0A042 		mov	r2, #1342177280
 1548 000a 1A60     		str	r2, [r3]
 629:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 1549              		.loc 1 629 38
 1550 000c 104B     		ldr	r3, .L72
 1551 000e 0622     		movs	r2, #6
 1552 0010 5A60     		str	r2, [r3, #4]
 630:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 1553              		.loc 1 630 35
 1554 0012 0F4B     		ldr	r3, .L72
 1555 0014 0222     		movs	r2, #2
 1556 0016 9A61     		str	r2, [r3, #24]
 631:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 1557              		.loc 1 631 35
 1558 0018 0D4B     		ldr	r3, .L72
 1559 001a 0122     		movs	r2, #1
 1560 001c DA61     		str	r2, [r3, #28]
 632:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 1561              		.loc 1 632 41
 1562 001e 0C4B     		ldr	r3, .L72
 1563 0020 0022     		movs	r2, #0
 1564 0022 1A62     		str	r2, [r3, #32]
 633:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 1565              		.loc 1 633 35
 1566 0024 0A4B     		ldr	r3, .L72
 1567 0026 0022     		movs	r2, #0
 1568 0028 5A62     		str	r2, [r3, #36]
 634:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.battery_charging_enable = ENABLE;
 1569              		.loc 1 634 48
 1570 002a 094B     		ldr	r3, .L72
 1571 002c 0122     		movs	r2, #1
 1572 002e 9A62     		str	r2, [r3, #40]
 635:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 1573              		.loc 1 635 42
 1574 0030 074B     		ldr	r3, .L72
 1575 0032 0022     		movs	r2, #0
 1576 0034 1A63     		str	r2, [r3, #48]
 636:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = ENABLE;
 1577              		.loc 1 636 44
 1578 0036 064B     		ldr	r3, .L72
 1579 0038 0122     		movs	r2, #1
 1580 003a DA62     		str	r2, [r3, #44]
 637:Core/Src/main.c ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 1581              		.loc 1 637 7
 1582 003c 0448     		ldr	r0, .L72
 1583 003e FFF7FEFF 		bl	HAL_PCD_Init
 1584 0042 0346     		mov	r3, r0
 1585              		.loc 1 637 6
 1586 0044 002B     		cmp	r3, #0
 1587 0046 01D0     		beq	.L71
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 40


 638:Core/Src/main.c ****   {
 639:Core/Src/main.c ****     Error_Handler();
 1588              		.loc 1 639 5
 1589 0048 FFF7FEFF 		bl	Error_Handler
 1590              	.L71:
 640:Core/Src/main.c ****   }
 641:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 2 */
 642:Core/Src/main.c **** 
 643:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 2 */
 644:Core/Src/main.c **** 
 645:Core/Src/main.c **** }
 1591              		.loc 1 645 1
 1592 004c 00BF     		nop
 1593 004e 80BD     		pop	{r7, pc}
 1594              	.L73:
 1595              		.align	2
 1596              	.L72:
 1597 0050 00000000 		.word	hpcd_USB_OTG_FS
 1598              		.cfi_endproc
 1599              	.LFE334:
 1601              		.section	.text.MX_DMA_Init,"ax",%progbits
 1602              		.align	1
 1603              		.syntax unified
 1604              		.thumb
 1605              		.thumb_func
 1607              	MX_DMA_Init:
 1608              	.LFB335:
 646:Core/Src/main.c **** 
 647:Core/Src/main.c **** /**
 648:Core/Src/main.c ****   * Enable DMA controller clock
 649:Core/Src/main.c ****   */
 650:Core/Src/main.c **** static void MX_DMA_Init(void)
 651:Core/Src/main.c **** {
 1609              		.loc 1 651 1
 1610              		.cfi_startproc
 1611              		@ args = 0, pretend = 0, frame = 8
 1612              		@ frame_needed = 1, uses_anonymous_args = 0
 1613 0000 80B5     		push	{r7, lr}
 1614              		.cfi_def_cfa_offset 8
 1615              		.cfi_offset 7, -8
 1616              		.cfi_offset 14, -4
 1617 0002 82B0     		sub	sp, sp, #8
 1618              		.cfi_def_cfa_offset 16
 1619 0004 00AF     		add	r7, sp, #0
 1620              		.cfi_def_cfa_register 7
 1621              	.LBB6:
 652:Core/Src/main.c **** 
 653:Core/Src/main.c ****   /* DMA controller clock enable */
 654:Core/Src/main.c ****   __HAL_RCC_DMAMUX1_CLK_ENABLE();
 1622              		.loc 1 654 3
 1623 0006 164B     		ldr	r3, .L75
 1624 0008 9B6C     		ldr	r3, [r3, #72]
 1625 000a 154A     		ldr	r2, .L75
 1626 000c 43F00403 		orr	r3, r3, #4
 1627 0010 9364     		str	r3, [r2, #72]
 1628 0012 134B     		ldr	r3, .L75
 1629 0014 9B6C     		ldr	r3, [r3, #72]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 41


 1630 0016 03F00403 		and	r3, r3, #4
 1631 001a 7B60     		str	r3, [r7, #4]
 1632 001c 7B68     		ldr	r3, [r7, #4]
 1633              	.LBE6:
 1634              	.LBB7:
 655:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 1635              		.loc 1 655 3
 1636 001e 104B     		ldr	r3, .L75
 1637 0020 9B6C     		ldr	r3, [r3, #72]
 1638 0022 0F4A     		ldr	r2, .L75
 1639 0024 43F00103 		orr	r3, r3, #1
 1640 0028 9364     		str	r3, [r2, #72]
 1641 002a 0D4B     		ldr	r3, .L75
 1642 002c 9B6C     		ldr	r3, [r3, #72]
 1643 002e 03F00103 		and	r3, r3, #1
 1644 0032 3B60     		str	r3, [r7]
 1645 0034 3B68     		ldr	r3, [r7]
 1646              	.LBE7:
 656:Core/Src/main.c **** 
 657:Core/Src/main.c ****   /* DMA interrupt init */
 658:Core/Src/main.c ****   /* DMA1_Channel1_IRQn interrupt configuration */
 659:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 1647              		.loc 1 659 3
 1648 0036 0022     		movs	r2, #0
 1649 0038 0021     		movs	r1, #0
 1650 003a 0B20     		movs	r0, #11
 1651 003c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 660:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 1652              		.loc 1 660 3
 1653 0040 0B20     		movs	r0, #11
 1654 0042 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 661:Core/Src/main.c ****   /* DMA1_Channel2_IRQn interrupt configuration */
 662:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 0, 0);
 1655              		.loc 1 662 3
 1656 0046 0022     		movs	r2, #0
 1657 0048 0021     		movs	r1, #0
 1658 004a 0C20     		movs	r0, #12
 1659 004c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 663:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 1660              		.loc 1 663 3
 1661 0050 0C20     		movs	r0, #12
 1662 0052 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 664:Core/Src/main.c **** 
 665:Core/Src/main.c **** }
 1663              		.loc 1 665 1
 1664 0056 00BF     		nop
 1665 0058 0837     		adds	r7, r7, #8
 1666              		.cfi_def_cfa_offset 8
 1667 005a BD46     		mov	sp, r7
 1668              		.cfi_def_cfa_register 13
 1669              		@ sp needed
 1670 005c 80BD     		pop	{r7, pc}
 1671              	.L76:
 1672 005e 00BF     		.align	2
 1673              	.L75:
 1674 0060 00100240 		.word	1073876992
 1675              		.cfi_endproc
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 42


 1676              	.LFE335:
 1678              		.section	.text.MX_GPIO_Init,"ax",%progbits
 1679              		.align	1
 1680              		.syntax unified
 1681              		.thumb
 1682              		.thumb_func
 1684              	MX_GPIO_Init:
 1685              	.LFB336:
 666:Core/Src/main.c **** 
 667:Core/Src/main.c **** /**
 668:Core/Src/main.c ****   * @brief GPIO Initialization Function
 669:Core/Src/main.c ****   * @param None
 670:Core/Src/main.c ****   * @retval None
 671:Core/Src/main.c ****   */
 672:Core/Src/main.c **** static void MX_GPIO_Init(void)
 673:Core/Src/main.c **** {
 1686              		.loc 1 673 1
 1687              		.cfi_startproc
 1688              		@ args = 0, pretend = 0, frame = 48
 1689              		@ frame_needed = 1, uses_anonymous_args = 0
 1690 0000 80B5     		push	{r7, lr}
 1691              		.cfi_def_cfa_offset 8
 1692              		.cfi_offset 7, -8
 1693              		.cfi_offset 14, -4
 1694 0002 8CB0     		sub	sp, sp, #48
 1695              		.cfi_def_cfa_offset 56
 1696 0004 00AF     		add	r7, sp, #0
 1697              		.cfi_def_cfa_register 7
 674:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 1698              		.loc 1 674 20
 1699 0006 07F11C03 		add	r3, r7, #28
 1700 000a 0022     		movs	r2, #0
 1701 000c 1A60     		str	r2, [r3]
 1702 000e 5A60     		str	r2, [r3, #4]
 1703 0010 9A60     		str	r2, [r3, #8]
 1704 0012 DA60     		str	r2, [r3, #12]
 1705 0014 1A61     		str	r2, [r3, #16]
 1706              	.LBB8:
 675:Core/Src/main.c **** 
 676:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 677:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 1707              		.loc 1 677 3
 1708 0016 724B     		ldr	r3, .L78
 1709 0018 DB6C     		ldr	r3, [r3, #76]
 1710 001a 714A     		ldr	r2, .L78
 1711 001c 43F01003 		orr	r3, r3, #16
 1712 0020 D364     		str	r3, [r2, #76]
 1713 0022 6F4B     		ldr	r3, .L78
 1714 0024 DB6C     		ldr	r3, [r3, #76]
 1715 0026 03F01003 		and	r3, r3, #16
 1716 002a BB61     		str	r3, [r7, #24]
 1717 002c BB69     		ldr	r3, [r7, #24]
 1718              	.LBE8:
 1719              	.LBB9:
 678:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 1720              		.loc 1 678 3
 1721 002e 6C4B     		ldr	r3, .L78
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 43


 1722 0030 DB6C     		ldr	r3, [r3, #76]
 1723 0032 6B4A     		ldr	r2, .L78
 1724 0034 43F00403 		orr	r3, r3, #4
 1725 0038 D364     		str	r3, [r2, #76]
 1726 003a 694B     		ldr	r3, .L78
 1727 003c DB6C     		ldr	r3, [r3, #76]
 1728 003e 03F00403 		and	r3, r3, #4
 1729 0042 7B61     		str	r3, [r7, #20]
 1730 0044 7B69     		ldr	r3, [r7, #20]
 1731              	.LBE9:
 1732              	.LBB10:
 679:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 1733              		.loc 1 679 3
 1734 0046 664B     		ldr	r3, .L78
 1735 0048 DB6C     		ldr	r3, [r3, #76]
 1736 004a 654A     		ldr	r2, .L78
 1737 004c 43F02003 		orr	r3, r3, #32
 1738 0050 D364     		str	r3, [r2, #76]
 1739 0052 634B     		ldr	r3, .L78
 1740 0054 DB6C     		ldr	r3, [r3, #76]
 1741 0056 03F02003 		and	r3, r3, #32
 1742 005a 3B61     		str	r3, [r7, #16]
 1743 005c 3B69     		ldr	r3, [r7, #16]
 1744              	.LBE10:
 1745              	.LBB11:
 680:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 1746              		.loc 1 680 3
 1747 005e 604B     		ldr	r3, .L78
 1748 0060 DB6C     		ldr	r3, [r3, #76]
 1749 0062 5F4A     		ldr	r2, .L78
 1750 0064 43F08003 		orr	r3, r3, #128
 1751 0068 D364     		str	r3, [r2, #76]
 1752 006a 5D4B     		ldr	r3, .L78
 1753 006c DB6C     		ldr	r3, [r3, #76]
 1754 006e 03F08003 		and	r3, r3, #128
 1755 0072 FB60     		str	r3, [r7, #12]
 1756 0074 FB68     		ldr	r3, [r7, #12]
 1757              	.LBE11:
 1758              	.LBB12:
 681:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1759              		.loc 1 681 3
 1760 0076 5A4B     		ldr	r3, .L78
 1761 0078 DB6C     		ldr	r3, [r3, #76]
 1762 007a 594A     		ldr	r2, .L78
 1763 007c 43F00103 		orr	r3, r3, #1
 1764 0080 D364     		str	r3, [r2, #76]
 1765 0082 574B     		ldr	r3, .L78
 1766 0084 DB6C     		ldr	r3, [r3, #76]
 1767 0086 03F00103 		and	r3, r3, #1
 1768 008a BB60     		str	r3, [r7, #8]
 1769 008c BB68     		ldr	r3, [r7, #8]
 1770              	.LBE12:
 1771              	.LBB13:
 682:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 1772              		.loc 1 682 3
 1773 008e 544B     		ldr	r3, .L78
 1774 0090 DB6C     		ldr	r3, [r3, #76]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 44


 1775 0092 534A     		ldr	r2, .L78
 1776 0094 43F00203 		orr	r3, r3, #2
 1777 0098 D364     		str	r3, [r2, #76]
 1778 009a 514B     		ldr	r3, .L78
 1779 009c DB6C     		ldr	r3, [r3, #76]
 1780 009e 03F00203 		and	r3, r3, #2
 1781 00a2 7B60     		str	r3, [r7, #4]
 1782 00a4 7B68     		ldr	r3, [r7, #4]
 1783              	.LBE13:
 1784              	.LBB14:
 683:Core/Src/main.c ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 1785              		.loc 1 683 3
 1786 00a6 4E4B     		ldr	r3, .L78
 1787 00a8 DB6C     		ldr	r3, [r3, #76]
 1788 00aa 4D4A     		ldr	r2, .L78
 1789 00ac 43F04003 		orr	r3, r3, #64
 1790 00b0 D364     		str	r3, [r2, #76]
 1791 00b2 4B4B     		ldr	r3, .L78
 1792 00b4 DB6C     		ldr	r3, [r3, #76]
 1793 00b6 03F04003 		and	r3, r3, #64
 1794 00ba 3B60     		str	r3, [r7]
 1795 00bc 3B68     		ldr	r3, [r7]
 1796              	.LBE14:
 684:Core/Src/main.c ****   HAL_PWREx_EnableVddIO2();
 1797              		.loc 1 684 3
 1798 00be FFF7FEFF 		bl	HAL_PWREx_EnableVddIO2
 685:Core/Src/main.c **** 
 686:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 687:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOF, GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_6
 1799              		.loc 1 687 3
 1800 00c2 0022     		movs	r2, #0
 1801 00c4 4FF4E771 		mov	r1, #462
 1802 00c8 4648     		ldr	r0, .L78+4
 1803 00ca FFF7FEFF 		bl	HAL_GPIO_WritePin
 688:Core/Src/main.c ****                           |GPIO_PIN_7|GPIO_PIN_8, GPIO_PIN_RESET);
 689:Core/Src/main.c **** 
 690:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 691:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 1804              		.loc 1 691 3
 1805 00ce 0022     		movs	r2, #0
 1806 00d0 8021     		movs	r1, #128
 1807 00d2 4FF09040 		mov	r0, #1207959552
 1808 00d6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 692:Core/Src/main.c **** 
 693:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 694:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD2_Pin, GPIO_PIN_RESET);
 1809              		.loc 1 694 3
 1810 00da 0022     		movs	r2, #0
 1811 00dc 44F28301 		movw	r1, #16515
 1812 00e0 4148     		ldr	r0, .L78+8
 1813 00e2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 695:Core/Src/main.c **** 
 696:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 697:Core/Src/main.c ****   HAL_GPIO_WritePin(USB_PowerSwitchOn_GPIO_Port, USB_PowerSwitchOn_Pin, GPIO_PIN_RESET);
 1814              		.loc 1 697 3
 1815 00e6 0022     		movs	r2, #0
 1816 00e8 4021     		movs	r1, #64
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 45


 1817 00ea 4048     		ldr	r0, .L78+12
 1818 00ec FFF7FEFF 		bl	HAL_GPIO_WritePin
 698:Core/Src/main.c **** 
 699:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 700:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_6, GPIO_PIN_RESET);
 1819              		.loc 1 700 3
 1820 00f0 0022     		movs	r2, #0
 1821 00f2 4021     		movs	r1, #64
 1822 00f4 3E48     		ldr	r0, .L78+16
 1823 00f6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 701:Core/Src/main.c **** 
 702:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 703:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 1824              		.loc 1 703 23
 1825 00fa 4FF40053 		mov	r3, #8192
 1826 00fe FB61     		str	r3, [r7, #28]
 704:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 1827              		.loc 1 704 24
 1828 0100 4FF48813 		mov	r3, #1114112
 1829 0104 3B62     		str	r3, [r7, #32]
 705:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1830              		.loc 1 705 24
 1831 0106 0023     		movs	r3, #0
 1832 0108 7B62     		str	r3, [r7, #36]
 706:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 1833              		.loc 1 706 3
 1834 010a 07F11C03 		add	r3, r7, #28
 1835 010e 1946     		mov	r1, r3
 1836 0110 3748     		ldr	r0, .L78+16
 1837 0112 FFF7FEFF 		bl	HAL_GPIO_Init
 707:Core/Src/main.c **** 
 708:Core/Src/main.c ****   /*Configure GPIO pins : PF0 PF4 PF5 */
 709:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_4|GPIO_PIN_5;
 1838              		.loc 1 709 23
 1839 0116 3123     		movs	r3, #49
 1840 0118 FB61     		str	r3, [r7, #28]
 710:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 1841              		.loc 1 710 24
 1842 011a 0023     		movs	r3, #0
 1843 011c 3B62     		str	r3, [r7, #32]
 711:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1844              		.loc 1 711 24
 1845 011e 0023     		movs	r3, #0
 1846 0120 7B62     		str	r3, [r7, #36]
 712:Core/Src/main.c ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 1847              		.loc 1 712 3
 1848 0122 07F11C03 		add	r3, r7, #28
 1849 0126 1946     		mov	r1, r3
 1850 0128 2E48     		ldr	r0, .L78+4
 1851 012a FFF7FEFF 		bl	HAL_GPIO_Init
 713:Core/Src/main.c **** 
 714:Core/Src/main.c ****   /*Configure GPIO pins : PF1 PF2 PF3 PF6
 715:Core/Src/main.c ****                            PF7 PF8 */
 716:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_6
 1852              		.loc 1 716 23
 1853 012e 4FF4E773 		mov	r3, #462
 1854 0132 FB61     		str	r3, [r7, #28]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 46


 717:Core/Src/main.c ****                           |GPIO_PIN_7|GPIO_PIN_8;
 718:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1855              		.loc 1 718 24
 1856 0134 0123     		movs	r3, #1
 1857 0136 3B62     		str	r3, [r7, #32]
 719:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1858              		.loc 1 719 24
 1859 0138 0023     		movs	r3, #0
 1860 013a 7B62     		str	r3, [r7, #36]
 720:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1861              		.loc 1 720 25
 1862 013c 0023     		movs	r3, #0
 1863 013e BB62     		str	r3, [r7, #40]
 721:Core/Src/main.c ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 1864              		.loc 1 721 3
 1865 0140 07F11C03 		add	r3, r7, #28
 1866 0144 1946     		mov	r1, r3
 1867 0146 2748     		ldr	r0, .L78+4
 1868 0148 FFF7FEFF 		bl	HAL_GPIO_Init
 722:Core/Src/main.c **** 
 723:Core/Src/main.c ****   /*Configure GPIO pin : PA7 */
 724:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_7;
 1869              		.loc 1 724 23
 1870 014c 8023     		movs	r3, #128
 1871 014e FB61     		str	r3, [r7, #28]
 725:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1872              		.loc 1 725 24
 1873 0150 0123     		movs	r3, #1
 1874 0152 3B62     		str	r3, [r7, #32]
 726:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1875              		.loc 1 726 24
 1876 0154 0023     		movs	r3, #0
 1877 0156 7B62     		str	r3, [r7, #36]
 727:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1878              		.loc 1 727 25
 1879 0158 0023     		movs	r3, #0
 1880 015a BB62     		str	r3, [r7, #40]
 728:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1881              		.loc 1 728 3
 1882 015c 07F11C03 		add	r3, r7, #28
 1883 0160 1946     		mov	r1, r3
 1884 0162 4FF09040 		mov	r0, #1207959552
 1885 0166 FFF7FEFF 		bl	HAL_GPIO_Init
 729:Core/Src/main.c **** 
 730:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 LD3_Pin LD2_Pin */
 731:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD2_Pin;
 1886              		.loc 1 731 23
 1887 016a 44F28303 		movw	r3, #16515
 1888 016e FB61     		str	r3, [r7, #28]
 732:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1889              		.loc 1 732 24
 1890 0170 0123     		movs	r3, #1
 1891 0172 3B62     		str	r3, [r7, #32]
 733:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1892              		.loc 1 733 24
 1893 0174 0023     		movs	r3, #0
 1894 0176 7B62     		str	r3, [r7, #36]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 47


 734:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1895              		.loc 1 734 25
 1896 0178 0023     		movs	r3, #0
 1897 017a BB62     		str	r3, [r7, #40]
 735:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1898              		.loc 1 735 3
 1899 017c 07F11C03 		add	r3, r7, #28
 1900 0180 1946     		mov	r1, r3
 1901 0182 1948     		ldr	r0, .L78+8
 1902 0184 FFF7FEFF 		bl	HAL_GPIO_Init
 736:Core/Src/main.c **** 
 737:Core/Src/main.c ****   /*Configure GPIO pin : USB_OverCurrent_Pin */
 738:Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_OverCurrent_Pin;
 1903              		.loc 1 738 23
 1904 0188 2023     		movs	r3, #32
 1905 018a FB61     		str	r3, [r7, #28]
 739:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 1906              		.loc 1 739 24
 1907 018c 0023     		movs	r3, #0
 1908 018e 3B62     		str	r3, [r7, #32]
 740:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1909              		.loc 1 740 24
 1910 0190 0023     		movs	r3, #0
 1911 0192 7B62     		str	r3, [r7, #36]
 741:Core/Src/main.c ****   HAL_GPIO_Init(USB_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 1912              		.loc 1 741 3
 1913 0194 07F11C03 		add	r3, r7, #28
 1914 0198 1946     		mov	r1, r3
 1915 019a 1448     		ldr	r0, .L78+12
 1916 019c FFF7FEFF 		bl	HAL_GPIO_Init
 742:Core/Src/main.c **** 
 743:Core/Src/main.c ****   /*Configure GPIO pin : USB_PowerSwitchOn_Pin */
 744:Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_PowerSwitchOn_Pin;
 1917              		.loc 1 744 23
 1918 01a0 4023     		movs	r3, #64
 1919 01a2 FB61     		str	r3, [r7, #28]
 745:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1920              		.loc 1 745 24
 1921 01a4 0123     		movs	r3, #1
 1922 01a6 3B62     		str	r3, [r7, #32]
 746:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1923              		.loc 1 746 24
 1924 01a8 0023     		movs	r3, #0
 1925 01aa 7B62     		str	r3, [r7, #36]
 747:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1926              		.loc 1 747 25
 1927 01ac 0023     		movs	r3, #0
 1928 01ae BB62     		str	r3, [r7, #40]
 748:Core/Src/main.c ****   HAL_GPIO_Init(USB_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 1929              		.loc 1 748 3
 1930 01b0 07F11C03 		add	r3, r7, #28
 1931 01b4 1946     		mov	r1, r3
 1932 01b6 0D48     		ldr	r0, .L78+12
 1933 01b8 FFF7FEFF 		bl	HAL_GPIO_Init
 749:Core/Src/main.c **** 
 750:Core/Src/main.c ****   /*Configure GPIO pin : PC6 */
 751:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6;
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 48


 1934              		.loc 1 751 23
 1935 01bc 4023     		movs	r3, #64
 1936 01be FB61     		str	r3, [r7, #28]
 752:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1937              		.loc 1 752 24
 1938 01c0 0123     		movs	r3, #1
 1939 01c2 3B62     		str	r3, [r7, #32]
 753:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1940              		.loc 1 753 24
 1941 01c4 0023     		movs	r3, #0
 1942 01c6 7B62     		str	r3, [r7, #36]
 754:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1943              		.loc 1 754 25
 1944 01c8 0023     		movs	r3, #0
 1945 01ca BB62     		str	r3, [r7, #40]
 755:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 1946              		.loc 1 755 3
 1947 01cc 07F11C03 		add	r3, r7, #28
 1948 01d0 1946     		mov	r1, r3
 1949 01d2 0748     		ldr	r0, .L78+16
 1950 01d4 FFF7FEFF 		bl	HAL_GPIO_Init
 756:Core/Src/main.c **** 
 757:Core/Src/main.c **** }
 1951              		.loc 1 757 1
 1952 01d8 00BF     		nop
 1953 01da 3037     		adds	r7, r7, #48
 1954              		.cfi_def_cfa_offset 8
 1955 01dc BD46     		mov	sp, r7
 1956              		.cfi_def_cfa_register 13
 1957              		@ sp needed
 1958 01de 80BD     		pop	{r7, pc}
 1959              	.L79:
 1960              		.align	2
 1961              	.L78:
 1962 01e0 00100240 		.word	1073876992
 1963 01e4 00140048 		.word	1207964672
 1964 01e8 00040048 		.word	1207960576
 1965 01ec 00180048 		.word	1207965696
 1966 01f0 00080048 		.word	1207961600
 1967              		.cfi_endproc
 1968              	.LFE336:
 1970              		.section	.text.Error_Handler,"ax",%progbits
 1971              		.align	1
 1972              		.global	Error_Handler
 1973              		.syntax unified
 1974              		.thumb
 1975              		.thumb_func
 1977              	Error_Handler:
 1978              	.LFB337:
 758:Core/Src/main.c **** 
 759:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 760:Core/Src/main.c **** 
 761:Core/Src/main.c **** /* USER CODE END 4 */
 762:Core/Src/main.c **** 
 763:Core/Src/main.c **** /**
 764:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 765:Core/Src/main.c ****   * @retval None
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 49


 766:Core/Src/main.c ****   */
 767:Core/Src/main.c **** void Error_Handler(void)
 768:Core/Src/main.c **** {
 1979              		.loc 1 768 1
 1980              		.cfi_startproc
 1981              		@ args = 0, pretend = 0, frame = 0
 1982              		@ frame_needed = 1, uses_anonymous_args = 0
 1983              		@ link register save eliminated.
 1984 0000 80B4     		push	{r7}
 1985              		.cfi_def_cfa_offset 4
 1986              		.cfi_offset 7, -4
 1987 0002 00AF     		add	r7, sp, #0
 1988              		.cfi_def_cfa_register 7
 1989              	.LBB15:
 1990              	.LBB16:
 1991              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 50


  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 51


  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 52


 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1992              		.loc 2 209 3
 1993              		.syntax unified
 1994              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 53


 1995 0004 72B6     		cpsid i
 1996              	@ 0 "" 2
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1997              		.loc 2 210 1
 1998              		.thumb
 1999              		.syntax unified
 2000 0006 00BF     		nop
 2001              	.L81:
 2002              	.LBE16:
 2003              	.LBE15:
 769:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 770:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 771:Core/Src/main.c ****   __disable_irq();
 772:Core/Src/main.c ****   while (1)
 2004              		.loc 1 772 9 discriminator 1
 2005 0008 FEE7     		b	.L81
 2006              		.cfi_endproc
 2007              	.LFE337:
 2009              		.text
 2010              	.Letext0:
 2011              		.file 3 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4p5xx.h"
 2012              		.file 4 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 2013              		.file 5 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 2014              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 2015              		.file 7 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 2016              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2017              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 2018              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 2019              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 2020              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 2021              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc_ex.h"
 2022              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usb.h"
 2023              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pcd.h"
 2024              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 2025              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 2026              		.file 18 "Core/Inc/./gcodes/types.h"
 2027              		.file 19 "Core/Inc/main.h"
 2028              		.file 20 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
 2029              		.file 21 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim_ex.h"
 2030              		.file 22 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart_ex.h"
 2031              		.file 23 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 2032              		.file 24 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2033              		.file 25 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2034              		.file 26 "Core/Inc/./gcodes/reader.h"
 2035              		.file 27 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 54


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:24     .bss.hadc1:0000000000000000 hadc1
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:21     .bss.hadc1:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:31     .bss.hdma_adc1:0000000000000000 hdma_adc1
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:28     .bss.hdma_adc1:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:38     .bss.hlpuart1:0000000000000000 hlpuart1
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:35     .bss.hlpuart1:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:45     .bss.huart4:0000000000000000 huart4
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:42     .bss.huart4:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:52     .bss.hdma_lpuart1_rx:0000000000000000 hdma_lpuart1_rx
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:49     .bss.hdma_lpuart1_rx:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:59     .bss.htim3:0000000000000000 htim3
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:56     .bss.htim3:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:66     .bss.htim4:0000000000000000 htim4
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:63     .bss.htim4:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:73     .bss.htim5:0000000000000000 htim5
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:70     .bss.htim5:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:80     .bss.hpcd_USB_OTG_FS:0000000000000000 hpcd_USB_OTG_FS
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:77     .bss.hpcd_USB_OTG_FS:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:87     .bss.step:0000000000000000 step
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:84     .bss.step:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:94     .bss.last_time:0000000000000000 last_time
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:91     .bss.last_time:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:101    .bss.value:0000000000000000 value
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:98     .bss.value:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:108    .bss.reader:0000000000000000 reader
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:105    .bss.reader:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:115    .bss.read_count:0000000000000000 read_count
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:112    .bss.read_count:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:122    .bss.state:0000000000000000 state
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:119    .bss.state:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:129    .bss.rx_buff:0000000000000000 rx_buff
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:126    .bss.rx_buff:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:136    .bss.gcode_buff:0000000000000000 gcode_buff
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:133    .bss.gcode_buff:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:143    .bss.i:0000000000000000 i
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:140    .bss.i:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:150    .bss.j:0000000000000000 j
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:147    .bss.j:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:157    .bss.should_print:0000000000000000 should_print
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:154    .bss.should_print:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:160    .text.HAL_UARTEx_RxEventCallback:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:166    .text.HAL_UARTEx_RxEventCallback:0000000000000000 HAL_UARTEx_RxEventCallback
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:285    .text.HAL_UARTEx_RxEventCallback:00000000000000a8 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:296    .rodata:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:303    .text.main:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:309    .text.main:0000000000000000 main
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:527    .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:1684   .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:1607   .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:877    .text.MX_LPUART1_UART_Init:0000000000000000 MX_LPUART1_UART_Init
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:1533   .text.MX_USB_OTG_FS_PCD_Init:0000000000000000 MX_USB_OTG_FS_PCD_Init
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:1301   .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:996    .text.MX_UART4_Init:0000000000000000 MX_UART4_Init
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:1111   .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:656    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 55


C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:1417   .text.MX_TIM5_Init:0000000000000000 MX_TIM5_Init
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:502    .text.main:0000000000000140 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:521    .text.SystemClock_Config:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:1977   .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:651    .text.MX_ADC1_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:863    .text.MX_ADC1_Init:0000000000000130 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:872    .text.MX_LPUART1_UART_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:985    .text.MX_LPUART1_UART_Init:0000000000000098 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:991    .text.MX_UART4_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:1100   .text.MX_UART4_Init:0000000000000090 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:1106   .text.MX_TIM3_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:1290   .text.MX_TIM3_Init:0000000000000110 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:1296   .text.MX_TIM4_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:1406   .text.MX_TIM4_Init:0000000000000094 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:1412   .text.MX_TIM5_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:1522   .text.MX_TIM5_Init:0000000000000094 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:1528   .text.MX_USB_OTG_FS_PCD_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:1597   .text.MX_USB_OTG_FS_PCD_Init:0000000000000050 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:1602   .text.MX_DMA_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:1674   .text.MX_DMA_Init:0000000000000060 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:1679   .text.MX_GPIO_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:1962   .text.MX_GPIO_Init:00000000000001e0 $d
C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s:1971   .text.Error_Handler:0000000000000000 $t

UNDEFINED SYMBOLS
memcpy
HAL_UARTEx_ReceiveToIdle_DMA
HAL_Init
HAL_TIM_PWM_Start
HAL_ADC_Start_DMA
HAL_TIM_Base_Start
memset
read_code
HAL_UART_Transmit
sprintf
strlen
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
HAL_UART_Init
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_DisableFifoMode
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_PCD_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_PWREx_EnableVddIO2
HAL_GPIO_WritePin
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccdvcUQE.s 			page 56


HAL_GPIO_Init
