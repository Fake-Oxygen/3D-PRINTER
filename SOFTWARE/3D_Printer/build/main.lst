ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	hadc1
  20              		.section	.bss.hadc1,"aw",%nobits
  21              		.align	2
  24              	hadc1:
  25 0000 00000000 		.space	104
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.global	hdma_adc1
  27              		.section	.bss.hdma_adc1,"aw",%nobits
  28              		.align	2
  31              	hdma_adc1:
  32 0000 00000000 		.space	96
  32      00000000 
  32      00000000 
  32      00000000 
  32      00000000 
  33              		.global	hlpuart1
  34              		.section	.bss.hlpuart1,"aw",%nobits
  35              		.align	2
  38              	hlpuart1:
  39 0000 00000000 		.space	144
  39      00000000 
  39      00000000 
  39      00000000 
  39      00000000 
  40              		.global	huart4
  41              		.section	.bss.huart4,"aw",%nobits
  42              		.align	2
  45              	huart4:
  46 0000 00000000 		.space	144
  46      00000000 
  46      00000000 
  46      00000000 
  46      00000000 
  47              		.global	hdma_lpuart1_rx
  48              		.section	.bss.hdma_lpuart1_rx,"aw",%nobits
  49              		.align	2
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 2


  52              	hdma_lpuart1_rx:
  53 0000 00000000 		.space	96
  53      00000000 
  53      00000000 
  53      00000000 
  53      00000000 
  54              		.global	htim3
  55              		.section	.bss.htim3,"aw",%nobits
  56              		.align	2
  59              	htim3:
  60 0000 00000000 		.space	76
  60      00000000 
  60      00000000 
  60      00000000 
  60      00000000 
  61              		.global	htim4
  62              		.section	.bss.htim4,"aw",%nobits
  63              		.align	2
  66              	htim4:
  67 0000 00000000 		.space	76
  67      00000000 
  67      00000000 
  67      00000000 
  67      00000000 
  68              		.global	htim5
  69              		.section	.bss.htim5,"aw",%nobits
  70              		.align	2
  73              	htim5:
  74 0000 00000000 		.space	76
  74      00000000 
  74      00000000 
  74      00000000 
  74      00000000 
  75              		.global	hpcd_USB_OTG_FS
  76              		.section	.bss.hpcd_USB_OTG_FS,"aw",%nobits
  77              		.align	2
  80              	hpcd_USB_OTG_FS:
  81 0000 00000000 		.space	1292
  81      00000000 
  81      00000000 
  81      00000000 
  81      00000000 
  82              		.global	step
  83              		.section	.bss.step,"aw",%nobits
  84              		.align	1
  87              	step:
  88 0000 0000     		.space	2
  89              		.global	last_time
  90              		.section	.bss.last_time,"aw",%nobits
  91              		.align	2
  94              	last_time:
  95 0000 00000000 		.space	4
  96              		.global	value
  97              		.section	.bss.value,"aw",%nobits
  98              		.align	2
 101              	value:
 102 0000 00000000 		.space	12
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 3


 102      00000000 
 102      00000000 
 103              		.global	reader
 104              		.section	.bss.reader,"aw",%nobits
 105              		.align	3
 108              	reader:
 109 0000 00000000 		.space	168
 109      00000000 
 109      00000000 
 109      00000000 
 109      00000000 
 110              		.global	current_cmd
 111              		.section	.bss.current_cmd,"aw",%nobits
 112              		.align	3
 115              	current_cmd:
 116 0000 00000000 		.space	168
 116      00000000 
 116      00000000 
 116      00000000 
 116      00000000 
 117              		.global	state
 118              		.section	.bss.state,"aw",%nobits
 119              		.align	2
 122              	state:
 123 0000 00000000 		.space	4
 124              		.global	rx_buff
 125              		.section	.bss.rx_buff,"aw",%nobits
 126              		.align	2
 129              	rx_buff:
 130 0000 00000000 		.space	64
 130      00000000 
 130      00000000 
 130      00000000 
 130      00000000 
 131              		.global	gcode_buff
 132              		.section	.bss.gcode_buff,"aw",%nobits
 133              		.align	2
 136              	gcode_buff:
 137 0000 00000000 		.space	64
 137      00000000 
 137      00000000 
 137      00000000 
 137      00000000 
 138              		.global	read_count
 139              		.section	.bss.read_count,"aw",%nobits
 140              		.align	2
 143              	read_count:
 144 0000 00000000 		.space	4
 145              		.global	i
 146              		.section	.bss.i,"aw",%nobits
 147              		.align	2
 150              	i:
 151 0000 00000000 		.space	4
 152              		.global	j
 153              		.section	.bss.j,"aw",%nobits
 154              		.align	2
 157              	j:
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 4


 158 0000 00000000 		.space	4
 159              		.global	should_read_cmd
 160              		.section	.bss.should_read_cmd,"aw",%nobits
 161              		.align	2
 164              	should_read_cmd:
 165 0000 00000000 		.space	4
 166              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 167              		.align	1
 168              		.global	HAL_UARTEx_RxEventCallback
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 173              	HAL_UARTEx_RxEventCallback:
 174              	.LFB325:
 175              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** /* USER CODE END Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PD */
  33:Core/Src/main.c **** /* USER CODE END PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PM */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  41:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  42:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 5


  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** UART_HandleTypeDef hlpuart1;
  45:Core/Src/main.c **** UART_HandleTypeDef huart4;
  46:Core/Src/main.c **** DMA_HandleTypeDef hdma_lpuart1_rx;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  49:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  50:Core/Src/main.c **** TIM_HandleTypeDef htim5;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** PCD_HandleTypeDef hpcd_USB_OTG_FS;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE BEGIN PV */
  55:Core/Src/main.c **** uint16_t step = 0;
  56:Core/Src/main.c **** uint32_t last_time = 0;
  57:Core/Src/main.c **** uint32_t value[ADC_CHANNELS];
  58:Core/Src/main.c **** gc_reader reader;
  59:Core/Src/main.c **** gc_reader current_cmd;
  60:Core/Src/main.c **** int state = 0;
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** uint8_t rx_buff[GCODE_BUFF_SIZE];
  63:Core/Src/main.c **** uint8_t gcode_buff[GCODE_BUFF_SIZE];
  64:Core/Src/main.c **** size_t read_count = 0;
  65:Core/Src/main.c **** int i = 0;
  66:Core/Src/main.c **** int j = 0;
  67:Core/Src/main.c **** int should_read_cmd = 0;
  68:Core/Src/main.c **** /* USER CODE END PV */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  71:Core/Src/main.c **** void SystemClock_Config(void);
  72:Core/Src/main.c **** static void MX_GPIO_Init(void);
  73:Core/Src/main.c **** static void MX_DMA_Init(void);
  74:Core/Src/main.c **** static void MX_LPUART1_UART_Init(void);
  75:Core/Src/main.c **** static void MX_USB_OTG_FS_PCD_Init(void);
  76:Core/Src/main.c **** static void MX_TIM4_Init(void);
  77:Core/Src/main.c **** static void MX_UART4_Init(void);
  78:Core/Src/main.c **** static void MX_TIM3_Init(void);
  79:Core/Src/main.c **** static void MX_ADC1_Init(void);
  80:Core/Src/main.c **** static void MX_TIM5_Init(void);
  81:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  82:Core/Src/main.c **** /* USER CODE END PFP */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  85:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
  88:Core/Src/main.c **** {
 176              		.loc 1 88 1
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 16
 179              		@ frame_needed = 1, uses_anonymous_args = 0
 180 0000 80B5     		push	{r7, lr}
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 7, -8
 183              		.cfi_offset 14, -4
 184 0002 84B0     		sub	sp, sp, #16
 185              		.cfi_def_cfa_offset 24
 186 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 6


 187              		.cfi_def_cfa_register 7
 188 0006 7860     		str	r0, [r7, #4]
 189 0008 0B46     		mov	r3, r1
 190 000a 7B80     		strh	r3, [r7, #2]	@ movhi
  89:Core/Src/main.c ****   if (huart->Instance == LPUART1)
 191              		.loc 1 89 12
 192 000c 7B68     		ldr	r3, [r7, #4]
 193 000e 1B68     		ldr	r3, [r3]
 194              		.loc 1 89 6
 195 0010 1E4A     		ldr	r2, .L6
 196 0012 9342     		cmp	r3, r2
 197 0014 29D1     		bne	.L2
 198              	.LBB4:
  90:Core/Src/main.c ****   {
  91:Core/Src/main.c ****     for(int c = 0; c < Size && read_count < GCODE_BUFF_SIZE; i = (i + 1) % GCODE_BUFF_SIZE, c++) {
 199              		.loc 1 91 13
 200 0016 0023     		movs	r3, #0
 201 0018 FB60     		str	r3, [r7, #12]
 202              		.loc 1 91 5
 203 001a 1BE0     		b	.L3
 204              	.L5:
  92:Core/Src/main.c ****       gcode_buff[i] = rx_buff[c];
 205              		.loc 1 92 17 discriminator 4
 206 001c 1C4B     		ldr	r3, .L6+4
 207 001e 1B68     		ldr	r3, [r3]
 208              		.loc 1 92 30 discriminator 4
 209 0020 1C49     		ldr	r1, .L6+8
 210 0022 FA68     		ldr	r2, [r7, #12]
 211 0024 0A44     		add	r2, r2, r1
 212 0026 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 213              		.loc 1 92 21 discriminator 4
 214 0028 1B4A     		ldr	r2, .L6+12
 215 002a D154     		strb	r1, [r2, r3]
  93:Core/Src/main.c ****       read_count++;
 216              		.loc 1 93 17 discriminator 4
 217 002c 1B4B     		ldr	r3, .L6+16
 218 002e 1B68     		ldr	r3, [r3]
 219 0030 0133     		adds	r3, r3, #1
 220 0032 1A4A     		ldr	r2, .L6+16
 221 0034 1360     		str	r3, [r2]
  91:Core/Src/main.c ****       gcode_buff[i] = rx_buff[c];
 222              		.loc 1 91 69 discriminator 4
 223 0036 164B     		ldr	r3, .L6+4
 224 0038 1B68     		ldr	r3, [r3]
 225 003a 0133     		adds	r3, r3, #1
  91:Core/Src/main.c ****       gcode_buff[i] = rx_buff[c];
 226              		.loc 1 91 74 discriminator 4
 227 003c 5A42     		rsbs	r2, r3, #0
 228 003e 03F03F03 		and	r3, r3, #63
 229 0042 02F03F02 		and	r2, r2, #63
 230 0046 58BF     		it	pl
 231 0048 5342     		rsbpl	r3, r2, #0
  91:Core/Src/main.c ****       gcode_buff[i] = rx_buff[c];
 232              		.loc 1 91 64 discriminator 4
 233 004a 114A     		ldr	r2, .L6+4
 234 004c 1360     		str	r3, [r2]
  91:Core/Src/main.c ****       gcode_buff[i] = rx_buff[c];
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 7


 235              		.loc 1 91 94 discriminator 4
 236 004e FB68     		ldr	r3, [r7, #12]
 237 0050 0133     		adds	r3, r3, #1
 238 0052 FB60     		str	r3, [r7, #12]
 239              	.L3:
  91:Core/Src/main.c ****       gcode_buff[i] = rx_buff[c];
 240              		.loc 1 91 22 discriminator 1
 241 0054 7B88     		ldrh	r3, [r7, #2]
  91:Core/Src/main.c ****       gcode_buff[i] = rx_buff[c];
 242              		.loc 1 91 29 discriminator 1
 243 0056 FA68     		ldr	r2, [r7, #12]
 244 0058 9A42     		cmp	r2, r3
 245 005a 03DA     		bge	.L4
  91:Core/Src/main.c ****       gcode_buff[i] = rx_buff[c];
 246              		.loc 1 91 43 discriminator 3
 247 005c 0F4B     		ldr	r3, .L6+16
 248 005e 1B68     		ldr	r3, [r3]
  91:Core/Src/main.c ****       gcode_buff[i] = rx_buff[c];
 249              		.loc 1 91 29 discriminator 3
 250 0060 3F2B     		cmp	r3, #63
 251 0062 DBD9     		bls	.L5
 252              	.L4:
 253              	.LBE4:
  94:Core/Src/main.c ****     }
  95:Core/Src/main.c ****     should_read_cmd = 1;
 254              		.loc 1 95 21
 255 0064 0E4B     		ldr	r3, .L6+20
 256 0066 0122     		movs	r2, #1
 257 0068 1A60     		str	r2, [r3]
 258              	.L2:
  96:Core/Src/main.c ****   }
  97:Core/Src/main.c ****   HAL_UARTEx_ReceiveToIdle_DMA(&hlpuart1, rx_buff, GCODE_BUFF_SIZE);
 259              		.loc 1 97 3
 260 006a 4022     		movs	r2, #64
 261 006c 0949     		ldr	r1, .L6+8
 262 006e 0D48     		ldr	r0, .L6+24
 263 0070 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_DMA
  98:Core/Src/main.c ****   __HAL_DMA_DISABLE_IT(&hdma_lpuart1_rx, DMA_IT_HT);
 264              		.loc 1 98 3
 265 0074 0C4B     		ldr	r3, .L6+28
 266 0076 1B68     		ldr	r3, [r3]
 267 0078 1A68     		ldr	r2, [r3]
 268 007a 0B4B     		ldr	r3, .L6+28
 269 007c 1B68     		ldr	r3, [r3]
 270 007e 22F00402 		bic	r2, r2, #4
 271 0082 1A60     		str	r2, [r3]
  99:Core/Src/main.c **** }
 272              		.loc 1 99 1
 273 0084 00BF     		nop
 274 0086 1037     		adds	r7, r7, #16
 275              		.cfi_def_cfa_offset 8
 276 0088 BD46     		mov	sp, r7
 277              		.cfi_def_cfa_register 13
 278              		@ sp needed
 279 008a 80BD     		pop	{r7, pc}
 280              	.L7:
 281              		.align	2
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 8


 282              	.L6:
 283 008c 00800040 		.word	1073774592
 284 0090 00000000 		.word	i
 285 0094 00000000 		.word	rx_buff
 286 0098 00000000 		.word	gcode_buff
 287 009c 00000000 		.word	read_count
 288 00a0 00000000 		.word	should_read_cmd
 289 00a4 00000000 		.word	hlpuart1
 290 00a8 00000000 		.word	hdma_lpuart1_rx
 291              		.cfi_endproc
 292              	.LFE325:
 294              		.section	.text.transmit_resp_code,"ax",%progbits
 295              		.align	1
 296              		.global	transmit_resp_code
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 301              	transmit_resp_code:
 302              	.LFB326:
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** // void DelayMicrosecond(uint16_t time)
 102:Core/Src/main.c **** // {
 103:Core/Src/main.c **** //   __HAL_TIM_SET_COUNTER(&htim4, 0);
 104:Core/Src/main.c **** //   while (__HAL_TIM_GET_COUNTER(&htim4) < time)
 105:Core/Src/main.c **** //     ;
 106:Core/Src/main.c **** // }
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** // void print_temperature()
 109:Core/Src/main.c **** // {
 110:Core/Src/main.c **** //   sprintf(msg_buffer, "temp: %f, value: %d\r\n", GetTemperature(ADC_HOT_END, value[ADC_HOT_END])
 111:Core/Src/main.c **** //   HAL_UART_Transmit(&hlpuart1, (uint16_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 112:Core/Src/main.c **** // }
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** void transmit_resp_code(uint8_t *code) {
 303              		.loc 1 114 40
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 8
 306              		@ frame_needed = 1, uses_anonymous_args = 0
 307 0000 80B5     		push	{r7, lr}
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 7, -8
 310              		.cfi_offset 14, -4
 311 0002 82B0     		sub	sp, sp, #8
 312              		.cfi_def_cfa_offset 16
 313 0004 00AF     		add	r7, sp, #0
 314              		.cfi_def_cfa_register 7
 315 0006 7860     		str	r0, [r7, #4]
 115:Core/Src/main.c ****   transmit_resp_code_with_comment(code, NULL);
 316              		.loc 1 115 3
 317 0008 0021     		movs	r1, #0
 318 000a 7868     		ldr	r0, [r7, #4]
 319 000c FFF7FEFF 		bl	transmit_resp_code_with_comment
 116:Core/Src/main.c **** }
 320              		.loc 1 116 1
 321 0010 00BF     		nop
 322 0012 0837     		adds	r7, r7, #8
 323              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 9


 324 0014 BD46     		mov	sp, r7
 325              		.cfi_def_cfa_register 13
 326              		@ sp needed
 327 0016 80BD     		pop	{r7, pc}
 328              		.cfi_endproc
 329              	.LFE326:
 331              		.section	.rodata
 332              		.align	2
 333              	.LC0:
 334 0000 25732573 		.ascii	"%s%s\012\000"
 334      0A00
 335              		.section	.text.transmit_resp_code_with_comment,"ax",%progbits
 336              		.align	1
 337              		.global	transmit_resp_code_with_comment
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 342              	transmit_resp_code_with_comment:
 343              	.LFB327:
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** void transmit_resp_code_with_comment(uint8_t *code, uint8_t *comment) {
 344              		.loc 1 118 71
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 16
 347              		@ frame_needed = 1, uses_anonymous_args = 0
 348 0000 90B5     		push	{r4, r7, lr}
 349              		.cfi_def_cfa_offset 12
 350              		.cfi_offset 4, -12
 351              		.cfi_offset 7, -8
 352              		.cfi_offset 14, -4
 353 0002 85B0     		sub	sp, sp, #20
 354              		.cfi_def_cfa_offset 32
 355 0004 00AF     		add	r7, sp, #0
 356              		.cfi_def_cfa_register 7
 357 0006 7860     		str	r0, [r7, #4]
 358 0008 3960     		str	r1, [r7]
 119:Core/Src/main.c ****   if(comment != NULL) {
 359              		.loc 1 119 5
 360 000a 3B68     		ldr	r3, [r7]
 361 000c 002B     		cmp	r3, #0
 362 000e 20D0     		beq	.L10
 363              	.LBB5:
 120:Core/Src/main.c ****     int len = strlen(code) + strlen(comment) + 2; // 2 = newline + terminator
 364              		.loc 1 120 15
 365 0010 7868     		ldr	r0, [r7, #4]
 366 0012 FFF7FEFF 		bl	strlen
 367 0016 0446     		mov	r4, r0
 368              		.loc 1 120 30
 369 0018 3868     		ldr	r0, [r7]
 370 001a FFF7FEFF 		bl	strlen
 371 001e 0346     		mov	r3, r0
 372              		.loc 1 120 28
 373 0020 2344     		add	r3, r3, r4
 374              		.loc 1 120 46
 375 0022 0233     		adds	r3, r3, #2
 376              		.loc 1 120 9
 377 0024 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 10


 121:Core/Src/main.c ****     uint8_t *to_send = malloc(len);
 378              		.loc 1 121 24
 379 0026 FB68     		ldr	r3, [r7, #12]
 380 0028 1846     		mov	r0, r3
 381 002a FFF7FEFF 		bl	malloc
 382 002e 0346     		mov	r3, r0
 383 0030 BB60     		str	r3, [r7, #8]
 122:Core/Src/main.c ****     sprintf(to_send, "%s%s\n", code, comment);
 384              		.loc 1 122 5
 385 0032 3B68     		ldr	r3, [r7]
 386 0034 7A68     		ldr	r2, [r7, #4]
 387 0036 0E49     		ldr	r1, .L13
 388 0038 B868     		ldr	r0, [r7, #8]
 389 003a FFF7FEFF 		bl	sprintf
 123:Core/Src/main.c ****     HAL_UART_Transmit(&hlpuart1, to_send, len - 1, 100); // bez znaku terminatora
 390              		.loc 1 123 5
 391 003e FB68     		ldr	r3, [r7, #12]
 392 0040 9BB2     		uxth	r3, r3
 393 0042 013B     		subs	r3, r3, #1
 394 0044 9AB2     		uxth	r2, r3
 395 0046 6423     		movs	r3, #100
 396 0048 B968     		ldr	r1, [r7, #8]
 397 004a 0A48     		ldr	r0, .L13+4
 398 004c FFF7FEFF 		bl	HAL_UART_Transmit
 399              	.LBE5:
 124:Core/Src/main.c ****   } else {
 125:Core/Src/main.c ****     HAL_UART_Transmit(&hlpuart1, code, strlen(code), 100);
 126:Core/Src/main.c ****   }
 127:Core/Src/main.c **** }
 400              		.loc 1 127 1
 401 0050 09E0     		b	.L12
 402              	.L10:
 125:Core/Src/main.c ****   }
 403              		.loc 1 125 40
 404 0052 7868     		ldr	r0, [r7, #4]
 405 0054 FFF7FEFF 		bl	strlen
 406 0058 0346     		mov	r3, r0
 125:Core/Src/main.c ****   }
 407              		.loc 1 125 5
 408 005a 9AB2     		uxth	r2, r3
 409 005c 6423     		movs	r3, #100
 410 005e 7968     		ldr	r1, [r7, #4]
 411 0060 0448     		ldr	r0, .L13+4
 412 0062 FFF7FEFF 		bl	HAL_UART_Transmit
 413              	.L12:
 414              		.loc 1 127 1
 415 0066 00BF     		nop
 416 0068 1437     		adds	r7, r7, #20
 417              		.cfi_def_cfa_offset 12
 418 006a BD46     		mov	sp, r7
 419              		.cfi_def_cfa_register 13
 420              		@ sp needed
 421 006c 90BD     		pop	{r4, r7, pc}
 422              	.L14:
 423 006e 00BF     		.align	2
 424              	.L13:
 425 0070 00000000 		.word	.LC0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 11


 426 0074 00000000 		.word	hlpuart1
 427              		.cfi_endproc
 428              	.LFE327:
 430              		.section	.text.emergency_stop,"ax",%progbits
 431              		.align	1
 432              		.global	emergency_stop
 433              		.syntax unified
 434              		.thumb
 435              		.thumb_func
 437              	emergency_stop:
 438              	.LFB328:
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** void emergency_stop() {
 439              		.loc 1 129 23
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 1, uses_anonymous_args = 0
 443 0000 80B5     		push	{r7, lr}
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 7, -8
 446              		.cfi_offset 14, -4
 447 0002 00AF     		add	r7, sp, #0
 448              		.cfi_def_cfa_register 7
 130:Core/Src/main.c ****   memset(&current_cmd, 0, sizeof(gc_reader));
 449              		.loc 1 130 3
 450 0004 A822     		movs	r2, #168
 451 0006 0021     		movs	r1, #0
 452 0008 0348     		ldr	r0, .L16
 453 000a FFF7FEFF 		bl	memset
 131:Core/Src/main.c ****   state = CONTROLLER_STATE_IDLE;
 454              		.loc 1 131 9
 455 000e 034B     		ldr	r3, .L16+4
 456 0010 0022     		movs	r2, #0
 457 0012 1A60     		str	r2, [r3]
 132:Core/Src/main.c **** }
 458              		.loc 1 132 1
 459 0014 00BF     		nop
 460 0016 80BD     		pop	{r7, pc}
 461              	.L17:
 462              		.align	2
 463              	.L16:
 464 0018 00000000 		.word	current_cmd
 465 001c 00000000 		.word	state
 466              		.cfi_endproc
 467              	.LFE328:
 469              		.section	.rodata
 470 0006 0000     		.align	2
 471              	.LC1:
 472 0008 65727200 		.ascii	"err\000"
 473              		.align	2
 474              	.LC2:
 475 000c 6F6B6B00 		.ascii	"okk\000"
 476              		.align	2
 477              	.LC3:
 478 0010 72647900 		.ascii	"rdy\000"
 479              		.align	2
 480              	.LC4:
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 12


 481 0014 62737900 		.ascii	"bsy\000"
 482              		.section	.text.main,"ax",%progbits
 483              		.align	1
 484              		.global	main
 485              		.syntax unified
 486              		.thumb
 487              		.thumb_func
 489              	main:
 490              	.LFB329:
 133:Core/Src/main.c **** /* USER CODE END 0 */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** /**
 136:Core/Src/main.c ****   * @brief  The application entry point.
 137:Core/Src/main.c ****   * @retval int
 138:Core/Src/main.c ****   */
 139:Core/Src/main.c **** int main(void)
 140:Core/Src/main.c **** {
 491              		.loc 1 140 1
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 16
 494              		@ frame_needed = 1, uses_anonymous_args = 0
 495 0000 80B5     		push	{r7, lr}
 496              		.cfi_def_cfa_offset 8
 497              		.cfi_offset 7, -8
 498              		.cfi_offset 14, -4
 499 0002 84B0     		sub	sp, sp, #16
 500              		.cfi_def_cfa_offset 24
 501 0004 00AF     		add	r7, sp, #0
 502              		.cfi_def_cfa_register 7
 141:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 142:Core/Src/main.c ****   // last_time = HAL_GetTick();
 143:Core/Src/main.c ****   /* USER CODE END 1 */
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 148:Core/Src/main.c ****   HAL_Init();
 503              		.loc 1 148 3
 504 0006 FFF7FEFF 		bl	HAL_Init
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* USER CODE END Init */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* Configure the system clock */
 155:Core/Src/main.c ****   SystemClock_Config();
 505              		.loc 1 155 3
 506 000a FFF7FEFF 		bl	SystemClock_Config
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /* USER CODE END SysInit */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /* Initialize all configured peripherals */
 162:Core/Src/main.c ****   MX_GPIO_Init();
 507              		.loc 1 162 3
 508 000e FFF7FEFF 		bl	MX_GPIO_Init
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 13


 163:Core/Src/main.c ****   MX_DMA_Init();
 509              		.loc 1 163 3
 510 0012 FFF7FEFF 		bl	MX_DMA_Init
 164:Core/Src/main.c ****   MX_LPUART1_UART_Init();
 511              		.loc 1 164 3
 512 0016 FFF7FEFF 		bl	MX_LPUART1_UART_Init
 165:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
 513              		.loc 1 165 3
 514 001a FFF7FEFF 		bl	MX_USB_OTG_FS_PCD_Init
 166:Core/Src/main.c ****   MX_TIM4_Init();
 515              		.loc 1 166 3
 516 001e FFF7FEFF 		bl	MX_TIM4_Init
 167:Core/Src/main.c ****   MX_UART4_Init();
 517              		.loc 1 167 3
 518 0022 FFF7FEFF 		bl	MX_UART4_Init
 168:Core/Src/main.c ****   MX_TIM3_Init();
 519              		.loc 1 168 3
 520 0026 FFF7FEFF 		bl	MX_TIM3_Init
 169:Core/Src/main.c ****   MX_ADC1_Init();
 521              		.loc 1 169 3
 522 002a FFF7FEFF 		bl	MX_ADC1_Init
 170:Core/Src/main.c ****   MX_TIM5_Init();
 523              		.loc 1 170 3
 524 002e FFF7FEFF 		bl	MX_TIM5_Init
 171:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 172:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 525              		.loc 1 172 3
 526 0032 0021     		movs	r1, #0
 527 0034 4B48     		ldr	r0, .L30
 528 0036 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 173:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2);
 529              		.loc 1 173 3
 530 003a 0421     		movs	r1, #4
 531 003c 4948     		ldr	r0, .L30
 532 003e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 174:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);
 533              		.loc 1 174 3
 534 0042 0821     		movs	r1, #8
 535 0044 4748     		ldr	r0, .L30
 536 0046 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 175:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, value, ADC_CHANNELS);
 537              		.loc 1 175 3
 538 004a 0322     		movs	r2, #3
 539 004c 4649     		ldr	r1, .L30+4
 540 004e 4748     		ldr	r0, .L30+8
 541 0050 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 176:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim4);
 542              		.loc 1 176 3
 543 0054 4648     		ldr	r0, .L30+12
 544 0056 FFF7FEFF 		bl	HAL_TIM_Base_Start
 177:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim5);
 545              		.loc 1 177 3
 546 005a 4648     		ldr	r0, .L30+16
 547 005c FFF7FEFF 		bl	HAL_TIM_Base_Start
 178:Core/Src/main.c ****   HAL_UARTEx_ReceiveToIdle_DMA(&hlpuart1, rx_buff, GCODE_BUFF_SIZE);
 548              		.loc 1 178 3
 549 0060 4022     		movs	r2, #64
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 14


 550 0062 4549     		ldr	r1, .L30+20
 551 0064 4548     		ldr	r0, .L30+24
 552 0066 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_DMA
 179:Core/Src/main.c ****   __HAL_DMA_DISABLE_IT(&hdma_lpuart1_rx, DMA_IT_HT);
 553              		.loc 1 179 3
 554 006a 454B     		ldr	r3, .L30+28
 555 006c 1B68     		ldr	r3, [r3]
 556 006e 1A68     		ldr	r2, [r3]
 557 0070 434B     		ldr	r3, .L30+28
 558 0072 1B68     		ldr	r3, [r3]
 559 0074 22F00402 		bic	r2, r2, #4
 560 0078 1A60     		str	r2, [r3]
 180:Core/Src/main.c ****   memset(rx_buff, 0, GCODE_BUFF_SIZE);
 561              		.loc 1 180 3
 562 007a 4022     		movs	r2, #64
 563 007c 0021     		movs	r1, #0
 564 007e 3E48     		ldr	r0, .L30+20
 565 0080 FFF7FEFF 		bl	memset
 566              	.L29:
 181:Core/Src/main.c ****   /* USER CODE END 2 */
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   /* Infinite loop */
 184:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 185:Core/Src/main.c ****   while (1) {
 186:Core/Src/main.c ****     // czytanie instrukcji z usb
 187:Core/Src/main.c ****     if(should_read_cmd) {
 567              		.loc 1 187 8
 568 0084 3F4B     		ldr	r3, .L30+32
 569 0086 1B68     		ldr	r3, [r3]
 570              		.loc 1 187 7
 571 0088 002B     		cmp	r3, #0
 572 008a FBD0     		beq	.L29
 573              	.LBB6:
 188:Core/Src/main.c ****       int done_reading_gcode = 0;
 574              		.loc 1 188 11
 575 008c 0023     		movs	r3, #0
 576 008e 7B60     		str	r3, [r7, #4]
 189:Core/Src/main.c ****       int error_code = GC_READER_ERROR_NOT_OCCURED, new_error;
 577              		.loc 1 189 11
 578 0090 0023     		movs	r3, #0
 579 0092 FB60     		str	r3, [r7, #12]
 190:Core/Src/main.c ****       while(read_count > 0) {
 580              		.loc 1 190 12
 581 0094 25E0     		b	.L20
 582              	.L22:
 191:Core/Src/main.c ****         if(error_code == GC_READER_ERROR_NOT_OCCURED) {
 583              		.loc 1 191 11
 584 0096 FB68     		ldr	r3, [r7, #12]
 585 0098 002B     		cmp	r3, #0
 586 009a 11D1     		bne	.L21
 192:Core/Src/main.c ****           new_error = read_code(&reader, gcode_buff[j], &done_reading_gcode);
 587              		.loc 1 192 23
 588 009c 3A4B     		ldr	r3, .L30+36
 589 009e 1B68     		ldr	r3, [r3]
 590              		.loc 1 192 52
 591 00a0 3A4A     		ldr	r2, .L30+40
 592 00a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 15


 593              		.loc 1 192 23
 594 00a4 3A1D     		adds	r2, r7, #4
 595 00a6 1946     		mov	r1, r3
 596 00a8 3948     		ldr	r0, .L30+44
 597 00aa FFF7FEFF 		bl	read_code
 598 00ae B860     		str	r0, [r7, #8]
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****           if(new_error != GC_READER_ERROR_NOT_OCCURED) {
 599              		.loc 1 194 13
 600 00b0 BB68     		ldr	r3, [r7, #8]
 601 00b2 002B     		cmp	r3, #0
 602 00b4 04D0     		beq	.L21
 195:Core/Src/main.c ****             transmit_resp_code(RESP_CODE_ERR);
 603              		.loc 1 195 13
 604 00b6 3748     		ldr	r0, .L30+48
 605 00b8 FFF7FEFF 		bl	transmit_resp_code
 196:Core/Src/main.c ****             error_code = new_error;
 606              		.loc 1 196 24
 607 00bc BB68     		ldr	r3, [r7, #8]
 608 00be FB60     		str	r3, [r7, #12]
 609              	.L21:
 197:Core/Src/main.c ****           }
 198:Core/Src/main.c ****         }
 199:Core/Src/main.c ****         j = (j + 1) % GCODE_BUFF_SIZE;
 610              		.loc 1 199 16
 611 00c0 314B     		ldr	r3, .L30+36
 612 00c2 1B68     		ldr	r3, [r3]
 613 00c4 0133     		adds	r3, r3, #1
 614              		.loc 1 199 21
 615 00c6 5A42     		rsbs	r2, r3, #0
 616 00c8 03F03F03 		and	r3, r3, #63
 617 00cc 02F03F02 		and	r2, r2, #63
 618 00d0 58BF     		it	pl
 619 00d2 5342     		rsbpl	r3, r2, #0
 620              		.loc 1 199 11
 621 00d4 2C4A     		ldr	r2, .L30+36
 622 00d6 1360     		str	r3, [r2]
 200:Core/Src/main.c ****         read_count--;
 623              		.loc 1 200 19
 624 00d8 2F4B     		ldr	r3, .L30+52
 625 00da 1B68     		ldr	r3, [r3]
 626 00dc 013B     		subs	r3, r3, #1
 627 00de 2E4A     		ldr	r2, .L30+52
 628 00e0 1360     		str	r3, [r2]
 629              	.L20:
 190:Core/Src/main.c ****         if(error_code == GC_READER_ERROR_NOT_OCCURED) {
 630              		.loc 1 190 24
 631 00e2 2D4B     		ldr	r3, .L30+52
 632 00e4 1B68     		ldr	r3, [r3]
 633 00e6 002B     		cmp	r3, #0
 634 00e8 D5D1     		bne	.L22
 201:Core/Src/main.c ****       }
 202:Core/Src/main.c ****       if(done_reading_gcode && error_code == GC_READER_ERROR_NOT_OCCURED) {
 635              		.loc 1 202 10
 636 00ea 7B68     		ldr	r3, [r7, #4]
 637              		.loc 1 202 9
 638 00ec 002B     		cmp	r3, #0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 16


 639 00ee 35D0     		beq	.L23
 640              		.loc 1 202 29 discriminator 1
 641 00f0 FB68     		ldr	r3, [r7, #12]
 642 00f2 002B     		cmp	r3, #0
 643 00f4 32D1     		bne	.L23
 203:Core/Src/main.c ****         transmit_resp_code(RESP_CODE_OK);
 644              		.loc 1 203 9
 645 00f6 2948     		ldr	r0, .L30+56
 646 00f8 FFF7FEFF 		bl	transmit_resp_code
 204:Core/Src/main.c ****         if(state == CONTROLLER_STATE_IDLE) {
 647              		.loc 1 204 18
 648 00fc 284B     		ldr	r3, .L30+60
 649 00fe 1B68     		ldr	r3, [r3]
 650              		.loc 1 204 11
 651 0100 002B     		cmp	r3, #0
 652 0102 0ED1     		bne	.L24
 205:Core/Src/main.c ****           current_cmd = reader;
 653              		.loc 1 205 23
 654 0104 274A     		ldr	r2, .L30+64
 655 0106 224B     		ldr	r3, .L30+44
 656 0108 1046     		mov	r0, r2
 657 010a 1946     		mov	r1, r3
 658 010c A823     		movs	r3, #168
 659 010e 1A46     		mov	r2, r3
 660 0110 FFF7FEFF 		bl	memcpy
 206:Core/Src/main.c ****           state = CONTROLLER_STATE_BUSY;
 661              		.loc 1 206 17
 662 0114 224B     		ldr	r3, .L30+60
 663 0116 0122     		movs	r2, #1
 664 0118 1A60     		str	r2, [r3]
 207:Core/Src/main.c ****           transmit_resp_code(RESP_CODE_READY);
 665              		.loc 1 207 11
 666 011a 2348     		ldr	r0, .L30+68
 667 011c FFF7FEFF 		bl	transmit_resp_code
 668 0120 17E0     		b	.L25
 669              	.L24:
 208:Core/Src/main.c ****         } else if(reader.code_type == MCODE_SYMBOL) {
 670              		.loc 1 208 25
 671 0122 1B4B     		ldr	r3, .L30+44
 672 0124 9B7F     		ldrb	r3, [r3, #30]	@ zero_extendqisi2
 673              		.loc 1 208 18
 674 0126 4D2B     		cmp	r3, #77
 675 0128 10D1     		bne	.L26
 209:Core/Src/main.c ****           // sprawdzenie specjalnych instrukcji
 210:Core/Src/main.c ****           switch(reader.code_id) {
 676              		.loc 1 210 24
 677 012a 194B     		ldr	r3, .L30+44
 678 012c 1B6A     		ldr	r3, [r3, #32]
 679              		.loc 1 210 11
 680 012e 702B     		cmp	r3, #112
 681 0130 08D1     		bne	.L27
 211:Core/Src/main.c ****           case MCODE_EMERGENCY_STOP:
 212:Core/Src/main.c ****             emergency_stop();
 682              		.loc 1 212 13
 683 0132 FFF7FEFF 		bl	emergency_stop
 213:Core/Src/main.c ****             transmit_resp_code(RESP_CODE_OK);
 684              		.loc 1 213 13
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 17


 685 0136 1948     		ldr	r0, .L30+56
 686 0138 FFF7FEFF 		bl	transmit_resp_code
 214:Core/Src/main.c ****             transmit_resp_code(RESP_CODE_READY);
 687              		.loc 1 214 13
 688 013c 1A48     		ldr	r0, .L30+68
 689 013e FFF7FEFF 		bl	transmit_resp_code
 215:Core/Src/main.c ****             break;
 690              		.loc 1 215 13
 691 0142 06E0     		b	.L25
 692              	.L27:
 216:Core/Src/main.c ****           default:
 217:Core/Src/main.c ****             transmit_resp_code(RESP_CODE_BUSY);
 693              		.loc 1 217 13
 694 0144 1948     		ldr	r0, .L30+72
 695 0146 FFF7FEFF 		bl	transmit_resp_code
 218:Core/Src/main.c ****             break;
 696              		.loc 1 218 13
 697 014a 02E0     		b	.L25
 698              	.L26:
 219:Core/Src/main.c ****           }
 220:Core/Src/main.c ****         } else {
 221:Core/Src/main.c ****           transmit_resp_code(RESP_CODE_BUSY);
 699              		.loc 1 221 11
 700 014c 1748     		ldr	r0, .L30+72
 701 014e FFF7FEFF 		bl	transmit_resp_code
 702              	.L25:
 222:Core/Src/main.c ****         }
 223:Core/Src/main.c ****         memset(&reader, 0, sizeof(gc_reader));
 703              		.loc 1 223 9
 704 0152 A822     		movs	r2, #168
 705 0154 0021     		movs	r1, #0
 706 0156 0E48     		ldr	r0, .L30+44
 707 0158 FFF7FEFF 		bl	memset
 708              	.L23:
 224:Core/Src/main.c ****       }
 225:Core/Src/main.c ****       should_read_cmd = 0;
 709              		.loc 1 225 23
 710 015c 094B     		ldr	r3, .L30+32
 711 015e 0022     		movs	r2, #0
 712 0160 1A60     		str	r2, [r3]
 713              	.LBE6:
 187:Core/Src/main.c ****       int done_reading_gcode = 0;
 714              		.loc 1 187 7
 715 0162 8FE7     		b	.L29
 716              	.L31:
 717              		.align	2
 718              	.L30:
 719 0164 00000000 		.word	htim3
 720 0168 00000000 		.word	value
 721 016c 00000000 		.word	hadc1
 722 0170 00000000 		.word	htim4
 723 0174 00000000 		.word	htim5
 724 0178 00000000 		.word	rx_buff
 725 017c 00000000 		.word	hlpuart1
 726 0180 00000000 		.word	hdma_lpuart1_rx
 727 0184 00000000 		.word	should_read_cmd
 728 0188 00000000 		.word	j
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 18


 729 018c 00000000 		.word	gcode_buff
 730 0190 00000000 		.word	reader
 731 0194 08000000 		.word	.LC1
 732 0198 00000000 		.word	read_count
 733 019c 0C000000 		.word	.LC2
 734 01a0 00000000 		.word	state
 735 01a4 00000000 		.word	current_cmd
 736 01a8 10000000 		.word	.LC3
 737 01ac 14000000 		.word	.LC4
 738              		.cfi_endproc
 739              	.LFE329:
 741              		.section	.text.SystemClock_Config,"ax",%progbits
 742              		.align	1
 743              		.global	SystemClock_Config
 744              		.syntax unified
 745              		.thumb
 746              		.thumb_func
 748              	SystemClock_Config:
 749              	.LFB330:
 226:Core/Src/main.c ****     }
 227:Core/Src/main.c ****     // if (rx_buff[0] != '\0') {
 228:Core/Src/main.c ****     //   int error_code = read_code((char*)rx_buff, &reader);
 229:Core/Src/main.c ****     // }
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****     // if (HAL_GetTick() - last_time > interval && interval > 0)
 232:Core/Src/main.c ****     // {
 233:Core/Src/main.c ****     //   M105(0, 0);
 234:Core/Src/main.c ****     //   last_time = HAL_GetTick();
 235:Core/Src/main.c ****     // }
 236:Core/Src/main.c ****    
 237:Core/Src/main.c ****     // G0();
 238:Core/Src/main.c ****     // M104();
 239:Core/Src/main.c ****     // if(READ_PIN(USER_BUTTON) == 1)
 240:Core/Src/main.c ****     // {
 241:Core/Src/main.c ****     //   if(GetTicks() - lasttimeY >= 2000)
 242:Core/Src/main.c ****     //   {
 243:Core/Src/main.c ****     //       MAKE_MOTOR_STEP(Y_AXIS_STEP);
 244:Core/Src/main.c ****     //       lasttimeY = GetTicks();
 245:Core/Src/main.c ****     //   }
 246:Core/Src/main.c ****     // }
 247:Core/Src/main.c ****     /* USER CODE END WHILE */
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 250:Core/Src/main.c ****   }
 251:Core/Src/main.c ****   /* USER CODE END 3 */
 252:Core/Src/main.c **** }
 253:Core/Src/main.c **** 
 254:Core/Src/main.c **** /**
 255:Core/Src/main.c ****   * @brief System Clock Configuration
 256:Core/Src/main.c ****   * @retval None
 257:Core/Src/main.c ****   */
 258:Core/Src/main.c **** void SystemClock_Config(void)
 259:Core/Src/main.c **** {
 750              		.loc 1 259 1
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 96
 753              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 19


 754 0000 80B5     		push	{r7, lr}
 755              		.cfi_def_cfa_offset 8
 756              		.cfi_offset 7, -8
 757              		.cfi_offset 14, -4
 758 0002 98B0     		sub	sp, sp, #96
 759              		.cfi_def_cfa_offset 104
 760 0004 00AF     		add	r7, sp, #0
 761              		.cfi_def_cfa_register 7
 260:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 762              		.loc 1 260 22
 763 0006 07F11803 		add	r3, r7, #24
 764 000a 4822     		movs	r2, #72
 765 000c 0021     		movs	r1, #0
 766 000e 1846     		mov	r0, r3
 767 0010 FFF7FEFF 		bl	memset
 261:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 768              		.loc 1 261 22
 769 0014 3B1D     		adds	r3, r7, #4
 770 0016 0022     		movs	r2, #0
 771 0018 1A60     		str	r2, [r3]
 772 001a 5A60     		str	r2, [r3, #4]
 773 001c 9A60     		str	r2, [r3, #8]
 774 001e DA60     		str	r2, [r3, #12]
 775 0020 1A61     		str	r2, [r3, #16]
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 264:Core/Src/main.c ****   */
 265:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST) != HAL_OK)
 776              		.loc 1 265 7
 777 0022 0020     		movs	r0, #0
 778 0024 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 779 0028 0346     		mov	r3, r0
 780              		.loc 1 265 6
 781 002a 002B     		cmp	r3, #0
 782 002c 01D0     		beq	.L33
 266:Core/Src/main.c ****   {
 267:Core/Src/main.c ****     Error_Handler();
 783              		.loc 1 267 5
 784 002e FFF7FEFF 		bl	Error_Handler
 785              	.L33:
 268:Core/Src/main.c ****   }
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 271:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 272:Core/Src/main.c ****   */
 273:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_MSI;
 786              		.loc 1 273 36
 787 0032 3023     		movs	r3, #48
 788 0034 BB61     		str	r3, [r7, #24]
 274:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 789              		.loc 1 274 32
 790 0036 0123     		movs	r3, #1
 791 0038 3B64     		str	r3, [r7, #64]
 275:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 792              		.loc 1 275 30
 793 003a 0123     		movs	r3, #1
 794 003c 7B63     		str	r3, [r7, #52]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 20


 276:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 795              		.loc 1 276 41
 796 003e 0023     		movs	r3, #0
 797 0040 BB63     		str	r3, [r7, #56]
 277:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 798              		.loc 1 277 35
 799 0042 6023     		movs	r3, #96
 800 0044 FB63     		str	r3, [r7, #60]
 278:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 801              		.loc 1 278 34
 802 0046 0223     		movs	r3, #2
 803 0048 7B64     		str	r3, [r7, #68]
 279:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 804              		.loc 1 279 35
 805 004a 0123     		movs	r3, #1
 806 004c BB64     		str	r3, [r7, #72]
 280:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 807              		.loc 1 280 30
 808 004e 0123     		movs	r3, #1
 809 0050 FB64     		str	r3, [r7, #76]
 281:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 60;
 810              		.loc 1 281 30
 811 0052 3C23     		movs	r3, #60
 812 0054 3B65     		str	r3, [r7, #80]
 282:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 813              		.loc 1 282 30
 814 0056 0223     		movs	r3, #2
 815 0058 7B65     		str	r3, [r7, #84]
 283:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 816              		.loc 1 283 30
 817 005a 0223     		movs	r3, #2
 818 005c BB65     		str	r3, [r7, #88]
 284:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 819              		.loc 1 284 30
 820 005e 0223     		movs	r3, #2
 821 0060 FB65     		str	r3, [r7, #92]
 285:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 822              		.loc 1 285 7
 823 0062 07F11803 		add	r3, r7, #24
 824 0066 1846     		mov	r0, r3
 825 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 826 006c 0346     		mov	r3, r0
 827              		.loc 1 285 6
 828 006e 002B     		cmp	r3, #0
 829 0070 01D0     		beq	.L34
 286:Core/Src/main.c ****   {
 287:Core/Src/main.c ****     Error_Handler();
 830              		.loc 1 287 5
 831 0072 FFF7FEFF 		bl	Error_Handler
 832              	.L34:
 288:Core/Src/main.c ****   }
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 291:Core/Src/main.c ****   */
 292:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 833              		.loc 1 292 31
 834 0076 0F23     		movs	r3, #15
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 21


 835 0078 7B60     		str	r3, [r7, #4]
 293:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 294:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 836              		.loc 1 294 34
 837 007a 0323     		movs	r3, #3
 838 007c BB60     		str	r3, [r7, #8]
 295:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 839              		.loc 1 295 35
 840 007e 0023     		movs	r3, #0
 841 0080 FB60     		str	r3, [r7, #12]
 296:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 842              		.loc 1 296 36
 843 0082 0023     		movs	r3, #0
 844 0084 3B61     		str	r3, [r7, #16]
 297:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 845              		.loc 1 297 36
 846 0086 0023     		movs	r3, #0
 847 0088 7B61     		str	r3, [r7, #20]
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 848              		.loc 1 299 7
 849 008a 3B1D     		adds	r3, r7, #4
 850 008c 0521     		movs	r1, #5
 851 008e 1846     		mov	r0, r3
 852 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 853 0094 0346     		mov	r3, r0
 854              		.loc 1 299 6
 855 0096 002B     		cmp	r3, #0
 856 0098 01D0     		beq	.L36
 300:Core/Src/main.c ****   {
 301:Core/Src/main.c ****     Error_Handler();
 857              		.loc 1 301 5
 858 009a FFF7FEFF 		bl	Error_Handler
 859              	.L36:
 302:Core/Src/main.c ****   }
 303:Core/Src/main.c **** }
 860              		.loc 1 303 1
 861 009e 00BF     		nop
 862 00a0 6037     		adds	r7, r7, #96
 863              		.cfi_def_cfa_offset 8
 864 00a2 BD46     		mov	sp, r7
 865              		.cfi_def_cfa_register 13
 866              		@ sp needed
 867 00a4 80BD     		pop	{r7, pc}
 868              		.cfi_endproc
 869              	.LFE330:
 871              		.section	.text.MX_ADC1_Init,"ax",%progbits
 872              		.align	1
 873              		.syntax unified
 874              		.thumb
 875              		.thumb_func
 877              	MX_ADC1_Init:
 878              	.LFB331:
 304:Core/Src/main.c **** 
 305:Core/Src/main.c **** /**
 306:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 307:Core/Src/main.c ****   * @param None
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 22


 308:Core/Src/main.c ****   * @retval None
 309:Core/Src/main.c ****   */
 310:Core/Src/main.c **** static void MX_ADC1_Init(void)
 311:Core/Src/main.c **** {
 879              		.loc 1 311 1
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 40
 882              		@ frame_needed = 1, uses_anonymous_args = 0
 883 0000 80B5     		push	{r7, lr}
 884              		.cfi_def_cfa_offset 8
 885              		.cfi_offset 7, -8
 886              		.cfi_offset 14, -4
 887 0002 8AB0     		sub	sp, sp, #40
 888              		.cfi_def_cfa_offset 48
 889 0004 00AF     		add	r7, sp, #0
 890              		.cfi_def_cfa_register 7
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 316:Core/Src/main.c **** 
 317:Core/Src/main.c ****   ADC_MultiModeTypeDef multimode = {0};
 891              		.loc 1 317 24
 892 0006 07F11C03 		add	r3, r7, #28
 893 000a 0022     		movs	r2, #0
 894 000c 1A60     		str	r2, [r3]
 895 000e 5A60     		str	r2, [r3, #4]
 896 0010 9A60     		str	r2, [r3, #8]
 318:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 897              		.loc 1 318 26
 898 0012 3B1D     		adds	r3, r7, #4
 899 0014 0022     		movs	r2, #0
 900 0016 1A60     		str	r2, [r3]
 901 0018 5A60     		str	r2, [r3, #4]
 902 001a 9A60     		str	r2, [r3, #8]
 903 001c DA60     		str	r2, [r3, #12]
 904 001e 1A61     		str	r2, [r3, #16]
 905 0020 5A61     		str	r2, [r3, #20]
 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 321:Core/Src/main.c **** 
 322:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   /** Common config
 325:Core/Src/main.c ****   */
 326:Core/Src/main.c ****   hadc1.Instance = ADC1;
 906              		.loc 1 326 18
 907 0022 434B     		ldr	r3, .L44
 908 0024 434A     		ldr	r2, .L44+4
 909 0026 1A60     		str	r2, [r3]
 327:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 910              		.loc 1 327 29
 911 0028 414B     		ldr	r3, .L44
 912 002a 0022     		movs	r2, #0
 913 002c 5A60     		str	r2, [r3, #4]
 328:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 914              		.loc 1 328 25
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 23


 915 002e 404B     		ldr	r3, .L44
 916 0030 0022     		movs	r2, #0
 917 0032 9A60     		str	r2, [r3, #8]
 329:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 918              		.loc 1 329 24
 919 0034 3E4B     		ldr	r3, .L44
 920 0036 0022     		movs	r2, #0
 921 0038 DA60     		str	r2, [r3, #12]
 330:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 922              		.loc 1 330 27
 923 003a 3D4B     		ldr	r3, .L44
 924 003c 0122     		movs	r2, #1
 925 003e 1A61     		str	r2, [r3, #16]
 331:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 926              		.loc 1 331 27
 927 0040 3B4B     		ldr	r3, .L44
 928 0042 0422     		movs	r2, #4
 929 0044 5A61     		str	r2, [r3, #20]
 332:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 930              		.loc 1 332 31
 931 0046 3A4B     		ldr	r3, .L44
 932 0048 0022     		movs	r2, #0
 933 004a 1A76     		strb	r2, [r3, #24]
 333:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 934              		.loc 1 333 33
 935 004c 384B     		ldr	r3, .L44
 936 004e 0122     		movs	r2, #1
 937 0050 5A76     		strb	r2, [r3, #25]
 334:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 3;
 938              		.loc 1 334 30
 939 0052 374B     		ldr	r3, .L44
 940 0054 0322     		movs	r2, #3
 941 0056 DA61     		str	r2, [r3, #28]
 335:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 942              		.loc 1 335 36
 943 0058 354B     		ldr	r3, .L44
 944 005a 0022     		movs	r2, #0
 945 005c 83F82020 		strb	r2, [r3, #32]
 336:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 946              		.loc 1 336 31
 947 0060 334B     		ldr	r3, .L44
 948 0062 0022     		movs	r2, #0
 949 0064 9A62     		str	r2, [r3, #40]
 337:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 950              		.loc 1 337 35
 951 0066 324B     		ldr	r3, .L44
 952 0068 0022     		movs	r2, #0
 953 006a DA62     		str	r2, [r3, #44]
 338:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 954              		.loc 1 338 36
 955 006c 304B     		ldr	r3, .L44
 956 006e 0122     		movs	r2, #1
 957 0070 83F83020 		strb	r2, [r3, #48]
 339:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 958              		.loc 1 339 22
 959 0074 2E4B     		ldr	r3, .L44
 960 0076 0022     		movs	r2, #0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 24


 961 0078 5A63     		str	r2, [r3, #52]
 340:Core/Src/main.c ****   hadc1.Init.OversamplingMode = ENABLE;
 962              		.loc 1 340 31
 963 007a 2D4B     		ldr	r3, .L44
 964 007c 0122     		movs	r2, #1
 965 007e 83F83820 		strb	r2, [r3, #56]
 341:Core/Src/main.c ****   hadc1.Init.Oversampling.Ratio = ADC_OVERSAMPLING_RATIO_16;
 966              		.loc 1 341 33
 967 0082 2B4B     		ldr	r3, .L44
 968 0084 0C22     		movs	r2, #12
 969 0086 DA63     		str	r2, [r3, #60]
 342:Core/Src/main.c ****   hadc1.Init.Oversampling.RightBitShift = ADC_RIGHTBITSHIFT_NONE;
 970              		.loc 1 342 41
 971 0088 294B     		ldr	r3, .L44
 972 008a 0022     		movs	r2, #0
 973 008c 1A64     		str	r2, [r3, #64]
 343:Core/Src/main.c ****   hadc1.Init.Oversampling.TriggeredMode = ADC_TRIGGEREDMODE_SINGLE_TRIGGER;
 974              		.loc 1 343 41
 975 008e 284B     		ldr	r3, .L44
 976 0090 0022     		movs	r2, #0
 977 0092 5A64     		str	r2, [r3, #68]
 344:Core/Src/main.c ****   hadc1.Init.Oversampling.OversamplingStopReset = ADC_REGOVERSAMPLING_CONTINUED_MODE;
 978              		.loc 1 344 49
 979 0094 264B     		ldr	r3, .L44
 980 0096 0122     		movs	r2, #1
 981 0098 9A64     		str	r2, [r3, #72]
 345:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 982              		.loc 1 345 7
 983 009a 2548     		ldr	r0, .L44
 984 009c FFF7FEFF 		bl	HAL_ADC_Init
 985 00a0 0346     		mov	r3, r0
 986              		.loc 1 345 6
 987 00a2 002B     		cmp	r3, #0
 988 00a4 01D0     		beq	.L38
 346:Core/Src/main.c ****   {
 347:Core/Src/main.c ****     Error_Handler();
 989              		.loc 1 347 5
 990 00a6 FFF7FEFF 		bl	Error_Handler
 991              	.L38:
 348:Core/Src/main.c ****   }
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****   /** Configure the ADC multi-mode
 351:Core/Src/main.c ****   */
 352:Core/Src/main.c ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 992              		.loc 1 352 18
 993 00aa 0023     		movs	r3, #0
 994 00ac FB61     		str	r3, [r7, #28]
 353:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 995              		.loc 1 353 7
 996 00ae 07F11C03 		add	r3, r7, #28
 997 00b2 1946     		mov	r1, r3
 998 00b4 1E48     		ldr	r0, .L44
 999 00b6 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 1000 00ba 0346     		mov	r3, r0
 1001              		.loc 1 353 6
 1002 00bc 002B     		cmp	r3, #0
 1003 00be 01D0     		beq	.L39
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 25


 354:Core/Src/main.c ****   {
 355:Core/Src/main.c ****     Error_Handler();
 1004              		.loc 1 355 5
 1005 00c0 FFF7FEFF 		bl	Error_Handler
 1006              	.L39:
 356:Core/Src/main.c ****   }
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   /** Configure Regular Channel
 359:Core/Src/main.c ****   */
 360:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 1007              		.loc 1 360 19
 1008 00c4 1C4B     		ldr	r3, .L44+8
 1009 00c6 7B60     		str	r3, [r7, #4]
 361:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 1010              		.loc 1 361 16
 1011 00c8 0623     		movs	r3, #6
 1012 00ca BB60     		str	r3, [r7, #8]
 362:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_247CYCLES_5;
 1013              		.loc 1 362 24
 1014 00cc 0623     		movs	r3, #6
 1015 00ce FB60     		str	r3, [r7, #12]
 363:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 1016              		.loc 1 363 22
 1017 00d0 7F23     		movs	r3, #127
 1018 00d2 3B61     		str	r3, [r7, #16]
 364:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 1019              		.loc 1 364 24
 1020 00d4 0423     		movs	r3, #4
 1021 00d6 7B61     		str	r3, [r7, #20]
 365:Core/Src/main.c ****   sConfig.Offset = 0;
 1022              		.loc 1 365 18
 1023 00d8 0023     		movs	r3, #0
 1024 00da BB61     		str	r3, [r7, #24]
 366:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1025              		.loc 1 366 7
 1026 00dc 3B1D     		adds	r3, r7, #4
 1027 00de 1946     		mov	r1, r3
 1028 00e0 1348     		ldr	r0, .L44
 1029 00e2 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1030 00e6 0346     		mov	r3, r0
 1031              		.loc 1 366 6
 1032 00e8 002B     		cmp	r3, #0
 1033 00ea 01D0     		beq	.L40
 367:Core/Src/main.c ****   {
 368:Core/Src/main.c ****     Error_Handler();
 1034              		.loc 1 368 5
 1035 00ec FFF7FEFF 		bl	Error_Handler
 1036              	.L40:
 369:Core/Src/main.c ****   }
 370:Core/Src/main.c **** 
 371:Core/Src/main.c ****   /** Configure Regular Channel
 372:Core/Src/main.c ****   */
 373:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_2;
 1037              		.loc 1 373 19
 1038 00f0 124B     		ldr	r3, .L44+12
 1039 00f2 7B60     		str	r3, [r7, #4]
 374:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 26


 1040              		.loc 1 374 16
 1041 00f4 0C23     		movs	r3, #12
 1042 00f6 BB60     		str	r3, [r7, #8]
 375:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1043              		.loc 1 375 7
 1044 00f8 3B1D     		adds	r3, r7, #4
 1045 00fa 1946     		mov	r1, r3
 1046 00fc 0C48     		ldr	r0, .L44
 1047 00fe FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1048 0102 0346     		mov	r3, r0
 1049              		.loc 1 375 6
 1050 0104 002B     		cmp	r3, #0
 1051 0106 01D0     		beq	.L41
 376:Core/Src/main.c ****   {
 377:Core/Src/main.c ****     Error_Handler();
 1052              		.loc 1 377 5
 1053 0108 FFF7FEFF 		bl	Error_Handler
 1054              	.L41:
 378:Core/Src/main.c ****   }
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   /** Configure Regular Channel
 381:Core/Src/main.c ****   */
 382:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 1055              		.loc 1 382 19
 1056 010c 0C4B     		ldr	r3, .L44+16
 1057 010e 7B60     		str	r3, [r7, #4]
 383:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 1058              		.loc 1 383 16
 1059 0110 1223     		movs	r3, #18
 1060 0112 BB60     		str	r3, [r7, #8]
 384:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1061              		.loc 1 384 7
 1062 0114 3B1D     		adds	r3, r7, #4
 1063 0116 1946     		mov	r1, r3
 1064 0118 0548     		ldr	r0, .L44
 1065 011a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1066 011e 0346     		mov	r3, r0
 1067              		.loc 1 384 6
 1068 0120 002B     		cmp	r3, #0
 1069 0122 01D0     		beq	.L43
 385:Core/Src/main.c ****   {
 386:Core/Src/main.c ****     Error_Handler();
 1070              		.loc 1 386 5
 1071 0124 FFF7FEFF 		bl	Error_Handler
 1072              	.L43:
 387:Core/Src/main.c ****   }
 388:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 391:Core/Src/main.c **** 
 392:Core/Src/main.c **** }
 1073              		.loc 1 392 1
 1074 0128 00BF     		nop
 1075 012a 2837     		adds	r7, r7, #40
 1076              		.cfi_def_cfa_offset 8
 1077 012c BD46     		mov	sp, r7
 1078              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 27


 1079              		@ sp needed
 1080 012e 80BD     		pop	{r7, pc}
 1081              	.L45:
 1082              		.align	2
 1083              	.L44:
 1084 0130 00000000 		.word	hadc1
 1085 0134 00000450 		.word	1342439424
 1086 0138 02003004 		.word	70254594
 1087 013c 04006008 		.word	140509188
 1088 0140 000052C7 		.word	-950927360
 1089              		.cfi_endproc
 1090              	.LFE331:
 1092              		.section	.text.MX_LPUART1_UART_Init,"ax",%progbits
 1093              		.align	1
 1094              		.syntax unified
 1095              		.thumb
 1096              		.thumb_func
 1098              	MX_LPUART1_UART_Init:
 1099              	.LFB332:
 393:Core/Src/main.c **** 
 394:Core/Src/main.c **** /**
 395:Core/Src/main.c ****   * @brief LPUART1 Initialization Function
 396:Core/Src/main.c ****   * @param None
 397:Core/Src/main.c ****   * @retval None
 398:Core/Src/main.c ****   */
 399:Core/Src/main.c **** static void MX_LPUART1_UART_Init(void)
 400:Core/Src/main.c **** {
 1100              		.loc 1 400 1
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 0
 1103              		@ frame_needed = 1, uses_anonymous_args = 0
 1104 0000 80B5     		push	{r7, lr}
 1105              		.cfi_def_cfa_offset 8
 1106              		.cfi_offset 7, -8
 1107              		.cfi_offset 14, -4
 1108 0002 00AF     		add	r7, sp, #0
 1109              		.cfi_def_cfa_register 7
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 0 */
 403:Core/Src/main.c **** 
 404:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 0 */
 405:Core/Src/main.c **** 
 406:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 1 */
 407:Core/Src/main.c **** 
 408:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 1 */
 409:Core/Src/main.c ****   hlpuart1.Instance = LPUART1;
 1110              		.loc 1 409 21
 1111 0004 244B     		ldr	r3, .L52
 1112 0006 254A     		ldr	r2, .L52+4
 1113 0008 1A60     		str	r2, [r3]
 410:Core/Src/main.c ****   hlpuart1.Init.BaudRate = 115200;
 1114              		.loc 1 410 26
 1115 000a 234B     		ldr	r3, .L52
 1116 000c 4FF4E132 		mov	r2, #115200
 1117 0010 5A60     		str	r2, [r3, #4]
 411:Core/Src/main.c ****   hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 1118              		.loc 1 411 28
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 28


 1119 0012 214B     		ldr	r3, .L52
 1120 0014 0022     		movs	r2, #0
 1121 0016 9A60     		str	r2, [r3, #8]
 412:Core/Src/main.c ****   hlpuart1.Init.StopBits = UART_STOPBITS_1;
 1122              		.loc 1 412 26
 1123 0018 1F4B     		ldr	r3, .L52
 1124 001a 0022     		movs	r2, #0
 1125 001c DA60     		str	r2, [r3, #12]
 413:Core/Src/main.c ****   hlpuart1.Init.Parity = UART_PARITY_NONE;
 1126              		.loc 1 413 24
 1127 001e 1E4B     		ldr	r3, .L52
 1128 0020 0022     		movs	r2, #0
 1129 0022 1A61     		str	r2, [r3, #16]
 414:Core/Src/main.c ****   hlpuart1.Init.Mode = UART_MODE_TX_RX;
 1130              		.loc 1 414 22
 1131 0024 1C4B     		ldr	r3, .L52
 1132 0026 0C22     		movs	r2, #12
 1133 0028 5A61     		str	r2, [r3, #20]
 415:Core/Src/main.c ****   hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1134              		.loc 1 415 27
 1135 002a 1B4B     		ldr	r3, .L52
 1136 002c 0022     		movs	r2, #0
 1137 002e 9A61     		str	r2, [r3, #24]
 416:Core/Src/main.c ****   hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1138              		.loc 1 416 32
 1139 0030 194B     		ldr	r3, .L52
 1140 0032 0022     		movs	r2, #0
 1141 0034 1A62     		str	r2, [r3, #32]
 417:Core/Src/main.c ****   hlpuart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 1142              		.loc 1 417 32
 1143 0036 184B     		ldr	r3, .L52
 1144 0038 0022     		movs	r2, #0
 1145 003a 5A62     		str	r2, [r3, #36]
 418:Core/Src/main.c ****   hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_RXOVERRUNDISABLE_INIT;
 1146              		.loc 1 418 40
 1147 003c 164B     		ldr	r3, .L52
 1148 003e 1022     		movs	r2, #16
 1149 0040 9A62     		str	r2, [r3, #40]
 419:Core/Src/main.c ****   hlpuart1.AdvancedInit.OverrunDisable = UART_ADVFEATURE_OVERRUN_DISABLE;
 1150              		.loc 1 419 40
 1151 0042 154B     		ldr	r3, .L52
 1152 0044 4FF48052 		mov	r2, #4096
 1153 0048 DA63     		str	r2, [r3, #60]
 420:Core/Src/main.c ****   hlpuart1.FifoMode = UART_FIFOMODE_DISABLE;
 1154              		.loc 1 420 21
 1155 004a 134B     		ldr	r3, .L52
 1156 004c 0022     		movs	r2, #0
 1157 004e 5A66     		str	r2, [r3, #100]
 421:Core/Src/main.c ****   if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 1158              		.loc 1 421 7
 1159 0050 1148     		ldr	r0, .L52
 1160 0052 FFF7FEFF 		bl	HAL_UART_Init
 1161 0056 0346     		mov	r3, r0
 1162              		.loc 1 421 6
 1163 0058 002B     		cmp	r3, #0
 1164 005a 01D0     		beq	.L47
 422:Core/Src/main.c ****   {
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 29


 423:Core/Src/main.c ****     Error_Handler();
 1165              		.loc 1 423 5
 1166 005c FFF7FEFF 		bl	Error_Handler
 1167              	.L47:
 424:Core/Src/main.c ****   }
 425:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&hlpuart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 1168              		.loc 1 425 7
 1169 0060 0021     		movs	r1, #0
 1170 0062 0D48     		ldr	r0, .L52
 1171 0064 FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 1172 0068 0346     		mov	r3, r0
 1173              		.loc 1 425 6
 1174 006a 002B     		cmp	r3, #0
 1175 006c 01D0     		beq	.L48
 426:Core/Src/main.c ****   {
 427:Core/Src/main.c ****     Error_Handler();
 1176              		.loc 1 427 5
 1177 006e FFF7FEFF 		bl	Error_Handler
 1178              	.L48:
 428:Core/Src/main.c ****   }
 429:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&hlpuart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 1179              		.loc 1 429 7
 1180 0072 0021     		movs	r1, #0
 1181 0074 0848     		ldr	r0, .L52
 1182 0076 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 1183 007a 0346     		mov	r3, r0
 1184              		.loc 1 429 6
 1185 007c 002B     		cmp	r3, #0
 1186 007e 01D0     		beq	.L49
 430:Core/Src/main.c ****   {
 431:Core/Src/main.c ****     Error_Handler();
 1187              		.loc 1 431 5
 1188 0080 FFF7FEFF 		bl	Error_Handler
 1189              	.L49:
 432:Core/Src/main.c ****   }
 433:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&hlpuart1) != HAL_OK)
 1190              		.loc 1 433 7
 1191 0084 0448     		ldr	r0, .L52
 1192 0086 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 1193 008a 0346     		mov	r3, r0
 1194              		.loc 1 433 6
 1195 008c 002B     		cmp	r3, #0
 1196 008e 01D0     		beq	.L51
 434:Core/Src/main.c ****   {
 435:Core/Src/main.c ****     Error_Handler();
 1197              		.loc 1 435 5
 1198 0090 FFF7FEFF 		bl	Error_Handler
 1199              	.L51:
 436:Core/Src/main.c ****   }
 437:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 2 */
 438:Core/Src/main.c **** 
 439:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 2 */
 440:Core/Src/main.c **** 
 441:Core/Src/main.c **** }
 1200              		.loc 1 441 1
 1201 0094 00BF     		nop
 1202 0096 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 30


 1203              	.L53:
 1204              		.align	2
 1205              	.L52:
 1206 0098 00000000 		.word	hlpuart1
 1207 009c 00800040 		.word	1073774592
 1208              		.cfi_endproc
 1209              	.LFE332:
 1211              		.section	.text.MX_UART4_Init,"ax",%progbits
 1212              		.align	1
 1213              		.syntax unified
 1214              		.thumb
 1215              		.thumb_func
 1217              	MX_UART4_Init:
 1218              	.LFB333:
 442:Core/Src/main.c **** 
 443:Core/Src/main.c **** /**
 444:Core/Src/main.c ****   * @brief UART4 Initialization Function
 445:Core/Src/main.c ****   * @param None
 446:Core/Src/main.c ****   * @retval None
 447:Core/Src/main.c ****   */
 448:Core/Src/main.c **** static void MX_UART4_Init(void)
 449:Core/Src/main.c **** {
 1219              		.loc 1 449 1
 1220              		.cfi_startproc
 1221              		@ args = 0, pretend = 0, frame = 0
 1222              		@ frame_needed = 1, uses_anonymous_args = 0
 1223 0000 80B5     		push	{r7, lr}
 1224              		.cfi_def_cfa_offset 8
 1225              		.cfi_offset 7, -8
 1226              		.cfi_offset 14, -4
 1227 0002 00AF     		add	r7, sp, #0
 1228              		.cfi_def_cfa_register 7
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 0 */
 452:Core/Src/main.c **** 
 453:Core/Src/main.c ****   /* USER CODE END UART4_Init 0 */
 454:Core/Src/main.c **** 
 455:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 1 */
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   /* USER CODE END UART4_Init 1 */
 458:Core/Src/main.c ****   huart4.Instance = UART4;
 1229              		.loc 1 458 19
 1230 0004 224B     		ldr	r3, .L60
 1231 0006 234A     		ldr	r2, .L60+4
 1232 0008 1A60     		str	r2, [r3]
 459:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
 1233              		.loc 1 459 24
 1234 000a 214B     		ldr	r3, .L60
 1235 000c 4FF4E132 		mov	r2, #115200
 1236 0010 5A60     		str	r2, [r3, #4]
 460:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 1237              		.loc 1 460 26
 1238 0012 1F4B     		ldr	r3, .L60
 1239 0014 0022     		movs	r2, #0
 1240 0016 9A60     		str	r2, [r3, #8]
 461:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 1241              		.loc 1 461 24
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 31


 1242 0018 1D4B     		ldr	r3, .L60
 1243 001a 0022     		movs	r2, #0
 1244 001c DA60     		str	r2, [r3, #12]
 462:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 1245              		.loc 1 462 22
 1246 001e 1C4B     		ldr	r3, .L60
 1247 0020 0022     		movs	r2, #0
 1248 0022 1A61     		str	r2, [r3, #16]
 463:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 1249              		.loc 1 463 20
 1250 0024 1A4B     		ldr	r3, .L60
 1251 0026 0C22     		movs	r2, #12
 1252 0028 5A61     		str	r2, [r3, #20]
 464:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1253              		.loc 1 464 25
 1254 002a 194B     		ldr	r3, .L60
 1255 002c 0022     		movs	r2, #0
 1256 002e 9A61     		str	r2, [r3, #24]
 465:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 1257              		.loc 1 465 28
 1258 0030 174B     		ldr	r3, .L60
 1259 0032 0022     		movs	r2, #0
 1260 0034 DA61     		str	r2, [r3, #28]
 466:Core/Src/main.c ****   huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1261              		.loc 1 466 30
 1262 0036 164B     		ldr	r3, .L60
 1263 0038 0022     		movs	r2, #0
 1264 003a 1A62     		str	r2, [r3, #32]
 467:Core/Src/main.c ****   huart4.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 1265              		.loc 1 467 30
 1266 003c 144B     		ldr	r3, .L60
 1267 003e 0022     		movs	r2, #0
 1268 0040 5A62     		str	r2, [r3, #36]
 468:Core/Src/main.c ****   huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1269              		.loc 1 468 38
 1270 0042 134B     		ldr	r3, .L60
 1271 0044 0022     		movs	r2, #0
 1272 0046 9A62     		str	r2, [r3, #40]
 469:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 1273              		.loc 1 469 7
 1274 0048 1148     		ldr	r0, .L60
 1275 004a FFF7FEFF 		bl	HAL_UART_Init
 1276 004e 0346     		mov	r3, r0
 1277              		.loc 1 469 6
 1278 0050 002B     		cmp	r3, #0
 1279 0052 01D0     		beq	.L55
 470:Core/Src/main.c ****   {
 471:Core/Src/main.c ****     Error_Handler();
 1280              		.loc 1 471 5
 1281 0054 FFF7FEFF 		bl	Error_Handler
 1282              	.L55:
 472:Core/Src/main.c ****   }
 473:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart4, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 1283              		.loc 1 473 7
 1284 0058 0021     		movs	r1, #0
 1285 005a 0D48     		ldr	r0, .L60
 1286 005c FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 32


 1287 0060 0346     		mov	r3, r0
 1288              		.loc 1 473 6
 1289 0062 002B     		cmp	r3, #0
 1290 0064 01D0     		beq	.L56
 474:Core/Src/main.c ****   {
 475:Core/Src/main.c ****     Error_Handler();
 1291              		.loc 1 475 5
 1292 0066 FFF7FEFF 		bl	Error_Handler
 1293              	.L56:
 476:Core/Src/main.c ****   }
 477:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart4, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 1294              		.loc 1 477 7
 1295 006a 0021     		movs	r1, #0
 1296 006c 0848     		ldr	r0, .L60
 1297 006e FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 1298 0072 0346     		mov	r3, r0
 1299              		.loc 1 477 6
 1300 0074 002B     		cmp	r3, #0
 1301 0076 01D0     		beq	.L57
 478:Core/Src/main.c ****   {
 479:Core/Src/main.c ****     Error_Handler();
 1302              		.loc 1 479 5
 1303 0078 FFF7FEFF 		bl	Error_Handler
 1304              	.L57:
 480:Core/Src/main.c ****   }
 481:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&huart4) != HAL_OK)
 1305              		.loc 1 481 7
 1306 007c 0448     		ldr	r0, .L60
 1307 007e FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 1308 0082 0346     		mov	r3, r0
 1309              		.loc 1 481 6
 1310 0084 002B     		cmp	r3, #0
 1311 0086 01D0     		beq	.L59
 482:Core/Src/main.c ****   {
 483:Core/Src/main.c ****     Error_Handler();
 1312              		.loc 1 483 5
 1313 0088 FFF7FEFF 		bl	Error_Handler
 1314              	.L59:
 484:Core/Src/main.c ****   }
 485:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 2 */
 486:Core/Src/main.c **** 
 487:Core/Src/main.c ****   /* USER CODE END UART4_Init 2 */
 488:Core/Src/main.c **** 
 489:Core/Src/main.c **** }
 1315              		.loc 1 489 1
 1316 008c 00BF     		nop
 1317 008e 80BD     		pop	{r7, pc}
 1318              	.L61:
 1319              		.align	2
 1320              	.L60:
 1321 0090 00000000 		.word	huart4
 1322 0094 004C0040 		.word	1073761280
 1323              		.cfi_endproc
 1324              	.LFE333:
 1326              		.section	.text.MX_TIM3_Init,"ax",%progbits
 1327              		.align	1
 1328              		.syntax unified
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 33


 1329              		.thumb
 1330              		.thumb_func
 1332              	MX_TIM3_Init:
 1333              	.LFB334:
 490:Core/Src/main.c **** 
 491:Core/Src/main.c **** /**
 492:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 493:Core/Src/main.c ****   * @param None
 494:Core/Src/main.c ****   * @retval None
 495:Core/Src/main.c ****   */
 496:Core/Src/main.c **** static void MX_TIM3_Init(void)
 497:Core/Src/main.c **** {
 1334              		.loc 1 497 1
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 56
 1337              		@ frame_needed = 1, uses_anonymous_args = 0
 1338 0000 80B5     		push	{r7, lr}
 1339              		.cfi_def_cfa_offset 8
 1340              		.cfi_offset 7, -8
 1341              		.cfi_offset 14, -4
 1342 0002 8EB0     		sub	sp, sp, #56
 1343              		.cfi_def_cfa_offset 64
 1344 0004 00AF     		add	r7, sp, #0
 1345              		.cfi_def_cfa_register 7
 498:Core/Src/main.c **** 
 499:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 500:Core/Src/main.c **** 
 501:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 502:Core/Src/main.c **** 
 503:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1346              		.loc 1 503 26
 1347 0006 07F12803 		add	r3, r7, #40
 1348 000a 0022     		movs	r2, #0
 1349 000c 1A60     		str	r2, [r3]
 1350 000e 5A60     		str	r2, [r3, #4]
 1351 0010 9A60     		str	r2, [r3, #8]
 1352 0012 DA60     		str	r2, [r3, #12]
 504:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1353              		.loc 1 504 27
 1354 0014 07F11C03 		add	r3, r7, #28
 1355 0018 0022     		movs	r2, #0
 1356 001a 1A60     		str	r2, [r3]
 1357 001c 5A60     		str	r2, [r3, #4]
 1358 001e 9A60     		str	r2, [r3, #8]
 505:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1359              		.loc 1 505 22
 1360 0020 3B46     		mov	r3, r7
 1361 0022 0022     		movs	r2, #0
 1362 0024 1A60     		str	r2, [r3]
 1363 0026 5A60     		str	r2, [r3, #4]
 1364 0028 9A60     		str	r2, [r3, #8]
 1365 002a DA60     		str	r2, [r3, #12]
 1366 002c 1A61     		str	r2, [r3, #16]
 1367 002e 5A61     		str	r2, [r3, #20]
 1368 0030 9A61     		str	r2, [r3, #24]
 506:Core/Src/main.c **** 
 507:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 34


 508:Core/Src/main.c **** 
 509:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 510:Core/Src/main.c ****   htim3.Instance = TIM3;
 1369              		.loc 1 510 18
 1370 0032 374B     		ldr	r3, .L70
 1371 0034 374A     		ldr	r2, .L70+4
 1372 0036 1A60     		str	r2, [r3]
 511:Core/Src/main.c ****   htim3.Init.Prescaler = 119;
 1373              		.loc 1 511 24
 1374 0038 354B     		ldr	r3, .L70
 1375 003a 7722     		movs	r2, #119
 1376 003c 5A60     		str	r2, [r3, #4]
 512:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1377              		.loc 1 512 26
 1378 003e 344B     		ldr	r3, .L70
 1379 0040 0022     		movs	r2, #0
 1380 0042 9A60     		str	r2, [r3, #8]
 513:Core/Src/main.c ****   htim3.Init.Period = 255;
 1381              		.loc 1 513 21
 1382 0044 324B     		ldr	r3, .L70
 1383 0046 FF22     		movs	r2, #255
 1384 0048 DA60     		str	r2, [r3, #12]
 514:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1385              		.loc 1 514 28
 1386 004a 314B     		ldr	r3, .L70
 1387 004c 0022     		movs	r2, #0
 1388 004e 1A61     		str	r2, [r3, #16]
 515:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1389              		.loc 1 515 32
 1390 0050 2F4B     		ldr	r3, .L70
 1391 0052 8022     		movs	r2, #128
 1392 0054 9A61     		str	r2, [r3, #24]
 516:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1393              		.loc 1 516 7
 1394 0056 2E48     		ldr	r0, .L70
 1395 0058 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1396 005c 0346     		mov	r3, r0
 1397              		.loc 1 516 6
 1398 005e 002B     		cmp	r3, #0
 1399 0060 01D0     		beq	.L63
 517:Core/Src/main.c ****   {
 518:Core/Src/main.c ****     Error_Handler();
 1400              		.loc 1 518 5
 1401 0062 FFF7FEFF 		bl	Error_Handler
 1402              	.L63:
 519:Core/Src/main.c ****   }
 520:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1403              		.loc 1 520 34
 1404 0066 4FF48053 		mov	r3, #4096
 1405 006a BB62     		str	r3, [r7, #40]
 521:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1406              		.loc 1 521 7
 1407 006c 07F12803 		add	r3, r7, #40
 1408 0070 1946     		mov	r1, r3
 1409 0072 2748     		ldr	r0, .L70
 1410 0074 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1411 0078 0346     		mov	r3, r0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 35


 1412              		.loc 1 521 6
 1413 007a 002B     		cmp	r3, #0
 1414 007c 01D0     		beq	.L64
 522:Core/Src/main.c ****   {
 523:Core/Src/main.c ****     Error_Handler();
 1415              		.loc 1 523 5
 1416 007e FFF7FEFF 		bl	Error_Handler
 1417              	.L64:
 524:Core/Src/main.c ****   }
 525:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 1418              		.loc 1 525 7
 1419 0082 2348     		ldr	r0, .L70
 1420 0084 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1421 0088 0346     		mov	r3, r0
 1422              		.loc 1 525 6
 1423 008a 002B     		cmp	r3, #0
 1424 008c 01D0     		beq	.L65
 526:Core/Src/main.c ****   {
 527:Core/Src/main.c ****     Error_Handler();
 1425              		.loc 1 527 5
 1426 008e FFF7FEFF 		bl	Error_Handler
 1427              	.L65:
 528:Core/Src/main.c ****   }
 529:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1428              		.loc 1 529 37
 1429 0092 0023     		movs	r3, #0
 1430 0094 FB61     		str	r3, [r7, #28]
 530:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1431              		.loc 1 530 33
 1432 0096 0023     		movs	r3, #0
 1433 0098 7B62     		str	r3, [r7, #36]
 531:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1434              		.loc 1 531 7
 1435 009a 07F11C03 		add	r3, r7, #28
 1436 009e 1946     		mov	r1, r3
 1437 00a0 1B48     		ldr	r0, .L70
 1438 00a2 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1439 00a6 0346     		mov	r3, r0
 1440              		.loc 1 531 6
 1441 00a8 002B     		cmp	r3, #0
 1442 00aa 01D0     		beq	.L66
 532:Core/Src/main.c ****   {
 533:Core/Src/main.c ****     Error_Handler();
 1443              		.loc 1 533 5
 1444 00ac FFF7FEFF 		bl	Error_Handler
 1445              	.L66:
 534:Core/Src/main.c ****   }
 535:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 1446              		.loc 1 535 20
 1447 00b0 6023     		movs	r3, #96
 1448 00b2 3B60     		str	r3, [r7]
 536:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1449              		.loc 1 536 19
 1450 00b4 0023     		movs	r3, #0
 1451 00b6 7B60     		str	r3, [r7, #4]
 537:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1452              		.loc 1 537 24
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 36


 1453 00b8 0023     		movs	r3, #0
 1454 00ba BB60     		str	r3, [r7, #8]
 538:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1455              		.loc 1 538 24
 1456 00bc 0023     		movs	r3, #0
 1457 00be 3B61     		str	r3, [r7, #16]
 539:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1458              		.loc 1 539 7
 1459 00c0 3B46     		mov	r3, r7
 1460 00c2 0022     		movs	r2, #0
 1461 00c4 1946     		mov	r1, r3
 1462 00c6 1248     		ldr	r0, .L70
 1463 00c8 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1464 00cc 0346     		mov	r3, r0
 1465              		.loc 1 539 6
 1466 00ce 002B     		cmp	r3, #0
 1467 00d0 01D0     		beq	.L67
 540:Core/Src/main.c ****   {
 541:Core/Src/main.c ****     Error_Handler();
 1468              		.loc 1 541 5
 1469 00d2 FFF7FEFF 		bl	Error_Handler
 1470              	.L67:
 542:Core/Src/main.c ****   }
 543:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 1471              		.loc 1 543 7
 1472 00d6 3B46     		mov	r3, r7
 1473 00d8 0422     		movs	r2, #4
 1474 00da 1946     		mov	r1, r3
 1475 00dc 0C48     		ldr	r0, .L70
 1476 00de FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1477 00e2 0346     		mov	r3, r0
 1478              		.loc 1 543 6
 1479 00e4 002B     		cmp	r3, #0
 1480 00e6 01D0     		beq	.L68
 544:Core/Src/main.c ****   {
 545:Core/Src/main.c ****     Error_Handler();
 1481              		.loc 1 545 5
 1482 00e8 FFF7FEFF 		bl	Error_Handler
 1483              	.L68:
 546:Core/Src/main.c ****   }
 547:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 1484              		.loc 1 547 7
 1485 00ec 3B46     		mov	r3, r7
 1486 00ee 0822     		movs	r2, #8
 1487 00f0 1946     		mov	r1, r3
 1488 00f2 0748     		ldr	r0, .L70
 1489 00f4 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1490 00f8 0346     		mov	r3, r0
 1491              		.loc 1 547 6
 1492 00fa 002B     		cmp	r3, #0
 1493 00fc 01D0     		beq	.L69
 548:Core/Src/main.c ****   {
 549:Core/Src/main.c ****     Error_Handler();
 1494              		.loc 1 549 5
 1495 00fe FFF7FEFF 		bl	Error_Handler
 1496              	.L69:
 550:Core/Src/main.c ****   }
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 37


 551:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 552:Core/Src/main.c **** 
 553:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 554:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 1497              		.loc 1 554 3
 1498 0102 0348     		ldr	r0, .L70
 1499 0104 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 555:Core/Src/main.c **** 
 556:Core/Src/main.c **** }
 1500              		.loc 1 556 1
 1501 0108 00BF     		nop
 1502 010a 3837     		adds	r7, r7, #56
 1503              		.cfi_def_cfa_offset 8
 1504 010c BD46     		mov	sp, r7
 1505              		.cfi_def_cfa_register 13
 1506              		@ sp needed
 1507 010e 80BD     		pop	{r7, pc}
 1508              	.L71:
 1509              		.align	2
 1510              	.L70:
 1511 0110 00000000 		.word	htim3
 1512 0114 00040040 		.word	1073742848
 1513              		.cfi_endproc
 1514              	.LFE334:
 1516              		.section	.text.MX_TIM4_Init,"ax",%progbits
 1517              		.align	1
 1518              		.syntax unified
 1519              		.thumb
 1520              		.thumb_func
 1522              	MX_TIM4_Init:
 1523              	.LFB335:
 557:Core/Src/main.c **** 
 558:Core/Src/main.c **** /**
 559:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 560:Core/Src/main.c ****   * @param None
 561:Core/Src/main.c ****   * @retval None
 562:Core/Src/main.c ****   */
 563:Core/Src/main.c **** static void MX_TIM4_Init(void)
 564:Core/Src/main.c **** {
 1524              		.loc 1 564 1
 1525              		.cfi_startproc
 1526              		@ args = 0, pretend = 0, frame = 32
 1527              		@ frame_needed = 1, uses_anonymous_args = 0
 1528 0000 80B5     		push	{r7, lr}
 1529              		.cfi_def_cfa_offset 8
 1530              		.cfi_offset 7, -8
 1531              		.cfi_offset 14, -4
 1532 0002 88B0     		sub	sp, sp, #32
 1533              		.cfi_def_cfa_offset 40
 1534 0004 00AF     		add	r7, sp, #0
 1535              		.cfi_def_cfa_register 7
 565:Core/Src/main.c **** 
 566:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 567:Core/Src/main.c **** 
 568:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 569:Core/Src/main.c **** 
 570:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 38


 1536              		.loc 1 570 26
 1537 0006 07F11003 		add	r3, r7, #16
 1538 000a 0022     		movs	r2, #0
 1539 000c 1A60     		str	r2, [r3]
 1540 000e 5A60     		str	r2, [r3, #4]
 1541 0010 9A60     		str	r2, [r3, #8]
 1542 0012 DA60     		str	r2, [r3, #12]
 571:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1543              		.loc 1 571 27
 1544 0014 3B1D     		adds	r3, r7, #4
 1545 0016 0022     		movs	r2, #0
 1546 0018 1A60     		str	r2, [r3]
 1547 001a 5A60     		str	r2, [r3, #4]
 1548 001c 9A60     		str	r2, [r3, #8]
 572:Core/Src/main.c **** 
 573:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 574:Core/Src/main.c **** 
 575:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 576:Core/Src/main.c ****   htim4.Instance = TIM4;
 1549              		.loc 1 576 18
 1550 001e 1D4B     		ldr	r3, .L77
 1551 0020 1D4A     		ldr	r2, .L77+4
 1552 0022 1A60     		str	r2, [r3]
 577:Core/Src/main.c ****   htim4.Init.Prescaler = 119;
 1553              		.loc 1 577 24
 1554 0024 1B4B     		ldr	r3, .L77
 1555 0026 7722     		movs	r2, #119
 1556 0028 5A60     		str	r2, [r3, #4]
 578:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 1557              		.loc 1 578 26
 1558 002a 1A4B     		ldr	r3, .L77
 1559 002c 0022     		movs	r2, #0
 1560 002e 9A60     		str	r2, [r3, #8]
 579:Core/Src/main.c ****   htim4.Init.Period = 65535;
 1561              		.loc 1 579 21
 1562 0030 184B     		ldr	r3, .L77
 1563 0032 4FF6FF72 		movw	r2, #65535
 1564 0036 DA60     		str	r2, [r3, #12]
 580:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1565              		.loc 1 580 28
 1566 0038 164B     		ldr	r3, .L77
 1567 003a 0022     		movs	r2, #0
 1568 003c 1A61     		str	r2, [r3, #16]
 581:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1569              		.loc 1 581 32
 1570 003e 154B     		ldr	r3, .L77
 1571 0040 0022     		movs	r2, #0
 1572 0042 9A61     		str	r2, [r3, #24]
 582:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 1573              		.loc 1 582 7
 1574 0044 1348     		ldr	r0, .L77
 1575 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1576 004a 0346     		mov	r3, r0
 1577              		.loc 1 582 6
 1578 004c 002B     		cmp	r3, #0
 1579 004e 01D0     		beq	.L73
 583:Core/Src/main.c ****   {
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 39


 584:Core/Src/main.c ****     Error_Handler();
 1580              		.loc 1 584 5
 1581 0050 FFF7FEFF 		bl	Error_Handler
 1582              	.L73:
 585:Core/Src/main.c ****   }
 586:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1583              		.loc 1 586 34
 1584 0054 4FF48053 		mov	r3, #4096
 1585 0058 3B61     		str	r3, [r7, #16]
 587:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 1586              		.loc 1 587 7
 1587 005a 07F11003 		add	r3, r7, #16
 1588 005e 1946     		mov	r1, r3
 1589 0060 0C48     		ldr	r0, .L77
 1590 0062 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1591 0066 0346     		mov	r3, r0
 1592              		.loc 1 587 6
 1593 0068 002B     		cmp	r3, #0
 1594 006a 01D0     		beq	.L74
 588:Core/Src/main.c ****   {
 589:Core/Src/main.c ****     Error_Handler();
 1595              		.loc 1 589 5
 1596 006c FFF7FEFF 		bl	Error_Handler
 1597              	.L74:
 590:Core/Src/main.c ****   }
 591:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1598              		.loc 1 591 37
 1599 0070 0023     		movs	r3, #0
 1600 0072 7B60     		str	r3, [r7, #4]
 592:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1601              		.loc 1 592 33
 1602 0074 0023     		movs	r3, #0
 1603 0076 FB60     		str	r3, [r7, #12]
 593:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 1604              		.loc 1 593 7
 1605 0078 3B1D     		adds	r3, r7, #4
 1606 007a 1946     		mov	r1, r3
 1607 007c 0548     		ldr	r0, .L77
 1608 007e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1609 0082 0346     		mov	r3, r0
 1610              		.loc 1 593 6
 1611 0084 002B     		cmp	r3, #0
 1612 0086 01D0     		beq	.L76
 594:Core/Src/main.c ****   {
 595:Core/Src/main.c ****     Error_Handler();
 1613              		.loc 1 595 5
 1614 0088 FFF7FEFF 		bl	Error_Handler
 1615              	.L76:
 596:Core/Src/main.c ****   }
 597:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 598:Core/Src/main.c **** 
 599:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 600:Core/Src/main.c **** 
 601:Core/Src/main.c **** }
 1616              		.loc 1 601 1
 1617 008c 00BF     		nop
 1618 008e 2037     		adds	r7, r7, #32
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 40


 1619              		.cfi_def_cfa_offset 8
 1620 0090 BD46     		mov	sp, r7
 1621              		.cfi_def_cfa_register 13
 1622              		@ sp needed
 1623 0092 80BD     		pop	{r7, pc}
 1624              	.L78:
 1625              		.align	2
 1626              	.L77:
 1627 0094 00000000 		.word	htim4
 1628 0098 00080040 		.word	1073743872
 1629              		.cfi_endproc
 1630              	.LFE335:
 1632              		.section	.text.MX_TIM5_Init,"ax",%progbits
 1633              		.align	1
 1634              		.syntax unified
 1635              		.thumb
 1636              		.thumb_func
 1638              	MX_TIM5_Init:
 1639              	.LFB336:
 602:Core/Src/main.c **** 
 603:Core/Src/main.c **** /**
 604:Core/Src/main.c ****   * @brief TIM5 Initialization Function
 605:Core/Src/main.c ****   * @param None
 606:Core/Src/main.c ****   * @retval None
 607:Core/Src/main.c ****   */
 608:Core/Src/main.c **** static void MX_TIM5_Init(void)
 609:Core/Src/main.c **** {
 1640              		.loc 1 609 1
 1641              		.cfi_startproc
 1642              		@ args = 0, pretend = 0, frame = 32
 1643              		@ frame_needed = 1, uses_anonymous_args = 0
 1644 0000 80B5     		push	{r7, lr}
 1645              		.cfi_def_cfa_offset 8
 1646              		.cfi_offset 7, -8
 1647              		.cfi_offset 14, -4
 1648 0002 88B0     		sub	sp, sp, #32
 1649              		.cfi_def_cfa_offset 40
 1650 0004 00AF     		add	r7, sp, #0
 1651              		.cfi_def_cfa_register 7
 610:Core/Src/main.c **** 
 611:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 0 */
 612:Core/Src/main.c **** 
 613:Core/Src/main.c ****   /* USER CODE END TIM5_Init 0 */
 614:Core/Src/main.c **** 
 615:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1652              		.loc 1 615 26
 1653 0006 07F11003 		add	r3, r7, #16
 1654 000a 0022     		movs	r2, #0
 1655 000c 1A60     		str	r2, [r3]
 1656 000e 5A60     		str	r2, [r3, #4]
 1657 0010 9A60     		str	r2, [r3, #8]
 1658 0012 DA60     		str	r2, [r3, #12]
 616:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1659              		.loc 1 616 27
 1660 0014 3B1D     		adds	r3, r7, #4
 1661 0016 0022     		movs	r2, #0
 1662 0018 1A60     		str	r2, [r3]
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 41


 1663 001a 5A60     		str	r2, [r3, #4]
 1664 001c 9A60     		str	r2, [r3, #8]
 617:Core/Src/main.c **** 
 618:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 1 */
 619:Core/Src/main.c **** 
 620:Core/Src/main.c ****   /* USER CODE END TIM5_Init 1 */
 621:Core/Src/main.c ****   htim5.Instance = TIM5;
 1665              		.loc 1 621 18
 1666 001e 1D4B     		ldr	r3, .L84
 1667 0020 1D4A     		ldr	r2, .L84+4
 1668 0022 1A60     		str	r2, [r3]
 622:Core/Src/main.c ****   htim5.Init.Prescaler = 119;
 1669              		.loc 1 622 24
 1670 0024 1B4B     		ldr	r3, .L84
 1671 0026 7722     		movs	r2, #119
 1672 0028 5A60     		str	r2, [r3, #4]
 623:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 1673              		.loc 1 623 26
 1674 002a 1A4B     		ldr	r3, .L84
 1675 002c 0022     		movs	r2, #0
 1676 002e 9A60     		str	r2, [r3, #8]
 624:Core/Src/main.c ****   htim5.Init.Period = 4294967295;
 1677              		.loc 1 624 21
 1678 0030 184B     		ldr	r3, .L84
 1679 0032 4FF0FF32 		mov	r2, #-1
 1680 0036 DA60     		str	r2, [r3, #12]
 625:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1681              		.loc 1 625 28
 1682 0038 164B     		ldr	r3, .L84
 1683 003a 0022     		movs	r2, #0
 1684 003c 1A61     		str	r2, [r3, #16]
 626:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1685              		.loc 1 626 32
 1686 003e 154B     		ldr	r3, .L84
 1687 0040 0022     		movs	r2, #0
 1688 0042 9A61     		str	r2, [r3, #24]
 627:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 1689              		.loc 1 627 7
 1690 0044 1348     		ldr	r0, .L84
 1691 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1692 004a 0346     		mov	r3, r0
 1693              		.loc 1 627 6
 1694 004c 002B     		cmp	r3, #0
 1695 004e 01D0     		beq	.L80
 628:Core/Src/main.c ****   {
 629:Core/Src/main.c ****     Error_Handler();
 1696              		.loc 1 629 5
 1697 0050 FFF7FEFF 		bl	Error_Handler
 1698              	.L80:
 630:Core/Src/main.c ****   }
 631:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1699              		.loc 1 631 34
 1700 0054 4FF48053 		mov	r3, #4096
 1701 0058 3B61     		str	r3, [r7, #16]
 632:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 1702              		.loc 1 632 7
 1703 005a 07F11003 		add	r3, r7, #16
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 42


 1704 005e 1946     		mov	r1, r3
 1705 0060 0C48     		ldr	r0, .L84
 1706 0062 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1707 0066 0346     		mov	r3, r0
 1708              		.loc 1 632 6
 1709 0068 002B     		cmp	r3, #0
 1710 006a 01D0     		beq	.L81
 633:Core/Src/main.c ****   {
 634:Core/Src/main.c ****     Error_Handler();
 1711              		.loc 1 634 5
 1712 006c FFF7FEFF 		bl	Error_Handler
 1713              	.L81:
 635:Core/Src/main.c ****   }
 636:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1714              		.loc 1 636 37
 1715 0070 0023     		movs	r3, #0
 1716 0072 7B60     		str	r3, [r7, #4]
 637:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1717              		.loc 1 637 33
 1718 0074 0023     		movs	r3, #0
 1719 0076 FB60     		str	r3, [r7, #12]
 638:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 1720              		.loc 1 638 7
 1721 0078 3B1D     		adds	r3, r7, #4
 1722 007a 1946     		mov	r1, r3
 1723 007c 0548     		ldr	r0, .L84
 1724 007e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1725 0082 0346     		mov	r3, r0
 1726              		.loc 1 638 6
 1727 0084 002B     		cmp	r3, #0
 1728 0086 01D0     		beq	.L83
 639:Core/Src/main.c ****   {
 640:Core/Src/main.c ****     Error_Handler();
 1729              		.loc 1 640 5
 1730 0088 FFF7FEFF 		bl	Error_Handler
 1731              	.L83:
 641:Core/Src/main.c ****   }
 642:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 2 */
 643:Core/Src/main.c **** 
 644:Core/Src/main.c ****   /* USER CODE END TIM5_Init 2 */
 645:Core/Src/main.c **** 
 646:Core/Src/main.c **** }
 1732              		.loc 1 646 1
 1733 008c 00BF     		nop
 1734 008e 2037     		adds	r7, r7, #32
 1735              		.cfi_def_cfa_offset 8
 1736 0090 BD46     		mov	sp, r7
 1737              		.cfi_def_cfa_register 13
 1738              		@ sp needed
 1739 0092 80BD     		pop	{r7, pc}
 1740              	.L85:
 1741              		.align	2
 1742              	.L84:
 1743 0094 00000000 		.word	htim5
 1744 0098 000C0040 		.word	1073744896
 1745              		.cfi_endproc
 1746              	.LFE336:
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 43


 1748              		.section	.text.MX_USB_OTG_FS_PCD_Init,"ax",%progbits
 1749              		.align	1
 1750              		.syntax unified
 1751              		.thumb
 1752              		.thumb_func
 1754              	MX_USB_OTG_FS_PCD_Init:
 1755              	.LFB337:
 647:Core/Src/main.c **** 
 648:Core/Src/main.c **** /**
 649:Core/Src/main.c ****   * @brief USB_OTG_FS Initialization Function
 650:Core/Src/main.c ****   * @param None
 651:Core/Src/main.c ****   * @retval None
 652:Core/Src/main.c ****   */
 653:Core/Src/main.c **** static void MX_USB_OTG_FS_PCD_Init(void)
 654:Core/Src/main.c **** {
 1756              		.loc 1 654 1
 1757              		.cfi_startproc
 1758              		@ args = 0, pretend = 0, frame = 0
 1759              		@ frame_needed = 1, uses_anonymous_args = 0
 1760 0000 80B5     		push	{r7, lr}
 1761              		.cfi_def_cfa_offset 8
 1762              		.cfi_offset 7, -8
 1763              		.cfi_offset 14, -4
 1764 0002 00AF     		add	r7, sp, #0
 1765              		.cfi_def_cfa_register 7
 655:Core/Src/main.c **** 
 656:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 0 */
 657:Core/Src/main.c **** 
 658:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 0 */
 659:Core/Src/main.c **** 
 660:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 1 */
 661:Core/Src/main.c **** 
 662:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 1 */
 663:Core/Src/main.c ****   hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 1766              		.loc 1 663 28
 1767 0004 124B     		ldr	r3, .L89
 1768 0006 4FF0A042 		mov	r2, #1342177280
 1769 000a 1A60     		str	r2, [r3]
 664:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 1770              		.loc 1 664 38
 1771 000c 104B     		ldr	r3, .L89
 1772 000e 0622     		movs	r2, #6
 1773 0010 5A60     		str	r2, [r3, #4]
 665:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 1774              		.loc 1 665 35
 1775 0012 0F4B     		ldr	r3, .L89
 1776 0014 0222     		movs	r2, #2
 1777 0016 9A61     		str	r2, [r3, #24]
 666:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 1778              		.loc 1 666 35
 1779 0018 0D4B     		ldr	r3, .L89
 1780 001a 0122     		movs	r2, #1
 1781 001c DA61     		str	r2, [r3, #28]
 667:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 1782              		.loc 1 667 41
 1783 001e 0C4B     		ldr	r3, .L89
 1784 0020 0022     		movs	r2, #0
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 44


 1785 0022 1A62     		str	r2, [r3, #32]
 668:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 1786              		.loc 1 668 35
 1787 0024 0A4B     		ldr	r3, .L89
 1788 0026 0022     		movs	r2, #0
 1789 0028 5A62     		str	r2, [r3, #36]
 669:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.battery_charging_enable = ENABLE;
 1790              		.loc 1 669 48
 1791 002a 094B     		ldr	r3, .L89
 1792 002c 0122     		movs	r2, #1
 1793 002e 9A62     		str	r2, [r3, #40]
 670:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 1794              		.loc 1 670 42
 1795 0030 074B     		ldr	r3, .L89
 1796 0032 0022     		movs	r2, #0
 1797 0034 1A63     		str	r2, [r3, #48]
 671:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = ENABLE;
 1798              		.loc 1 671 44
 1799 0036 064B     		ldr	r3, .L89
 1800 0038 0122     		movs	r2, #1
 1801 003a DA62     		str	r2, [r3, #44]
 672:Core/Src/main.c ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 1802              		.loc 1 672 7
 1803 003c 0448     		ldr	r0, .L89
 1804 003e FFF7FEFF 		bl	HAL_PCD_Init
 1805 0042 0346     		mov	r3, r0
 1806              		.loc 1 672 6
 1807 0044 002B     		cmp	r3, #0
 1808 0046 01D0     		beq	.L88
 673:Core/Src/main.c ****   {
 674:Core/Src/main.c ****     Error_Handler();
 1809              		.loc 1 674 5
 1810 0048 FFF7FEFF 		bl	Error_Handler
 1811              	.L88:
 675:Core/Src/main.c ****   }
 676:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 2 */
 677:Core/Src/main.c **** 
 678:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 2 */
 679:Core/Src/main.c **** 
 680:Core/Src/main.c **** }
 1812              		.loc 1 680 1
 1813 004c 00BF     		nop
 1814 004e 80BD     		pop	{r7, pc}
 1815              	.L90:
 1816              		.align	2
 1817              	.L89:
 1818 0050 00000000 		.word	hpcd_USB_OTG_FS
 1819              		.cfi_endproc
 1820              	.LFE337:
 1822              		.section	.text.MX_DMA_Init,"ax",%progbits
 1823              		.align	1
 1824              		.syntax unified
 1825              		.thumb
 1826              		.thumb_func
 1828              	MX_DMA_Init:
 1829              	.LFB338:
 681:Core/Src/main.c **** 
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 45


 682:Core/Src/main.c **** /**
 683:Core/Src/main.c ****   * Enable DMA controller clock
 684:Core/Src/main.c ****   */
 685:Core/Src/main.c **** static void MX_DMA_Init(void)
 686:Core/Src/main.c **** {
 1830              		.loc 1 686 1
 1831              		.cfi_startproc
 1832              		@ args = 0, pretend = 0, frame = 8
 1833              		@ frame_needed = 1, uses_anonymous_args = 0
 1834 0000 80B5     		push	{r7, lr}
 1835              		.cfi_def_cfa_offset 8
 1836              		.cfi_offset 7, -8
 1837              		.cfi_offset 14, -4
 1838 0002 82B0     		sub	sp, sp, #8
 1839              		.cfi_def_cfa_offset 16
 1840 0004 00AF     		add	r7, sp, #0
 1841              		.cfi_def_cfa_register 7
 1842              	.LBB7:
 687:Core/Src/main.c **** 
 688:Core/Src/main.c ****   /* DMA controller clock enable */
 689:Core/Src/main.c ****   __HAL_RCC_DMAMUX1_CLK_ENABLE();
 1843              		.loc 1 689 3
 1844 0006 164B     		ldr	r3, .L92
 1845 0008 9B6C     		ldr	r3, [r3, #72]
 1846 000a 154A     		ldr	r2, .L92
 1847 000c 43F00403 		orr	r3, r3, #4
 1848 0010 9364     		str	r3, [r2, #72]
 1849 0012 134B     		ldr	r3, .L92
 1850 0014 9B6C     		ldr	r3, [r3, #72]
 1851 0016 03F00403 		and	r3, r3, #4
 1852 001a 7B60     		str	r3, [r7, #4]
 1853 001c 7B68     		ldr	r3, [r7, #4]
 1854              	.LBE7:
 1855              	.LBB8:
 690:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 1856              		.loc 1 690 3
 1857 001e 104B     		ldr	r3, .L92
 1858 0020 9B6C     		ldr	r3, [r3, #72]
 1859 0022 0F4A     		ldr	r2, .L92
 1860 0024 43F00103 		orr	r3, r3, #1
 1861 0028 9364     		str	r3, [r2, #72]
 1862 002a 0D4B     		ldr	r3, .L92
 1863 002c 9B6C     		ldr	r3, [r3, #72]
 1864 002e 03F00103 		and	r3, r3, #1
 1865 0032 3B60     		str	r3, [r7]
 1866 0034 3B68     		ldr	r3, [r7]
 1867              	.LBE8:
 691:Core/Src/main.c **** 
 692:Core/Src/main.c ****   /* DMA interrupt init */
 693:Core/Src/main.c ****   /* DMA1_Channel1_IRQn interrupt configuration */
 694:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 1868              		.loc 1 694 3
 1869 0036 0022     		movs	r2, #0
 1870 0038 0021     		movs	r1, #0
 1871 003a 0B20     		movs	r0, #11
 1872 003c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 695:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 46


 1873              		.loc 1 695 3
 1874 0040 0B20     		movs	r0, #11
 1875 0042 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 696:Core/Src/main.c ****   /* DMA1_Channel2_IRQn interrupt configuration */
 697:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 0, 0);
 1876              		.loc 1 697 3
 1877 0046 0022     		movs	r2, #0
 1878 0048 0021     		movs	r1, #0
 1879 004a 0C20     		movs	r0, #12
 1880 004c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 698:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 1881              		.loc 1 698 3
 1882 0050 0C20     		movs	r0, #12
 1883 0052 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 699:Core/Src/main.c **** 
 700:Core/Src/main.c **** }
 1884              		.loc 1 700 1
 1885 0056 00BF     		nop
 1886 0058 0837     		adds	r7, r7, #8
 1887              		.cfi_def_cfa_offset 8
 1888 005a BD46     		mov	sp, r7
 1889              		.cfi_def_cfa_register 13
 1890              		@ sp needed
 1891 005c 80BD     		pop	{r7, pc}
 1892              	.L93:
 1893 005e 00BF     		.align	2
 1894              	.L92:
 1895 0060 00100240 		.word	1073876992
 1896              		.cfi_endproc
 1897              	.LFE338:
 1899              		.section	.text.MX_GPIO_Init,"ax",%progbits
 1900              		.align	1
 1901              		.syntax unified
 1902              		.thumb
 1903              		.thumb_func
 1905              	MX_GPIO_Init:
 1906              	.LFB339:
 701:Core/Src/main.c **** 
 702:Core/Src/main.c **** /**
 703:Core/Src/main.c ****   * @brief GPIO Initialization Function
 704:Core/Src/main.c ****   * @param None
 705:Core/Src/main.c ****   * @retval None
 706:Core/Src/main.c ****   */
 707:Core/Src/main.c **** static void MX_GPIO_Init(void)
 708:Core/Src/main.c **** {
 1907              		.loc 1 708 1
 1908              		.cfi_startproc
 1909              		@ args = 0, pretend = 0, frame = 48
 1910              		@ frame_needed = 1, uses_anonymous_args = 0
 1911 0000 80B5     		push	{r7, lr}
 1912              		.cfi_def_cfa_offset 8
 1913              		.cfi_offset 7, -8
 1914              		.cfi_offset 14, -4
 1915 0002 8CB0     		sub	sp, sp, #48
 1916              		.cfi_def_cfa_offset 56
 1917 0004 00AF     		add	r7, sp, #0
 1918              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 47


 709:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 1919              		.loc 1 709 20
 1920 0006 07F11C03 		add	r3, r7, #28
 1921 000a 0022     		movs	r2, #0
 1922 000c 1A60     		str	r2, [r3]
 1923 000e 5A60     		str	r2, [r3, #4]
 1924 0010 9A60     		str	r2, [r3, #8]
 1925 0012 DA60     		str	r2, [r3, #12]
 1926 0014 1A61     		str	r2, [r3, #16]
 1927              	.LBB9:
 710:Core/Src/main.c **** 
 711:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 712:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 1928              		.loc 1 712 3
 1929 0016 724B     		ldr	r3, .L95
 1930 0018 DB6C     		ldr	r3, [r3, #76]
 1931 001a 714A     		ldr	r2, .L95
 1932 001c 43F01003 		orr	r3, r3, #16
 1933 0020 D364     		str	r3, [r2, #76]
 1934 0022 6F4B     		ldr	r3, .L95
 1935 0024 DB6C     		ldr	r3, [r3, #76]
 1936 0026 03F01003 		and	r3, r3, #16
 1937 002a BB61     		str	r3, [r7, #24]
 1938 002c BB69     		ldr	r3, [r7, #24]
 1939              	.LBE9:
 1940              	.LBB10:
 713:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 1941              		.loc 1 713 3
 1942 002e 6C4B     		ldr	r3, .L95
 1943 0030 DB6C     		ldr	r3, [r3, #76]
 1944 0032 6B4A     		ldr	r2, .L95
 1945 0034 43F00403 		orr	r3, r3, #4
 1946 0038 D364     		str	r3, [r2, #76]
 1947 003a 694B     		ldr	r3, .L95
 1948 003c DB6C     		ldr	r3, [r3, #76]
 1949 003e 03F00403 		and	r3, r3, #4
 1950 0042 7B61     		str	r3, [r7, #20]
 1951 0044 7B69     		ldr	r3, [r7, #20]
 1952              	.LBE10:
 1953              	.LBB11:
 714:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 1954              		.loc 1 714 3
 1955 0046 664B     		ldr	r3, .L95
 1956 0048 DB6C     		ldr	r3, [r3, #76]
 1957 004a 654A     		ldr	r2, .L95
 1958 004c 43F02003 		orr	r3, r3, #32
 1959 0050 D364     		str	r3, [r2, #76]
 1960 0052 634B     		ldr	r3, .L95
 1961 0054 DB6C     		ldr	r3, [r3, #76]
 1962 0056 03F02003 		and	r3, r3, #32
 1963 005a 3B61     		str	r3, [r7, #16]
 1964 005c 3B69     		ldr	r3, [r7, #16]
 1965              	.LBE11:
 1966              	.LBB12:
 715:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 1967              		.loc 1 715 3
 1968 005e 604B     		ldr	r3, .L95
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 48


 1969 0060 DB6C     		ldr	r3, [r3, #76]
 1970 0062 5F4A     		ldr	r2, .L95
 1971 0064 43F08003 		orr	r3, r3, #128
 1972 0068 D364     		str	r3, [r2, #76]
 1973 006a 5D4B     		ldr	r3, .L95
 1974 006c DB6C     		ldr	r3, [r3, #76]
 1975 006e 03F08003 		and	r3, r3, #128
 1976 0072 FB60     		str	r3, [r7, #12]
 1977 0074 FB68     		ldr	r3, [r7, #12]
 1978              	.LBE12:
 1979              	.LBB13:
 716:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1980              		.loc 1 716 3
 1981 0076 5A4B     		ldr	r3, .L95
 1982 0078 DB6C     		ldr	r3, [r3, #76]
 1983 007a 594A     		ldr	r2, .L95
 1984 007c 43F00103 		orr	r3, r3, #1
 1985 0080 D364     		str	r3, [r2, #76]
 1986 0082 574B     		ldr	r3, .L95
 1987 0084 DB6C     		ldr	r3, [r3, #76]
 1988 0086 03F00103 		and	r3, r3, #1
 1989 008a BB60     		str	r3, [r7, #8]
 1990 008c BB68     		ldr	r3, [r7, #8]
 1991              	.LBE13:
 1992              	.LBB14:
 717:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 1993              		.loc 1 717 3
 1994 008e 544B     		ldr	r3, .L95
 1995 0090 DB6C     		ldr	r3, [r3, #76]
 1996 0092 534A     		ldr	r2, .L95
 1997 0094 43F00203 		orr	r3, r3, #2
 1998 0098 D364     		str	r3, [r2, #76]
 1999 009a 514B     		ldr	r3, .L95
 2000 009c DB6C     		ldr	r3, [r3, #76]
 2001 009e 03F00203 		and	r3, r3, #2
 2002 00a2 7B60     		str	r3, [r7, #4]
 2003 00a4 7B68     		ldr	r3, [r7, #4]
 2004              	.LBE14:
 2005              	.LBB15:
 718:Core/Src/main.c ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 2006              		.loc 1 718 3
 2007 00a6 4E4B     		ldr	r3, .L95
 2008 00a8 DB6C     		ldr	r3, [r3, #76]
 2009 00aa 4D4A     		ldr	r2, .L95
 2010 00ac 43F04003 		orr	r3, r3, #64
 2011 00b0 D364     		str	r3, [r2, #76]
 2012 00b2 4B4B     		ldr	r3, .L95
 2013 00b4 DB6C     		ldr	r3, [r3, #76]
 2014 00b6 03F04003 		and	r3, r3, #64
 2015 00ba 3B60     		str	r3, [r7]
 2016 00bc 3B68     		ldr	r3, [r7]
 2017              	.LBE15:
 719:Core/Src/main.c ****   HAL_PWREx_EnableVddIO2();
 2018              		.loc 1 719 3
 2019 00be FFF7FEFF 		bl	HAL_PWREx_EnableVddIO2
 720:Core/Src/main.c **** 
 721:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 49


 722:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOF, GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_6
 2020              		.loc 1 722 3
 2021 00c2 0022     		movs	r2, #0
 2022 00c4 4FF4E771 		mov	r1, #462
 2023 00c8 4648     		ldr	r0, .L95+4
 2024 00ca FFF7FEFF 		bl	HAL_GPIO_WritePin
 723:Core/Src/main.c ****                           |GPIO_PIN_7|GPIO_PIN_8, GPIO_PIN_RESET);
 724:Core/Src/main.c **** 
 725:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 726:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 2025              		.loc 1 726 3
 2026 00ce 0022     		movs	r2, #0
 2027 00d0 8021     		movs	r1, #128
 2028 00d2 4FF09040 		mov	r0, #1207959552
 2029 00d6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 727:Core/Src/main.c **** 
 728:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 729:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD2_Pin, GPIO_PIN_RESET);
 2030              		.loc 1 729 3
 2031 00da 0022     		movs	r2, #0
 2032 00dc 44F28301 		movw	r1, #16515
 2033 00e0 4148     		ldr	r0, .L95+8
 2034 00e2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 730:Core/Src/main.c **** 
 731:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 732:Core/Src/main.c ****   HAL_GPIO_WritePin(USB_PowerSwitchOn_GPIO_Port, USB_PowerSwitchOn_Pin, GPIO_PIN_RESET);
 2035              		.loc 1 732 3
 2036 00e6 0022     		movs	r2, #0
 2037 00e8 4021     		movs	r1, #64
 2038 00ea 4048     		ldr	r0, .L95+12
 2039 00ec FFF7FEFF 		bl	HAL_GPIO_WritePin
 733:Core/Src/main.c **** 
 734:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 735:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_6, GPIO_PIN_RESET);
 2040              		.loc 1 735 3
 2041 00f0 0022     		movs	r2, #0
 2042 00f2 4021     		movs	r1, #64
 2043 00f4 3E48     		ldr	r0, .L95+16
 2044 00f6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 736:Core/Src/main.c **** 
 737:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 738:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 2045              		.loc 1 738 23
 2046 00fa 4FF40053 		mov	r3, #8192
 2047 00fe FB61     		str	r3, [r7, #28]
 739:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 2048              		.loc 1 739 24
 2049 0100 4FF48813 		mov	r3, #1114112
 2050 0104 3B62     		str	r3, [r7, #32]
 740:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2051              		.loc 1 740 24
 2052 0106 0023     		movs	r3, #0
 2053 0108 7B62     		str	r3, [r7, #36]
 741:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 2054              		.loc 1 741 3
 2055 010a 07F11C03 		add	r3, r7, #28
 2056 010e 1946     		mov	r1, r3
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 50


 2057 0110 3748     		ldr	r0, .L95+16
 2058 0112 FFF7FEFF 		bl	HAL_GPIO_Init
 742:Core/Src/main.c **** 
 743:Core/Src/main.c ****   /*Configure GPIO pins : PF0 PF4 PF5 */
 744:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_4|GPIO_PIN_5;
 2059              		.loc 1 744 23
 2060 0116 3123     		movs	r3, #49
 2061 0118 FB61     		str	r3, [r7, #28]
 745:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 2062              		.loc 1 745 24
 2063 011a 0023     		movs	r3, #0
 2064 011c 3B62     		str	r3, [r7, #32]
 746:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2065              		.loc 1 746 24
 2066 011e 0023     		movs	r3, #0
 2067 0120 7B62     		str	r3, [r7, #36]
 747:Core/Src/main.c ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 2068              		.loc 1 747 3
 2069 0122 07F11C03 		add	r3, r7, #28
 2070 0126 1946     		mov	r1, r3
 2071 0128 2E48     		ldr	r0, .L95+4
 2072 012a FFF7FEFF 		bl	HAL_GPIO_Init
 748:Core/Src/main.c **** 
 749:Core/Src/main.c ****   /*Configure GPIO pins : PF1 PF2 PF3 PF6
 750:Core/Src/main.c ****                            PF7 PF8 */
 751:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_6
 2073              		.loc 1 751 23
 2074 012e 4FF4E773 		mov	r3, #462
 2075 0132 FB61     		str	r3, [r7, #28]
 752:Core/Src/main.c ****                           |GPIO_PIN_7|GPIO_PIN_8;
 753:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2076              		.loc 1 753 24
 2077 0134 0123     		movs	r3, #1
 2078 0136 3B62     		str	r3, [r7, #32]
 754:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2079              		.loc 1 754 24
 2080 0138 0023     		movs	r3, #0
 2081 013a 7B62     		str	r3, [r7, #36]
 755:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2082              		.loc 1 755 25
 2083 013c 0023     		movs	r3, #0
 2084 013e BB62     		str	r3, [r7, #40]
 756:Core/Src/main.c ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 2085              		.loc 1 756 3
 2086 0140 07F11C03 		add	r3, r7, #28
 2087 0144 1946     		mov	r1, r3
 2088 0146 2748     		ldr	r0, .L95+4
 2089 0148 FFF7FEFF 		bl	HAL_GPIO_Init
 757:Core/Src/main.c **** 
 758:Core/Src/main.c ****   /*Configure GPIO pin : PA7 */
 759:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_7;
 2090              		.loc 1 759 23
 2091 014c 8023     		movs	r3, #128
 2092 014e FB61     		str	r3, [r7, #28]
 760:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2093              		.loc 1 760 24
 2094 0150 0123     		movs	r3, #1
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 51


 2095 0152 3B62     		str	r3, [r7, #32]
 761:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2096              		.loc 1 761 24
 2097 0154 0023     		movs	r3, #0
 2098 0156 7B62     		str	r3, [r7, #36]
 762:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2099              		.loc 1 762 25
 2100 0158 0023     		movs	r3, #0
 2101 015a BB62     		str	r3, [r7, #40]
 763:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 2102              		.loc 1 763 3
 2103 015c 07F11C03 		add	r3, r7, #28
 2104 0160 1946     		mov	r1, r3
 2105 0162 4FF09040 		mov	r0, #1207959552
 2106 0166 FFF7FEFF 		bl	HAL_GPIO_Init
 764:Core/Src/main.c **** 
 765:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 LD3_Pin LD2_Pin */
 766:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD2_Pin;
 2107              		.loc 1 766 23
 2108 016a 44F28303 		movw	r3, #16515
 2109 016e FB61     		str	r3, [r7, #28]
 767:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2110              		.loc 1 767 24
 2111 0170 0123     		movs	r3, #1
 2112 0172 3B62     		str	r3, [r7, #32]
 768:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2113              		.loc 1 768 24
 2114 0174 0023     		movs	r3, #0
 2115 0176 7B62     		str	r3, [r7, #36]
 769:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2116              		.loc 1 769 25
 2117 0178 0023     		movs	r3, #0
 2118 017a BB62     		str	r3, [r7, #40]
 770:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 2119              		.loc 1 770 3
 2120 017c 07F11C03 		add	r3, r7, #28
 2121 0180 1946     		mov	r1, r3
 2122 0182 1948     		ldr	r0, .L95+8
 2123 0184 FFF7FEFF 		bl	HAL_GPIO_Init
 771:Core/Src/main.c **** 
 772:Core/Src/main.c ****   /*Configure GPIO pin : USB_OverCurrent_Pin */
 773:Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_OverCurrent_Pin;
 2124              		.loc 1 773 23
 2125 0188 2023     		movs	r3, #32
 2126 018a FB61     		str	r3, [r7, #28]
 774:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 2127              		.loc 1 774 24
 2128 018c 0023     		movs	r3, #0
 2129 018e 3B62     		str	r3, [r7, #32]
 775:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2130              		.loc 1 775 24
 2131 0190 0023     		movs	r3, #0
 2132 0192 7B62     		str	r3, [r7, #36]
 776:Core/Src/main.c ****   HAL_GPIO_Init(USB_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 2133              		.loc 1 776 3
 2134 0194 07F11C03 		add	r3, r7, #28
 2135 0198 1946     		mov	r1, r3
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 52


 2136 019a 1448     		ldr	r0, .L95+12
 2137 019c FFF7FEFF 		bl	HAL_GPIO_Init
 777:Core/Src/main.c **** 
 778:Core/Src/main.c ****   /*Configure GPIO pin : USB_PowerSwitchOn_Pin */
 779:Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_PowerSwitchOn_Pin;
 2138              		.loc 1 779 23
 2139 01a0 4023     		movs	r3, #64
 2140 01a2 FB61     		str	r3, [r7, #28]
 780:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2141              		.loc 1 780 24
 2142 01a4 0123     		movs	r3, #1
 2143 01a6 3B62     		str	r3, [r7, #32]
 781:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2144              		.loc 1 781 24
 2145 01a8 0023     		movs	r3, #0
 2146 01aa 7B62     		str	r3, [r7, #36]
 782:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2147              		.loc 1 782 25
 2148 01ac 0023     		movs	r3, #0
 2149 01ae BB62     		str	r3, [r7, #40]
 783:Core/Src/main.c ****   HAL_GPIO_Init(USB_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 2150              		.loc 1 783 3
 2151 01b0 07F11C03 		add	r3, r7, #28
 2152 01b4 1946     		mov	r1, r3
 2153 01b6 0D48     		ldr	r0, .L95+12
 2154 01b8 FFF7FEFF 		bl	HAL_GPIO_Init
 784:Core/Src/main.c **** 
 785:Core/Src/main.c ****   /*Configure GPIO pin : PC6 */
 786:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6;
 2155              		.loc 1 786 23
 2156 01bc 4023     		movs	r3, #64
 2157 01be FB61     		str	r3, [r7, #28]
 787:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2158              		.loc 1 787 24
 2159 01c0 0123     		movs	r3, #1
 2160 01c2 3B62     		str	r3, [r7, #32]
 788:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2161              		.loc 1 788 24
 2162 01c4 0023     		movs	r3, #0
 2163 01c6 7B62     		str	r3, [r7, #36]
 789:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2164              		.loc 1 789 25
 2165 01c8 0023     		movs	r3, #0
 2166 01ca BB62     		str	r3, [r7, #40]
 790:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 2167              		.loc 1 790 3
 2168 01cc 07F11C03 		add	r3, r7, #28
 2169 01d0 1946     		mov	r1, r3
 2170 01d2 0748     		ldr	r0, .L95+16
 2171 01d4 FFF7FEFF 		bl	HAL_GPIO_Init
 791:Core/Src/main.c **** 
 792:Core/Src/main.c **** }
 2172              		.loc 1 792 1
 2173 01d8 00BF     		nop
 2174 01da 3037     		adds	r7, r7, #48
 2175              		.cfi_def_cfa_offset 8
 2176 01dc BD46     		mov	sp, r7
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 53


 2177              		.cfi_def_cfa_register 13
 2178              		@ sp needed
 2179 01de 80BD     		pop	{r7, pc}
 2180              	.L96:
 2181              		.align	2
 2182              	.L95:
 2183 01e0 00100240 		.word	1073876992
 2184 01e4 00140048 		.word	1207964672
 2185 01e8 00040048 		.word	1207960576
 2186 01ec 00180048 		.word	1207965696
 2187 01f0 00080048 		.word	1207961600
 2188              		.cfi_endproc
 2189              	.LFE339:
 2191              		.section	.text.Error_Handler,"ax",%progbits
 2192              		.align	1
 2193              		.global	Error_Handler
 2194              		.syntax unified
 2195              		.thumb
 2196              		.thumb_func
 2198              	Error_Handler:
 2199              	.LFB340:
 793:Core/Src/main.c **** 
 794:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 795:Core/Src/main.c **** 
 796:Core/Src/main.c **** /* USER CODE END 4 */
 797:Core/Src/main.c **** 
 798:Core/Src/main.c **** /**
 799:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 800:Core/Src/main.c ****   * @retval None
 801:Core/Src/main.c ****   */
 802:Core/Src/main.c **** void Error_Handler(void)
 803:Core/Src/main.c **** {
 2200              		.loc 1 803 1
 2201              		.cfi_startproc
 2202              		@ args = 0, pretend = 0, frame = 0
 2203              		@ frame_needed = 1, uses_anonymous_args = 0
 2204              		@ link register save eliminated.
 2205 0000 80B4     		push	{r7}
 2206              		.cfi_def_cfa_offset 4
 2207              		.cfi_offset 7, -4
 2208 0002 00AF     		add	r7, sp, #0
 2209              		.cfi_def_cfa_register 7
 2210              	.LBB16:
 2211              	.LBB17:
 2212              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 54


  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 55


  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 56


 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 57


 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2213              		.loc 2 209 3
 2214              		.syntax unified
 2215              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2216 0004 72B6     		cpsid i
 2217              	@ 0 "" 2
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2218              		.loc 2 210 1
 2219              		.thumb
 2220              		.syntax unified
 2221 0006 00BF     		nop
 2222              	.L98:
 2223              	.LBE17:
 2224              	.LBE16:
 804:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 805:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 806:Core/Src/main.c ****   __disable_irq();
 807:Core/Src/main.c ****   while (1)
 2225              		.loc 1 807 9 discriminator 1
 2226 0008 FEE7     		b	.L98
 2227              		.cfi_endproc
 2228              	.LFE340:
 2230              		.text
 2231              	.Letext0:
 2232              		.file 3 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4p5xx.h"
 2233              		.file 4 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 2234              		.file 5 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 2235              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 2236              		.file 7 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 2237              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2238              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 2239              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 58


 2240              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 2241              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 2242              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc_ex.h"
 2243              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usb.h"
 2244              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pcd.h"
 2245              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 2246              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 2247              		.file 18 "Core/Inc/./gcodes/types.h"
 2248              		.file 19 "Core/Inc/main.h"
 2249              		.file 20 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
 2250              		.file 21 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim_ex.h"
 2251              		.file 22 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart_ex.h"
 2252              		.file 23 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 2253              		.file 24 "Core/Inc/./gcodes/reader.h"
 2254              		.file 25 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2255              		.file 26 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2256              		.file 27 "c:\\users\\isan\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2257              		.file 28 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 59


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:24     .bss.hadc1:0000000000000000 hadc1
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:21     .bss.hadc1:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:31     .bss.hdma_adc1:0000000000000000 hdma_adc1
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:28     .bss.hdma_adc1:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:38     .bss.hlpuart1:0000000000000000 hlpuart1
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:35     .bss.hlpuart1:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:45     .bss.huart4:0000000000000000 huart4
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:42     .bss.huart4:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:52     .bss.hdma_lpuart1_rx:0000000000000000 hdma_lpuart1_rx
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:49     .bss.hdma_lpuart1_rx:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:59     .bss.htim3:0000000000000000 htim3
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:56     .bss.htim3:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:66     .bss.htim4:0000000000000000 htim4
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:63     .bss.htim4:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:73     .bss.htim5:0000000000000000 htim5
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:70     .bss.htim5:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:80     .bss.hpcd_USB_OTG_FS:0000000000000000 hpcd_USB_OTG_FS
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:77     .bss.hpcd_USB_OTG_FS:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:87     .bss.step:0000000000000000 step
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:84     .bss.step:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:94     .bss.last_time:0000000000000000 last_time
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:91     .bss.last_time:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:101    .bss.value:0000000000000000 value
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:98     .bss.value:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:108    .bss.reader:0000000000000000 reader
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:105    .bss.reader:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:115    .bss.current_cmd:0000000000000000 current_cmd
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:112    .bss.current_cmd:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:122    .bss.state:0000000000000000 state
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:119    .bss.state:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:129    .bss.rx_buff:0000000000000000 rx_buff
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:126    .bss.rx_buff:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:136    .bss.gcode_buff:0000000000000000 gcode_buff
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:133    .bss.gcode_buff:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:143    .bss.read_count:0000000000000000 read_count
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:140    .bss.read_count:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:150    .bss.i:0000000000000000 i
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:147    .bss.i:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:157    .bss.j:0000000000000000 j
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:154    .bss.j:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:164    .bss.should_read_cmd:0000000000000000 should_read_cmd
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:161    .bss.should_read_cmd:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:167    .text.HAL_UARTEx_RxEventCallback:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:173    .text.HAL_UARTEx_RxEventCallback:0000000000000000 HAL_UARTEx_RxEventCallback
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:283    .text.HAL_UARTEx_RxEventCallback:000000000000008c $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:295    .text.transmit_resp_code:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:301    .text.transmit_resp_code:0000000000000000 transmit_resp_code
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:342    .text.transmit_resp_code_with_comment:0000000000000000 transmit_resp_code_with_comment
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:332    .rodata:0000000000000000 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:336    .text.transmit_resp_code_with_comment:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:425    .text.transmit_resp_code_with_comment:0000000000000070 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:431    .text.emergency_stop:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:437    .text.emergency_stop:0000000000000000 emergency_stop
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:464    .text.emergency_stop:0000000000000018 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:483    .text.main:0000000000000000 $t
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 60


C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:489    .text.main:0000000000000000 main
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:748    .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:1905   .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:1828   .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:1098   .text.MX_LPUART1_UART_Init:0000000000000000 MX_LPUART1_UART_Init
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:1754   .text.MX_USB_OTG_FS_PCD_Init:0000000000000000 MX_USB_OTG_FS_PCD_Init
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:1522   .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:1217   .text.MX_UART4_Init:0000000000000000 MX_UART4_Init
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:1332   .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:877    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:1638   .text.MX_TIM5_Init:0000000000000000 MX_TIM5_Init
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:719    .text.main:0000000000000164 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:742    .text.SystemClock_Config:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:2198   .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:872    .text.MX_ADC1_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:1084   .text.MX_ADC1_Init:0000000000000130 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:1093   .text.MX_LPUART1_UART_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:1206   .text.MX_LPUART1_UART_Init:0000000000000098 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:1212   .text.MX_UART4_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:1321   .text.MX_UART4_Init:0000000000000090 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:1327   .text.MX_TIM3_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:1511   .text.MX_TIM3_Init:0000000000000110 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:1517   .text.MX_TIM4_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:1627   .text.MX_TIM4_Init:0000000000000094 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:1633   .text.MX_TIM5_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:1743   .text.MX_TIM5_Init:0000000000000094 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:1749   .text.MX_USB_OTG_FS_PCD_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:1818   .text.MX_USB_OTG_FS_PCD_Init:0000000000000050 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:1823   .text.MX_DMA_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:1895   .text.MX_DMA_Init:0000000000000060 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:1900   .text.MX_GPIO_Init:0000000000000000 $t
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:2183   .text.MX_GPIO_Init:00000000000001e0 $d
C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s:2192   .text.Error_Handler:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_UARTEx_ReceiveToIdle_DMA
strlen
malloc
sprintf
HAL_UART_Transmit
memset
HAL_Init
HAL_TIM_PWM_Start
HAL_ADC_Start_DMA
HAL_TIM_Base_Start
read_code
memcpy
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
HAL_UART_Init
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_DisableFifoMode
ARM GAS  C:\Users\isan\AppData\Local\Temp\ccfHZyGn.s 			page 61


HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_PCD_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_PWREx_EnableVddIO2
HAL_GPIO_WritePin
HAL_GPIO_Init
